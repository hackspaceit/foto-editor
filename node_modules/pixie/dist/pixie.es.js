var ky = Object.defineProperty;
var Oy = (t, e, r) => e in t ? ky(t, e, { enumerable: !0, configurable: !0, writable: !0, value: r }) : t[e] = r;
var Oe = (t, e, r) => (Oy(t, typeof e != "symbol" ? e + "" : e, r), r), Ua = (t, e, r) => {
  if (!e.has(t))
    throw TypeError("Cannot " + r);
};
var ie = (t, e, r) => (Ua(t, e, "read from private field"), r ? r.call(t) : e.get(t)), Re = (t, e, r) => {
  if (e.has(t))
    throw TypeError("Cannot add the same private member more than once");
  e instanceof WeakSet ? e.add(t) : e.set(t, r);
}, Ae = (t, e, r, n) => (Ua(t, e, "write to private field"), n ? n.call(t, r) : e.set(t, r), r);
var Vs = (t, e, r, n) => ({
  set _(i) {
    Ae(t, e, i, r);
  },
  get _() {
    return ie(t, e, n);
  }
}), ot = (t, e, r) => (Ua(t, e, "access private method"), r);
import { jsxs as oe, jsx as C, Fragment as Np } from "react/jsx-runtime";
import * as ve from "react";
import he, { forwardRef as st, createContext as Qr, useLayoutEffect as xs, useEffect as ke, useContext as Ve, useRef as ge, useInsertionEffect as jp, useCallback as Me, useMemo as Ye, createElement as Ay, useState as Fe, useId as qt, cloneElement as xt, Children as Wr, isValidElement as xr, memo as Dy, Fragment as gr } from "react";
import { createRoot as Py } from "react-dom/client";
import * as My from "react-dom";
import { createPortal as qc, flushSync as Fy } from "react-dom";
function Ry(t, e) {
  e === void 0 && (e = {});
  var r = e.insertAt;
  if (!(!t || typeof document > "u")) {
    var n = document.head || document.getElementsByTagName("head")[0], i = document.createElement("style");
    i.type = "text/css", r === "top" && n.firstChild ? n.insertBefore(i, n.firstChild) : n.appendChild(i), i.styleSheet ? i.styleSheet.cssText = t : i.appendChild(document.createTextNode(t));
  }
}
function Kc(t, e) {
  return e === void 0 && (e = 15), +parseFloat(Number(t).toPrecision(e));
}
function sr(t) {
  var e = t.toString().split(/[eE]/), r = (e[0].split(".")[1] || "").length - +(e[1] || 0);
  return r > 0 ? r : 0;
}
function es(t) {
  if (t.toString().indexOf("e") === -1)
    return Number(t.toString().replace(".", ""));
  var e = sr(t);
  return e > 0 ? Kc(Number(t) * Math.pow(10, e)) : Number(t);
}
function Pl(t) {
  Vp && (t > Number.MAX_SAFE_INTEGER || t < Number.MIN_SAFE_INTEGER) && console.warn(t + " is beyond boundary when transfer to integer, the results may not be accurate");
}
function Ko(t) {
  return function() {
    for (var e = [], r = 0; r < arguments.length; r++)
      e[r] = arguments[r];
    var n = e[0], i = e.slice(1);
    return i.reduce(function(l, g) {
      return t(l, g);
    }, n);
  };
}
var Xr = Ko(function(t, e) {
  var r = es(t), n = es(e), i = sr(t) + sr(e), l = r * n;
  return Pl(l), l / Math.pow(10, i);
}), Iy = Ko(function(t, e) {
  var r = Math.pow(10, Math.max(sr(t), sr(e)));
  return (Xr(t, r) + Xr(e, r)) / r;
}), Ly = Ko(function(t, e) {
  var r = Math.pow(10, Math.max(sr(t), sr(e)));
  return (Xr(t, r) - Xr(e, r)) / r;
}), $p = Ko(function(t, e) {
  var r = es(t), n = es(e);
  return Pl(r), Pl(n), Xr(r / n, Kc(Math.pow(10, sr(e) - sr(t))));
});
function By(t, e) {
  var r = Math.pow(10, e), n = $p(Math.round(Math.abs(Xr(t, r))), r);
  return t < 0 && n !== 0 && (n = Xr(n, -1)), n;
}
var Vp = !0;
function zy(t) {
  t === void 0 && (t = !0), Vp = t;
}
var Ml = {
  strip: Kc,
  plus: Iy,
  minus: Ly,
  times: Xr,
  divide: $p,
  round: By,
  digitLength: sr,
  float2Fixed: es,
  enableBoundaryChecking: zy
};
const Hp = Object.prototype.toString;
function Up(t) {
  switch (Hp.call(t)) {
    case "[object Error]":
    case "[object Exception]":
    case "[object DOMException]":
      return !0;
    default:
      return xn(t, Error);
  }
}
function Ci(t, e) {
  return Hp.call(t) === `[object ${e}]`;
}
function Jc(t) {
  return Ci(t, "ErrorEvent");
}
function yh(t) {
  return Ci(t, "DOMError");
}
function Ny(t) {
  return Ci(t, "DOMException");
}
function mr(t) {
  return Ci(t, "String");
}
function Zc(t) {
  return typeof t == "object" && t !== null && "__sentry_template_string__" in t && "__sentry_template_values__" in t;
}
function Qc(t) {
  return t === null || Zc(t) || typeof t != "object" && typeof t != "function";
}
function ui(t) {
  return Ci(t, "Object");
}
function Jo(t) {
  return typeof Event < "u" && xn(t, Event);
}
function jy(t) {
  return typeof Element < "u" && xn(t, Element);
}
function $y(t) {
  return Ci(t, "RegExp");
}
function Zo(t) {
  return !!(t && t.then && typeof t.then == "function");
}
function Vy(t) {
  return ui(t) && "nativeEvent" in t && "preventDefault" in t && "stopPropagation" in t;
}
function Hy(t) {
  return typeof t == "number" && t !== t;
}
function xn(t, e) {
  try {
    return t instanceof e;
  } catch {
    return !1;
  }
}
function Wp(t) {
  return !!(typeof t == "object" && t !== null && (t.__isVue || t._isVue));
}
function Kn(t, e = 0) {
  return typeof t != "string" || e === 0 || t.length <= e ? t : `${t.slice(0, e)}...`;
}
function wh(t, e) {
  if (!Array.isArray(t))
    return "";
  const r = [];
  for (let n = 0; n < t.length; n++) {
    const i = t[n];
    try {
      Wp(i) ? r.push("[VueViewModel]") : r.push(String(i));
    } catch {
      r.push("[value cannot be serialized]");
    }
  }
  return r.join(e);
}
function Uy(t, e, r = !1) {
  return mr(t) ? $y(e) ? e.test(t) : mr(e) ? r ? t === e : t.includes(e) : !1 : !1;
}
function Qo(t, e = [], r = !1) {
  return e.some((n) => Uy(t, n, r));
}
function Wy(t, e, r = 250, n, i, l, g) {
  if (!l.exception || !l.exception.values || !g || !xn(g.originalException, Error))
    return;
  const a = l.exception.values.length > 0 ? l.exception.values[l.exception.values.length - 1] : void 0;
  a && (l.exception.values = Xy(
    Fl(
      t,
      e,
      i,
      g.originalException,
      n,
      l.exception.values,
      a,
      0
    ),
    r
  ));
}
function Fl(t, e, r, n, i, l, g, a) {
  if (l.length >= r + 1)
    return l;
  let s = [...l];
  if (xn(n[i], Error)) {
    xh(g, a);
    const c = t(e, n[i]), f = s.length;
    Ch(c, i, f, a), s = Fl(
      t,
      e,
      r,
      n[i],
      i,
      [c, ...s],
      c,
      f
    );
  }
  return Array.isArray(n.errors) && n.errors.forEach((c, f) => {
    if (xn(c, Error)) {
      xh(g, a);
      const o = t(e, c), h = s.length;
      Ch(o, `errors[${f}]`, h, a), s = Fl(
        t,
        e,
        r,
        c,
        i,
        [o, ...s],
        o,
        h
      );
    }
  }), s;
}
function xh(t, e) {
  t.mechanism = t.mechanism || { type: "generic", handled: !0 }, t.mechanism = {
    ...t.mechanism,
    ...t.type === "AggregateError" && { is_exception_group: !0 },
    exception_id: e
  };
}
function Ch(t, e, r, n) {
  t.mechanism = t.mechanism || { type: "generic", handled: !0 }, t.mechanism = {
    ...t.mechanism,
    type: "chained",
    source: e,
    exception_id: r,
    parent_id: n
  };
}
function Xy(t, e) {
  return t.map((r) => (r.value && (r.value = Kn(r.value, e)), r));
}
function Hs(t) {
  return t && t.Math == Math ? t : void 0;
}
const Ie = typeof globalThis == "object" && Hs(globalThis) || // eslint-disable-next-line no-restricted-globals
typeof window == "object" && Hs(window) || typeof self == "object" && Hs(self) || typeof global == "object" && Hs(global) || function() {
  return this;
}() || {};
function eu() {
  return Ie;
}
function Xp(t, e, r) {
  const n = r || Ie, i = n.__SENTRY__ = n.__SENTRY__ || {};
  return i[t] || (i[t] = e());
}
const tu = eu(), Yy = 80;
function Yp(t, e = {}) {
  if (!t)
    return "<unknown>";
  try {
    let r = t;
    const n = 5, i = [];
    let l = 0, g = 0;
    const a = " > ", s = a.length;
    let c;
    const f = Array.isArray(e) ? e : e.keyAttrs, o = !Array.isArray(e) && e.maxStringLength || Yy;
    for (; r && l++ < n && (c = Gy(r, f), !(c === "html" || l > 1 && g + i.length * s + c.length >= o)); )
      i.push(c), g += c.length, r = r.parentNode;
    return i.reverse().join(a);
  } catch {
    return "<unknown>";
  }
}
function Gy(t, e) {
  const r = t, n = [];
  let i, l, g, a, s;
  if (!r || !r.tagName)
    return "";
  if (tu.HTMLElement && r instanceof HTMLElement && r.dataset && r.dataset.sentryComponent)
    return r.dataset.sentryComponent;
  n.push(r.tagName.toLowerCase());
  const c = e && e.length ? e.filter((o) => r.getAttribute(o)).map((o) => [o, r.getAttribute(o)]) : null;
  if (c && c.length)
    c.forEach((o) => {
      n.push(`[${o[0]}="${o[1]}"]`);
    });
  else if (r.id && n.push(`#${r.id}`), i = r.className, i && mr(i))
    for (l = i.split(/\s+/), s = 0; s < l.length; s++)
      n.push(`.${l[s]}`);
  const f = ["aria-label", "type", "name", "title", "alt"];
  for (s = 0; s < f.length; s++)
    g = f[s], a = r.getAttribute(g), a && n.push(`[${g}="${a}"]`);
  return n.join("");
}
function qy() {
  try {
    return tu.document.location.href;
  } catch {
    return "";
  }
}
function Ky(t) {
  if (!tu.HTMLElement)
    return null;
  let e = t;
  const r = 5;
  for (let n = 0; n < r; n++) {
    if (!e)
      return null;
    if (e instanceof HTMLElement && e.dataset.sentryComponent)
      return e.dataset.sentryComponent;
    e = e.parentNode;
  }
  return null;
}
const Cs = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__, Jy = "Sentry Logger ", Rl = [
  "debug",
  "info",
  "warn",
  "error",
  "log",
  "assert",
  "trace"
], vo = {};
function ea(t) {
  if (!("console" in Ie))
    return t();
  const e = Ie.console, r = {}, n = Object.keys(vo);
  n.forEach((i) => {
    const l = vo[i];
    r[i] = e[i], e[i] = l;
  });
  try {
    return t();
  } finally {
    n.forEach((i) => {
      e[i] = r[i];
    });
  }
}
function Zy() {
  let t = !1;
  const e = {
    enable: () => {
      t = !0;
    },
    disable: () => {
      t = !1;
    },
    isEnabled: () => t
  };
  return Cs ? Rl.forEach((r) => {
    e[r] = (...n) => {
      t && ea(() => {
        Ie.console[r](`${Jy}[${r}]:`, ...n);
      });
    };
  }) : Rl.forEach((r) => {
    e[r] = () => {
    };
  }), e;
}
const Te = Zy(), Qy = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;
function e1(t) {
  return t === "http" || t === "https";
}
function _s(t, e = !1) {
  const { host: r, path: n, pass: i, port: l, projectId: g, protocol: a, publicKey: s } = t;
  return `${a}://${s}${e && i ? `:${i}` : ""}@${r}${l ? `:${l}` : ""}/${n && `${n}/`}${g}`;
}
function t1(t) {
  const e = Qy.exec(t);
  if (!e) {
    ea(() => {
      console.error(`Invalid Sentry Dsn: ${t}`);
    });
    return;
  }
  const [r, n, i = "", l, g = "", a] = e.slice(1);
  let s = "", c = a;
  const f = c.split("/");
  if (f.length > 1 && (s = f.slice(0, -1).join("/"), c = f.pop()), c) {
    const o = c.match(/^\d+/);
    o && (c = o[0]);
  }
  return Gp({ host: l, pass: i, path: s, projectId: c, port: g, protocol: r, publicKey: n });
}
function Gp(t) {
  return {
    protocol: t.protocol,
    publicKey: t.publicKey || "",
    pass: t.pass || "",
    host: t.host,
    port: t.port || "",
    path: t.path || "",
    projectId: t.projectId
  };
}
function r1(t) {
  if (!Cs)
    return !0;
  const { port: e, projectId: r, protocol: n } = t;
  return ["protocol", "publicKey", "host", "projectId"].find((g) => t[g] ? !1 : (Te.error(`Invalid Sentry Dsn: ${g} missing`), !0)) ? !1 : r.match(/^\d+$/) ? e1(n) ? e && isNaN(parseInt(e, 10)) ? (Te.error(`Invalid Sentry Dsn: Invalid port ${e}`), !1) : !0 : (Te.error(`Invalid Sentry Dsn: Invalid protocol ${n}`), !1) : (Te.error(`Invalid Sentry Dsn: Invalid projectId ${r}`), !1);
}
function n1(t) {
  const e = typeof t == "string" ? t1(t) : Gp(t);
  if (!(!e || !r1(e)))
    return e;
}
class rr extends Error {
  /** Display name of this error instance. */
  constructor(e, r = "warn") {
    super(e), this.message = e, this.name = new.target.prototype.constructor.name, Object.setPrototypeOf(this, new.target.prototype), this.logLevel = r;
  }
}
function nt(t, e, r) {
  if (!(e in t))
    return;
  const n = t[e], i = r(n);
  typeof i == "function" && qp(i, n), t[e] = i;
}
function ts(t, e, r) {
  try {
    Object.defineProperty(t, e, {
      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it
      value: r,
      writable: !0,
      configurable: !0
    });
  } catch {
    Cs && Te.log(`Failed to add non-enumerable property "${e}" to object`, t);
  }
}
function qp(t, e) {
  try {
    const r = e.prototype || {};
    t.prototype = e.prototype = r, ts(t, "__sentry_original__", e);
  } catch {
  }
}
function ru(t) {
  return t.__sentry_original__;
}
function i1(t) {
  return Object.keys(t).map((e) => `${encodeURIComponent(e)}=${encodeURIComponent(t[e])}`).join("&");
}
function Kp(t) {
  if (Up(t))
    return {
      message: t.message,
      name: t.name,
      stack: t.stack,
      ...Sh(t)
    };
  if (Jo(t)) {
    const e = {
      type: t.type,
      target: _h(t.target),
      currentTarget: _h(t.currentTarget),
      ...Sh(t)
    };
    return typeof CustomEvent < "u" && xn(t, CustomEvent) && (e.detail = t.detail), e;
  } else
    return t;
}
function _h(t) {
  try {
    return jy(t) ? Yp(t) : Object.prototype.toString.call(t);
  } catch {
    return "<unknown>";
  }
}
function Sh(t) {
  if (typeof t == "object" && t !== null) {
    const e = {};
    for (const r in t)
      Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
    return e;
  } else
    return {};
}
function s1(t, e = 40) {
  const r = Object.keys(Kp(t));
  if (r.sort(), !r.length)
    return "[object has no keys]";
  if (r[0].length >= e)
    return Kn(r[0], e);
  for (let n = r.length; n > 0; n--) {
    const i = r.slice(0, n).join(", ");
    if (!(i.length > e))
      return n === r.length ? i : Kn(i, e);
  }
  return "";
}
function hr(t) {
  return Il(t, /* @__PURE__ */ new Map());
}
function Il(t, e) {
  if (o1(t)) {
    const r = e.get(t);
    if (r !== void 0)
      return r;
    const n = {};
    e.set(t, n);
    for (const i of Object.keys(t))
      typeof t[i] < "u" && (n[i] = Il(t[i], e));
    return n;
  }
  if (Array.isArray(t)) {
    const r = e.get(t);
    if (r !== void 0)
      return r;
    const n = [];
    return e.set(t, n), t.forEach((i) => {
      n.push(Il(i, e));
    }), n;
  }
  return t;
}
function o1(t) {
  if (!ui(t))
    return !1;
  try {
    const e = Object.getPrototypeOf(t).constructor.name;
    return !e || e === "Object";
  } catch {
    return !0;
  }
}
const Jp = 50, Th = /\(error: (.*)\)/, Eh = /captureMessage|captureException/;
function Zp(...t) {
  const e = t.sort((r, n) => r[0] - n[0]).map((r) => r[1]);
  return (r, n = 0) => {
    const i = [], l = r.split(`
`);
    for (let g = n; g < l.length; g++) {
      const a = l[g];
      if (a.length > 1024)
        continue;
      const s = Th.test(a) ? a.replace(Th, "$1") : a;
      if (!s.match(/\S*Error: /)) {
        for (const c of e) {
          const f = c(s);
          if (f) {
            i.push(f);
            break;
          }
        }
        if (i.length >= Jp)
          break;
      }
    }
    return l1(i);
  };
}
function a1(t) {
  return Array.isArray(t) ? Zp(...t) : t;
}
function l1(t) {
  if (!t.length)
    return [];
  const e = Array.from(t);
  return /sentryWrapped/.test(e[e.length - 1].function || "") && e.pop(), e.reverse(), Eh.test(e[e.length - 1].function || "") && (e.pop(), Eh.test(e[e.length - 1].function || "") && e.pop()), e.slice(0, Jp).map((r) => ({
    ...r,
    filename: r.filename || e[e.length - 1].filename,
    function: r.function || "?"
  }));
}
const Wa = "<anonymous>";
function Yr(t) {
  try {
    return !t || typeof t != "function" ? Wa : t.name || Wa;
  } catch {
    return Wa;
  }
}
const lo = {}, kh = {};
function Pn(t, e) {
  lo[t] = lo[t] || [], lo[t].push(e);
}
function Mn(t, e) {
  kh[t] || (e(), kh[t] = !0);
}
function Wt(t, e) {
  const r = t && lo[t];
  if (r)
    for (const n of r)
      try {
        n(e);
      } catch (i) {
        Cs && Te.error(
          `Error while triggering instrumentation handler.
Type: ${t}
Name: ${Yr(n)}
Error:`,
          i
        );
      }
}
function c1(t) {
  const e = "console";
  Pn(e, t), Mn(e, u1);
}
function u1() {
  "console" in Ie && Rl.forEach(function(t) {
    t in Ie.console && nt(Ie.console, t, function(e) {
      return vo[t] = e, function(...r) {
        Wt("console", { args: r, level: t });
        const i = vo[t];
        i && i.apply(Ie.console, r);
      };
    });
  });
}
function jt() {
  const t = Ie, e = t.crypto || t.msCrypto;
  let r = () => Math.random() * 16;
  try {
    if (e && e.randomUUID)
      return e.randomUUID().replace(/-/g, "");
    e && e.getRandomValues && (r = () => {
      const n = new Uint8Array(1);
      return e.getRandomValues(n), n[0];
    });
  } catch {
  }
  return ([1e7] + 1e3 + 4e3 + 8e3 + 1e11).replace(
    /[018]/g,
    (n) => (
      // eslint-disable-next-line no-bitwise
      (n ^ (r() & 15) >> n / 4).toString(16)
    )
  );
}
function Qp(t) {
  return t.exception && t.exception.values ? t.exception.values[0] : void 0;
}
function Fr(t) {
  const { message: e, event_id: r } = t;
  if (e)
    return e;
  const n = Qp(t);
  return n ? n.type && n.value ? `${n.type}: ${n.value}` : n.type || n.value || r || "<unknown>" : r || "<unknown>";
}
function Ll(t, e, r) {
  const n = t.exception = t.exception || {}, i = n.values = n.values || [], l = i[0] = i[0] || {};
  l.value || (l.value = e || ""), l.type || (l.type = r || "Error");
}
function rs(t, e) {
  const r = Qp(t);
  if (!r)
    return;
  const n = { type: "generic", handled: !0 }, i = r.mechanism;
  if (r.mechanism = { ...n, ...i, ...e }, e && "data" in e) {
    const l = { ...i && i.data, ...e.data };
    r.mechanism.data = l;
  }
}
function Oh(t) {
  if (t && t.__sentry_captured__)
    return !0;
  try {
    ts(t, "__sentry_captured__", !0);
  } catch {
  }
  return !1;
}
function eg(t) {
  return Array.isArray(t) ? t : [t];
}
const Un = Ie, h1 = 1e3;
let Ah, Bl, zl;
function f1(t) {
  const e = "dom";
  Pn(e, t), Mn(e, d1);
}
function d1() {
  if (!Un.document)
    return;
  const t = Wt.bind(null, "dom"), e = Dh(t, !0);
  Un.document.addEventListener("click", e, !1), Un.document.addEventListener("keypress", e, !1), ["EventTarget", "Node"].forEach((r) => {
    const n = Un[r] && Un[r].prototype;
    !n || !n.hasOwnProperty || !n.hasOwnProperty("addEventListener") || (nt(n, "addEventListener", function(i) {
      return function(l, g, a) {
        if (l === "click" || l == "keypress")
          try {
            const s = this, c = s.__sentry_instrumentation_handlers__ = s.__sentry_instrumentation_handlers__ || {}, f = c[l] = c[l] || { refCount: 0 };
            if (!f.handler) {
              const o = Dh(t);
              f.handler = o, i.call(this, l, o, a);
            }
            f.refCount++;
          } catch {
          }
        return i.call(this, l, g, a);
      };
    }), nt(
      n,
      "removeEventListener",
      function(i) {
        return function(l, g, a) {
          if (l === "click" || l == "keypress")
            try {
              const s = this, c = s.__sentry_instrumentation_handlers__ || {}, f = c[l];
              f && (f.refCount--, f.refCount <= 0 && (i.call(this, l, f.handler, a), f.handler = void 0, delete c[l]), Object.keys(c).length === 0 && delete s.__sentry_instrumentation_handlers__);
            } catch {
            }
          return i.call(this, l, g, a);
        };
      }
    ));
  });
}
function p1(t) {
  if (t.type !== Bl)
    return !1;
  try {
    if (!t.target || t.target._sentryId !== zl)
      return !1;
  } catch {
  }
  return !0;
}
function g1(t, e) {
  return t !== "keypress" ? !1 : !e || !e.tagName ? !0 : !(e.tagName === "INPUT" || e.tagName === "TEXTAREA" || e.isContentEditable);
}
function Dh(t, e = !1) {
  return (r) => {
    if (!r || r._sentryCaptured)
      return;
    const n = m1(r);
    if (g1(r.type, n))
      return;
    ts(r, "_sentryCaptured", !0), n && !n._sentryId && ts(n, "_sentryId", jt());
    const i = r.type === "keypress" ? "input" : r.type;
    p1(r) || (t({ event: r, name: i, global: e }), Bl = r.type, zl = n ? n._sentryId : void 0), clearTimeout(Ah), Ah = Un.setTimeout(() => {
      zl = void 0, Bl = void 0;
    }, h1);
  };
}
function m1(t) {
  try {
    return t.target;
  } catch {
    return null;
  }
}
const Nl = eu();
function tg() {
  if (!("fetch" in Nl))
    return !1;
  try {
    return new Headers(), new Request("http://www.example.com"), new Response(), !0;
  } catch {
    return !1;
  }
}
function jl(t) {
  return t && /^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(t.toString());
}
function v1() {
  if (typeof EdgeRuntime == "string")
    return !0;
  if (!tg())
    return !1;
  if (jl(Nl.fetch))
    return !0;
  let t = !1;
  const e = Nl.document;
  if (e && typeof e.createElement == "function")
    try {
      const r = e.createElement("iframe");
      r.hidden = !0, e.head.appendChild(r), r.contentWindow && r.contentWindow.fetch && (t = jl(r.contentWindow.fetch)), e.head.removeChild(r);
    } catch (r) {
      Cs && Te.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ", r);
    }
  return t;
}
function b1(t) {
  const e = "fetch";
  Pn(e, t), Mn(e, y1);
}
function y1() {
  v1() && nt(Ie, "fetch", function(t) {
    return function(...e) {
      const { method: r, url: n } = w1(e), i = {
        args: e,
        fetchData: {
          method: r,
          url: n
        },
        startTimestamp: Date.now()
      };
      return Wt("fetch", {
        ...i
      }), t.apply(Ie, e).then(
        (l) => {
          const g = {
            ...i,
            endTimestamp: Date.now(),
            response: l
          };
          return Wt("fetch", g), l;
        },
        (l) => {
          const g = {
            ...i,
            endTimestamp: Date.now(),
            error: l
          };
          throw Wt("fetch", g), l;
        }
      );
    };
  });
}
function $l(t, e) {
  return !!t && typeof t == "object" && !!t[e];
}
function Ph(t) {
  return typeof t == "string" ? t : t ? $l(t, "url") ? t.url : t.toString ? t.toString() : "" : "";
}
function w1(t) {
  if (t.length === 0)
    return { method: "GET", url: "" };
  if (t.length === 2) {
    const [r, n] = t;
    return {
      url: Ph(r),
      method: $l(n, "method") ? String(n.method).toUpperCase() : "GET"
    };
  }
  const e = t[0];
  return {
    url: Ph(e),
    method: $l(e, "method") ? String(e.method).toUpperCase() : "GET"
  };
}
let Us = null;
function x1(t) {
  const e = "error";
  Pn(e, t), Mn(e, C1);
}
function C1() {
  Us = Ie.onerror, Ie.onerror = function(t, e, r, n, i) {
    return Wt("error", {
      column: n,
      error: i,
      line: r,
      msg: t,
      url: e
    }), Us && !Us.__SENTRY_LOADER__ ? Us.apply(this, arguments) : !1;
  }, Ie.onerror.__SENTRY_INSTRUMENTED__ = !0;
}
let Ws = null;
function _1(t) {
  const e = "unhandledrejection";
  Pn(e, t), Mn(e, S1);
}
function S1() {
  Ws = Ie.onunhandledrejection, Ie.onunhandledrejection = function(t) {
    return Wt("unhandledrejection", t), Ws && !Ws.__SENTRY_LOADER__ ? Ws.apply(this, arguments) : !0;
  }, Ie.onunhandledrejection.__SENTRY_INSTRUMENTED__ = !0;
}
const Xs = eu();
function T1() {
  const t = Xs.chrome, e = t && t.app && t.app.runtime, r = "history" in Xs && !!Xs.history.pushState && !!Xs.history.replaceState;
  return !e && r;
}
const Ii = Ie;
let Ys;
function rg(t) {
  const e = "history";
  Pn(e, t), Mn(e, E1);
}
function E1() {
  if (!T1())
    return;
  const t = Ii.onpopstate;
  Ii.onpopstate = function(...r) {
    const n = Ii.location.href, i = Ys;
    if (Ys = n, Wt("history", { from: i, to: n }), t)
      try {
        return t.apply(this, r);
      } catch {
      }
  };
  function e(r) {
    return function(...n) {
      const i = n.length > 2 ? n[2] : void 0;
      if (i) {
        const l = Ys, g = String(i);
        Ys = g, Wt("history", { from: l, to: g });
      }
      return r.apply(this, n);
    };
  }
  nt(Ii.history, "pushState", e), nt(Ii.history, "replaceState", e);
}
const k1 = Ie, Hi = "__sentry_xhr_v3__";
function O1(t) {
  const e = "xhr";
  Pn(e, t), Mn(e, A1);
}
function A1() {
  if (!k1.XMLHttpRequest)
    return;
  const t = XMLHttpRequest.prototype;
  nt(t, "open", function(e) {
    return function(...r) {
      const n = Date.now(), i = mr(r[0]) ? r[0].toUpperCase() : void 0, l = D1(r[1]);
      if (!i || !l)
        return e.apply(this, r);
      this[Hi] = {
        method: i,
        url: l,
        request_headers: {}
      }, i === "POST" && l.match(/sentry_key/) && (this.__sentry_own_request__ = !0);
      const g = () => {
        const a = this[Hi];
        if (a && this.readyState === 4) {
          try {
            a.status_code = this.status;
          } catch {
          }
          const s = {
            args: [i, l],
            endTimestamp: Date.now(),
            startTimestamp: n,
            xhr: this
          };
          Wt("xhr", s);
        }
      };
      return "onreadystatechange" in this && typeof this.onreadystatechange == "function" ? nt(this, "onreadystatechange", function(a) {
        return function(...s) {
          return g(), a.apply(this, s);
        };
      }) : this.addEventListener("readystatechange", g), nt(this, "setRequestHeader", function(a) {
        return function(...s) {
          const [c, f] = s, o = this[Hi];
          return o && mr(c) && mr(f) && (o.request_headers[c.toLowerCase()] = f), a.apply(this, s);
        };
      }), e.apply(this, r);
    };
  }), nt(t, "send", function(e) {
    return function(...r) {
      const n = this[Hi];
      if (!n)
        return e.apply(this, r);
      r[0] !== void 0 && (n.body = r[0]);
      const i = {
        args: [n.method, n.url],
        startTimestamp: Date.now(),
        xhr: this
      };
      return Wt("xhr", i), e.apply(this, r);
    };
  });
}
function D1(t) {
  if (mr(t))
    return t;
  try {
    return t.toString();
  } catch {
  }
}
function P1() {
  return "npm";
}
function M1() {
  const t = typeof WeakSet == "function", e = t ? /* @__PURE__ */ new WeakSet() : [];
  function r(i) {
    if (t)
      return e.has(i) ? !0 : (e.add(i), !1);
    for (let l = 0; l < e.length; l++)
      if (e[l] === i)
        return !0;
    return e.push(i), !1;
  }
  function n(i) {
    if (t)
      e.delete(i);
    else
      for (let l = 0; l < e.length; l++)
        if (e[l] === i) {
          e.splice(l, 1);
          break;
        }
  }
  return [r, n];
}
function Pr(t, e = 100, r = 1 / 0) {
  try {
    return Vl("", t, e, r);
  } catch (n) {
    return { ERROR: `**non-serializable** (${n})` };
  }
}
function ng(t, e = 3, r = 100 * 1024) {
  const n = Pr(t, e);
  return L1(n) > r ? ng(t, e - 1, r) : n;
}
function Vl(t, e, r = 1 / 0, n = 1 / 0, i = M1()) {
  const [l, g] = i;
  if (e == null || // this matches null and undefined -> eqeq not eqeqeq
  ["number", "boolean", "string"].includes(typeof e) && !Hy(e))
    return e;
  const a = F1(t, e);
  if (!a.startsWith("[object "))
    return a;
  if (e.__sentry_skip_normalization__)
    return e;
  const s = typeof e.__sentry_override_normalization_depth__ == "number" ? e.__sentry_override_normalization_depth__ : r;
  if (s === 0)
    return a.replace("object ", "");
  if (l(e))
    return "[Circular ~]";
  const c = e;
  if (c && typeof c.toJSON == "function")
    try {
      const u = c.toJSON();
      return Vl("", u, s - 1, n, i);
    } catch {
    }
  const f = Array.isArray(e) ? [] : {};
  let o = 0;
  const h = Kp(e);
  for (const u in h) {
    if (!Object.prototype.hasOwnProperty.call(h, u))
      continue;
    if (o >= n) {
      f[u] = "[MaxProperties ~]";
      break;
    }
    const d = h[u];
    f[u] = Vl(u, d, s - 1, n, i), o++;
  }
  return g(e), f;
}
function F1(t, e) {
  try {
    if (t === "domain" && e && typeof e == "object" && e._events)
      return "[Domain]";
    if (t === "domainEmitter")
      return "[DomainEmitter]";
    if (typeof global < "u" && e === global)
      return "[Global]";
    if (typeof window < "u" && e === window)
      return "[Window]";
    if (typeof document < "u" && e === document)
      return "[Document]";
    if (Wp(e))
      return "[VueViewModel]";
    if (Vy(e))
      return "[SyntheticEvent]";
    if (typeof e == "number" && e !== e)
      return "[NaN]";
    if (typeof e == "function")
      return `[Function: ${Yr(e)}]`;
    if (typeof e == "symbol")
      return `[${String(e)}]`;
    if (typeof e == "bigint")
      return `[BigInt: ${String(e)}]`;
    const r = R1(e);
    return /^HTML(\w*)Element$/.test(r) ? `[HTMLElement: ${r}]` : `[object ${r}]`;
  } catch (r) {
    return `**non-serializable** (${r})`;
  }
}
function R1(t) {
  const e = Object.getPrototypeOf(t);
  return e ? e.constructor.name : "null prototype";
}
function I1(t) {
  return ~-encodeURI(t).split(/%..|./).length;
}
function L1(t) {
  return I1(JSON.stringify(t));
}
var ur;
(function(t) {
  t[t.PENDING = 0] = "PENDING";
  const r = 1;
  t[t.RESOLVED = r] = "RESOLVED";
  const n = 2;
  t[t.REJECTED = n] = "REJECTED";
})(ur || (ur = {}));
function hi(t) {
  return new St((e) => {
    e(t);
  });
}
function nu(t) {
  return new St((e, r) => {
    r(t);
  });
}
class St {
  constructor(e) {
    St.prototype.__init.call(this), St.prototype.__init2.call(this), St.prototype.__init3.call(this), St.prototype.__init4.call(this), this._state = ur.PENDING, this._handlers = [];
    try {
      e(this._resolve, this._reject);
    } catch (r) {
      this._reject(r);
    }
  }
  /** JSDoc */
  then(e, r) {
    return new St((n, i) => {
      this._handlers.push([
        !1,
        (l) => {
          if (!e)
            n(l);
          else
            try {
              n(e(l));
            } catch (g) {
              i(g);
            }
        },
        (l) => {
          if (!r)
            i(l);
          else
            try {
              n(r(l));
            } catch (g) {
              i(g);
            }
        }
      ]), this._executeHandlers();
    });
  }
  /** JSDoc */
  catch(e) {
    return this.then((r) => r, e);
  }
  /** JSDoc */
  finally(e) {
    return new St((r, n) => {
      let i, l;
      return this.then(
        (g) => {
          l = !1, i = g, e && e();
        },
        (g) => {
          l = !0, i = g, e && e();
        }
      ).then(() => {
        if (l) {
          n(i);
          return;
        }
        r(i);
      });
    });
  }
  /** JSDoc */
  __init() {
    this._resolve = (e) => {
      this._setResult(ur.RESOLVED, e);
    };
  }
  /** JSDoc */
  __init2() {
    this._reject = (e) => {
      this._setResult(ur.REJECTED, e);
    };
  }
  /** JSDoc */
  __init3() {
    this._setResult = (e, r) => {
      if (this._state === ur.PENDING) {
        if (Zo(r)) {
          r.then(this._resolve, this._reject);
          return;
        }
        this._state = e, this._value = r, this._executeHandlers();
      }
    };
  }
  /** JSDoc */
  __init4() {
    this._executeHandlers = () => {
      if (this._state === ur.PENDING)
        return;
      const e = this._handlers.slice();
      this._handlers = [], e.forEach((r) => {
        r[0] || (this._state === ur.RESOLVED && r[1](this._value), this._state === ur.REJECTED && r[2](this._value), r[0] = !0);
      });
    };
  }
}
function B1(t) {
  const e = [];
  function r() {
    return t === void 0 || e.length < t;
  }
  function n(g) {
    return e.splice(e.indexOf(g), 1)[0];
  }
  function i(g) {
    if (!r())
      return nu(new rr("Not adding Promise because buffer limit was reached."));
    const a = g();
    return e.indexOf(a) === -1 && e.push(a), a.then(() => n(a)).then(
      null,
      () => n(a).then(null, () => {
      })
    ), a;
  }
  function l(g) {
    return new St((a, s) => {
      let c = e.length;
      if (!c)
        return a(!0);
      const f = setTimeout(() => {
        g && g > 0 && a(!1);
      }, g);
      e.forEach((o) => {
        hi(o).then(() => {
          --c || (clearTimeout(f), a(!0));
        }, s);
      });
    });
  }
  return {
    $: e,
    add: i,
    drain: l
  };
}
function Xa(t) {
  if (!t)
    return {};
  const e = t.match(/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
  if (!e)
    return {};
  const r = e[6] || "", n = e[8] || "";
  return {
    host: e[4],
    path: e[5],
    protocol: e[2],
    search: r,
    hash: n,
    relative: e[5] + r + n
    // everything minus origin
  };
}
const z1 = ["fatal", "error", "warning", "log", "info", "debug"];
function N1(t) {
  return t === "warn" ? "warning" : z1.includes(t) ? t : "log";
}
const ig = 1e3;
function Ss() {
  return Date.now() / ig;
}
function j1() {
  const { performance: t } = Ie;
  if (!t || !t.now)
    return Ss;
  const e = Date.now() - t.now(), r = t.timeOrigin == null ? e : t.timeOrigin;
  return () => (r + t.now()) / ig;
}
const sg = j1();
(() => {
  const { performance: t } = Ie;
  if (!t || !t.now)
    return;
  const e = 3600 * 1e3, r = t.now(), n = Date.now(), i = t.timeOrigin ? Math.abs(t.timeOrigin + r - n) : e, l = i < e, g = t.timing && t.timing.navigationStart, s = typeof g == "number" ? Math.abs(g + r - n) : e, c = s < e;
  return l || c ? i <= s ? t.timeOrigin : g : n;
})();
function _i(t, e = []) {
  return [t, e];
}
function $1(t, e) {
  const [r, n] = t;
  return [r, [...n, e]];
}
function Mh(t, e) {
  const r = t[1];
  for (const n of r) {
    const i = n[0].type;
    if (e(n, i))
      return !0;
  }
  return !1;
}
function Hl(t, e) {
  return (e || new TextEncoder()).encode(t);
}
function V1(t, e) {
  const [r, n] = t;
  let i = JSON.stringify(r);
  function l(g) {
    typeof i == "string" ? i = typeof g == "string" ? i + g : [Hl(i, e), g] : i.push(typeof g == "string" ? Hl(g, e) : g);
  }
  for (const g of n) {
    const [a, s] = g;
    if (l(`
${JSON.stringify(a)}
`), typeof s == "string" || s instanceof Uint8Array)
      l(s);
    else {
      let c;
      try {
        c = JSON.stringify(s);
      } catch {
        c = JSON.stringify(Pr(s));
      }
      l(c);
    }
  }
  return typeof i == "string" ? i : H1(i);
}
function H1(t) {
  const e = t.reduce((i, l) => i + l.length, 0), r = new Uint8Array(e);
  let n = 0;
  for (const i of t)
    r.set(i, n), n += i.length;
  return r;
}
function U1(t, e) {
  const r = typeof t.data == "string" ? Hl(t.data, e) : t.data;
  return [
    hr({
      type: "attachment",
      length: r.length,
      filename: t.filename,
      content_type: t.contentType,
      attachment_type: t.attachmentType
    }),
    r
  ];
}
const W1 = {
  session: "session",
  sessions: "session",
  attachment: "attachment",
  transaction: "transaction",
  event: "error",
  client_report: "internal",
  user_report: "default",
  profile: "profile",
  replay_event: "replay",
  replay_recording: "replay",
  check_in: "monitor",
  feedback: "feedback",
  span: "span",
  statsd: "metric_bucket"
};
function Fh(t) {
  return W1[t];
}
function og(t) {
  if (!t || !t.sdk)
    return;
  const { name: e, version: r } = t.sdk;
  return { name: e, version: r };
}
function X1(t, e, r, n) {
  const i = t.sdkProcessingMetadata && t.sdkProcessingMetadata.dynamicSamplingContext;
  return {
    event_id: t.event_id,
    sent_at: (/* @__PURE__ */ new Date()).toISOString(),
    ...e && { sdk: e },
    ...!!r && n && { dsn: _s(n) },
    ...i && {
      trace: hr({ ...i })
    }
  };
}
function Y1(t, e, r) {
  const n = [
    { type: "client_report" },
    {
      timestamp: r || Ss(),
      discarded_events: t
    }
  ];
  return _i(e ? { dsn: e } : {}, [n]);
}
const G1 = 60 * 1e3;
function q1(t, e = Date.now()) {
  const r = parseInt(`${t}`, 10);
  if (!isNaN(r))
    return r * 1e3;
  const n = Date.parse(`${t}`);
  return isNaN(n) ? G1 : n - e;
}
function K1(t, e) {
  return t[e] || t.all || 0;
}
function J1(t, e, r = Date.now()) {
  return K1(t, e) > r;
}
function Z1(t, { statusCode: e, headers: r }, n = Date.now()) {
  const i = {
    ...t
  }, l = r && r["x-sentry-rate-limits"], g = r && r["retry-after"];
  if (l)
    for (const a of l.trim().split(",")) {
      const [s, c, , , f] = a.split(":", 5), o = parseInt(s, 10), h = (isNaN(o) ? 60 : o) * 1e3;
      if (!c)
        i.all = n + h;
      else
        for (const u of c.split(";"))
          u === "metric_bucket" ? (!f || f.split(";").includes("custom")) && (i[u] = n + h) : i[u] = n + h;
    }
  else
    g ? i.all = n + q1(g, n) : e === 429 && (i.all = n + 60 * 1e3);
  return i;
}
const $e = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__, ta = "production";
function iu() {
  return Xp("globalEventProcessors", () => []);
}
function Q1(t) {
  iu().push(t);
}
function bo(t, e, r, n = 0) {
  return new St((i, l) => {
    const g = t[n];
    if (e === null || typeof g != "function")
      i(e);
    else {
      const a = g({ ...e }, r);
      $e && g.id && a === null && Te.log(`Event processor "${g.id}" dropped event`), Zo(a) ? a.then((s) => bo(t, s, r, n + 1).then(i)).then(null, l) : bo(t, a, r, n + 1).then(i).then(null, l);
    }
  });
}
function ag(t) {
  const e = sg(), r = {
    sid: jt(),
    init: !0,
    timestamp: e,
    started: e,
    duration: 0,
    status: "ok",
    errors: 0,
    ignoreDuration: !1,
    toJSON: () => ew(r)
  };
  return t && Cn(r, t), r;
}
function Cn(t, e = {}) {
  if (e.user && (!t.ipAddress && e.user.ip_address && (t.ipAddress = e.user.ip_address), !t.did && !e.did && (t.did = e.user.id || e.user.email || e.user.username)), t.timestamp = e.timestamp || sg(), e.abnormal_mechanism && (t.abnormal_mechanism = e.abnormal_mechanism), e.ignoreDuration && (t.ignoreDuration = e.ignoreDuration), e.sid && (t.sid = e.sid.length === 32 ? e.sid : jt()), e.init !== void 0 && (t.init = e.init), !t.did && e.did && (t.did = `${e.did}`), typeof e.started == "number" && (t.started = e.started), t.ignoreDuration)
    t.duration = void 0;
  else if (typeof e.duration == "number")
    t.duration = e.duration;
  else {
    const r = t.timestamp - t.started;
    t.duration = r >= 0 ? r : 0;
  }
  e.release && (t.release = e.release), e.environment && (t.environment = e.environment), !t.ipAddress && e.ipAddress && (t.ipAddress = e.ipAddress), !t.userAgent && e.userAgent && (t.userAgent = e.userAgent), typeof e.errors == "number" && (t.errors = e.errors), e.status && (t.status = e.status);
}
function lg(t, e) {
  let r = {};
  e ? r = { status: e } : t.status === "ok" && (r = { status: "exited" }), Cn(t, r);
}
function ew(t) {
  return hr({
    sid: `${t.sid}`,
    init: t.init,
    // Make sure that sec is converted to ms for date constructor
    started: new Date(t.started * 1e3).toISOString(),
    timestamp: new Date(t.timestamp * 1e3).toISOString(),
    status: t.status,
    errors: t.errors,
    did: typeof t.did == "number" || typeof t.did == "string" ? `${t.did}` : void 0,
    duration: t.duration,
    abnormal_mechanism: t.abnormal_mechanism,
    attrs: {
      release: t.release,
      environment: t.environment,
      ip_address: t.ipAddress,
      user_agent: t.userAgent
    }
  });
}
const tw = 1;
function rw(t) {
  const { spanId: e, traceId: r } = t.spanContext(), { data: n, op: i, parent_span_id: l, status: g, tags: a, origin: s } = ns(t);
  return hr({
    data: n,
    op: i,
    parent_span_id: l,
    span_id: e,
    status: g,
    tags: a,
    trace_id: r,
    origin: s
  });
}
function ns(t) {
  return nw(t) ? t.getSpanJSON() : typeof t.toJSON == "function" ? t.toJSON() : {};
}
function nw(t) {
  return typeof t.getSpanJSON == "function";
}
function iw(t) {
  const { traceFlags: e } = t.spanContext();
  return !!(e & tw);
}
function sw(t, e, r, n, i, l) {
  const { normalizeDepth: g = 3, normalizeMaxBreadth: a = 1e3 } = t, s = {
    ...e,
    event_id: e.event_id || r.event_id || jt(),
    timestamp: e.timestamp || Ss()
  }, c = r.integrations || t.integrations.map((p) => p.name);
  ow(s, t), cw(s, c), e.type === void 0 && aw(s, t.stackParser);
  const f = hw(n, r.captureContext);
  r.mechanism && rs(s, r.mechanism);
  const o = i && i.getEventProcessors ? i.getEventProcessors() : [], h = Tw().getScopeData();
  if (l) {
    const p = l.getScopeData();
    Bh(h, p);
  }
  if (f) {
    const p = f.getScopeData();
    Bh(h, p);
  }
  const u = [...r.attachments || [], ...h.attachments];
  u.length && (r.attachments = u), pg(s, h);
  const d = [
    ...o,
    // eslint-disable-next-line deprecation/deprecation
    ...iu(),
    // Run scope event processors _after_ all other processors
    ...h.eventProcessors
  ];
  return bo(d, s, r).then((p) => (p && lw(p), typeof g == "number" && g > 0 ? uw(p, g, a) : p));
}
function ow(t, e) {
  const { environment: r, release: n, dist: i, maxValueLength: l = 250 } = e;
  "environment" in t || (t.environment = "environment" in e ? r : ta), t.release === void 0 && n !== void 0 && (t.release = n), t.dist === void 0 && i !== void 0 && (t.dist = i), t.message && (t.message = Kn(t.message, l));
  const g = t.exception && t.exception.values && t.exception.values[0];
  g && g.value && (g.value = Kn(g.value, l));
  const a = t.request;
  a && a.url && (a.url = Kn(a.url, l));
}
const Rh = /* @__PURE__ */ new WeakMap();
function aw(t, e) {
  const r = Ie._sentryDebugIds;
  if (!r)
    return;
  let n;
  const i = Rh.get(e);
  i ? n = i : (n = /* @__PURE__ */ new Map(), Rh.set(e, n));
  const l = Object.keys(r).reduce((g, a) => {
    let s;
    const c = n.get(a);
    c ? s = c : (s = e(a), n.set(a, s));
    for (let f = s.length - 1; f >= 0; f--) {
      const o = s[f];
      if (o.filename) {
        g[o.filename] = r[a];
        break;
      }
    }
    return g;
  }, {});
  try {
    t.exception.values.forEach((g) => {
      g.stacktrace.frames.forEach((a) => {
        a.filename && (a.debug_id = l[a.filename]);
      });
    });
  } catch {
  }
}
function lw(t) {
  const e = {};
  try {
    t.exception.values.forEach((n) => {
      n.stacktrace.frames.forEach((i) => {
        i.debug_id && (i.abs_path ? e[i.abs_path] = i.debug_id : i.filename && (e[i.filename] = i.debug_id), delete i.debug_id);
      });
    });
  } catch {
  }
  if (Object.keys(e).length === 0)
    return;
  t.debug_meta = t.debug_meta || {}, t.debug_meta.images = t.debug_meta.images || [];
  const r = t.debug_meta.images;
  Object.keys(e).forEach((n) => {
    r.push({
      type: "sourcemap",
      code_file: n,
      debug_id: e[n]
    });
  });
}
function cw(t, e) {
  e.length > 0 && (t.sdk = t.sdk || {}, t.sdk.integrations = [...t.sdk.integrations || [], ...e]);
}
function uw(t, e, r) {
  if (!t)
    return null;
  const n = {
    ...t,
    ...t.breadcrumbs && {
      breadcrumbs: t.breadcrumbs.map((i) => ({
        ...i,
        ...i.data && {
          data: Pr(i.data, e, r)
        }
      }))
    },
    ...t.user && {
      user: Pr(t.user, e, r)
    },
    ...t.contexts && {
      contexts: Pr(t.contexts, e, r)
    },
    ...t.extra && {
      extra: Pr(t.extra, e, r)
    }
  };
  return t.contexts && t.contexts.trace && n.contexts && (n.contexts.trace = t.contexts.trace, t.contexts.trace.data && (n.contexts.trace.data = Pr(t.contexts.trace.data, e, r))), t.spans && (n.spans = t.spans.map((i) => {
    const l = ns(i).data;
    return l && (i.data = Pr(l, e, r)), i;
  })), n;
}
function hw(t, e) {
  if (!e)
    return t;
  const r = t ? t.clone() : new vr();
  return r.update(e), r;
}
function fw(t) {
  if (t)
    return dw(t) ? { captureContext: t } : gw(t) ? {
      captureContext: t
    } : t;
}
function dw(t) {
  return t instanceof vr || typeof t == "function";
}
const pw = [
  "user",
  "level",
  "extra",
  "contexts",
  "tags",
  "fingerprint",
  "requestSession",
  "propagationContext"
];
function gw(t) {
  return Object.keys(t).some((e) => pw.includes(e));
}
function mw(t, e) {
  return _r().captureException(t, fw(e));
}
function cg(t, e) {
  return _r().captureEvent(t, e);
}
function _n(t, e) {
  _r().addBreadcrumb(t, e);
}
function vw(...t) {
  const e = _r();
  if (t.length === 2) {
    const [r, n] = t;
    return r ? e.withScope(() => (e.getStackTop().scope = r, n(r))) : e.withScope(n);
  }
  return e.withScope(t[0]);
}
function Ct() {
  return _r().getClient();
}
function Ts() {
  return _r().getScope();
}
function Ih(t) {
  const e = Ct(), r = na(), n = Ts(), { release: i, environment: l = ta } = e && e.getOptions() || {}, { userAgent: g } = Ie.navigator || {}, a = ag({
    release: i,
    environment: l,
    user: n.getUser() || r.getUser(),
    ...g && { userAgent: g },
    ...t
  }), s = r.getSession();
  return s && s.status === "ok" && Cn(s, { status: "exited" }), ug(), r.setSession(a), n.setSession(a), a;
}
function ug() {
  const t = na(), e = Ts(), r = e.getSession() || t.getSession();
  r && lg(r), hg(), t.setSession(), e.setSession();
}
function hg() {
  const t = na(), e = Ts(), r = Ct(), n = e.getSession() || t.getSession();
  n && r && r.captureSession && r.captureSession(n);
}
function Lh(t = !1) {
  if (t) {
    ug();
    return;
  }
  hg();
}
function fg(t) {
  return t.transaction;
}
function dg(t, e, r) {
  const n = e.getOptions(), { publicKey: i } = e.getDsn() || {}, { segment: l } = r && r.getUser() || {}, g = hr({
    environment: n.environment || ta,
    release: n.release,
    user_segment: l,
    public_key: i,
    trace_id: t
  });
  return e.emit && e.emit("createDsc", g), g;
}
function bw(t) {
  const e = Ct();
  if (!e)
    return {};
  const r = dg(ns(t).trace_id || "", e, Ts()), n = fg(t);
  if (!n)
    return r;
  const i = n && n._frozenDynamicSamplingContext;
  if (i)
    return i;
  const { sampleRate: l, source: g } = n.metadata;
  l != null && (r.sample_rate = `${l}`);
  const a = ns(n);
  return g && g !== "url" && (r.transaction = a.description), r.sampled = String(iw(n)), e.emit && e.emit("createDsc", r), r;
}
function pg(t, e) {
  const { fingerprint: r, span: n, breadcrumbs: i, sdkProcessingMetadata: l } = e;
  yw(t, e), n && Cw(t, n), _w(t, r), ww(t, i), xw(t, l);
}
function Bh(t, e) {
  const {
    extra: r,
    tags: n,
    user: i,
    contexts: l,
    level: g,
    sdkProcessingMetadata: a,
    breadcrumbs: s,
    fingerprint: c,
    eventProcessors: f,
    attachments: o,
    propagationContext: h,
    // eslint-disable-next-line deprecation/deprecation
    transactionName: u,
    span: d
  } = e;
  Li(t, "extra", r), Li(t, "tags", n), Li(t, "user", i), Li(t, "contexts", l), Li(t, "sdkProcessingMetadata", a), g && (t.level = g), u && (t.transactionName = u), d && (t.span = d), s.length && (t.breadcrumbs = [...t.breadcrumbs, ...s]), c.length && (t.fingerprint = [...t.fingerprint, ...c]), f.length && (t.eventProcessors = [...t.eventProcessors, ...f]), o.length && (t.attachments = [...t.attachments, ...o]), t.propagationContext = { ...t.propagationContext, ...h };
}
function Li(t, e, r) {
  if (r && Object.keys(r).length) {
    t[e] = { ...t[e] };
    for (const n in r)
      Object.prototype.hasOwnProperty.call(r, n) && (t[e][n] = r[n]);
  }
}
function yw(t, e) {
  const {
    extra: r,
    tags: n,
    user: i,
    contexts: l,
    level: g,
    // eslint-disable-next-line deprecation/deprecation
    transactionName: a
  } = e, s = hr(r);
  s && Object.keys(s).length && (t.extra = { ...s, ...t.extra });
  const c = hr(n);
  c && Object.keys(c).length && (t.tags = { ...c, ...t.tags });
  const f = hr(i);
  f && Object.keys(f).length && (t.user = { ...f, ...t.user });
  const o = hr(l);
  o && Object.keys(o).length && (t.contexts = { ...o, ...t.contexts }), g && (t.level = g), a && (t.transaction = a);
}
function ww(t, e) {
  const r = [...t.breadcrumbs || [], ...e];
  t.breadcrumbs = r.length ? r : void 0;
}
function xw(t, e) {
  t.sdkProcessingMetadata = {
    ...t.sdkProcessingMetadata,
    ...e
  };
}
function Cw(t, e) {
  t.contexts = { trace: rw(e), ...t.contexts };
  const r = fg(e);
  if (r) {
    t.sdkProcessingMetadata = {
      dynamicSamplingContext: bw(e),
      ...t.sdkProcessingMetadata
    };
    const n = ns(r).description;
    n && (t.tags = { transaction: n, ...t.tags });
  }
}
function _w(t, e) {
  t.fingerprint = t.fingerprint ? eg(t.fingerprint) : [], e && (t.fingerprint = t.fingerprint.concat(e)), t.fingerprint && !t.fingerprint.length && delete t.fingerprint;
}
const Sw = 100;
let Ya;
class vr {
  /** Flag if notifying is happening. */
  /** Callback for client to receive scope changes. */
  /** Callback list that will be called after {@link applyToEvent}. */
  /** Array of breadcrumbs. */
  /** User */
  /** Tags */
  /** Extra */
  /** Contexts */
  /** Attachments */
  /** Propagation Context for distributed tracing */
  /**
   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get
   * sent to Sentry
   */
  /** Fingerprint */
  /** Severity */
  // eslint-disable-next-line deprecation/deprecation
  /**
   * Transaction Name
   */
  /** Span */
  /** Session */
  /** Request Mode Session Status */
  /** The client on this scope */
  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.
  constructor() {
    this._notifyingListeners = !1, this._scopeListeners = [], this._eventProcessors = [], this._breadcrumbs = [], this._attachments = [], this._user = {}, this._tags = {}, this._extra = {}, this._contexts = {}, this._sdkProcessingMetadata = {}, this._propagationContext = zh();
  }
  /**
   * Inherit values from the parent scope.
   * @deprecated Use `scope.clone()` and `new Scope()` instead.
   */
  static clone(e) {
    return e ? e.clone() : new vr();
  }
  /**
   * Clone this scope instance.
   */
  clone() {
    const e = new vr();
    return e._breadcrumbs = [...this._breadcrumbs], e._tags = { ...this._tags }, e._extra = { ...this._extra }, e._contexts = { ...this._contexts }, e._user = this._user, e._level = this._level, e._span = this._span, e._session = this._session, e._transactionName = this._transactionName, e._fingerprint = this._fingerprint, e._eventProcessors = [...this._eventProcessors], e._requestSession = this._requestSession, e._attachments = [...this._attachments], e._sdkProcessingMetadata = { ...this._sdkProcessingMetadata }, e._propagationContext = { ...this._propagationContext }, e._client = this._client, e;
  }
  /** Update the client on the scope. */
  setClient(e) {
    this._client = e;
  }
  /**
   * Get the client assigned to this scope.
   *
   * It is generally recommended to use the global function `Sentry.getClient()` instead, unless you know what you are doing.
   */
  getClient() {
    return this._client;
  }
  /**
   * Add internal on change listener. Used for sub SDKs that need to store the scope.
   * @hidden
   */
  addScopeListener(e) {
    this._scopeListeners.push(e);
  }
  /**
   * @inheritDoc
   */
  addEventProcessor(e) {
    return this._eventProcessors.push(e), this;
  }
  /**
   * @inheritDoc
   */
  setUser(e) {
    return this._user = e || {
      email: void 0,
      id: void 0,
      ip_address: void 0,
      segment: void 0,
      username: void 0
    }, this._session && Cn(this._session, { user: e }), this._notifyScopeListeners(), this;
  }
  /**
   * @inheritDoc
   */
  getUser() {
    return this._user;
  }
  /**
   * @inheritDoc
   */
  getRequestSession() {
    return this._requestSession;
  }
  /**
   * @inheritDoc
   */
  setRequestSession(e) {
    return this._requestSession = e, this;
  }
  /**
   * @inheritDoc
   */
  setTags(e) {
    return this._tags = {
      ...this._tags,
      ...e
    }, this._notifyScopeListeners(), this;
  }
  /**
   * @inheritDoc
   */
  setTag(e, r) {
    return this._tags = { ...this._tags, [e]: r }, this._notifyScopeListeners(), this;
  }
  /**
   * @inheritDoc
   */
  setExtras(e) {
    return this._extra = {
      ...this._extra,
      ...e
    }, this._notifyScopeListeners(), this;
  }
  /**
   * @inheritDoc
   */
  setExtra(e, r) {
    return this._extra = { ...this._extra, [e]: r }, this._notifyScopeListeners(), this;
  }
  /**
   * @inheritDoc
   */
  setFingerprint(e) {
    return this._fingerprint = e, this._notifyScopeListeners(), this;
  }
  /**
   * @inheritDoc
   */
  setLevel(e) {
    return this._level = e, this._notifyScopeListeners(), this;
  }
  /**
   * Sets the transaction name on the scope for future events.
   */
  setTransactionName(e) {
    return this._transactionName = e, this._notifyScopeListeners(), this;
  }
  /**
   * @inheritDoc
   */
  setContext(e, r) {
    return r === null ? delete this._contexts[e] : this._contexts[e] = r, this._notifyScopeListeners(), this;
  }
  /**
   * Sets the Span on the scope.
   * @param span Span
   * @deprecated Instead of setting a span on a scope, use `startSpan()`/`startSpanManual()` instead.
   */
  setSpan(e) {
    return this._span = e, this._notifyScopeListeners(), this;
  }
  /**
   * Returns the `Span` if there is one.
   * @deprecated Use `getActiveSpan()` instead.
   */
  getSpan() {
    return this._span;
  }
  /**
   * Returns the `Transaction` attached to the scope (if there is one).
   * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.
   */
  getTransaction() {
    const e = this._span;
    return e && e.transaction;
  }
  /**
   * @inheritDoc
   */
  setSession(e) {
    return e ? this._session = e : delete this._session, this._notifyScopeListeners(), this;
  }
  /**
   * @inheritDoc
   */
  getSession() {
    return this._session;
  }
  /**
   * @inheritDoc
   */
  update(e) {
    if (!e)
      return this;
    const r = typeof e == "function" ? e(this) : e;
    if (r instanceof vr) {
      const n = r.getScopeData();
      this._tags = { ...this._tags, ...n.tags }, this._extra = { ...this._extra, ...n.extra }, this._contexts = { ...this._contexts, ...n.contexts }, n.user && Object.keys(n.user).length && (this._user = n.user), n.level && (this._level = n.level), n.fingerprint.length && (this._fingerprint = n.fingerprint), r.getRequestSession() && (this._requestSession = r.getRequestSession()), n.propagationContext && (this._propagationContext = n.propagationContext);
    } else if (ui(r)) {
      const n = e;
      this._tags = { ...this._tags, ...n.tags }, this._extra = { ...this._extra, ...n.extra }, this._contexts = { ...this._contexts, ...n.contexts }, n.user && (this._user = n.user), n.level && (this._level = n.level), n.fingerprint && (this._fingerprint = n.fingerprint), n.requestSession && (this._requestSession = n.requestSession), n.propagationContext && (this._propagationContext = n.propagationContext);
    }
    return this;
  }
  /**
   * @inheritDoc
   */
  clear() {
    return this._breadcrumbs = [], this._tags = {}, this._extra = {}, this._user = {}, this._contexts = {}, this._level = void 0, this._transactionName = void 0, this._fingerprint = void 0, this._requestSession = void 0, this._span = void 0, this._session = void 0, this._notifyScopeListeners(), this._attachments = [], this._propagationContext = zh(), this;
  }
  /**
   * @inheritDoc
   */
  addBreadcrumb(e, r) {
    const n = typeof r == "number" ? r : Sw;
    if (n <= 0)
      return this;
    const i = {
      timestamp: Ss(),
      ...e
    }, l = this._breadcrumbs;
    return l.push(i), this._breadcrumbs = l.length > n ? l.slice(-n) : l, this._notifyScopeListeners(), this;
  }
  /**
   * @inheritDoc
   */
  getLastBreadcrumb() {
    return this._breadcrumbs[this._breadcrumbs.length - 1];
  }
  /**
   * @inheritDoc
   */
  clearBreadcrumbs() {
    return this._breadcrumbs = [], this._notifyScopeListeners(), this;
  }
  /**
   * @inheritDoc
   */
  addAttachment(e) {
    return this._attachments.push(e), this;
  }
  /**
   * @inheritDoc
   * @deprecated Use `getScopeData()` instead.
   */
  getAttachments() {
    return this.getScopeData().attachments;
  }
  /**
   * @inheritDoc
   */
  clearAttachments() {
    return this._attachments = [], this;
  }
  /** @inheritDoc */
  getScopeData() {
    const {
      _breadcrumbs: e,
      _attachments: r,
      _contexts: n,
      _tags: i,
      _extra: l,
      _user: g,
      _level: a,
      _fingerprint: s,
      _eventProcessors: c,
      _propagationContext: f,
      _sdkProcessingMetadata: o,
      _transactionName: h,
      _span: u
    } = this;
    return {
      breadcrumbs: e,
      attachments: r,
      contexts: n,
      tags: i,
      extra: l,
      user: g,
      level: a,
      fingerprint: s || [],
      eventProcessors: c,
      propagationContext: f,
      sdkProcessingMetadata: o,
      transactionName: h,
      span: u
    };
  }
  /**
   * Applies data from the scope to the event and runs all event processors on it.
   *
   * @param event Event
   * @param hint Object containing additional information about the original exception, for use by the event processors.
   * @hidden
   * @deprecated Use `applyScopeDataToEvent()` directly
   */
  applyToEvent(e, r = {}, n = []) {
    pg(e, this.getScopeData());
    const i = [
      ...n,
      // eslint-disable-next-line deprecation/deprecation
      ...iu(),
      ...this._eventProcessors
    ];
    return bo(i, e, r);
  }
  /**
   * Add data which will be accessible during event processing but won't get sent to Sentry
   */
  setSDKProcessingMetadata(e) {
    return this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...e }, this;
  }
  /**
   * @inheritDoc
   */
  setPropagationContext(e) {
    return this._propagationContext = e, this;
  }
  /**
   * @inheritDoc
   */
  getPropagationContext() {
    return this._propagationContext;
  }
  /**
   * Capture an exception for this scope.
   *
   * @param exception The exception to capture.
   * @param hint Optinal additional data to attach to the Sentry event.
   * @returns the id of the captured Sentry event.
   */
  captureException(e, r) {
    const n = r && r.event_id ? r.event_id : jt();
    if (!this._client)
      return Te.warn("No client configured on scope - will not capture exception!"), n;
    const i = new Error("Sentry syntheticException");
    return this._client.captureException(
      e,
      {
        originalException: e,
        syntheticException: i,
        ...r,
        event_id: n
      },
      this
    ), n;
  }
  /**
   * Capture a message for this scope.
   *
   * @param message The message to capture.
   * @param level An optional severity level to report the message with.
   * @param hint Optional additional data to attach to the Sentry event.
   * @returns the id of the captured message.
   */
  captureMessage(e, r, n) {
    const i = n && n.event_id ? n.event_id : jt();
    if (!this._client)
      return Te.warn("No client configured on scope - will not capture message!"), i;
    const l = new Error(e);
    return this._client.captureMessage(
      e,
      r,
      {
        originalException: e,
        syntheticException: l,
        ...n,
        event_id: i
      },
      this
    ), i;
  }
  /**
   * Captures a manually created event for this scope and sends it to Sentry.
   *
   * @param exception The event to capture.
   * @param hint Optional additional data to attach to the Sentry event.
   * @returns the id of the captured event.
   */
  captureEvent(e, r) {
    const n = r && r.event_id ? r.event_id : jt();
    return this._client ? (this._client.captureEvent(e, { ...r, event_id: n }, this), n) : (Te.warn("No client configured on scope - will not capture event!"), n);
  }
  /**
   * This will be called on every set call.
   */
  _notifyScopeListeners() {
    this._notifyingListeners || (this._notifyingListeners = !0, this._scopeListeners.forEach((e) => {
      e(this);
    }), this._notifyingListeners = !1);
  }
}
function Tw() {
  return Ya || (Ya = new vr()), Ya;
}
function zh() {
  return {
    traceId: jt(),
    spanId: jt().substring(16)
  };
}
const Ul = "7.118.0", gg = parseFloat(Ul), Ew = 100;
class mg {
  /** Is a {@link Layer}[] containing the client and scope */
  /** Contains the last event id of a captured event.  */
  /**
   * Creates a new instance of the hub, will push one {@link Layer} into the
   * internal stack on creation.
   *
   * @param client bound to the hub.
   * @param scope bound to the hub.
   * @param version number, higher number means higher priority.
   *
   * @deprecated Instantiation of Hub objects is deprecated and the constructor will be removed in version 8 of the SDK.
   *
   * If you are currently using the Hub for multi-client use like so:
   *
   * ```
   * // OLD
   * const hub = new Hub();
   * hub.bindClient(client);
   * makeMain(hub)
   * ```
   *
   * instead initialize the client as follows:
   *
   * ```
   * // NEW
   * Sentry.withIsolationScope(() => {
   *    Sentry.setCurrentClient(client);
   *    client.init();
   * });
   * ```
   *
   * If you are using the Hub to capture events like so:
   *
   * ```
   * // OLD
   * const client = new Client();
   * const hub = new Hub(client);
   * hub.captureException()
   * ```
   *
   * instead capture isolated events as follows:
   *
   * ```
   * // NEW
   * const client = new Client();
   * const scope = new Scope();
   * scope.setClient(client);
   * scope.captureException();
   * ```
   */
  constructor(e, r, n, i = gg) {
    this._version = i;
    let l;
    r ? l = r : (l = new vr(), l.setClient(e));
    let g;
    n ? g = n : (g = new vr(), g.setClient(e)), this._stack = [{ scope: l }], e && this.bindClient(e), this._isolationScope = g;
  }
  /**
   * Checks if this hub's version is older than the given version.
   *
   * @param version A version number to compare to.
   * @return True if the given version is newer; otherwise false.
   *
   * @deprecated This will be removed in v8.
   */
  isOlderThan(e) {
    return this._version < e;
  }
  /**
   * This binds the given client to the current scope.
   * @param client An SDK client (client) instance.
   *
   * @deprecated Use `initAndBind()` directly, or `setCurrentClient()` and/or `client.init()` instead.
   */
  bindClient(e) {
    const r = this.getStackTop();
    r.client = e, r.scope.setClient(e), e && e.setupIntegrations && e.setupIntegrations();
  }
  /**
   * @inheritDoc
   *
   * @deprecated Use `withScope` instead.
   */
  pushScope() {
    const e = this.getScope().clone();
    return this.getStack().push({
      // eslint-disable-next-line deprecation/deprecation
      client: this.getClient(),
      scope: e
    }), e;
  }
  /**
   * @inheritDoc
   *
   * @deprecated Use `withScope` instead.
   */
  popScope() {
    return this.getStack().length <= 1 ? !1 : !!this.getStack().pop();
  }
  /**
   * @inheritDoc
   *
   * @deprecated Use `Sentry.withScope()` instead.
   */
  withScope(e) {
    const r = this.pushScope();
    let n;
    try {
      n = e(r);
    } catch (i) {
      throw this.popScope(), i;
    }
    return Zo(n) ? n.then(
      (i) => (this.popScope(), i),
      (i) => {
        throw this.popScope(), i;
      }
    ) : (this.popScope(), n);
  }
  /**
   * @inheritDoc
   *
   * @deprecated Use `Sentry.getClient()` instead.
   */
  getClient() {
    return this.getStackTop().client;
  }
  /**
   * Returns the scope of the top stack.
   *
   * @deprecated Use `Sentry.getCurrentScope()` instead.
   */
  getScope() {
    return this.getStackTop().scope;
  }
  /**
   * @deprecated Use `Sentry.getIsolationScope()` instead.
   */
  getIsolationScope() {
    return this._isolationScope;
  }
  /**
   * Returns the scope stack for domains or the process.
   * @deprecated This will be removed in v8.
   */
  getStack() {
    return this._stack;
  }
  /**
   * Returns the topmost scope layer in the order domain > local > process.
   * @deprecated This will be removed in v8.
   */
  getStackTop() {
    return this._stack[this._stack.length - 1];
  }
  /**
   * @inheritDoc
   *
   * @deprecated Use `Sentry.captureException()` instead.
   */
  captureException(e, r) {
    const n = this._lastEventId = r && r.event_id ? r.event_id : jt(), i = new Error("Sentry syntheticException");
    return this.getScope().captureException(e, {
      originalException: e,
      syntheticException: i,
      ...r,
      event_id: n
    }), n;
  }
  /**
   * @inheritDoc
   *
   * @deprecated Use  `Sentry.captureMessage()` instead.
   */
  captureMessage(e, r, n) {
    const i = this._lastEventId = n && n.event_id ? n.event_id : jt(), l = new Error(e);
    return this.getScope().captureMessage(e, r, {
      originalException: e,
      syntheticException: l,
      ...n,
      event_id: i
    }), i;
  }
  /**
   * @inheritDoc
   *
   * @deprecated Use `Sentry.captureEvent()` instead.
   */
  captureEvent(e, r) {
    const n = r && r.event_id ? r.event_id : jt();
    return e.type || (this._lastEventId = n), this.getScope().captureEvent(e, { ...r, event_id: n }), n;
  }
  /**
   * @inheritDoc
   *
   * @deprecated This will be removed in v8.
   */
  lastEventId() {
    return this._lastEventId;
  }
  /**
   * @inheritDoc
   *
   * @deprecated Use `Sentry.addBreadcrumb()` instead.
   */
  addBreadcrumb(e, r) {
    const { scope: n, client: i } = this.getStackTop();
    if (!i)
      return;
    const { beforeBreadcrumb: l = null, maxBreadcrumbs: g = Ew } = i.getOptions && i.getOptions() || {};
    if (g <= 0)
      return;
    const s = { timestamp: Ss(), ...e }, c = l ? ea(() => l(s, r)) : s;
    c !== null && (i.emit && i.emit("beforeAddBreadcrumb", c, r), n.addBreadcrumb(c, g));
  }
  /**
   * @inheritDoc
   * @deprecated Use `Sentry.setUser()` instead.
   */
  setUser(e) {
    this.getScope().setUser(e), this.getIsolationScope().setUser(e);
  }
  /**
   * @inheritDoc
   * @deprecated Use `Sentry.setTags()` instead.
   */
  setTags(e) {
    this.getScope().setTags(e), this.getIsolationScope().setTags(e);
  }
  /**
   * @inheritDoc
   * @deprecated Use `Sentry.setExtras()` instead.
   */
  setExtras(e) {
    this.getScope().setExtras(e), this.getIsolationScope().setExtras(e);
  }
  /**
   * @inheritDoc
   * @deprecated Use `Sentry.setTag()` instead.
   */
  setTag(e, r) {
    this.getScope().setTag(e, r), this.getIsolationScope().setTag(e, r);
  }
  /**
   * @inheritDoc
   * @deprecated Use `Sentry.setExtra()` instead.
   */
  setExtra(e, r) {
    this.getScope().setExtra(e, r), this.getIsolationScope().setExtra(e, r);
  }
  /**
   * @inheritDoc
   * @deprecated Use `Sentry.setContext()` instead.
   */
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  setContext(e, r) {
    this.getScope().setContext(e, r), this.getIsolationScope().setContext(e, r);
  }
  /**
   * @inheritDoc
   *
   * @deprecated Use `getScope()` directly.
   */
  configureScope(e) {
    const { scope: r, client: n } = this.getStackTop();
    n && e(r);
  }
  /**
   * @inheritDoc
   */
  // eslint-disable-next-line deprecation/deprecation
  run(e) {
    const r = Nh(this);
    try {
      e(this);
    } finally {
      Nh(r);
    }
  }
  /**
   * @inheritDoc
   * @deprecated Use `Sentry.getClient().getIntegrationByName()` instead.
   */
  getIntegration(e) {
    const r = this.getClient();
    if (!r)
      return null;
    try {
      return r.getIntegration(e);
    } catch {
      return $e && Te.warn(`Cannot retrieve integration ${e.id} from the current Hub`), null;
    }
  }
  /**
   * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.
   *
   * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a
   * new child span within the transaction or any span, call the respective `.startChild()` method.
   *
   * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.
   *
   * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its
   * finished child spans will be sent to Sentry.
   *
   * @param context Properties of the new `Transaction`.
   * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent
   * default values). See {@link Options.tracesSampler}.
   *
   * @returns The transaction which was just started
   *
   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.
   */
  startTransaction(e, r) {
    const n = this._callExtensionMethod("startTransaction", e, r);
    return $e && !n && (this.getClient() ? Te.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':
Sentry.addTracingExtensions();
Sentry.init({...});
`) : Te.warn(
      "Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'"
    )), n;
  }
  /**
   * @inheritDoc
   * @deprecated Use `spanToTraceHeader()` instead.
   */
  traceHeaders() {
    return this._callExtensionMethod("traceHeaders");
  }
  /**
   * @inheritDoc
   *
   * @deprecated Use top level `captureSession` instead.
   */
  captureSession(e = !1) {
    if (e)
      return this.endSession();
    this._sendSessionUpdate();
  }
  /**
   * @inheritDoc
   * @deprecated Use top level `endSession` instead.
   */
  endSession() {
    const r = this.getStackTop().scope, n = r.getSession();
    n && lg(n), this._sendSessionUpdate(), r.setSession();
  }
  /**
   * @inheritDoc
   * @deprecated Use top level `startSession` instead.
   */
  startSession(e) {
    const { scope: r, client: n } = this.getStackTop(), { release: i, environment: l = ta } = n && n.getOptions() || {}, { userAgent: g } = Ie.navigator || {}, a = ag({
      release: i,
      environment: l,
      user: r.getUser(),
      ...g && { userAgent: g },
      ...e
    }), s = r.getSession && r.getSession();
    return s && s.status === "ok" && Cn(s, { status: "exited" }), this.endSession(), r.setSession(a), a;
  }
  /**
   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests
   * when Tracing is used.
   *
   * @deprecated Use top-level `getClient().getOptions().sendDefaultPii` instead. This function
   * only unnecessarily increased API surface but only wrapped accessing the option.
   */
  shouldSendDefaultPii() {
    const e = this.getClient(), r = e && e.getOptions();
    return !!(r && r.sendDefaultPii);
  }
  /**
   * Sends the current Session on the scope
   */
  _sendSessionUpdate() {
    const { scope: e, client: r } = this.getStackTop(), n = e.getSession();
    n && r && r.captureSession && r.captureSession(n);
  }
  /**
   * Calls global extension method and binding current instance to the function call
   */
  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  _callExtensionMethod(e, ...r) {
    const i = ra().__SENTRY__;
    if (i && i.extensions && typeof i.extensions[e] == "function")
      return i.extensions[e].apply(this, r);
    $e && Te.warn(`Extension method ${e} couldn't be found, doing nothing.`);
  }
}
function ra() {
  return Ie.__SENTRY__ = Ie.__SENTRY__ || {
    extensions: {},
    hub: void 0
  }, Ie;
}
function Nh(t) {
  const e = ra(), r = Wl(e);
  return vg(e, t), r;
}
function _r() {
  const t = ra();
  if (t.__SENTRY__ && t.__SENTRY__.acs) {
    const e = t.__SENTRY__.acs.getCurrentHub();
    if (e)
      return e;
  }
  return kw(t);
}
function na() {
  return _r().getIsolationScope();
}
function kw(t = ra()) {
  return (!Ow(t) || // eslint-disable-next-line deprecation/deprecation
  Wl(t).isOlderThan(gg)) && vg(t, new mg()), Wl(t);
}
function Ow(t) {
  return !!(t && t.__SENTRY__ && t.__SENTRY__.hub);
}
function Wl(t) {
  return Xp("hub", () => new mg(), t);
}
function vg(t, e) {
  if (!t)
    return !1;
  const r = t.__SENTRY__ = t.__SENTRY__ || {};
  return r.hub = e, !0;
}
function Aw(t, e) {
  return e && (t.sdk = t.sdk || {}, t.sdk.name = t.sdk.name || e.name, t.sdk.version = t.sdk.version || e.version, t.sdk.integrations = [...t.sdk.integrations || [], ...e.integrations || []], t.sdk.packages = [...t.sdk.packages || [], ...e.packages || []]), t;
}
function Dw(t, e, r, n) {
  const i = og(r), l = {
    sent_at: (/* @__PURE__ */ new Date()).toISOString(),
    ...i && { sdk: i },
    ...!!n && e && { dsn: _s(e) }
  }, g = "aggregates" in t ? [{ type: "sessions" }, t] : [{ type: "session" }, t.toJSON()];
  return _i(l, [g]);
}
function Pw(t, e, r, n) {
  const i = og(r), l = t.type && t.type !== "replay_event" ? t.type : "event";
  Aw(t, r && r.sdk);
  const g = X1(t, i, n, e);
  return delete t.sdkProcessingMetadata, _i(g, [[{ type: l }, t]]);
}
const Mw = "7";
function Fw(t) {
  const e = t.protocol ? `${t.protocol}:` : "", r = t.port ? `:${t.port}` : "";
  return `${e}//${t.host}${r}${t.path ? `/${t.path}` : ""}/api/`;
}
function Rw(t) {
  return `${Fw(t)}${t.projectId}/envelope/`;
}
function Iw(t, e) {
  return i1({
    // We send only the minimum set of required information. See
    // https://github.com/getsentry/sentry-javascript/issues/2572.
    sentry_key: t.publicKey,
    sentry_version: Mw,
    ...e && { sentry_client: `${e.name}/${e.version}` }
  });
}
function Lw(t, e = {}) {
  const r = typeof e == "string" ? e : e.tunnel, n = typeof e == "string" || !e._metadata ? void 0 : e._metadata.sdk;
  return r || `${Rw(t)}?${Iw(t, n)}`;
}
const jh = [];
function Bw(t) {
  const e = {};
  return t.forEach((r) => {
    const { name: n } = r, i = e[n];
    i && !i.isDefaultInstance && r.isDefaultInstance || (e[n] = r);
  }), Object.keys(e).map((r) => e[r]);
}
function zw(t) {
  const e = t.defaultIntegrations || [], r = t.integrations;
  e.forEach((g) => {
    g.isDefaultInstance = !0;
  });
  let n;
  Array.isArray(r) ? n = [...e, ...r] : typeof r == "function" ? n = eg(r(e)) : n = e;
  const i = Bw(n), l = jw(i, (g) => g.name === "Debug");
  if (l !== -1) {
    const [g] = i.splice(l, 1);
    i.push(g);
  }
  return i;
}
function Nw(t, e) {
  const r = {};
  return e.forEach((n) => {
    n && bg(t, n, r);
  }), r;
}
function $h(t, e) {
  for (const r of e)
    r && r.afterAllSetup && r.afterAllSetup(t);
}
function bg(t, e, r) {
  if (r[e.name]) {
    $e && Te.log(`Integration skipped because it was already installed: ${e.name}`);
    return;
  }
  if (r[e.name] = e, jh.indexOf(e.name) === -1 && (e.setupOnce(Q1, _r), jh.push(e.name)), e.setup && typeof e.setup == "function" && e.setup(t), t.on && typeof e.preprocessEvent == "function") {
    const n = e.preprocessEvent.bind(e);
    t.on("preprocessEvent", (i, l) => n(i, l, t));
  }
  if (t.addEventProcessor && typeof e.processEvent == "function") {
    const n = e.processEvent.bind(e), i = Object.assign((l, g) => n(l, g, t), {
      id: e.name
    });
    t.addEventProcessor(i);
  }
  $e && Te.log(`Integration installed: ${e.name}`);
}
function jw(t, e) {
  for (let r = 0; r < t.length; r++)
    if (e(t[r]) === !0)
      return r;
  return -1;
}
function en(t, e) {
  return Object.assign(
    function(...n) {
      return e(...n);
    },
    { id: t }
  );
}
function $w(t) {
  let e = "";
  for (const r of t) {
    const n = Object.entries(r.tags), i = n.length > 0 ? `|#${n.map(([l, g]) => `${l}:${g}`).join(",")}` : "";
    e += `${r.name}@${r.unit}:${r.metric}|${r.metricType}${i}|T${r.timestamp}
`;
  }
  return e;
}
function Vw(t, e, r, n) {
  const i = {
    sent_at: (/* @__PURE__ */ new Date()).toISOString()
  };
  r && r.sdk && (i.sdk = {
    name: r.sdk.name,
    version: r.sdk.version
  }), n && e && (i.dsn = _s(e));
  const l = Hw(t);
  return _i(i, [l]);
}
function Hw(t) {
  const e = $w(t);
  return [{
    type: "statsd",
    length: e.length
  }, e];
}
const Vh = "Not capturing exception because it's already been captured.";
class Uw {
  /**
   * A reference to a metrics aggregator
   *
   * @experimental Note this is alpha API. It may experience breaking changes in the future.
   */
  /** Options passed to the SDK. */
  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */
  /** Array of set up integrations. */
  /** Indicates whether this client's integrations have been set up. */
  /** Number of calls being processed */
  /** Holds flushable  */
  // eslint-disable-next-line @typescript-eslint/ban-types
  /**
   * Initializes this client instance.
   *
   * @param options Options for the client.
   */
  constructor(e) {
    if (this._options = e, this._integrations = {}, this._integrationsInitialized = !1, this._numProcessing = 0, this._outcomes = {}, this._hooks = {}, this._eventProcessors = [], e.dsn ? this._dsn = n1(e.dsn) : $e && Te.warn("No DSN provided, client will not send events."), this._dsn) {
      const r = Lw(this._dsn, e);
      this._transport = e.transport({
        tunnel: this._options.tunnel,
        recordDroppedEvent: this.recordDroppedEvent.bind(this),
        ...e.transportOptions,
        url: r
      });
    }
  }
  /**
   * @inheritDoc
   */
  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types
  captureException(e, r, n) {
    if (Oh(e)) {
      $e && Te.log(Vh);
      return;
    }
    let i = r && r.event_id;
    return this._process(
      this.eventFromException(e, r).then((l) => this._captureEvent(l, r, n)).then((l) => {
        i = l;
      })
    ), i;
  }
  /**
   * @inheritDoc
   */
  captureMessage(e, r, n, i) {
    let l = n && n.event_id;
    const g = Zc(e) ? e : String(e), a = Qc(e) ? this.eventFromMessage(g, r, n) : this.eventFromException(e, n);
    return this._process(
      a.then((s) => this._captureEvent(s, n, i)).then((s) => {
        l = s;
      })
    ), l;
  }
  /**
   * @inheritDoc
   */
  captureEvent(e, r, n) {
    if (r && r.originalException && Oh(r.originalException)) {
      $e && Te.log(Vh);
      return;
    }
    let i = r && r.event_id;
    const g = (e.sdkProcessingMetadata || {}).capturedSpanScope;
    return this._process(
      this._captureEvent(e, r, g || n).then((a) => {
        i = a;
      })
    ), i;
  }
  /**
   * @inheritDoc
   */
  captureSession(e) {
    typeof e.release != "string" ? $e && Te.warn("Discarded session because of missing or non-string release") : (this.sendSession(e), Cn(e, { init: !1 }));
  }
  /**
   * @inheritDoc
   */
  getDsn() {
    return this._dsn;
  }
  /**
   * @inheritDoc
   */
  getOptions() {
    return this._options;
  }
  /**
   * @see SdkMetadata in @sentry/types
   *
   * @return The metadata of the SDK
   */
  getSdkMetadata() {
    return this._options._metadata;
  }
  /**
   * @inheritDoc
   */
  getTransport() {
    return this._transport;
  }
  /**
   * @inheritDoc
   */
  flush(e) {
    const r = this._transport;
    return r ? (this.metricsAggregator && this.metricsAggregator.flush(), this._isClientDoneProcessing(e).then((n) => r.flush(e).then((i) => n && i))) : hi(!0);
  }
  /**
   * @inheritDoc
   */
  close(e) {
    return this.flush(e).then((r) => (this.getOptions().enabled = !1, this.metricsAggregator && this.metricsAggregator.close(), r));
  }
  /** Get all installed event processors. */
  getEventProcessors() {
    return this._eventProcessors;
  }
  /** @inheritDoc */
  addEventProcessor(e) {
    this._eventProcessors.push(e);
  }
  /**
   * This is an internal function to setup all integrations that should run on the client.
   * @deprecated Use `client.init()` instead.
   */
  setupIntegrations(e) {
    (e && !this._integrationsInitialized || this._isEnabled() && !this._integrationsInitialized) && this._setupIntegrations();
  }
  /** @inheritdoc */
  init() {
    this._isEnabled() && this._setupIntegrations();
  }
  /**
   * Gets an installed integration by its `id`.
   *
   * @returns The installed integration or `undefined` if no integration with that `id` was installed.
   * @deprecated Use `getIntegrationByName()` instead.
   */
  getIntegrationById(e) {
    return this.getIntegrationByName(e);
  }
  /**
   * Gets an installed integration by its name.
   *
   * @returns The installed integration or `undefined` if no integration with that `name` was installed.
   */
  getIntegrationByName(e) {
    return this._integrations[e];
  }
  /**
   * Returns the client's instance of the given integration class, it any.
   * @deprecated Use `getIntegrationByName()` instead.
   */
  getIntegration(e) {
    try {
      return this._integrations[e.id] || null;
    } catch {
      return $e && Te.warn(`Cannot retrieve integration ${e.id} from the current Client`), null;
    }
  }
  /**
   * @inheritDoc
   */
  addIntegration(e) {
    const r = this._integrations[e.name];
    bg(this, e, this._integrations), r || $h(this, [e]);
  }
  /**
   * @inheritDoc
   */
  sendEvent(e, r = {}) {
    this.emit("beforeSendEvent", e, r);
    let n = Pw(e, this._dsn, this._options._metadata, this._options.tunnel);
    for (const l of r.attachments || [])
      n = $1(
        n,
        U1(
          l,
          this._options.transportOptions && this._options.transportOptions.textEncoder
        )
      );
    const i = this._sendEnvelope(n);
    i && i.then((l) => this.emit("afterSendEvent", e, l), null);
  }
  /**
   * @inheritDoc
   */
  sendSession(e) {
    const r = Dw(e, this._dsn, this._options._metadata, this._options.tunnel);
    this._sendEnvelope(r);
  }
  /**
   * @inheritDoc
   */
  recordDroppedEvent(e, r, n) {
    if (this._options.sendClientReports) {
      const i = `${e}:${r}`;
      $e && Te.log(`Adding outcome: "${i}"`), this._outcomes[i] = this._outcomes[i] + 1 || 1;
    }
  }
  /**
   * @inheritDoc
   */
  captureAggregateMetrics(e) {
    $e && Te.log(`Flushing aggregated metrics, number of metrics: ${e.length}`);
    const r = Vw(
      e,
      this._dsn,
      this._options._metadata,
      this._options.tunnel
    );
    this._sendEnvelope(r);
  }
  // Keep on() & emit() signatures in sync with types' client.ts interface
  /* eslint-disable @typescript-eslint/unified-signatures */
  /** @inheritdoc */
  /** @inheritdoc */
  on(e, r) {
    this._hooks[e] || (this._hooks[e] = []), this._hooks[e].push(r);
  }
  /** @inheritdoc */
  /** @inheritdoc */
  emit(e, ...r) {
    this._hooks[e] && this._hooks[e].forEach((n) => n(...r));
  }
  /* eslint-enable @typescript-eslint/unified-signatures */
  /** Setup integrations for this client. */
  _setupIntegrations() {
    const { integrations: e } = this._options;
    this._integrations = Nw(this, e), $h(this, e), this._integrationsInitialized = !0;
  }
  /** Updates existing session based on the provided event */
  _updateSessionFromEvent(e, r) {
    let n = !1, i = !1;
    const l = r.exception && r.exception.values;
    if (l) {
      i = !0;
      for (const s of l) {
        const c = s.mechanism;
        if (c && c.handled === !1) {
          n = !0;
          break;
        }
      }
    }
    const g = e.status === "ok";
    (g && e.errors === 0 || g && n) && (Cn(e, {
      ...n && { status: "crashed" },
      errors: e.errors || Number(i || n)
    }), this.captureSession(e));
  }
  /**
   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying
   * "no" (resolving to `false`) in order to give the client a chance to potentially finish first.
   *
   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not
   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to
   * `true`.
   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and
   * `false` otherwise
   */
  _isClientDoneProcessing(e) {
    return new St((r) => {
      let n = 0;
      const i = 1, l = setInterval(() => {
        this._numProcessing == 0 ? (clearInterval(l), r(!0)) : (n += i, e && n >= e && (clearInterval(l), r(!1)));
      }, i);
    });
  }
  /** Determines whether this SDK is enabled and a transport is present. */
  _isEnabled() {
    return this.getOptions().enabled !== !1 && this._transport !== void 0;
  }
  /**
   * Adds common information to events.
   *
   * The information includes release and environment from `options`,
   * breadcrumbs and context (extra, tags and user) from the scope.
   *
   * Information that is already present in the event is never overwritten. For
   * nested objects, such as the context, keys are merged.
   *
   * @param event The original event.
   * @param hint May contain additional information about the original exception.
   * @param scope A scope containing event metadata.
   * @returns A new event with more information.
   */
  _prepareEvent(e, r, n, i = na()) {
    const l = this.getOptions(), g = Object.keys(this._integrations);
    return !r.integrations && g.length > 0 && (r.integrations = g), this.emit("preprocessEvent", e, r), sw(l, e, r, n, this, i).then((a) => {
      if (a === null)
        return a;
      const s = {
        ...i.getPropagationContext(),
        ...n ? n.getPropagationContext() : void 0
      };
      if (!(a.contexts && a.contexts.trace) && s) {
        const { traceId: f, spanId: o, parentSpanId: h, dsc: u } = s;
        a.contexts = {
          trace: {
            trace_id: f,
            span_id: o,
            parent_span_id: h
          },
          ...a.contexts
        };
        const d = u || dg(f, this, n);
        a.sdkProcessingMetadata = {
          dynamicSamplingContext: d,
          ...a.sdkProcessingMetadata
        };
      }
      return a;
    });
  }
  /**
   * Processes the event and logs an error in case of rejection
   * @param event
   * @param hint
   * @param scope
   */
  _captureEvent(e, r = {}, n) {
    return this._processEvent(e, r, n).then(
      (i) => i.event_id,
      (i) => {
        if ($e) {
          const l = i;
          l.logLevel === "log" ? Te.log(l.message) : Te.warn(l);
        }
      }
    );
  }
  /**
   * Processes an event (either error or message) and sends it to Sentry.
   *
   * This also adds breadcrumbs and context information to the event. However,
   * platform specific meta data (such as the User's IP address) must be added
   * by the SDK implementor.
   *
   *
   * @param event The event to send to Sentry.
   * @param hint May contain additional information about the original exception.
   * @param scope A scope containing event metadata.
   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.
   */
  _processEvent(e, r, n) {
    const i = this.getOptions(), { sampleRate: l } = i, g = wg(e), a = yg(e), s = e.type || "error", c = `before send for type \`${s}\``;
    if (a && typeof l == "number" && Math.random() > l)
      return this.recordDroppedEvent("sample_rate", "error", e), nu(
        new rr(
          `Discarding event because it's not included in the random sample (sampling rate = ${l})`,
          "log"
        )
      );
    const f = s === "replay_event" ? "replay" : s, h = (e.sdkProcessingMetadata || {}).capturedSpanIsolationScope;
    return this._prepareEvent(e, r, n, h).then((u) => {
      if (u === null)
        throw this.recordDroppedEvent("event_processor", f, e), new rr("An event processor returned `null`, will not send event.", "log");
      if (r.data && r.data.__sentry__ === !0)
        return u;
      const m = Xw(i, u, r);
      return Ww(m, c);
    }).then((u) => {
      if (u === null)
        throw this.recordDroppedEvent("before_send", f, e), new rr(`${c} returned \`null\`, will not send event.`, "log");
      const d = n && n.getSession();
      !g && d && this._updateSessionFromEvent(d, u);
      const m = u.transaction_info;
      if (g && m && u.transaction !== e.transaction) {
        const p = "custom";
        u.transaction_info = {
          ...m,
          source: p
        };
      }
      return this.sendEvent(u, r), u;
    }).then(null, (u) => {
      throw u instanceof rr ? u : (this.captureException(u, {
        data: {
          __sentry__: !0
        },
        originalException: u
      }), new rr(
        `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.
Reason: ${u}`
      ));
    });
  }
  /**
   * Occupies the client with processing and event
   */
  _process(e) {
    this._numProcessing++, e.then(
      (r) => (this._numProcessing--, r),
      (r) => (this._numProcessing--, r)
    );
  }
  /**
   * @inheritdoc
   */
  _sendEnvelope(e) {
    if (this.emit("beforeEnvelope", e), this._isEnabled() && this._transport)
      return this._transport.send(e).then(null, (r) => {
        $e && Te.error("Error while sending event:", r);
      });
    $e && Te.error("Transport disabled");
  }
  /**
   * Clears outcomes on this client and returns them.
   */
  _clearOutcomes() {
    const e = this._outcomes;
    return this._outcomes = {}, Object.keys(e).map((r) => {
      const [n, i] = r.split(":");
      return {
        reason: n,
        category: i,
        quantity: e[r]
      };
    });
  }
  /**
   * @inheritDoc
   */
  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types
}
function Ww(t, e) {
  const r = `${e} must return \`null\` or a valid event.`;
  if (Zo(t))
    return t.then(
      (n) => {
        if (!ui(n) && n !== null)
          throw new rr(r);
        return n;
      },
      (n) => {
        throw new rr(`${e} rejected with ${n}`);
      }
    );
  if (!ui(t) && t !== null)
    throw new rr(r);
  return t;
}
function Xw(t, e, r) {
  const { beforeSend: n, beforeSendTransaction: i } = t;
  return yg(e) && n ? n(e, r) : wg(e) && i ? i(e, r) : e;
}
function yg(t) {
  return t.type === void 0;
}
function wg(t) {
  return t.type === "transaction";
}
function Yw(t, e) {
  e.debug === !0 && ($e ? Te.enable() : ea(() => {
    console.warn("[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.");
  })), Ts().update(e.initialScope);
  const n = new t(e);
  Gw(n), qw(n);
}
function Gw(t) {
  const r = _r().getStackTop();
  r.client = t, r.scope.setClient(t);
}
function qw(t) {
  t.init ? t.init() : t.setupIntegrations && t.setupIntegrations();
}
const Kw = 30;
function xg(t, e, r = B1(
  t.bufferSize || Kw
)) {
  let n = {};
  const i = (g) => r.drain(g);
  function l(g) {
    const a = [];
    if (Mh(g, (o, h) => {
      const u = Fh(h);
      if (J1(n, u)) {
        const d = Hh(o, h);
        t.recordDroppedEvent("ratelimit_backoff", u, d);
      } else
        a.push(o);
    }), a.length === 0)
      return hi();
    const s = _i(g[0], a), c = (o) => {
      Mh(s, (h, u) => {
        const d = Hh(h, u);
        t.recordDroppedEvent(o, Fh(u), d);
      });
    }, f = () => e({ body: V1(s, t.textEncoder) }).then(
      (o) => (o.statusCode !== void 0 && (o.statusCode < 200 || o.statusCode >= 300) && $e && Te.warn(`Sentry responded with status code ${o.statusCode} to sent event.`), n = Z1(n, o), o),
      (o) => {
        throw c("network_error"), o;
      }
    );
    return r.add(f).then(
      (o) => o,
      (o) => {
        if (o instanceof rr)
          return $e && Te.error("Skipped sending event because buffer is full."), c("queue_overflow"), hi();
        throw o;
      }
    );
  }
  return l.__sentry__baseTransport__ = !0, {
    send: l,
    flush: i
  };
}
function Hh(t, e) {
  if (!(e !== "event" && e !== "transaction"))
    return Array.isArray(t) ? t[1] : void 0;
}
function Cg(t, e, r = [e], n = "npm") {
  const i = t._metadata || {};
  i.sdk || (i.sdk = {
    name: `sentry.javascript.${e}`,
    packages: r.map((l) => ({
      name: `${n}:@sentry/${l}`,
      version: Ul
    })),
    version: Ul
  }), t._metadata = i;
}
const Jw = [
  /^Script error\.?$/,
  /^Javascript error: Script error\.? on line 0$/,
  /^ResizeObserver loop completed with undelivered notifications.$/,
  /^Cannot redefine property: googletag$/
], Zw = [
  /^.*\/healthcheck$/,
  /^.*\/healthy$/,
  /^.*\/live$/,
  /^.*\/ready$/,
  /^.*\/heartbeat$/,
  /^.*\/health$/,
  /^.*\/healthz$/
], _g = "InboundFilters", Qw = (t = {}) => ({
  name: _g,
  // TODO v8: Remove this
  setupOnce() {
  },
  // eslint-disable-line @typescript-eslint/no-empty-function
  processEvent(e, r, n) {
    const i = n.getOptions(), l = ex(t, i);
    return tx(e, l) ? null : e;
  }
}), Sg = Qw;
en(
  _g,
  Sg
);
function ex(t = {}, e = {}) {
  return {
    allowUrls: [...t.allowUrls || [], ...e.allowUrls || []],
    denyUrls: [...t.denyUrls || [], ...e.denyUrls || []],
    ignoreErrors: [
      ...t.ignoreErrors || [],
      ...e.ignoreErrors || [],
      ...t.disableErrorDefaults ? [] : Jw
    ],
    ignoreTransactions: [
      ...t.ignoreTransactions || [],
      ...e.ignoreTransactions || [],
      ...t.disableTransactionDefaults ? [] : Zw
    ],
    ignoreInternal: t.ignoreInternal !== void 0 ? t.ignoreInternal : !0
  };
}
function tx(t, e) {
  return e.ignoreInternal && ax(t) ? ($e && Te.warn(`Event dropped due to being internal Sentry Error.
Event: ${Fr(t)}`), !0) : rx(t, e.ignoreErrors) ? ($e && Te.warn(
    `Event dropped due to being matched by \`ignoreErrors\` option.
Event: ${Fr(t)}`
  ), !0) : nx(t, e.ignoreTransactions) ? ($e && Te.warn(
    `Event dropped due to being matched by \`ignoreTransactions\` option.
Event: ${Fr(t)}`
  ), !0) : ix(t, e.denyUrls) ? ($e && Te.warn(
    `Event dropped due to being matched by \`denyUrls\` option.
Event: ${Fr(
      t
    )}.
Url: ${yo(t)}`
  ), !0) : sx(t, e.allowUrls) ? !1 : ($e && Te.warn(
    `Event dropped due to not being matched by \`allowUrls\` option.
Event: ${Fr(
      t
    )}.
Url: ${yo(t)}`
  ), !0);
}
function rx(t, e) {
  return t.type || !e || !e.length ? !1 : ox(t).some((r) => Qo(r, e));
}
function nx(t, e) {
  if (t.type !== "transaction" || !e || !e.length)
    return !1;
  const r = t.transaction;
  return r ? Qo(r, e) : !1;
}
function ix(t, e) {
  if (!e || !e.length)
    return !1;
  const r = yo(t);
  return r ? Qo(r, e) : !1;
}
function sx(t, e) {
  if (!e || !e.length)
    return !0;
  const r = yo(t);
  return r ? Qo(r, e) : !0;
}
function ox(t) {
  const e = [];
  t.message && e.push(t.message);
  let r;
  try {
    r = t.exception.values[t.exception.values.length - 1];
  } catch {
  }
  return r && r.value && (e.push(r.value), r.type && e.push(`${r.type}: ${r.value}`)), $e && e.length === 0 && Te.error(`Could not extract message for event ${Fr(t)}`), e;
}
function ax(t) {
  try {
    return t.exception.values[0].type === "SentryError";
  } catch {
  }
  return !1;
}
function lx(t = []) {
  for (let e = t.length - 1; e >= 0; e--) {
    const r = t[e];
    if (r && r.filename !== "<anonymous>" && r.filename !== "[native code]")
      return r.filename || null;
  }
  return null;
}
function yo(t) {
  try {
    let e;
    try {
      e = t.exception.values[0].stacktrace.frames;
    } catch {
    }
    return e ? lx(e) : null;
  } catch {
    return $e && Te.error(`Cannot extract url for event ${Fr(t)}`), null;
  }
}
let Uh;
const Tg = "FunctionToString", Wh = /* @__PURE__ */ new WeakMap(), cx = () => ({
  name: Tg,
  setupOnce() {
    Uh = Function.prototype.toString;
    try {
      Function.prototype.toString = function(...t) {
        const e = ru(this), r = Wh.has(Ct()) && e !== void 0 ? e : this;
        return Uh.apply(r, t);
      };
    } catch {
    }
  },
  setup(t) {
    Wh.set(t, !0);
  }
}), Eg = cx;
en(
  Tg,
  Eg
);
const Ne = Ie;
let Xl = 0;
function kg() {
  return Xl > 0;
}
function ux() {
  Xl++, setTimeout(() => {
    Xl--;
  });
}
function fi(t, e = {}, r) {
  if (typeof t != "function")
    return t;
  try {
    const i = t.__sentry_wrapped__;
    if (i)
      return i;
    if (ru(t))
      return t;
  } catch {
    return t;
  }
  const n = function() {
    const i = Array.prototype.slice.call(arguments);
    try {
      r && typeof r == "function" && r.apply(this, arguments);
      const l = i.map((g) => fi(g, e));
      return t.apply(this, l);
    } catch (l) {
      throw ux(), vw((g) => {
        g.addEventProcessor((a) => (e.mechanism && (Ll(a, void 0, void 0), rs(a, e.mechanism)), a.extra = {
          ...a.extra,
          arguments: i
        }, a)), mw(l);
      }), l;
    }
  };
  try {
    for (const i in t)
      Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
  } catch {
  }
  qp(n, t), ts(t, "__sentry_wrapped__", n);
  try {
    Object.getOwnPropertyDescriptor(n, "name").configurable && Object.defineProperty(n, "name", {
      get() {
        return t.name;
      }
    });
  } catch {
  }
  return n;
}
const fr = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__;
function Og(t, e) {
  const r = su(t, e), n = {
    type: e && e.name,
    value: px(e)
  };
  return r.length && (n.stacktrace = { frames: r }), n.type === void 0 && n.value === "" && (n.value = "Unrecoverable error caught"), n;
}
function hx(t, e, r, n) {
  const i = Ct(), l = i && i.getOptions().normalizeDepth, g = {
    exception: {
      values: [
        {
          type: Jo(e) ? e.constructor.name : n ? "UnhandledRejection" : "Error",
          value: vx(e, { isUnhandledRejection: n })
        }
      ]
    },
    extra: {
      __serialized__: ng(e, l)
    }
  };
  if (r) {
    const a = su(t, r);
    a.length && (g.exception.values[0].stacktrace = { frames: a });
  }
  return g;
}
function Ga(t, e) {
  return {
    exception: {
      values: [Og(t, e)]
    }
  };
}
function su(t, e) {
  const r = e.stacktrace || e.stack || "", n = dx(e);
  try {
    return t(r, n);
  } catch {
  }
  return [];
}
const fx = /Minified React error #\d+;/i;
function dx(t) {
  if (t) {
    if (typeof t.framesToPop == "number")
      return t.framesToPop;
    if (fx.test(t.message))
      return 1;
  }
  return 0;
}
function px(t) {
  const e = t && t.message;
  return e ? e.error && typeof e.error.message == "string" ? e.error.message : e : "No error message";
}
function gx(t, e, r, n) {
  const i = r && r.syntheticException || void 0, l = ou(t, e, i, n);
  return rs(l), l.level = "error", r && r.event_id && (l.event_id = r.event_id), hi(l);
}
function mx(t, e, r = "info", n, i) {
  const l = n && n.syntheticException || void 0, g = Yl(t, e, l, i);
  return g.level = r, n && n.event_id && (g.event_id = n.event_id), hi(g);
}
function ou(t, e, r, n, i) {
  let l;
  if (Jc(e) && e.error)
    return Ga(t, e.error);
  if (yh(e) || Ny(e)) {
    const g = e;
    if ("stack" in e)
      l = Ga(t, e);
    else {
      const a = g.name || (yh(g) ? "DOMError" : "DOMException"), s = g.message ? `${a}: ${g.message}` : a;
      l = Yl(t, s, r, n), Ll(l, s);
    }
    return "code" in g && (l.tags = { ...l.tags, "DOMException.code": `${g.code}` }), l;
  }
  return Up(e) ? Ga(t, e) : ui(e) || Jo(e) ? (l = hx(t, e, r, i), rs(l, {
    synthetic: !0
  }), l) : (l = Yl(t, e, r, n), Ll(l, `${e}`, void 0), rs(l, {
    synthetic: !0
  }), l);
}
function Yl(t, e, r, n) {
  const i = {};
  if (n && r) {
    const l = su(t, r);
    l.length && (i.exception = {
      values: [{ value: e, stacktrace: { frames: l } }]
    });
  }
  if (Zc(e)) {
    const { __sentry_template_string__: l, __sentry_template_values__: g } = e;
    return i.logentry = {
      message: l,
      params: g
    }, i;
  }
  return i.message = e, i;
}
function vx(t, { isUnhandledRejection: e }) {
  const r = s1(t), n = e ? "promise rejection" : "exception";
  return Jc(t) ? `Event \`ErrorEvent\` captured as ${n} with message \`${t.message}\`` : Jo(t) ? `Event \`${bx(t)}\` (type=${t.type}) captured as ${n}` : `Object captured as ${n} with keys: ${r}`;
}
function bx(t) {
  try {
    const e = Object.getPrototypeOf(t);
    return e ? e.constructor.name : void 0;
  } catch {
  }
}
function yx(t, {
  metadata: e,
  tunnel: r,
  dsn: n
}) {
  const i = {
    event_id: t.event_id,
    sent_at: (/* @__PURE__ */ new Date()).toISOString(),
    ...e && e.sdk && {
      sdk: {
        name: e.sdk.name,
        version: e.sdk.version
      }
    },
    ...!!r && !!n && { dsn: _s(n) }
  }, l = wx(t);
  return _i(i, [l]);
}
function wx(t) {
  return [{
    type: "user_report"
  }, t];
}
class xx extends Uw {
  /**
   * Creates a new Browser SDK instance.
   *
   * @param options Configuration options for this SDK.
   */
  constructor(e) {
    const r = Ne.SENTRY_SDK_SOURCE || P1();
    Cg(e, "browser", ["browser"], r), super(e), e.sendClientReports && Ne.document && Ne.document.addEventListener("visibilitychange", () => {
      Ne.document.visibilityState === "hidden" && this._flushOutcomes();
    });
  }
  /**
   * @inheritDoc
   */
  eventFromException(e, r) {
    return gx(this._options.stackParser, e, r, this._options.attachStacktrace);
  }
  /**
   * @inheritDoc
   */
  eventFromMessage(e, r = "info", n) {
    return mx(this._options.stackParser, e, r, n, this._options.attachStacktrace);
  }
  /**
   * Sends user feedback to Sentry.
   */
  captureUserFeedback(e) {
    if (!this._isEnabled()) {
      fr && Te.warn("SDK not enabled, will not capture user feedback.");
      return;
    }
    const r = yx(e, {
      metadata: this.getSdkMetadata(),
      dsn: this.getDsn(),
      tunnel: this.getOptions().tunnel
    });
    this._sendEnvelope(r);
  }
  /**
   * @inheritDoc
   */
  _prepareEvent(e, r, n) {
    return e.platform = e.platform || "javascript", super._prepareEvent(e, r, n);
  }
  /**
   * Sends client reports as an envelope.
   */
  _flushOutcomes() {
    const e = this._clearOutcomes();
    if (e.length === 0) {
      fr && Te.log("No outcomes to send");
      return;
    }
    if (!this._dsn) {
      fr && Te.log("No dsn provided, will not send outcomes");
      return;
    }
    fr && Te.log("Sending outcomes:", e);
    const r = Y1(e, this._options.tunnel && _s(this._dsn));
    this._sendEnvelope(r);
  }
}
let Ui;
function Cx() {
  if (Ui)
    return Ui;
  if (jl(Ne.fetch))
    return Ui = Ne.fetch.bind(Ne);
  const t = Ne.document;
  let e = Ne.fetch;
  if (t && typeof t.createElement == "function")
    try {
      const r = t.createElement("iframe");
      r.hidden = !0, t.head.appendChild(r);
      const n = r.contentWindow;
      n && n.fetch && (e = n.fetch), t.head.removeChild(r);
    } catch (r) {
      fr && Te.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ", r);
    }
  return Ui = e.bind(Ne);
}
function _x() {
  Ui = void 0;
}
function Sx(t, e = Cx()) {
  let r = 0, n = 0;
  function i(l) {
    const g = l.body.length;
    r += g, n++;
    const a = {
      body: l.body,
      method: "POST",
      referrerPolicy: "origin",
      headers: t.headers,
      // Outgoing requests are usually cancelled when navigating to a different page, causing a "TypeError: Failed to
      // fetch" error and sending a "network_error" client-outcome - in Chrome, the request status shows "(cancelled)".
      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're
      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).
      // Gotchas:
      // - `keepalive` isn't supported by Firefox
      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):
      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.
      //   We will therefore only activate the flag when we're below that limit.
      // There is also a limit of requests that can be open at the same time, so we also limit this to 15
      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details
      keepalive: r <= 6e4 && n < 15,
      ...t.fetchOptions
    };
    try {
      return e(t.url, a).then((s) => (r -= g, n--, {
        statusCode: s.status,
        headers: {
          "x-sentry-rate-limits": s.headers.get("X-Sentry-Rate-Limits"),
          "retry-after": s.headers.get("Retry-After")
        }
      }));
    } catch (s) {
      return _x(), r -= g, n--, nu(s);
    }
  }
  return xg(t, i);
}
const Tx = 4;
function Ex(t) {
  function e(r) {
    return new St((n, i) => {
      const l = new XMLHttpRequest();
      l.onerror = i, l.onreadystatechange = () => {
        l.readyState === Tx && n({
          statusCode: l.status,
          headers: {
            "x-sentry-rate-limits": l.getResponseHeader("X-Sentry-Rate-Limits"),
            "retry-after": l.getResponseHeader("Retry-After")
          }
        });
      }, l.open("POST", t.url);
      for (const g in t.headers)
        Object.prototype.hasOwnProperty.call(t.headers, g) && l.setRequestHeader(g, t.headers[g]);
      l.send(r.body);
    });
  }
  return xg(t, e);
}
const ia = "?", kx = 30, Ox = 40, Ax = 50;
function au(t, e, r, n) {
  const i = {
    filename: t,
    function: e,
    in_app: !0
    // All browser frames are considered in_app
  };
  return r !== void 0 && (i.lineno = r), n !== void 0 && (i.colno = n), i;
}
const Dx = /^\s*at (?:(.+?\)(?: \[.+\])?|.*?) ?\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\/)?.*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i, Px = /\((\S*)(?::(\d+))(?::(\d+))\)/, Mx = (t) => {
  const e = Dx.exec(t);
  if (e) {
    if (e[2] && e[2].indexOf("eval") === 0) {
      const l = Px.exec(e[2]);
      l && (e[2] = l[1], e[3] = l[2], e[4] = l[3]);
    }
    const [n, i] = Ag(e[1] || ia, e[2]);
    return au(i, n, e[3] ? +e[3] : void 0, e[4] ? +e[4] : void 0);
  }
}, Fx = [kx, Mx], Rx = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:[-a-z]+)?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i, Ix = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i, Lx = (t) => {
  const e = Rx.exec(t);
  if (e) {
    if (e[3] && e[3].indexOf(" > eval") > -1) {
      const l = Ix.exec(e[3]);
      l && (e[1] = e[1] || "eval", e[3] = l[1], e[4] = l[2], e[5] = "");
    }
    let n = e[3], i = e[1] || ia;
    return [i, n] = Ag(i, n), au(n, i, e[4] ? +e[4] : void 0, e[5] ? +e[5] : void 0);
  }
}, Bx = [Ax, Lx], zx = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:[-a-z]+):.*?):(\d+)(?::(\d+))?\)?\s*$/i, Nx = (t) => {
  const e = zx.exec(t);
  return e ? au(e[2], e[1] || ia, +e[3], e[4] ? +e[4] : void 0) : void 0;
}, jx = [Ox, Nx], $x = [Fx, Bx, jx], Vx = Zp(...$x), Ag = (t, e) => {
  const r = t.indexOf("safari-extension") !== -1, n = t.indexOf("safari-web-extension") !== -1;
  return r || n ? [
    t.indexOf("@") !== -1 ? t.split("@")[0] : ia,
    r ? `safari-extension:${e}` : `safari-web-extension:${e}`
  ] : [t, e];
}, Gs = 1024, Dg = "Breadcrumbs", Hx = (t = {}) => {
  const e = {
    console: !0,
    dom: !0,
    fetch: !0,
    history: !0,
    sentry: !0,
    xhr: !0,
    ...t
  };
  return {
    name: Dg,
    // TODO v8: Remove this
    setupOnce() {
    },
    // eslint-disable-line @typescript-eslint/no-empty-function
    setup(r) {
      e.console && c1(Xx(r)), e.dom && f1(Wx(r, e.dom)), e.xhr && O1(Yx(r)), e.fetch && b1(Gx(r)), e.history && rg(qx(r)), e.sentry && r.on && r.on("beforeSendEvent", Ux(r));
    }
  };
}, Pg = Hx;
en(Dg, Pg);
function Ux(t) {
  return function(r) {
    Ct() === t && _n(
      {
        category: `sentry.${r.type === "transaction" ? "transaction" : "event"}`,
        event_id: r.event_id,
        level: r.level,
        message: Fr(r)
      },
      {
        event: r
      }
    );
  };
}
function Wx(t, e) {
  return function(n) {
    if (Ct() !== t)
      return;
    let i, l, g = typeof e == "object" ? e.serializeAttribute : void 0, a = typeof e == "object" && typeof e.maxStringLength == "number" ? e.maxStringLength : void 0;
    a && a > Gs && (fr && Te.warn(
      `\`dom.maxStringLength\` cannot exceed ${Gs}, but a value of ${a} was configured. Sentry will use ${Gs} instead.`
    ), a = Gs), typeof g == "string" && (g = [g]);
    try {
      const c = n.event, f = Kx(c) ? c.target : c;
      i = Yp(f, { keyAttrs: g, maxStringLength: a }), l = Ky(f);
    } catch {
      i = "<unknown>";
    }
    if (i.length === 0)
      return;
    const s = {
      category: `ui.${n.name}`,
      message: i
    };
    l && (s.data = { "ui.component_name": l }), _n(s, {
      event: n.event,
      name: n.name,
      global: n.global
    });
  };
}
function Xx(t) {
  return function(r) {
    if (Ct() !== t)
      return;
    const n = {
      category: "console",
      data: {
        arguments: r.args,
        logger: "console"
      },
      level: N1(r.level),
      message: wh(r.args, " ")
    };
    if (r.level === "assert")
      if (r.args[0] === !1)
        n.message = `Assertion failed: ${wh(r.args.slice(1), " ") || "console.assert"}`, n.data.arguments = r.args.slice(1);
      else
        return;
    _n(n, {
      input: r.args,
      level: r.level
    });
  };
}
function Yx(t) {
  return function(r) {
    if (Ct() !== t)
      return;
    const { startTimestamp: n, endTimestamp: i } = r, l = r.xhr[Hi];
    if (!n || !i || !l)
      return;
    const { method: g, url: a, status_code: s, body: c } = l, f = {
      method: g,
      url: a,
      status_code: s
    }, o = {
      xhr: r.xhr,
      input: c,
      startTimestamp: n,
      endTimestamp: i
    };
    _n(
      {
        category: "xhr",
        data: f,
        type: "http"
      },
      o
    );
  };
}
function Gx(t) {
  return function(r) {
    if (Ct() !== t)
      return;
    const { startTimestamp: n, endTimestamp: i } = r;
    if (i && !(r.fetchData.url.match(/sentry_key/) && r.fetchData.method === "POST"))
      if (r.error) {
        const l = r.fetchData, g = {
          data: r.error,
          input: r.args,
          startTimestamp: n,
          endTimestamp: i
        };
        _n(
          {
            category: "fetch",
            data: l,
            level: "error",
            type: "http"
          },
          g
        );
      } else {
        const l = r.response, g = {
          ...r.fetchData,
          status_code: l && l.status
        }, a = {
          input: r.args,
          response: l,
          startTimestamp: n,
          endTimestamp: i
        };
        _n(
          {
            category: "fetch",
            data: g,
            type: "http"
          },
          a
        );
      }
  };
}
function qx(t) {
  return function(r) {
    if (Ct() !== t)
      return;
    let n = r.from, i = r.to;
    const l = Xa(Ne.location.href);
    let g = n ? Xa(n) : void 0;
    const a = Xa(i);
    (!g || !g.path) && (g = l), l.protocol === a.protocol && l.host === a.host && (i = a.relative), l.protocol === g.protocol && l.host === g.host && (n = g.relative), _n({
      category: "navigation",
      data: {
        from: n,
        to: i
      }
    });
  };
}
function Kx(t) {
  return !!t && !!t.target;
}
const Mg = "Dedupe", Jx = () => {
  let t;
  return {
    name: Mg,
    // TODO v8: Remove this
    setupOnce() {
    },
    // eslint-disable-line @typescript-eslint/no-empty-function
    processEvent(e) {
      if (e.type)
        return e;
      try {
        if (Zx(e, t))
          return fr && Te.warn("Event dropped due to being a duplicate of previously captured event."), null;
      } catch {
      }
      return t = e;
    }
  };
}, Fg = Jx;
en(Mg, Fg);
function Zx(t, e) {
  return e ? !!(Qx(t, e) || e2(t, e)) : !1;
}
function Qx(t, e) {
  const r = t.message, n = e.message;
  return !(!r && !n || r && !n || !r && n || r !== n || !Ig(t, e) || !Rg(t, e));
}
function e2(t, e) {
  const r = Xh(e), n = Xh(t);
  return !(!r || !n || r.type !== n.type || r.value !== n.value || !Ig(t, e) || !Rg(t, e));
}
function Rg(t, e) {
  let r = Yh(t), n = Yh(e);
  if (!r && !n)
    return !0;
  if (r && !n || !r && n || (r = r, n = n, n.length !== r.length))
    return !1;
  for (let i = 0; i < n.length; i++) {
    const l = n[i], g = r[i];
    if (l.filename !== g.filename || l.lineno !== g.lineno || l.colno !== g.colno || l.function !== g.function)
      return !1;
  }
  return !0;
}
function Ig(t, e) {
  let r = t.fingerprint, n = e.fingerprint;
  if (!r && !n)
    return !0;
  if (r && !n || !r && n)
    return !1;
  r = r, n = n;
  try {
    return r.join("") === n.join("");
  } catch {
    return !1;
  }
}
function Xh(t) {
  return t.exception && t.exception.values && t.exception.values[0];
}
function Yh(t) {
  const e = t.exception;
  if (e)
    try {
      return e.values[0].stacktrace.frames;
    } catch {
      return;
    }
}
const Lg = "GlobalHandlers", t2 = (t = {}) => {
  const e = {
    onerror: !0,
    onunhandledrejection: !0,
    ...t
  };
  return {
    name: Lg,
    setupOnce() {
      Error.stackTraceLimit = 50;
    },
    setup(r) {
      e.onerror && (r2(r), Gh("onerror")), e.onunhandledrejection && (n2(r), Gh("onunhandledrejection"));
    }
  };
}, Bg = t2;
en(
  Lg,
  Bg
);
function r2(t) {
  x1((e) => {
    const { stackParser: r, attachStacktrace: n } = Ng();
    if (Ct() !== t || kg())
      return;
    const { msg: i, url: l, line: g, column: a, error: s } = e, c = s === void 0 && mr(i) ? o2(i, l, g, a) : zg(
      ou(r, s || i, void 0, n, !1),
      l,
      g,
      a
    );
    c.level = "error", cg(c, {
      originalException: s,
      mechanism: {
        handled: !1,
        type: "onerror"
      }
    });
  });
}
function n2(t) {
  _1((e) => {
    const { stackParser: r, attachStacktrace: n } = Ng();
    if (Ct() !== t || kg())
      return;
    const i = i2(e), l = Qc(i) ? s2(i) : ou(r, i, void 0, n, !0);
    l.level = "error", cg(l, {
      originalException: i,
      mechanism: {
        handled: !1,
        type: "onunhandledrejection"
      }
    });
  });
}
function i2(t) {
  if (Qc(t))
    return t;
  const e = t;
  try {
    if ("reason" in e)
      return e.reason;
    if ("detail" in e && "reason" in e.detail)
      return e.detail.reason;
  } catch {
  }
  return t;
}
function s2(t) {
  return {
    exception: {
      values: [
        {
          type: "UnhandledRejection",
          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)
          value: `Non-Error promise rejection captured with value: ${String(t)}`
        }
      ]
    }
  };
}
function o2(t, e, r, n) {
  const i = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;
  let l = Jc(t) ? t.message : t, g = "Error";
  const a = l.match(i);
  return a && (g = a[1], l = a[2]), zg({
    exception: {
      values: [
        {
          type: g,
          value: l
        }
      ]
    }
  }, e, r, n);
}
function zg(t, e, r, n) {
  const i = t.exception = t.exception || {}, l = i.values = i.values || [], g = l[0] = l[0] || {}, a = g.stacktrace = g.stacktrace || {}, s = a.frames = a.frames || [], c = isNaN(parseInt(n, 10)) ? void 0 : n, f = isNaN(parseInt(r, 10)) ? void 0 : r, o = mr(e) && e.length > 0 ? e : qy();
  return s.length === 0 && s.push({
    colno: c,
    filename: o,
    function: "?",
    in_app: !0,
    lineno: f
  }), t;
}
function Gh(t) {
  fr && Te.log(`Global Handler attached: ${t}`);
}
function Ng() {
  const t = Ct();
  return t && t.getOptions() || {
    stackParser: () => [],
    attachStacktrace: !1
  };
}
const jg = "HttpContext", a2 = () => ({
  name: jg,
  // TODO v8: Remove this
  setupOnce() {
  },
  // eslint-disable-line @typescript-eslint/no-empty-function
  preprocessEvent(t) {
    if (!Ne.navigator && !Ne.location && !Ne.document)
      return;
    const e = t.request && t.request.url || Ne.location && Ne.location.href, { referrer: r } = Ne.document || {}, { userAgent: n } = Ne.navigator || {}, i = {
      ...t.request && t.request.headers,
      ...r && { Referer: r },
      ...n && { "User-Agent": n }
    }, l = { ...t.request, ...e && { url: e }, headers: i };
    t.request = l;
  }
}), $g = a2;
en(jg, $g);
const l2 = "cause", c2 = 5, Vg = "LinkedErrors", u2 = (t = {}) => {
  const e = t.limit || c2, r = t.key || l2;
  return {
    name: Vg,
    // TODO v8: Remove this
    setupOnce() {
    },
    // eslint-disable-line @typescript-eslint/no-empty-function
    preprocessEvent(n, i, l) {
      const g = l.getOptions();
      Wy(
        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function
        Og,
        g.stackParser,
        g.maxValueLength,
        r,
        e,
        n,
        i
      );
    }
  };
}, Hg = u2;
en(Vg, Hg);
const h2 = [
  "EventTarget",
  "Window",
  "Node",
  "ApplicationCache",
  "AudioTrackList",
  "BroadcastChannel",
  "ChannelMergerNode",
  "CryptoOperation",
  "EventSource",
  "FileReader",
  "HTMLUnknownElement",
  "IDBDatabase",
  "IDBRequest",
  "IDBTransaction",
  "KeyOperation",
  "MediaController",
  "MessagePort",
  "ModalWindow",
  "Notification",
  "SVGElementInstance",
  "Screen",
  "SharedWorker",
  "TextTrack",
  "TextTrackCue",
  "TextTrackList",
  "WebSocket",
  "WebSocketWorker",
  "Worker",
  "XMLHttpRequest",
  "XMLHttpRequestEventTarget",
  "XMLHttpRequestUpload"
], Ug = "TryCatch", f2 = (t = {}) => {
  const e = {
    XMLHttpRequest: !0,
    eventTarget: !0,
    requestAnimationFrame: !0,
    setInterval: !0,
    setTimeout: !0,
    ...t
  };
  return {
    name: Ug,
    // TODO: This currently only works for the first client this is setup
    // We may want to adjust this to check for client etc.
    setupOnce() {
      e.setTimeout && nt(Ne, "setTimeout", qh), e.setInterval && nt(Ne, "setInterval", qh), e.requestAnimationFrame && nt(Ne, "requestAnimationFrame", d2), e.XMLHttpRequest && "XMLHttpRequest" in Ne && nt(XMLHttpRequest.prototype, "send", p2);
      const r = e.eventTarget;
      r && (Array.isArray(r) ? r : h2).forEach(g2);
    }
  };
}, Wg = f2;
en(
  Ug,
  Wg
);
function qh(t) {
  return function(...e) {
    const r = e[0];
    return e[0] = fi(r, {
      mechanism: {
        data: { function: Yr(t) },
        handled: !1,
        type: "instrument"
      }
    }), t.apply(this, e);
  };
}
function d2(t) {
  return function(e) {
    return t.apply(this, [
      fi(e, {
        mechanism: {
          data: {
            function: "requestAnimationFrame",
            handler: Yr(t)
          },
          handled: !1,
          type: "instrument"
        }
      })
    ]);
  };
}
function p2(t) {
  return function(...e) {
    const r = this;
    return ["onload", "onerror", "onprogress", "onreadystatechange"].forEach((i) => {
      i in r && typeof r[i] == "function" && nt(r, i, function(l) {
        const g = {
          mechanism: {
            data: {
              function: i,
              handler: Yr(l)
            },
            handled: !1,
            type: "instrument"
          }
        }, a = ru(l);
        return a && (g.mechanism.data.handler = Yr(a)), fi(l, g);
      });
    }), t.apply(this, e);
  };
}
function g2(t) {
  const e = Ne, r = e[t] && e[t].prototype;
  !r || !r.hasOwnProperty || !r.hasOwnProperty("addEventListener") || (nt(r, "addEventListener", function(n) {
    return function(i, l, g) {
      try {
        typeof l.handleEvent == "function" && (l.handleEvent = fi(l.handleEvent, {
          mechanism: {
            data: {
              function: "handleEvent",
              handler: Yr(l),
              target: t
            },
            handled: !1,
            type: "instrument"
          }
        }));
      } catch {
      }
      return n.apply(this, [
        i,
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        fi(l, {
          mechanism: {
            data: {
              function: "addEventListener",
              handler: Yr(l),
              target: t
            },
            handled: !1,
            type: "instrument"
          }
        }),
        g
      ]);
    };
  }), nt(
    r,
    "removeEventListener",
    function(n) {
      return function(i, l, g) {
        const a = l;
        try {
          const s = a && a.__sentry_wrapped__;
          s && n.call(this, i, s, g);
        } catch {
        }
        return n.call(this, i, a, g);
      };
    }
  ));
}
const m2 = [
  Sg(),
  Eg(),
  Wg(),
  Pg(),
  Bg(),
  Hg(),
  Fg(),
  $g()
];
function v2(t) {
  return [
    // eslint-disable-next-line deprecation/deprecation
    ...m2
  ];
}
function b2(t = {}) {
  t.defaultIntegrations === void 0 && (t.defaultIntegrations = v2()), t.release === void 0 && (typeof __SENTRY_RELEASE__ == "string" && (t.release = __SENTRY_RELEASE__), Ne.SENTRY_RELEASE && Ne.SENTRY_RELEASE.id && (t.release = Ne.SENTRY_RELEASE.id)), t.autoSessionTracking === void 0 && (t.autoSessionTracking = !0), t.sendClientReports === void 0 && (t.sendClientReports = !0);
  const e = {
    ...t,
    stackParser: a1(t.stackParser || Vx),
    integrations: zw(t),
    transport: t.transport || (tg() ? Sx : Ex)
  };
  Yw(xx, e), t.autoSessionTracking && y2();
}
function y2() {
  if (typeof Ne.document > "u") {
    fr && Te.warn("Session tracking in non-browser environment with @sentry/browser is not supported.");
    return;
  }
  Ih({ ignoreDuration: !0 }), Lh(), rg(({ from: t, to: e }) => {
    t !== void 0 && t !== e && (Ih({ ignoreDuration: !0 }), Lh());
  });
}
var Wn = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Es(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
}
function w2(t) {
  if (t.__esModule)
    return t;
  var e = t.default;
  if (typeof e == "function") {
    var r = function n() {
      return this instanceof n ? Reflect.construct(e, arguments, this.constructor) : e.apply(this, arguments);
    };
    r.prototype = e.prototype;
  } else
    r = {};
  return Object.defineProperty(r, "__esModule", { value: !0 }), Object.keys(t).forEach(function(n) {
    var i = Object.getOwnPropertyDescriptor(t, n);
    Object.defineProperty(r, n, i.get ? i : {
      enumerable: !0,
      get: function() {
        return t[n];
      }
    });
  }), r;
}
function x2(t) {
  const e = {
    ...t
  };
  Cg(e, "react"), b2(e);
}
var lu = /* @__PURE__ */ ((t) => (t.INLINE = "inline", t.OVERLAY = "overlay", t))(lu || {}), Xg = /* @__PURE__ */ ((t) => (t.TOP = "top", t.BOTTOM = "bottom", t.HIDDEN = "", t))(Xg || {});
const C2 = [
  {
    name: "circle",
    type: "Circle"
  },
  {
    name: "square",
    type: "Rect",
    options: {
      lockUniScaling: !1
    }
  },
  {
    name: "triangle",
    type: "Triangle"
  },
  {
    name: "ellipse",
    type: "Ellipse",
    options: {
      lockUniScaling: !1
    }
  },
  {
    name: "Arrow #1",
    type: "Path",
    options: {
      path: "M 294.9 16.4 l 15.7 42.2 c -171.4 70.3 -294 242.3 -289.1 437.4 l 14.7 -1 c 9.1 -0.6 18.1 -1.2 27.1 -1.9 l 14.7 -1 c -4.3 -170.1 102.5 -320 252 -381.3 l 15.7 42.2 c 34.7 -40.5 83.1 -76.6 144.8 -99.8 c -58.1 -26.2 -124.9 -39.6 -195.6 -36.8 z"
    }
  },
  {
    name: "Arrow #2",
    type: "Path",
    options: {
      path: "M 16 248.4 v 14.9 h 447.5 l -93.2 82.5 l 11.9 10.5 l 113.8 -100.2 l -113.6 -100.4 l -11.8 10.5 l 92.9 82.2 z"
    }
  },
  {
    name: "Arrow #3",
    type: "Path",
    options: {
      path: "M 496 256 l -118.6 -66 v 40.8 h -361.4 v 50.4 h 361.4 v 40.8 l 118.6 -66 z"
    }
  },
  {
    name: "Line",
    type: "Path",
    options: {
      path: "M 16 256 h 480",
      strokeWidth: 10,
      stroke: "#000",
      padding: 10
    }
  },
  {
    name: "Star",
    type: "Path",
    options: {
      path: "M 256 406.3 l 148.3 78 l -28.3 -165.2 l 120 -117 l -165.8 -24.1 l -74.2 -150.3 l -74.2 150.3 l -165.8 24.1 l 120 117 l -28.3 165.2 z"
    }
  },
  {
    name: "Polygon",
    type: "Path",
    options: {
      path: "M 256 19.6 l 156.6 57.1 l 83.4 144.3 l -28.9 164.2 l -127.7 107.2 h -166.8 l -127.7 -107.2 l -28.9 -164.2 l 83.4 -144.3 z"
    }
  },
  {
    name: "Badge",
    type: "Path",
    options: {
      path: "M 257.3 16.2 s -148 58.2 -204.4 81.4 c 0 75.7 -16.8 303.5 204.4 398.2 c 218.7 -94.6 201.9 -322.4 201.9 -398.2 c -62.1 -23.6 -201.9 -81.4 -201.9 -81.4 z"
    }
  }
], _2 = [
  "afro-1",
  "afro",
  "agent",
  "alien-1",
  "alien",
  "angel",
  "angry-1",
  "angry-2",
  "angry-3",
  "angry-4",
  "angry-5",
  "angry",
  "arguing",
  "arrogant",
  "asian-1",
  "asian",
  "avatar",
  "baby-1",
  "baby-2",
  "baby",
  "bully",
  "burglar",
  "businessman",
  "cheeky-1",
  "cheeky",
  "clown",
  "confused-1",
  "confused-2",
  "confused-3",
  "confused",
  "creepy",
  "crying-1",
  "crying-2",
  "crying-3",
  "crying",
  "dazed-1",
  "dazed-2",
  "dazed-3",
  "dazed",
  "dead-1",
  "dead-2",
  "dead-3",
  "dead-4",
  "dead-5",
  "dead-6",
  "dead",
  "desperate-1",
  "desperate",
  "detective",
  "dissapointment",
  "doctor",
  "drunk",
  "dumb",
  "emo-1",
  "emo-2",
  "emo",
  "emoticon",
  "evil",
  "faint-1",
  "faint",
  "flirt-1",
  "flirt-2",
  "flirt",
  "flirty",
  "gangster",
  "geek-1",
  "geek",
  "gentleman-1",
  "gentleman-2",
  "gentleman-3",
  "gentleman-4",
  "gentleman",
  "ginger",
  "girl-1",
  "girl",
  "goofy-1",
  "goofy-2",
  "goofy-3",
  "goofy-4",
  "goofy",
  "grubby-1",
  "grubby",
  "happy-1",
  "happy-10",
  "happy-11",
  "happy-12",
  "happy-13",
  "happy-14",
  "happy-15",
  "happy-16",
  "happy-2",
  "happy-3",
  "happy-4",
  "happy-5",
  "happy-6",
  "happy-7",
  "happy-8",
  "happy-9",
  "happy",
  "harry-potter",
  "heisenberg",
  "hipster-1",
  "hipster-2",
  "hipster",
  "in-love-1",
  "in-love-2",
  "in-love-3",
  "in-love-4",
  "in-love-5",
  "in-love-6",
  "in-love",
  "japan",
  "jew",
  "joyful-1",
  "joyful-2",
  "joyful",
  "kiss-1",
  "kiss-2",
  "kiss-3",
  "kiss-4",
  "kiss",
  "laughing-1",
  "laughing-2",
  "laughing-3",
  "laughing",
  "listening",
  "love",
  "manly",
  "miserly-1",
  "miserly",
  "nerd-1",
  "nerd-2",
  "nerd-3",
  "nerd-4",
  "nerd",
  "ninja",
  "pirate-1",
  "pirate-2",
  "pirate",
  "punk-1",
  "punk-2",
  "punk",
  "rapper",
  "relieved",
  "rich-1",
  "rich-2",
  "rich",
  "rockstar",
  "sad-1",
  "sad-2",
  "sad-3",
  "sad-4",
  "sad-5",
  "sad-6",
  "sad",
  "scared-1",
  "scared-2",
  "scared-3",
  "scared",
  "sceptic-1",
  "sceptic-2",
  "sceptic-3",
  "sceptic-4",
  "sceptic-5",
  "sceptic-6",
  "sceptic-7",
  "sceptic",
  "secret",
  "shocked-1",
  "shocked-2",
  "shocked-3",
  "shocked",
  "sick-1",
  "sick-2",
  "sick-3",
  "sick-4",
  "sick",
  "silent",
  "skeleton",
  "smile",
  "smiling-1",
  "smiling",
  "smoked",
  "smug-1",
  "smug-2",
  "smug-3",
  "smug-4",
  "smug-5",
  "smug-6",
  "smug",
  "sporty",
  "stunned",
  "superhero-1",
  "superhero-2",
  "superhero-3",
  "superhero-4",
  "superhero",
  "surprised-1",
  "surprised",
  "thinking",
  "tired-1",
  "tired-2",
  "tired-3",
  "tired",
  "tough-1",
  "tough",
  "trendy",
  "vampire-1",
  "vampire",
  "wink-1",
  "wink-2",
  "wink",
  "winking-1",
  "winking",
  "yawning-1",
  "yawning-2",
  "yawning-3",
  "yawning",
  "yelling",
  "zombie"
];
function le(t, e) {
  return { ...e, message: t };
}
const S2 = [
  {
    name: "emoticons",
    list: _2,
    type: "svg",
    thumbnailUrl: "images/stickers/categories/emoticon.svg"
  },
  {
    name: "doodles",
    items: 100,
    type: "svg",
    thumbnailUrl: "images/stickers/categories/doodles.svg"
  },
  {
    name: "landmarks",
    items: 100,
    type: "svg",
    thumbnailUrl: "images/stickers/categories/landmark.svg",
    invertPreview: !0
  },
  {
    name: "bubbles",
    items: 104,
    type: "png",
    thumbnailUrl: "images/stickers/categories/speech-bubble.svg"
  },
  {
    name: "transportation",
    items: 22,
    type: "svg",
    thumbnailUrl: "images/stickers/categories/transportation.svg",
    invertPreview: !0
  },
  {
    name: "beach",
    items: 22,
    type: "svg",
    thumbnailUrl: "images/stickers/categories/beach.svg",
    invertPreview: !0
  }
], T2 = {
  emoticons: le("Emoticons"),
  doodles: le("Doodles"),
  landmarks: le("Landmarks"),
  bubbles: le("Bubbles"),
  transportation: le("Transportation"),
  beach: le("Beach")
}, cu = {
  fill: "#1565C0",
  opacity: 1,
  backgroundColor: null,
  strokeWidth: 0.05,
  stroke: "#000"
}, E2 = [
  "PencilBrush",
  "EraserBrush",
  "SprayBrush",
  "CircleBrush",
  "DiamondBrush",
  "VLineBrush",
  "HLineBrush",
  "SquareBrush"
], Yg = [1, 8, 15, 20, 25];
var wo = /* @__PURE__ */ ((t) => (t.DARK = "dark", t.LIGHT = "light", t))(wo || {});
const Gl = [
  {
    name: wo.LIGHT,
    colors: {
      "--be-foreground-base": "0 0 0",
      "--be-primary-light": "191 219 254",
      // 200
      "--be-primary": "59 130 246",
      // 500
      "--be-primary-dark": "37 99 235",
      "--be-on-primary": "255 255 255",
      "--be-danger": "179 38 30",
      "--be-on-danger": "255 255 255",
      "--be-background": "255 255 255",
      "--be-background-alt": "250 250 250",
      "--be-paper": "255 255 255",
      "--be-disabled-bg-opacity": "12%",
      "--be-disabled-fg-opacity": "26%",
      "--be-hover-opacity": "4%",
      "--be-focus-opacity": "12%",
      "--be-selected-opacity": "8%",
      "--be-text-main-opacity": "87%",
      "--be-text-muted-opacity": "60%",
      "--be-divider-opacity": "12%"
    }
  },
  {
    name: wo.DARK,
    isDark: !0,
    colors: {
      "--be-foreground-base": "255 255 255",
      "--be-primary-light": "239 246 255",
      // 50
      "--be-primary": "191 219 254",
      // 200
      "--be-primary-dark": "147 197 253",
      // 300
      "--be-on-primary": "56 30 114",
      "--be-danger": "242 184 181",
      "--be-on-danger": "96 20 16",
      "--be-background": "20 21 23",
      "--be-background-alt": "26 27 30",
      "--be-paper": "44 46 51",
      "--be-disabled-bg-opacity": "12%",
      "--be-disabled-fg-opacity": "30%",
      "--be-hover-opacity": "8%",
      "--be-focus-opacity": "12%",
      "--be-selected-opacity": "16%",
      "--be-text-main-opacity": "100%",
      "--be-text-muted-opacity": "70%",
      "--be-divider-opacity": "12%"
    }
  }
];
var Be = /* @__PURE__ */ ((t) => (t.FILTER = "filter", t.RESIZE = "resize", t.CROP = "crop", t.DRAW = "draw", t.TEXT = "text", t.SHAPES = "shapes", t.STICKERS = "stickers", t.FRAME = "frame", t.CORNERS = "corners", t.MERGE = "merge", t))(Be || {});
function Gg(t) {
  var e, r, n = "";
  if (typeof t == "string" || typeof t == "number")
    n += t;
  else if (typeof t == "object")
    if (Array.isArray(t)) {
      var i = t.length;
      for (e = 0; e < i; e++)
        t[e] && (r = Gg(t[e])) && (n && (n += " "), n += r);
    } else
      for (r in t)
        t[r] && (n && (n += " "), n += r);
  return n;
}
function ce() {
  for (var t, e, r = 0, n = "", i = arguments.length; r < i; r++)
    (t = arguments[r]) && (e = Gg(t)) && (n && (n += " "), n += e);
  return n;
}
const k2 = st(
  (t, e) => {
    const {
      attr: r,
      size: n,
      title: i,
      className: l,
      color: g,
      style: a,
      children: s,
      viewBox: c,
      width: f,
      height: o,
      ...h
    } = t;
    return /* @__PURE__ */ oe(
      "svg",
      {
        "aria-hidden": !i,
        focusable: !1,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: c || "0 0 24 24",
        ...r,
        ...h,
        className: ce("svg-icon", l, O2(n)),
        style: {
          color: g,
          ...a
        },
        ref: e,
        height: o || "1em",
        width: f || "1em",
        children: [
          i && /* @__PURE__ */ C("title", { children: i }),
          s
        ]
      }
    );
  }
);
function O2(t) {
  switch (t) {
    case "2xs":
      return "icon-2xs";
    case "xs":
      return "icon-xs";
    case "sm":
      return "icon-sm";
    case "md":
      return "icon-md";
    case "lg":
      return "icon-lg";
    case "xl":
      return "icon-xl";
    default:
      return t;
  }
}
function we(t, e = "", r) {
  const n = (i, l) => /* @__PURE__ */ C(
    k2,
    {
      "data-testid": `${e}Icon`,
      ref: l,
      viewBox: r,
      ...i,
      size: i.size || "md",
      children: t
    }
  );
  return he.memo(he.forwardRef(n));
}
function A2(t, e = "") {
  const r = qg(t);
  return we(r, e);
}
function qg(t) {
  return (t == null ? void 0 : t.map) && t.map((e, r) => he.createElement(
    e.tag,
    { key: r, ...e.attr },
    qg(e.child)
  ));
}
const Kg = we(
  /* @__PURE__ */ C("path", { d: "M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z" }),
  "TuneOutlined"
), D2 = we(
  /* @__PURE__ */ C("path", { d: "M21 15h2v2h-2v-2zm0-4h2v2h-2v-2zm2 8h-2v2c1 0 2-1 2-2zM13 3h2v2h-2V3zm8 4h2v2h-2V7zm0-4v2h2c0-1-1-2-2-2zM1 7h2v2H1V7zm16-4h2v2h-2V3zm0 16h2v2h-2v-2zM3 3C2 3 1 4 1 5h2V3zm6 0h2v2H9V3zM5 3h2v2H5V3zm-4 8v8c0 1.1.9 2 2 2h12V11H1zm2 8 2.5-3.21 1.79 2.15 2.5-3.22L13 19H3z" }),
  "PhotoSizeSelectLargeOutlined"
), P2 = we(
  /* @__PURE__ */ C("path", { d: "M17 15h2V7c0-1.1-.9-2-2-2H9v2h8v8zM7 17V1H5v4H1v2h4v10c0 1.1.9 2 2 2h10v4h2v-4h4v-2H7z" }),
  "CropOutlined"
), M2 = we(
  /* @__PURE__ */ C("path", { d: "M2.5 4v3h5v12h3V7h5V4h-13zm19 5h-9v3h3v7h3v-7h3V9z" }),
  "TextFieldsOutlined"
), F2 = we(
  /* @__PURE__ */ C("path", { d: "M10.5 4.5c.28 0 .5.22.5.5v2h6v6h2c.28 0 .5.22.5.5s-.22.5-.5.5h-2v6h-2.12c-.68-1.75-2.39-3-4.38-3s-3.7 1.25-4.38 3H4v-2.12c1.75-.68 3-2.39 3-4.38 0-1.99-1.24-3.7-2.99-4.38L4 7h6V5c0-.28.22-.5.5-.5m0-2C9.12 2.5 8 3.62 8 5H4c-1.1 0-1.99.9-1.99 2v3.8h.29c1.49 0 2.7 1.21 2.7 2.7s-1.21 2.7-2.7 2.7H2V20c0 1.1.9 2 2 2h3.8v-.3c0-1.49 1.21-2.7 2.7-2.7s2.7 1.21 2.7 2.7v.3H17c1.1 0 2-.9 2-2v-4c1.38 0 2.5-1.12 2.5-2.5S20.38 11 19 11V7c0-1.1-.9-2-2-2h-4c0-1.38-1.12-2.5-2.5-2.5z" }),
  "ExtensionOutlined"
), R2 = we(
  /* @__PURE__ */ C("path", { d: "M10.25 13c0 .69-.56 1.25-1.25 1.25S7.75 13.69 7.75 13s.56-1.25 1.25-1.25 1.25.56 1.25 1.25zM15 11.75c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zm7 .25c0 5.52-4.48 10-10 10S2 17.52 2 12 6.48 2 12 2s10 4.48 10 10zM10.66 4.12C12.06 6.44 14.6 8 17.5 8c.46 0 .91-.05 1.34-.12C17.44 5.56 14.9 4 12 4c-.46 0-.91.05-1.34.12zM4.42 9.47c1.71-.97 3.03-2.55 3.66-4.44C6.37 6 5.05 7.58 4.42 9.47zM20 12c0-.78-.12-1.53-.33-2.24-.7.15-1.42.24-2.17.24-3.13 0-5.92-1.44-7.76-3.69C8.69 8.87 6.6 10.88 4 11.86c.01.04 0 .09 0 .14 0 4.41 3.59 8 8 8s8-3.59 8-8z" }),
  "FaceOutlined"
), I2 = we(
  /* @__PURE__ */ C("path", { d: "M20 4h-4l-4-4-4 4H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H4V6h4.52l3.52-3.5L15.52 6H20v14zM6 18h12V8H6v10zm2-8h8v6H8v-6z" }),
  "FilterFramesOutlined"
), L2 = we(
  /* @__PURE__ */ C("path", { d: "M6.41 21 5 19.59l4.83-4.83c.75-.75 1.17-1.77 1.17-2.83v-5.1L9.41 8.41 8 7l4-4 4 4-1.41 1.41L13 6.83v5.1c0 1.06.42 2.08 1.17 2.83L19 19.59 17.59 21 12 15.41 6.41 21z" }),
  "MergeOutlined"
), B2 = we(
  /* @__PURE__ */ C("path", { d: "M19 19h2v2h-2v-2zm0-2h2v-2h-2v2zM3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm0-4h2V3H3v2zm4 0h2V3H7v2zm8 16h2v-2h-2v2zm-4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm-8 0h2v-2H7v2zm-4 0h2v-2H3v2zM21 8c0-2.76-2.24-5-5-5h-5v2h5c1.65 0 3 1.35 3 3v5h2V8z" }),
  "RoundedCornerOutlined"
), Kh = we(
  /* @__PURE__ */ C("path", { d: "M20 4v12H8V4h12m0-2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 9.67 1.69 2.26 2.48-3.1L19 15H9zM2 6v14c0 1.1.9 2 2 2h14v-2H4V6H2z" }),
  "PhotoLibraryOutlined"
), Jg = we(
  /* @__PURE__ */ C("path", { d: "M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.25 2.52.77-1.28-3.52-2.09V8z" }),
  "HistoryOutlined"
), z2 = we(
  [/* @__PURE__ */ C("path", { d: "m2.53 19.65 1.34.56v-9.03l-2.43 5.86c-.41 1.02.08 2.19 1.09 2.61zm19.5-3.7L17.07 3.98c-.31-.75-1.04-1.21-1.81-1.23-.26 0-.53.04-.79.15L7.1 5.95c-.75.31-1.21 1.03-1.23 1.8-.01.27.04.54.15.8l4.96 11.97c.31.76 1.05 1.22 1.83 1.23.26 0 .52-.05.77-.15l7.36-3.05c1.02-.42 1.51-1.59 1.09-2.6zm-9.2 3.8L7.87 7.79l7.35-3.04h.01l4.95 11.95-7.35 3.05z" }, "0"), /* @__PURE__ */ C("circle", { cx: "11", cy: "9", r: "1" }, "1"), /* @__PURE__ */ C("path", { d: "M5.88 19.75c0 1.1.9 2 2 2h1.45l-3.45-8.34v6.34z" }, "2")],
  "StyleOutlined"
), N2 = we(
  /* @__PURE__ */ C("path", { d: "M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z" }),
  "DeleteOutlined"
), j2 = we(
  /* @__PURE__ */ C("path", { d: "M18.85,10.39l1.06-1.06c0.78-0.78,0.78-2.05,0-2.83L18.5,5.09c-0.78-0.78-2.05-0.78-2.83,0l-1.06,1.06L18.85,10.39z M14.61,11.81L7.41,19H6v-1.41l7.19-7.19L14.61,11.81z M13.19,7.56L4,16.76V21h4.24l9.19-9.19L13.19,7.56L13.19,7.56z M19,17.5 c0,2.19-2.54,3.5-5,3.5c-0.55,0-1-0.45-1-1s0.45-1,1-1c1.54,0,3-0.73,3-1.5c0-0.47-0.48-0.87-1.23-1.2l1.48-1.48 C18.32,15.45,19,16.29,19,17.5z M4.58,13.35C3.61,12.79,3,12.06,3,11c0-1.8,1.89-2.63,3.56-3.36C7.59,7.18,9,6.56,9,6 c0-0.41-0.78-1-2-1C5.74,5,5.2,5.61,5.17,5.64C4.82,6.05,4.19,6.1,3.77,5.76C3.36,5.42,3.28,4.81,3.62,4.38C3.73,4.24,4.76,3,7,3 c2.24,0,4,1.32,4,3c0,1.87-1.93,2.72-3.64,3.47C6.42,9.88,5,10.5,5,11c0,0.31,0.43,0.6,1.07,0.86L4.58,13.35z" }),
  "Draw"
), $2 = we(
  /* @__PURE__ */ C("path", { d: "m12 5.69 5 4.5V18h-2v-6H9v6H7v-7.81l5-4.5M12 3 2 12h3v8h6v-6h2v6h6v-8h3L12 3z" }),
  "HomeOutlined"
), Mr = {
  [Be.FILTER]: {
    name: le("Applied Filters"),
    icon: Kg
  },
  [Be.RESIZE]: {
    name: le("Resized Image"),
    icon: D2
  },
  [Be.CROP]: {
    name: le("Cropped Image"),
    icon: P2
  },
  [Be.DRAW]: {
    name: le("Added Drawing"),
    icon: j2
  },
  [Be.TEXT]: {
    name: le("Added Text"),
    icon: M2
  },
  [Be.SHAPES]: {
    name: le("Added Shape"),
    icon: F2
  },
  [Be.STICKERS]: {
    name: le("Added Sticker"),
    icon: R2
  },
  [Be.FRAME]: {
    name: le("Added Frame"),
    icon: I2
  },
  [Be.MERGE]: {
    name: le("Merged Objects"),
    icon: L2
  },
  [Be.CORNERS]: {
    name: le("Rounded Corner"),
    icon: B2
  },
  bgImage: {
    name: le("Replaced Background Image"),
    icon: Kh
  },
  overlayImage: {
    name: le("Added Image"),
    icon: Kh
  },
  initial: { name: le("Initial"), icon: $2 },
  loadedState: {
    name: le("Loaded State"),
    icon: Jg
  },
  objectStyle: {
    name: le("Changed Style"),
    icon: z2
  },
  deletedObject: {
    name: le("Deleted object"),
    icon: N2
  }
}, V2 = Object.values(Be).map(
  (t) => ({
    name: t,
    icon: Mr[t].icon,
    action: t === Be.MERGE ? (e) => {
      e.tools.merge.apply();
    } : t
  })
), H2 = {
  filter: le("filter"),
  resize: le("resize"),
  crop: le("crop"),
  draw: le("draw"),
  text: le("text"),
  shapes: le("shapes"),
  stickers: le("stickers"),
  frame: le("frame"),
  corners: le("corners"),
  merge: le("merge")
}, U2 = we(
  /* @__PURE__ */ C("path", { d: "M18 15v3H6v-3H4v3c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-3h-2zm-1-4-1.41-1.41L13 12.17V4h-2v8.17L8.41 9.59 7 11l5 5 5-5z" }),
  "FileDownloadOutlined"
), W2 = "pixie", X2 = "3.0.5", Y2 = "dist/pixie.umd.js", G2 = "dist/pixie.es.js", q2 = "dist/types/src/pixie.d.ts", K2 = {
  ".": {
    import: "./dist/pixie.es.js",
    require: "./dist/pixie.umd.js"
  }
}, J2 = [
  "dist"
], Z2 = {
  dev: "vite --host",
  build: "vite build && npm run build-umd && npm run types && npm run build-cc",
  types: "tsc --skipLibCheck --emitDeclarationOnly --noEmit false --declarationMap false",
  "build-umd": "vite build --config scripts/vite-umd.config.ts",
  "build-cc": "./scripts/build-cc.sh",
  serve: "vite preview",
  extract: "node ./scripts/extract-translations.js"
}, Q2 = {
  "@floating-ui/react-dom": "^2.0.2",
  "@internationalized/date": "^3.5.0",
  "@internationalized/number": "^3.3.0",
  "@paypal/paypal-js": "^7.0.3",
  "@react-aria/focus": "^3.14.3",
  "@react-aria/interactions": "^3.19.1",
  "@react-aria/overlays": "^3.18.1",
  "@react-aria/ssr": "^3.8.0",
  "@react-aria/utils": "^3.21.1",
  "@react-stately/color": "^3.4.4",
  "@react-stately/utils": "^3.8.0",
  "@sentry/react": "^7.76.0",
  "@sentry/tracing": "^7.76.0",
  "@stripe/react-stripe-js": "^2.3.1",
  "@stripe/stripe-js": "^2.1.10",
  "@tailwindcss/container-queries": "^0.1.0",
  "@tanstack/react-query": "^5.0.5",
  "@tanstack/react-query-devtools": "^5.4.2",
  "@tanstack/react-virtual": "^3.0.0-beta.68",
  "@tiptap/extension-code-block-lowlight": "^2.1.12",
  "@tiptap/extension-color": "^2.1.12",
  "@tiptap/extension-image": "^2.1.12",
  "@tiptap/extension-link": "^2.1.12",
  "@tiptap/extension-subscript": "^2.1.12",
  "@tiptap/extension-superscript": "^2.1.12",
  "@tiptap/extension-text-align": "^2.1.12",
  "@tiptap/extension-text-style": "^2.1.12",
  "@tiptap/extension-underline": "^2.1.12",
  "@tiptap/react": "^2.1.12",
  "@tiptap/starter-kit": "^2.1.12",
  "@types/google.visualization": "^0.0.71",
  "@use-gesture/react": "^10.2.20",
  "@vitejs/plugin-react-swc": "^3.4.0",
  "ace-builds": "^1.31.0",
  axios: "^1.6.0",
  "axios-retry": "^3.8.1",
  "chart.js": "^4.4.0",
  clsx: "^2.0.0",
  color: "^4.2.3",
  dashjs: "^4.7.2",
  "deep-object-diff": "^1.1.7",
  deepmerge: "^4.2.2",
  "dot-object": "^2.1.4",
  fabric: "^5.3.0",
  "file-saver": "^2.0.5",
  "framer-motion": "^10.16.4",
  fscreen: "^1.2.0",
  "get-video-id": "^3.6.5",
  "highlight.js": "^11.9.0",
  "hls.js": "^1.4.12",
  immer: "^10.0.3",
  "just-debounce-it": "^3.2.0",
  "linkify-string": "^4.0.2",
  lowlight: "^3.1.0",
  "media-icons": "^0.10.0",
  "mime-match": "^1.0.2",
  "nano-memoize": "^1.3.0",
  nanoid: "^5.0.2",
  "number-precision": "^1.6.0",
  "performant-array-to-tree": "^1.11.0",
  "prosemirror-state": "^1.4.1",
  react: ">=18.2.0",
  "react-ace": "^10.1.0",
  "react-colorful": "^5.5.1",
  "react-dom": ">=18.2.0",
  "react-hook-form": "^7.47.0",
  "react-merge-refs": "^2.1.1",
  "react-router-dom": "^6.17.0",
  "react-textarea-autosize": "^8.5.3",
  "react-use-clipboard": "^1.0.7",
  "react-use-cookie": "^1.4.0",
  slugify: "^1.6.5",
  "style-inject": "^0.3.0",
  "swagger-ui-react": "^4.15",
  "tus-js-client": "^3.0.1",
  "url-regex": "^5.0.0",
  "use-debounce": "^9.0.4",
  "use-immer": "^0.9.0",
  zustand: "^4.4.4"
}, eC = {
  react: ">=18.2.0",
  "react-dom": ">=18.2.0"
}, tC = {
  "@prettier/plugin-php": "^0.21.0",
  "@rollup/plugin-replace": "^5.0",
  "@tailwindcss/typography": "^0.5.10",
  "@types/color": "^3.0.6",
  "@types/dot-object": "^2.1.4",
  "@types/fabric": "^4.5.12",
  "@types/file-saver": "^2.0.7",
  "@types/fscreen": "^1.0.3",
  "@types/react": "^18",
  "@types/react-dom": "^18",
  "@types/react-recaptcha-v3": "^1.1.3",
  "@types/swagger-ui-react": "^4.18.2",
  "@typescript-eslint/eslint-plugin": "^6.9.0",
  "@typescript-eslint/parser": "^6.9.0",
  "@vitejs/plugin-react": "^4.3.0",
  autoprefixer: "^10.4.16",
  "babel-loader": "^9.1.3",
  cssnano: "^7.0.2",
  eslint: "^8.52.0",
  "eslint-config-prettier": "^9.0.0",
  "eslint-plugin-import": "^2.29.0",
  "eslint-plugin-jsx-a11y": "^6.6.1",
  "eslint-plugin-react": "^7.33.2",
  "eslint-plugin-react-hooks": "^4.6.0",
  express: "^4.18.2",
  "laravel-vite-plugin": "^0.8.1",
  postcss: "^8.4.31",
  prettier: "^3.0.3",
  "prettier-plugin-blade": "^1.6.14",
  "prettier-plugin-tailwindcss": "^0.5.6",
  tailwindcss: "^3.3",
  typescript: "^5.2.2",
  "utility-types": "^3.10.0",
  vite: "^4.5.0",
  "vite-tsconfig-paths": "^4.2.1"
}, rC = {
  name: W2,
  version: X2,
  main: Y2,
  module: G2,
  types: q2,
  private: !0,
  exports: K2,
  files: J2,
  scripts: Z2,
  dependencies: Q2,
  peerDependencies: eC,
  devDependencies: tC
}, nC = rC.version, Zg = {
  selector: "pixie-editor",
  textureSize: 4096,
  activeLanguage: "en",
  ui: {
    visible: !0,
    mode: lu.INLINE,
    forceOverlayModeOnMobile: !0,
    activeTheme: wo.LIGHT,
    themes: Gl,
    allowEditorClose: !0,
    menubar: {
      items: [
        {
          type: "undoWidget",
          align: "left"
        },
        {
          type: "zoomWidget",
          align: "center",
          desktopOnly: !0
        },
        {
          type: "button",
          icon: Jg,
          align: "right",
          desktopOnly: !0,
          action: (t) => {
            t.togglePanel("history");
          }
        },
        {
          type: "button",
          icon: U2,
          label: le("Done"),
          align: "right",
          action: (t) => {
            var e;
            (e = t.state.config.ui) != null && e.showExportPanel ? t.state.togglePanel("export", !0) : t.tools.export.save();
          }
        }
      ]
    },
    nav: {
      position: Xg.BOTTOM,
      items: [...V2]
    },
    openImageDialog: {
      show: !0,
      sampleImages: [
        {
          url: "images/samples/sample1.jpg",
          thumbnail: "images/samples/sample1_thumbnail.jpg"
        },
        {
          url: "images/samples/sample2.jpg",
          thumbnail: "images/samples/sample2_thumbnail.jpg"
        },
        {
          url: "images/samples/sample3.jpg",
          thumbnail: "images/samples/sample3_thumbnail.jpg"
        }
      ]
    },
    colorPresets: {
      items: [
        "rgb(0,0,0)",
        "rgb(255, 255, 255)",
        "rgb(242, 38, 19)",
        "rgb(249, 105, 14)",
        "rgb(253, 227, 167)",
        "rgb(4, 147, 114)",
        "rgb(30, 139, 195)",
        "rgb(142, 68, 173)"
      ]
    }
  },
  objectDefaults: {
    global: {
      ...cu
    },
    sticker: {
      fill: void 0
    },
    text: {
      textAlign: "initial",
      underline: !1,
      linethrough: !1,
      fontStyle: "normal",
      fontFamily: "Times New Roman",
      fontWeight: "normal",
      stroke: void 0,
      fontSize: 40
    }
  },
  tools: {
    filter: {
      items: [
        "grayscale",
        "blackWhite",
        "sharpen",
        "invert",
        "vintage",
        "polaroid",
        "kodachrome",
        "technicolor",
        "brownie",
        "sepia",
        "removeColor",
        "brightness",
        "gamma",
        "noise",
        "pixelate",
        "blur",
        "emboss",
        "blendColor"
      ]
    },
    zoom: {
      allowUserZoom: !0,
      fitImageToScreen: !0
    },
    crop: {
      allowCustomRatio: !0,
      defaultRatio: "1:1",
      presets: [
        { ratio: null, name: "Custom" },
        { ratio: "1:1", name: "Square" },
        { ratio: "4:3" },
        { ratio: "16:9" },
        { ratio: "5:3" },
        { ratio: "5:4" },
        { ratio: "6:4" },
        { ratio: "7:5" },
        { ratio: "10:8" }
      ]
    },
    text: {
      defaultText: "Double click to edit",
      controlsPadding: 6,
      items: [
        {
          family: "Roboto",
          src: "fonts/open-sans-v27-latin-ext_latin-regular.woff2"
        },
        {
          family: "Fuzzy Bubbles",
          src: "fonts/fuzzy-bubbles-v3-latin-700.woff2",
          descriptors: { weight: "700" }
        },
        {
          family: "Aleo Bold",
          src: "fonts/aleo-v4-latin-ext_latin-700.woff2",
          descriptors: { weight: "700" }
        },
        {
          family: "Amatic SC",
          src: "fonts/amatic-sc-v16-latin-ext_latin-regular.woff2"
        },
        {
          family: "Corinthia Bold",
          src: "fonts/corinthia-v7-latin-ext_latin-700.woff2"
        },
        {
          family: "Bungee Inline",
          src: "fonts/bungee-inline-v6-latin-ext_latin-regular.woff2"
        },
        {
          family: "Robot Slab Bold",
          src: "fonts/roboto-slab-v16-latin-ext_latin-500.woff2"
        },
        {
          family: "Carter One",
          src: "fonts/carter-one-v12-latin-regular.woff2"
        },
        {
          family: "Cody Star",
          src: "fonts/codystar-v10-latin-ext_latin-regular.woff2"
        },
        {
          family: "Fira Sans",
          src: "fonts/fira-sans-v11-latin-ext_latin_cyrillic-regular.woff2"
        },
        {
          family: "Krona One",
          src: "fonts/krona-one-v9-latin-ext_latin-regular.woff2"
        },
        {
          family: "Kumar One Outline",
          src: "fonts/kumar-one-outline-v8-latin-ext_latin-regular.woff2"
        },
        {
          family: "Lobster Two",
          src: "fonts/lobster-two-v13-latin-regular.woff2"
        },
        {
          family: "Molle Italic",
          src: "fonts/molle-v11-latin-ext_latin-italic.woff2"
        },
        {
          family: "Monoton",
          src: "fonts/monoton-v10-latin-regular.woff2"
        },
        {
          family: "Nixie One",
          src: "fonts/nixie-one-v11-latin-regular.woff2"
        },
        {
          family: "Permanent Marker",
          src: "fonts/permanent-marker-v10-latin-regular.woff2"
        },
        {
          family: "Sancreek",
          src: "fonts/sancreek-v13-latin-ext_latin-regular.woff2"
        },
        {
          family: "Stint Ultra Expanded",
          src: "fonts/stint-ultra-expanded-v10-latin-regular.woff2"
        },
        {
          family: "VT323",
          src: "fonts/vt323-v12-latin-ext_latin-regular.woff2"
        },
        {
          family: "Trash Hand",
          src: "fonts/TrashHand.ttf"
        }
      ]
    },
    draw: {
      brushSizes: Yg,
      brushTypes: E2
    },
    shapes: {
      items: C2.slice()
    },
    stickers: {
      items: S2
    },
    import: {
      validImgExtensions: ["png", "jpg", "jpeg", "svg", "gif"],
      fitOverlayToScreen: !0,
      openDroppedImageAsBackground: !1
    },
    export: {
      defaultFormat: "png",
      defaultQuality: 0.8,
      defaultName: "image"
    },
    frame: {
      items: [
        {
          name: "basic",
          mode: "basic",
          size: {
            min: 1,
            max: 35,
            default: 10
          }
        },
        {
          name: "pine",
          mode: "stretch",
          size: {
            min: 1,
            max: 35,
            default: 15
          }
        },
        {
          name: "oak",
          mode: "stretch",
          size: {
            min: 1,
            max: 35,
            default: 15
          }
        },
        {
          name: "rainbow",
          mode: "stretch",
          size: {
            min: 1,
            max: 35,
            default: 15
          }
        },
        {
          name: "grunge1",
          display_name: "grunge #1",
          mode: "stretch",
          size: {
            min: 1,
            max: 35,
            default: 15
          }
        },
        {
          name: "grunge2",
          display_name: "grunge #2",
          mode: "stretch",
          size: {
            min: 1,
            max: 35,
            default: 20
          }
        },
        {
          name: "ebony",
          mode: "stretch",
          size: {
            min: 1,
            max: 35,
            default: 15
          }
        },
        {
          name: "art1",
          display_name: "Art #1",
          mode: "repeat",
          size: {
            min: 10,
            max: 70,
            default: 55
          }
        },
        {
          name: "art2",
          display_name: "Art #2",
          mode: "repeat",
          size: {
            min: 10,
            max: 70,
            default: 55
          }
        }
      ]
    }
  }
}, Jh = (t) => {
  let e;
  const r = /* @__PURE__ */ new Set(), n = (f, o) => {
    const h = typeof f == "function" ? f(e) : f;
    if (!Object.is(h, e)) {
      const u = e;
      e = o ?? (typeof h != "object" || h === null) ? h : Object.assign({}, e, h), r.forEach((d) => d(e, u));
    }
  }, i = () => e, s = { setState: n, getState: i, getInitialState: () => c, subscribe: (f) => (r.add(f), () => r.delete(f)), destroy: () => {
    r.clear();
  } }, c = e = t(n, i, s);
  return s;
}, iC = (t) => t ? Jh(t) : Jh;
var Qg = { exports: {} }, em = {}, tm = { exports: {} }, rm = {};
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var di = he;
function sC(t, e) {
  return t === e && (t !== 0 || 1 / t === 1 / e) || t !== t && e !== e;
}
var oC = typeof Object.is == "function" ? Object.is : sC, aC = di.useState, lC = di.useEffect, cC = di.useLayoutEffect, uC = di.useDebugValue;
function hC(t, e) {
  var r = e(), n = aC({ inst: { value: r, getSnapshot: e } }), i = n[0].inst, l = n[1];
  return cC(function() {
    i.value = r, i.getSnapshot = e, qa(i) && l({ inst: i });
  }, [t, r, e]), lC(function() {
    return qa(i) && l({ inst: i }), t(function() {
      qa(i) && l({ inst: i });
    });
  }, [t]), uC(r), r;
}
function qa(t) {
  var e = t.getSnapshot;
  t = t.value;
  try {
    var r = e();
    return !oC(t, r);
  } catch {
    return !0;
  }
}
function fC(t, e) {
  return e();
}
var dC = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? fC : hC;
rm.useSyncExternalStore = di.useSyncExternalStore !== void 0 ? di.useSyncExternalStore : dC;
tm.exports = rm;
var pC = tm.exports;
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var sa = he, gC = pC;
function mC(t, e) {
  return t === e && (t !== 0 || 1 / t === 1 / e) || t !== t && e !== e;
}
var vC = typeof Object.is == "function" ? Object.is : mC, bC = gC.useSyncExternalStore, yC = sa.useRef, wC = sa.useEffect, xC = sa.useMemo, CC = sa.useDebugValue;
em.useSyncExternalStoreWithSelector = function(t, e, r, n, i) {
  var l = yC(null);
  if (l.current === null) {
    var g = { hasValue: !1, value: null };
    l.current = g;
  } else
    g = l.current;
  l = xC(function() {
    function s(u) {
      if (!c) {
        if (c = !0, f = u, u = n(u), i !== void 0 && g.hasValue) {
          var d = g.value;
          if (i(d, u))
            return o = d;
        }
        return o = u;
      }
      if (d = o, vC(f, u))
        return d;
      var m = n(u);
      return i !== void 0 && i(d, m) ? d : (f = u, o = m);
    }
    var c = !1, f, o, h = r === void 0 ? null : r;
    return [function() {
      return s(e());
    }, h === null ? void 0 : function() {
      return s(h());
    }];
  }, [e, r, n, i]);
  var a = bC(t, l[0], l[1]);
  return wC(function() {
    g.hasValue = !0, g.value = a;
  }, [a]), CC(a), a;
};
Qg.exports = em;
var _C = Qg.exports;
const SC = /* @__PURE__ */ Es(_C), { useDebugValue: TC } = he, { useSyncExternalStoreWithSelector: EC } = SC;
const kC = (t) => t;
function OC(t, e = kC, r) {
  const n = EC(
    t.subscribe,
    t.getState,
    t.getServerState || t.getInitialState,
    e,
    r
  );
  return TC(n), n;
}
const Zh = (t) => {
  const e = typeof t == "function" ? iC(t) : t, r = (n, i) => OC(e, n, i);
  return Object.assign(r, e), r;
}, nm = (t) => t ? Zh(t) : Zh, AC = (t) => (e, r, n) => {
  const i = n.subscribe;
  return n.subscribe = (g, a, s) => {
    let c = g;
    if (a) {
      const f = (s == null ? void 0 : s.equalityFn) || Object.is;
      let o = g(n.getState());
      c = (h) => {
        const u = g(h);
        if (!f(o, u)) {
          const d = o;
          a(o = u, d);
        }
      }, s != null && s.fireImmediately && a(o, o);
    }
    return i(c);
  }, t(e, r, n);
}, DC = AC;
var im = Symbol.for("immer-nothing"), Qh = Symbol.for("immer-draftable"), Mt = Symbol.for("immer-state");
function Ut(t, ...e) {
  throw new Error(
    `[Immer] minified error nr: ${t}. Full error at: https://bit.ly/3cXEKWf`
  );
}
var pi = Object.getPrototypeOf;
function gi(t) {
  return !!t && !!t[Mt];
}
function Sn(t) {
  var e;
  return t ? sm(t) || Array.isArray(t) || !!t[Qh] || !!((e = t.constructor) != null && e[Qh]) || aa(t) || la(t) : !1;
}
var PC = Object.prototype.constructor.toString();
function sm(t) {
  if (!t || typeof t != "object")
    return !1;
  const e = pi(t);
  if (e === null)
    return !0;
  const r = Object.hasOwnProperty.call(e, "constructor") && e.constructor;
  return r === Object ? !0 : typeof r == "function" && Function.toString.call(r) === PC;
}
function xo(t, e) {
  oa(t) === 0 ? Reflect.ownKeys(t).forEach((r) => {
    e(r, t[r], t);
  }) : t.forEach((r, n) => e(n, r, t));
}
function oa(t) {
  const e = t[Mt];
  return e ? e.type_ : Array.isArray(t) ? 1 : aa(t) ? 2 : la(t) ? 3 : 0;
}
function ql(t, e) {
  return oa(t) === 2 ? t.has(e) : Object.prototype.hasOwnProperty.call(t, e);
}
function om(t, e, r) {
  const n = oa(t);
  n === 2 ? t.set(e, r) : n === 3 ? t.add(r) : t[e] = r;
}
function MC(t, e) {
  return t === e ? t !== 0 || 1 / t === 1 / e : t !== t && e !== e;
}
function aa(t) {
  return t instanceof Map;
}
function la(t) {
  return t instanceof Set;
}
function cn(t) {
  return t.copy_ || t.base_;
}
function Kl(t, e) {
  if (aa(t))
    return new Map(t);
  if (la(t))
    return new Set(t);
  if (Array.isArray(t))
    return Array.prototype.slice.call(t);
  const r = sm(t);
  if (e === !0 || e === "class_only" && !r) {
    const n = Object.getOwnPropertyDescriptors(t);
    delete n[Mt];
    let i = Reflect.ownKeys(n);
    for (let l = 0; l < i.length; l++) {
      const g = i[l], a = n[g];
      a.writable === !1 && (a.writable = !0, a.configurable = !0), (a.get || a.set) && (n[g] = {
        configurable: !0,
        writable: !0,
        // could live with !!desc.set as well here...
        enumerable: a.enumerable,
        value: t[g]
      });
    }
    return Object.create(pi(t), n);
  } else {
    const n = pi(t);
    if (n !== null && r)
      return { ...t };
    const i = Object.create(n);
    return Object.assign(i, t);
  }
}
function uu(t, e = !1) {
  return ca(t) || gi(t) || !Sn(t) || (oa(t) > 1 && (t.set = t.add = t.clear = t.delete = FC), Object.freeze(t), e && Object.entries(t).forEach(([r, n]) => uu(n, !0))), t;
}
function FC() {
  Ut(2);
}
function ca(t) {
  return Object.isFrozen(t);
}
var RC = {};
function Tn(t) {
  const e = RC[t];
  return e || Ut(0, t), e;
}
var is;
function am() {
  return is;
}
function IC(t, e) {
  return {
    drafts_: [],
    parent_: t,
    immer_: e,
    // Whenever the modified draft contains a draft from another scope, we
    // need to prevent auto-freezing so the unowned draft can be finalized.
    canAutoFreeze_: !0,
    unfinalizedDrafts_: 0
  };
}
function ef(t, e) {
  e && (Tn("Patches"), t.patches_ = [], t.inversePatches_ = [], t.patchListener_ = e);
}
function Jl(t) {
  Zl(t), t.drafts_.forEach(LC), t.drafts_ = null;
}
function Zl(t) {
  t === is && (is = t.parent_);
}
function tf(t) {
  return is = IC(is, t);
}
function LC(t) {
  const e = t[Mt];
  e.type_ === 0 || e.type_ === 1 ? e.revoke_() : e.revoked_ = !0;
}
function rf(t, e) {
  e.unfinalizedDrafts_ = e.drafts_.length;
  const r = e.drafts_[0];
  return t !== void 0 && t !== r ? (r[Mt].modified_ && (Jl(e), Ut(4)), Sn(t) && (t = Co(e, t), e.parent_ || _o(e, t)), e.patches_ && Tn("Patches").generateReplacementPatches_(
    r[Mt].base_,
    t,
    e.patches_,
    e.inversePatches_
  )) : t = Co(e, r, []), Jl(e), e.patches_ && e.patchListener_(e.patches_, e.inversePatches_), t !== im ? t : void 0;
}
function Co(t, e, r) {
  if (ca(e))
    return e;
  const n = e[Mt];
  if (!n)
    return xo(
      e,
      (i, l) => nf(t, n, e, i, l, r)
    ), e;
  if (n.scope_ !== t)
    return e;
  if (!n.modified_)
    return _o(t, n.base_, !0), n.base_;
  if (!n.finalized_) {
    n.finalized_ = !0, n.scope_.unfinalizedDrafts_--;
    const i = n.copy_;
    let l = i, g = !1;
    n.type_ === 3 && (l = new Set(i), i.clear(), g = !0), xo(
      l,
      (a, s) => nf(t, n, i, a, s, r, g)
    ), _o(t, i, !1), r && t.patches_ && Tn("Patches").generatePatches_(
      n,
      r,
      t.patches_,
      t.inversePatches_
    );
  }
  return n.copy_;
}
function nf(t, e, r, n, i, l, g) {
  if (gi(i)) {
    const a = l && e && e.type_ !== 3 && // Set objects are atomic since they have no keys.
    !ql(e.assigned_, n) ? l.concat(n) : void 0, s = Co(t, i, a);
    if (om(r, n, s), gi(s))
      t.canAutoFreeze_ = !1;
    else
      return;
  } else
    g && r.add(i);
  if (Sn(i) && !ca(i)) {
    if (!t.immer_.autoFreeze_ && t.unfinalizedDrafts_ < 1)
      return;
    Co(t, i), (!e || !e.scope_.parent_) && typeof n != "symbol" && Object.prototype.propertyIsEnumerable.call(r, n) && _o(t, i);
  }
}
function _o(t, e, r = !1) {
  !t.parent_ && t.immer_.autoFreeze_ && t.canAutoFreeze_ && uu(e, r);
}
function BC(t, e) {
  const r = Array.isArray(t), n = {
    type_: r ? 1 : 0,
    // Track which produce call this is associated with.
    scope_: e ? e.scope_ : am(),
    // True for both shallow and deep changes.
    modified_: !1,
    // Used during finalization.
    finalized_: !1,
    // Track which properties have been assigned (true) or deleted (false).
    assigned_: {},
    // The parent draft state.
    parent_: e,
    // The base state.
    base_: t,
    // The base proxy.
    draft_: null,
    // set below
    // The base copy with any updated values.
    copy_: null,
    // Called by the `produce` function.
    revoke_: null,
    isManual_: !1
  };
  let i = n, l = hu;
  r && (i = [n], l = ss);
  const { revoke: g, proxy: a } = Proxy.revocable(i, l);
  return n.draft_ = a, n.revoke_ = g, a;
}
var hu = {
  get(t, e) {
    if (e === Mt)
      return t;
    const r = cn(t);
    if (!ql(r, e))
      return zC(t, r, e);
    const n = r[e];
    return t.finalized_ || !Sn(n) ? n : n === Ka(t.base_, e) ? (Ja(t), t.copy_[e] = ec(n, t)) : n;
  },
  has(t, e) {
    return e in cn(t);
  },
  ownKeys(t) {
    return Reflect.ownKeys(cn(t));
  },
  set(t, e, r) {
    const n = lm(cn(t), e);
    if (n != null && n.set)
      return n.set.call(t.draft_, r), !0;
    if (!t.modified_) {
      const i = Ka(cn(t), e), l = i == null ? void 0 : i[Mt];
      if (l && l.base_ === r)
        return t.copy_[e] = r, t.assigned_[e] = !1, !0;
      if (MC(r, i) && (r !== void 0 || ql(t.base_, e)))
        return !0;
      Ja(t), Ql(t);
    }
    return t.copy_[e] === r && // special case: handle new props with value 'undefined'
    (r !== void 0 || e in t.copy_) || // special case: NaN
    Number.isNaN(r) && Number.isNaN(t.copy_[e]) || (t.copy_[e] = r, t.assigned_[e] = !0), !0;
  },
  deleteProperty(t, e) {
    return Ka(t.base_, e) !== void 0 || e in t.base_ ? (t.assigned_[e] = !1, Ja(t), Ql(t)) : delete t.assigned_[e], t.copy_ && delete t.copy_[e], !0;
  },
  // Note: We never coerce `desc.value` into an Immer draft, because we can't make
  // the same guarantee in ES5 mode.
  getOwnPropertyDescriptor(t, e) {
    const r = cn(t), n = Reflect.getOwnPropertyDescriptor(r, e);
    return n && {
      writable: !0,
      configurable: t.type_ !== 1 || e !== "length",
      enumerable: n.enumerable,
      value: r[e]
    };
  },
  defineProperty() {
    Ut(11);
  },
  getPrototypeOf(t) {
    return pi(t.base_);
  },
  setPrototypeOf() {
    Ut(12);
  }
}, ss = {};
xo(hu, (t, e) => {
  ss[t] = function() {
    return arguments[0] = arguments[0][0], e.apply(this, arguments);
  };
});
ss.deleteProperty = function(t, e) {
  return ss.set.call(this, t, e, void 0);
};
ss.set = function(t, e, r) {
  return hu.set.call(this, t[0], e, r, t[0]);
};
function Ka(t, e) {
  const r = t[Mt];
  return (r ? cn(r) : t)[e];
}
function zC(t, e, r) {
  var i;
  const n = lm(e, r);
  return n ? "value" in n ? n.value : (
    // This is a very special case, if the prop is a getter defined by the
    // prototype, we should invoke it with the draft as context!
    (i = n.get) == null ? void 0 : i.call(t.draft_)
  ) : void 0;
}
function lm(t, e) {
  if (!(e in t))
    return;
  let r = pi(t);
  for (; r; ) {
    const n = Object.getOwnPropertyDescriptor(r, e);
    if (n)
      return n;
    r = pi(r);
  }
}
function Ql(t) {
  t.modified_ || (t.modified_ = !0, t.parent_ && Ql(t.parent_));
}
function Ja(t) {
  t.copy_ || (t.copy_ = Kl(
    t.base_,
    t.scope_.immer_.useStrictShallowCopy_
  ));
}
var NC = class {
  constructor(t) {
    this.autoFreeze_ = !0, this.useStrictShallowCopy_ = !1, this.produce = (e, r, n) => {
      if (typeof e == "function" && typeof r != "function") {
        const l = r;
        r = e;
        const g = this;
        return function(s = l, ...c) {
          return g.produce(s, (f) => r.call(this, f, ...c));
        };
      }
      typeof r != "function" && Ut(6), n !== void 0 && typeof n != "function" && Ut(7);
      let i;
      if (Sn(e)) {
        const l = tf(this), g = ec(e, void 0);
        let a = !0;
        try {
          i = r(g), a = !1;
        } finally {
          a ? Jl(l) : Zl(l);
        }
        return ef(l, n), rf(i, l);
      } else if (!e || typeof e != "object") {
        if (i = r(e), i === void 0 && (i = e), i === im && (i = void 0), this.autoFreeze_ && uu(i, !0), n) {
          const l = [], g = [];
          Tn("Patches").generateReplacementPatches_(e, i, l, g), n(l, g);
        }
        return i;
      } else
        Ut(1, e);
    }, this.produceWithPatches = (e, r) => {
      if (typeof e == "function")
        return (g, ...a) => this.produceWithPatches(g, (s) => e(s, ...a));
      let n, i;
      return [this.produce(e, r, (g, a) => {
        n = g, i = a;
      }), n, i];
    }, typeof (t == null ? void 0 : t.autoFreeze) == "boolean" && this.setAutoFreeze(t.autoFreeze), typeof (t == null ? void 0 : t.useStrictShallowCopy) == "boolean" && this.setUseStrictShallowCopy(t.useStrictShallowCopy);
  }
  createDraft(t) {
    Sn(t) || Ut(8), gi(t) && (t = jC(t));
    const e = tf(this), r = ec(t, void 0);
    return r[Mt].isManual_ = !0, Zl(e), r;
  }
  finishDraft(t, e) {
    const r = t && t[Mt];
    (!r || !r.isManual_) && Ut(9);
    const { scope_: n } = r;
    return ef(n, e), rf(void 0, n);
  }
  /**
   * Pass true to automatically freeze all copies created by Immer.
   *
   * By default, auto-freezing is enabled.
   */
  setAutoFreeze(t) {
    this.autoFreeze_ = t;
  }
  /**
   * Pass true to enable strict shallow copy.
   *
   * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.
   */
  setUseStrictShallowCopy(t) {
    this.useStrictShallowCopy_ = t;
  }
  applyPatches(t, e) {
    let r;
    for (r = e.length - 1; r >= 0; r--) {
      const i = e[r];
      if (i.path.length === 0 && i.op === "replace") {
        t = i.value;
        break;
      }
    }
    r > -1 && (e = e.slice(r + 1));
    const n = Tn("Patches").applyPatches_;
    return gi(t) ? n(t, e) : this.produce(
      t,
      (i) => n(i, e)
    );
  }
};
function ec(t, e) {
  const r = aa(t) ? Tn("MapSet").proxyMap_(t, e) : la(t) ? Tn("MapSet").proxySet_(t, e) : BC(t, e);
  return (e ? e.scope_ : am()).drafts_.push(r), r;
}
function jC(t) {
  return gi(t) || Ut(10, t), cm(t);
}
function cm(t) {
  if (!Sn(t) || ca(t))
    return t;
  const e = t[Mt];
  let r;
  if (e) {
    if (!e.modified_)
      return e.base_;
    e.finalized_ = !0, r = Kl(t, e.scope_.immer_.useStrictShallowCopy_);
  } else
    r = Kl(t, !0);
  return xo(r, (n, i) => {
    om(r, n, cm(i));
  }), e && (e.finalized_ = !1), r;
}
var Ft = new NC(), $C = Ft.produce;
Ft.produceWithPatches.bind(
  Ft
);
Ft.setAutoFreeze.bind(Ft);
Ft.setUseStrictShallowCopy.bind(Ft);
Ft.applyPatches.bind(Ft);
Ft.createDraft.bind(Ft);
Ft.finishDraft.bind(Ft);
var VC = function(e) {
  return HC(e) && !UC(e);
};
function HC(t) {
  return !!t && typeof t == "object";
}
function UC(t) {
  var e = Object.prototype.toString.call(t);
  return e === "[object RegExp]" || e === "[object Date]" || YC(t);
}
var WC = typeof Symbol == "function" && Symbol.for, XC = WC ? Symbol.for("react.element") : 60103;
function YC(t) {
  return t.$$typeof === XC;
}
function GC(t) {
  return Array.isArray(t) ? [] : {};
}
function os(t, e) {
  return e.clone !== !1 && e.isMergeableObject(t) ? mi(GC(t), t, e) : t;
}
function qC(t, e, r) {
  return t.concat(e).map(function(n) {
    return os(n, r);
  });
}
function KC(t, e) {
  if (!e.customMerge)
    return mi;
  var r = e.customMerge(t);
  return typeof r == "function" ? r : mi;
}
function JC(t) {
  return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(t).filter(function(e) {
    return Object.propertyIsEnumerable.call(t, e);
  }) : [];
}
function sf(t) {
  return Object.keys(t).concat(JC(t));
}
function um(t, e) {
  try {
    return e in t;
  } catch {
    return !1;
  }
}
function ZC(t, e) {
  return um(t, e) && !(Object.hasOwnProperty.call(t, e) && Object.propertyIsEnumerable.call(t, e));
}
function QC(t, e, r) {
  var n = {};
  return r.isMergeableObject(t) && sf(t).forEach(function(i) {
    n[i] = os(t[i], r);
  }), sf(e).forEach(function(i) {
    ZC(t, i) || (um(t, i) && r.isMergeableObject(e[i]) ? n[i] = KC(i, r)(t[i], e[i], r) : n[i] = os(e[i], r));
  }), n;
}
function mi(t, e, r) {
  r = r || {}, r.arrayMerge = r.arrayMerge || qC, r.isMergeableObject = r.isMergeableObject || VC, r.cloneUnlessOtherwiseSpecified = os;
  var n = Array.isArray(e), i = Array.isArray(t), l = n === i;
  return l ? n ? r.arrayMerge(t, e, r) : QC(t, e, r) : os(e, r);
}
mi.all = function(e, r) {
  if (!Array.isArray(e))
    throw new Error("first argument should be an array");
  return e.reduce(function(n, i) {
    return mi(n, i, r);
  }, {});
};
var e_ = mi, t_ = e_;
const hm = /* @__PURE__ */ Es(t_);
function r_(t) {
  return t ? t.charAt(0).toLowerCase() + t.slice(1) : "";
}
function n_(t, e) {
  const r = hm(e, t);
  return fm(r, t);
}
function fm(t, e) {
  return Object.keys(t).forEach((r) => {
    if (r.startsWith("replaceDefault") && t[r]) {
      const n = r_(
        r.replace("replaceDefault", "") || "items"
      );
      t[n] = e ? e[n] : [], delete t[r];
    } else
      typeof t[r] == "object" && t[r] !== null && fm(t[r], e == null ? void 0 : e[r]);
  }), t;
}
const i_ = (t, e) => ({
  history: {
    ...of,
    updatePointerById: (r) => {
      const n = e().history.items.findIndex((i) => i.id === r);
      e().history.update(n);
    },
    update: (r, n) => {
      t((i) => {
        i.history.pointer = r, n && (i.history.items = n), i.history.canUndo = i.history.pointer > 0, i.history.canRedo = i.history.items.length > i.history.pointer + 1;
      });
    },
    reset: (r) => {
      t({ history: { ...e().history, ...r ?? of } });
    }
  }
}), of = {
  items: [],
  pointer: 0,
  canUndo: !1,
  canRedo: !1
};
var Nt = /* @__PURE__ */ ((t) => (t.Filter = "filter", t.Frame = "frame", t.ActiveObject = "activeObj", t.Text = "text", t))(Nt || {});
const s_ = (t, e) => ({
  filter: {
    ...af,
    select(r, n = !1) {
      t((i) => {
        i.filter.selected = r, i.activeToolOverlay = n ? Nt.Filter : null, i.dirty = !0;
      });
    },
    deselect(r) {
      e().filter.selected === r && t((n) => {
        n.filter.selected = null, n.activeToolOverlay = null, n.dirty = !0;
      });
    },
    reset() {
      t({ filter: { ...e().filter, ...af } });
    }
  }
}), af = {
  selected: null,
  applied: []
}, o_ = (t, e) => ({
  crop: {
    ...lf,
    setCropzoneRect: (r) => {
      t((n) => {
        n.crop.zoneRect = r;
      });
    },
    setAspectRatio: (r) => {
      t((n) => {
        n.crop.selectedAspectRatio = r;
      });
    },
    setTransformAngle: (r) => {
      t((n) => {
        n.crop.straightenAngle = r;
      });
    },
    apply: async () => {
      const r = e().crop.zoneRect;
      if (r) {
        const n = {
          width: Math.ceil(r.width / e().zoom),
          height: Math.ceil(r.height / e().zoom),
          left: Math.ceil(r.left / e().zoom),
          top: Math.ceil(r.top / e().zoom)
        };
        await e().editor.tools.crop.apply(n);
      }
    },
    reset: () => {
      t({ crop: { ...e().crop, ...lf } });
    }
  }
}), lf = {
  zoneRect: null,
  selectedAspectRatio: null,
  straightenAngle: 0
};
function tn(t) {
  return (t == null ? void 0 : t.type) === "i-text";
}
var qe = /* @__PURE__ */ ((t) => (t.Text = "text", t.Shape = "shape", t.Sticker = "sticker", t.Drawing = "drawing", t.Image = "image", t.MainImage = "mainImage", t.StraightenAnchor = "straightenHelper", t))(qe || {});
const a_ = {
  text: {
    name: le("Text"),
    icon: Mr.text.icon
  },
  shape: {
    name: le("Shape"),
    icon: Mr.shapes.icon
  },
  sticker: {
    name: le("Sticker"),
    icon: Mr.stickers.icon
  },
  drawing: {
    name: le("Drawing"),
    icon: Mr.draw.icon
  },
  image: {
    name: le("Image"),
    icon: Mr.overlayImage.icon
  },
  mainImage: {
    name: le("Background Image"),
    icon: Mr.bgImage.icon
  }
};
function l_(t) {
  return t.name === qe.Image;
}
const dm = {
  isMoving: !1,
  editableProps: {},
  id: null,
  isText: !1,
  isImage: !1,
  name: null
};
function c_(t) {
  if (!t)
    return {};
  const e = {
    fill: t.fill,
    opacity: t.opacity,
    backgroundColor: t.backgroundColor,
    stroke: t.stroke,
    strokeWidth: t.strokeWidth
  }, r = t.shadow;
  return r && (e.shadow = {
    color: r.color,
    blur: r.blur,
    offsetX: r.offsetX,
    offsetY: r.offsetY
  }), tn(t) && (e.textAlign = t.textAlign, e.underline = t.underline, e.linethrough = t.linethrough, e.fontStyle = t.fontStyle, e.fontFamily = t.fontFamily, e.fontWeight = t.fontWeight, e.fontSize = t.fontSize), e;
}
const u_ = (t, e) => ({
  objects: {
    ...cf,
    setActiveIsMoving: (r) => {
      t((n) => {
        n.objects.active.isMoving = r;
      });
    },
    setIsEditingText: (r) => {
      t((n) => {
        n.objects.isEditingText = r;
      });
    },
    setActive: (r) => {
      t(r ? (n) => {
        n.objects.active.editableProps = c_(r), n.objects.active.id = r.data.id, n.objects.active.name = r.name ?? null, n.objects.active.isText = tn(r), n.objects.active.isImage = l_(r);
      } : (n) => {
        var l, g, a, s, c;
        const i = {
          ...(l = e().config.objectDefaults) == null ? void 0 : l.global,
          fontFamily: (a = (g = e().config.objectDefaults) == null ? void 0 : g.text) == null ? void 0 : a.fontFamily,
          fontSize: (c = (s = e().config.objectDefaults) == null ? void 0 : s.text) == null ? void 0 : c.fontSize
        };
        n.objects.active = {
          ...dm,
          editableProps: i
        };
      });
    },
    reset() {
      t({ objects: { ...e().objects, ...cf } });
    }
  }
}), cf = {
  all: [],
  isEditingText: !1,
  active: dm
}, h_ = (t, e) => ({
  frame: {
    ...uf,
    select: (r) => {
      t((n) => {
        n.frame.active = r;
      }), e().frame.showOptionsPanel();
    },
    deselect: () => {
      t((r) => {
        r.frame.active = null, r.activeToolOverlay = null;
      });
    },
    showOptionsPanel: () => {
      e().activeTool === Be.FRAME && t((r) => {
        r.activeToolOverlay = Nt.Frame;
      });
    },
    reset() {
      t({ frame: { ...e().frame, ...uf } });
    }
  }
}), uf = {
  active: null
}, f_ = (t, e) => ({
  resize: {
    ...hf,
    setFormValue: (r) => {
      t((n) => {
        Object.entries(r).forEach(([i, l]) => {
          n.resize.formValue[i] = l;
        });
      });
    },
    apply() {
      const r = e().resize.formValue, n = e().original;
      if (r.width === n.width && r.height === n.height)
        return !1;
      e().editor.tools.resize.apply(r);
    },
    reset() {
      t({ resize: { ...e().resize, ...hf } });
    }
  }
}), hf = {
  formValue: {
    width: 1,
    height: 1,
    maintainAspect: !0,
    usePercentages: !1
  }
}, d_ = (t, e) => ({
  corners: {
    ...ff,
    setRadius: (r) => {
      t((n) => {
        n.corners.radius = r;
      });
    },
    apply() {
      return e().editor.tools.corners.apply(e().corners.radius);
    },
    reset() {
      t({ corners: { ...e().corners, ...ff } });
    }
  }
}), ff = {
  radius: 50
}, p_ = (t) => (e, r, n) => (n.setState = (i, l, ...g) => {
  const a = typeof i == "function" ? $C(i) : i;
  return e(a, l, ...g);
}, t(n.setState, r, n)), pm = p_;
var gm = { exports: {} }, g_ = {
  aliceblue: [240, 248, 255],
  antiquewhite: [250, 235, 215],
  aqua: [0, 255, 255],
  aquamarine: [127, 255, 212],
  azure: [240, 255, 255],
  beige: [245, 245, 220],
  bisque: [255, 228, 196],
  black: [0, 0, 0],
  blanchedalmond: [255, 235, 205],
  blue: [0, 0, 255],
  blueviolet: [138, 43, 226],
  brown: [165, 42, 42],
  burlywood: [222, 184, 135],
  cadetblue: [95, 158, 160],
  chartreuse: [127, 255, 0],
  chocolate: [210, 105, 30],
  coral: [255, 127, 80],
  cornflowerblue: [100, 149, 237],
  cornsilk: [255, 248, 220],
  crimson: [220, 20, 60],
  cyan: [0, 255, 255],
  darkblue: [0, 0, 139],
  darkcyan: [0, 139, 139],
  darkgoldenrod: [184, 134, 11],
  darkgray: [169, 169, 169],
  darkgreen: [0, 100, 0],
  darkgrey: [169, 169, 169],
  darkkhaki: [189, 183, 107],
  darkmagenta: [139, 0, 139],
  darkolivegreen: [85, 107, 47],
  darkorange: [255, 140, 0],
  darkorchid: [153, 50, 204],
  darkred: [139, 0, 0],
  darksalmon: [233, 150, 122],
  darkseagreen: [143, 188, 143],
  darkslateblue: [72, 61, 139],
  darkslategray: [47, 79, 79],
  darkslategrey: [47, 79, 79],
  darkturquoise: [0, 206, 209],
  darkviolet: [148, 0, 211],
  deeppink: [255, 20, 147],
  deepskyblue: [0, 191, 255],
  dimgray: [105, 105, 105],
  dimgrey: [105, 105, 105],
  dodgerblue: [30, 144, 255],
  firebrick: [178, 34, 34],
  floralwhite: [255, 250, 240],
  forestgreen: [34, 139, 34],
  fuchsia: [255, 0, 255],
  gainsboro: [220, 220, 220],
  ghostwhite: [248, 248, 255],
  gold: [255, 215, 0],
  goldenrod: [218, 165, 32],
  gray: [128, 128, 128],
  green: [0, 128, 0],
  greenyellow: [173, 255, 47],
  grey: [128, 128, 128],
  honeydew: [240, 255, 240],
  hotpink: [255, 105, 180],
  indianred: [205, 92, 92],
  indigo: [75, 0, 130],
  ivory: [255, 255, 240],
  khaki: [240, 230, 140],
  lavender: [230, 230, 250],
  lavenderblush: [255, 240, 245],
  lawngreen: [124, 252, 0],
  lemonchiffon: [255, 250, 205],
  lightblue: [173, 216, 230],
  lightcoral: [240, 128, 128],
  lightcyan: [224, 255, 255],
  lightgoldenrodyellow: [250, 250, 210],
  lightgray: [211, 211, 211],
  lightgreen: [144, 238, 144],
  lightgrey: [211, 211, 211],
  lightpink: [255, 182, 193],
  lightsalmon: [255, 160, 122],
  lightseagreen: [32, 178, 170],
  lightskyblue: [135, 206, 250],
  lightslategray: [119, 136, 153],
  lightslategrey: [119, 136, 153],
  lightsteelblue: [176, 196, 222],
  lightyellow: [255, 255, 224],
  lime: [0, 255, 0],
  limegreen: [50, 205, 50],
  linen: [250, 240, 230],
  magenta: [255, 0, 255],
  maroon: [128, 0, 0],
  mediumaquamarine: [102, 205, 170],
  mediumblue: [0, 0, 205],
  mediumorchid: [186, 85, 211],
  mediumpurple: [147, 112, 219],
  mediumseagreen: [60, 179, 113],
  mediumslateblue: [123, 104, 238],
  mediumspringgreen: [0, 250, 154],
  mediumturquoise: [72, 209, 204],
  mediumvioletred: [199, 21, 133],
  midnightblue: [25, 25, 112],
  mintcream: [245, 255, 250],
  mistyrose: [255, 228, 225],
  moccasin: [255, 228, 181],
  navajowhite: [255, 222, 173],
  navy: [0, 0, 128],
  oldlace: [253, 245, 230],
  olive: [128, 128, 0],
  olivedrab: [107, 142, 35],
  orange: [255, 165, 0],
  orangered: [255, 69, 0],
  orchid: [218, 112, 214],
  palegoldenrod: [238, 232, 170],
  palegreen: [152, 251, 152],
  paleturquoise: [175, 238, 238],
  palevioletred: [219, 112, 147],
  papayawhip: [255, 239, 213],
  peachpuff: [255, 218, 185],
  peru: [205, 133, 63],
  pink: [255, 192, 203],
  plum: [221, 160, 221],
  powderblue: [176, 224, 230],
  purple: [128, 0, 128],
  rebeccapurple: [102, 51, 153],
  red: [255, 0, 0],
  rosybrown: [188, 143, 143],
  royalblue: [65, 105, 225],
  saddlebrown: [139, 69, 19],
  salmon: [250, 128, 114],
  sandybrown: [244, 164, 96],
  seagreen: [46, 139, 87],
  seashell: [255, 245, 238],
  sienna: [160, 82, 45],
  silver: [192, 192, 192],
  skyblue: [135, 206, 235],
  slateblue: [106, 90, 205],
  slategray: [112, 128, 144],
  slategrey: [112, 128, 144],
  snow: [255, 250, 250],
  springgreen: [0, 255, 127],
  steelblue: [70, 130, 180],
  tan: [210, 180, 140],
  teal: [0, 128, 128],
  thistle: [216, 191, 216],
  tomato: [255, 99, 71],
  turquoise: [64, 224, 208],
  violet: [238, 130, 238],
  wheat: [245, 222, 179],
  white: [255, 255, 255],
  whitesmoke: [245, 245, 245],
  yellow: [255, 255, 0],
  yellowgreen: [154, 205, 50]
}, mm = { exports: {} }, m_ = function(e) {
  return !e || typeof e == "string" ? !1 : e instanceof Array || Array.isArray(e) || e.length >= 0 && (e.splice instanceof Function || Object.getOwnPropertyDescriptor(e, e.length - 1) && e.constructor.name !== "String");
}, v_ = m_, b_ = Array.prototype.concat, y_ = Array.prototype.slice, df = mm.exports = function(e) {
  for (var r = [], n = 0, i = e.length; n < i; n++) {
    var l = e[n];
    v_(l) ? r = b_.call(r, y_.call(l)) : r.push(l);
  }
  return r;
};
df.wrap = function(t) {
  return function() {
    return t(df(arguments));
  };
};
var w_ = mm.exports, Gi = g_, ks = w_, vm = Object.hasOwnProperty, bm = /* @__PURE__ */ Object.create(null);
for (var Za in Gi)
  vm.call(Gi, Za) && (bm[Gi[Za]] = Za);
var kt = gm.exports = {
  to: {},
  get: {}
};
kt.get = function(t) {
  var e = t.substring(0, 3).toLowerCase(), r, n;
  switch (e) {
    case "hsl":
      r = kt.get.hsl(t), n = "hsl";
      break;
    case "hwb":
      r = kt.get.hwb(t), n = "hwb";
      break;
    default:
      r = kt.get.rgb(t), n = "rgb";
      break;
  }
  return r ? { model: n, value: r } : null;
};
kt.get.rgb = function(t) {
  if (!t)
    return null;
  var e = /^#([a-f0-9]{3,4})$/i, r = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i, n = /^rgba?\(\s*([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/, i = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/, l = /^(\w+)$/, g = [0, 0, 0, 1], a, s, c;
  if (a = t.match(r)) {
    for (c = a[2], a = a[1], s = 0; s < 3; s++) {
      var f = s * 2;
      g[s] = parseInt(a.slice(f, f + 2), 16);
    }
    c && (g[3] = parseInt(c, 16) / 255);
  } else if (a = t.match(e)) {
    for (a = a[1], c = a[3], s = 0; s < 3; s++)
      g[s] = parseInt(a[s] + a[s], 16);
    c && (g[3] = parseInt(c + c, 16) / 255);
  } else if (a = t.match(n)) {
    for (s = 0; s < 3; s++)
      g[s] = parseInt(a[s + 1], 0);
    a[4] && (a[5] ? g[3] = parseFloat(a[4]) * 0.01 : g[3] = parseFloat(a[4]));
  } else if (a = t.match(i)) {
    for (s = 0; s < 3; s++)
      g[s] = Math.round(parseFloat(a[s + 1]) * 2.55);
    a[4] && (a[5] ? g[3] = parseFloat(a[4]) * 0.01 : g[3] = parseFloat(a[4]));
  } else
    return (a = t.match(l)) ? a[1] === "transparent" ? [0, 0, 0, 0] : vm.call(Gi, a[1]) ? (g = Gi[a[1]], g[3] = 1, g) : null : null;
  for (s = 0; s < 3; s++)
    g[s] = jr(g[s], 0, 255);
  return g[3] = jr(g[3], 0, 1), g;
};
kt.get.hsl = function(t) {
  if (!t)
    return null;
  var e = /^hsla?\(\s*([+-]?(?:\d{0,3}\.)?\d+)(?:deg)?\s*,?\s*([+-]?[\d\.]+)%\s*,?\s*([+-]?[\d\.]+)%\s*(?:[,|\/]\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/, r = t.match(e);
  if (r) {
    var n = parseFloat(r[4]), i = (parseFloat(r[1]) % 360 + 360) % 360, l = jr(parseFloat(r[2]), 0, 100), g = jr(parseFloat(r[3]), 0, 100), a = jr(isNaN(n) ? 1 : n, 0, 1);
    return [i, l, g, a];
  }
  return null;
};
kt.get.hwb = function(t) {
  if (!t)
    return null;
  var e = /^hwb\(\s*([+-]?\d{0,3}(?:\.\d+)?)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/, r = t.match(e);
  if (r) {
    var n = parseFloat(r[4]), i = (parseFloat(r[1]) % 360 + 360) % 360, l = jr(parseFloat(r[2]), 0, 100), g = jr(parseFloat(r[3]), 0, 100), a = jr(isNaN(n) ? 1 : n, 0, 1);
    return [i, l, g, a];
  }
  return null;
};
kt.to.hex = function() {
  var t = ks(arguments);
  return "#" + qs(t[0]) + qs(t[1]) + qs(t[2]) + (t[3] < 1 ? qs(Math.round(t[3] * 255)) : "");
};
kt.to.rgb = function() {
  var t = ks(arguments);
  return t.length < 4 || t[3] === 1 ? "rgb(" + Math.round(t[0]) + ", " + Math.round(t[1]) + ", " + Math.round(t[2]) + ")" : "rgba(" + Math.round(t[0]) + ", " + Math.round(t[1]) + ", " + Math.round(t[2]) + ", " + t[3] + ")";
};
kt.to.rgb.percent = function() {
  var t = ks(arguments), e = Math.round(t[0] / 255 * 100), r = Math.round(t[1] / 255 * 100), n = Math.round(t[2] / 255 * 100);
  return t.length < 4 || t[3] === 1 ? "rgb(" + e + "%, " + r + "%, " + n + "%)" : "rgba(" + e + "%, " + r + "%, " + n + "%, " + t[3] + ")";
};
kt.to.hsl = function() {
  var t = ks(arguments);
  return t.length < 4 || t[3] === 1 ? "hsl(" + t[0] + ", " + t[1] + "%, " + t[2] + "%)" : "hsla(" + t[0] + ", " + t[1] + "%, " + t[2] + "%, " + t[3] + ")";
};
kt.to.hwb = function() {
  var t = ks(arguments), e = "";
  return t.length >= 4 && t[3] !== 1 && (e = ", " + t[3]), "hwb(" + t[0] + ", " + t[1] + "%, " + t[2] + "%" + e + ")";
};
kt.to.keyword = function(t) {
  return bm[t.slice(0, 3)];
};
function jr(t, e, r) {
  return Math.min(Math.max(e, t), r);
}
function qs(t) {
  var e = Math.round(t).toString(16).toUpperCase();
  return e.length < 2 ? "0" + e : e;
}
var x_ = gm.exports, C_ = {
  aliceblue: [240, 248, 255],
  antiquewhite: [250, 235, 215],
  aqua: [0, 255, 255],
  aquamarine: [127, 255, 212],
  azure: [240, 255, 255],
  beige: [245, 245, 220],
  bisque: [255, 228, 196],
  black: [0, 0, 0],
  blanchedalmond: [255, 235, 205],
  blue: [0, 0, 255],
  blueviolet: [138, 43, 226],
  brown: [165, 42, 42],
  burlywood: [222, 184, 135],
  cadetblue: [95, 158, 160],
  chartreuse: [127, 255, 0],
  chocolate: [210, 105, 30],
  coral: [255, 127, 80],
  cornflowerblue: [100, 149, 237],
  cornsilk: [255, 248, 220],
  crimson: [220, 20, 60],
  cyan: [0, 255, 255],
  darkblue: [0, 0, 139],
  darkcyan: [0, 139, 139],
  darkgoldenrod: [184, 134, 11],
  darkgray: [169, 169, 169],
  darkgreen: [0, 100, 0],
  darkgrey: [169, 169, 169],
  darkkhaki: [189, 183, 107],
  darkmagenta: [139, 0, 139],
  darkolivegreen: [85, 107, 47],
  darkorange: [255, 140, 0],
  darkorchid: [153, 50, 204],
  darkred: [139, 0, 0],
  darksalmon: [233, 150, 122],
  darkseagreen: [143, 188, 143],
  darkslateblue: [72, 61, 139],
  darkslategray: [47, 79, 79],
  darkslategrey: [47, 79, 79],
  darkturquoise: [0, 206, 209],
  darkviolet: [148, 0, 211],
  deeppink: [255, 20, 147],
  deepskyblue: [0, 191, 255],
  dimgray: [105, 105, 105],
  dimgrey: [105, 105, 105],
  dodgerblue: [30, 144, 255],
  firebrick: [178, 34, 34],
  floralwhite: [255, 250, 240],
  forestgreen: [34, 139, 34],
  fuchsia: [255, 0, 255],
  gainsboro: [220, 220, 220],
  ghostwhite: [248, 248, 255],
  gold: [255, 215, 0],
  goldenrod: [218, 165, 32],
  gray: [128, 128, 128],
  green: [0, 128, 0],
  greenyellow: [173, 255, 47],
  grey: [128, 128, 128],
  honeydew: [240, 255, 240],
  hotpink: [255, 105, 180],
  indianred: [205, 92, 92],
  indigo: [75, 0, 130],
  ivory: [255, 255, 240],
  khaki: [240, 230, 140],
  lavender: [230, 230, 250],
  lavenderblush: [255, 240, 245],
  lawngreen: [124, 252, 0],
  lemonchiffon: [255, 250, 205],
  lightblue: [173, 216, 230],
  lightcoral: [240, 128, 128],
  lightcyan: [224, 255, 255],
  lightgoldenrodyellow: [250, 250, 210],
  lightgray: [211, 211, 211],
  lightgreen: [144, 238, 144],
  lightgrey: [211, 211, 211],
  lightpink: [255, 182, 193],
  lightsalmon: [255, 160, 122],
  lightseagreen: [32, 178, 170],
  lightskyblue: [135, 206, 250],
  lightslategray: [119, 136, 153],
  lightslategrey: [119, 136, 153],
  lightsteelblue: [176, 196, 222],
  lightyellow: [255, 255, 224],
  lime: [0, 255, 0],
  limegreen: [50, 205, 50],
  linen: [250, 240, 230],
  magenta: [255, 0, 255],
  maroon: [128, 0, 0],
  mediumaquamarine: [102, 205, 170],
  mediumblue: [0, 0, 205],
  mediumorchid: [186, 85, 211],
  mediumpurple: [147, 112, 219],
  mediumseagreen: [60, 179, 113],
  mediumslateblue: [123, 104, 238],
  mediumspringgreen: [0, 250, 154],
  mediumturquoise: [72, 209, 204],
  mediumvioletred: [199, 21, 133],
  midnightblue: [25, 25, 112],
  mintcream: [245, 255, 250],
  mistyrose: [255, 228, 225],
  moccasin: [255, 228, 181],
  navajowhite: [255, 222, 173],
  navy: [0, 0, 128],
  oldlace: [253, 245, 230],
  olive: [128, 128, 0],
  olivedrab: [107, 142, 35],
  orange: [255, 165, 0],
  orangered: [255, 69, 0],
  orchid: [218, 112, 214],
  palegoldenrod: [238, 232, 170],
  palegreen: [152, 251, 152],
  paleturquoise: [175, 238, 238],
  palevioletred: [219, 112, 147],
  papayawhip: [255, 239, 213],
  peachpuff: [255, 218, 185],
  peru: [205, 133, 63],
  pink: [255, 192, 203],
  plum: [221, 160, 221],
  powderblue: [176, 224, 230],
  purple: [128, 0, 128],
  rebeccapurple: [102, 51, 153],
  red: [255, 0, 0],
  rosybrown: [188, 143, 143],
  royalblue: [65, 105, 225],
  saddlebrown: [139, 69, 19],
  salmon: [250, 128, 114],
  sandybrown: [244, 164, 96],
  seagreen: [46, 139, 87],
  seashell: [255, 245, 238],
  sienna: [160, 82, 45],
  silver: [192, 192, 192],
  skyblue: [135, 206, 235],
  slateblue: [106, 90, 205],
  slategray: [112, 128, 144],
  slategrey: [112, 128, 144],
  snow: [255, 250, 250],
  springgreen: [0, 255, 127],
  steelblue: [70, 130, 180],
  tan: [210, 180, 140],
  teal: [0, 128, 128],
  thistle: [216, 191, 216],
  tomato: [255, 99, 71],
  turquoise: [64, 224, 208],
  violet: [238, 130, 238],
  wheat: [245, 222, 179],
  white: [255, 255, 255],
  whitesmoke: [245, 245, 245],
  yellow: [255, 255, 0],
  yellowgreen: [154, 205, 50]
};
const as = C_, ym = {};
for (const t of Object.keys(as))
  ym[as[t]] = t;
const be = {
  rgb: { channels: 3, labels: "rgb" },
  hsl: { channels: 3, labels: "hsl" },
  hsv: { channels: 3, labels: "hsv" },
  hwb: { channels: 3, labels: "hwb" },
  cmyk: { channels: 4, labels: "cmyk" },
  xyz: { channels: 3, labels: "xyz" },
  lab: { channels: 3, labels: "lab" },
  lch: { channels: 3, labels: "lch" },
  hex: { channels: 1, labels: ["hex"] },
  keyword: { channels: 1, labels: ["keyword"] },
  ansi16: { channels: 1, labels: ["ansi16"] },
  ansi256: { channels: 1, labels: ["ansi256"] },
  hcg: { channels: 3, labels: ["h", "c", "g"] },
  apple: { channels: 3, labels: ["r16", "g16", "b16"] },
  gray: { channels: 1, labels: ["gray"] }
};
var wm = be;
for (const t of Object.keys(be)) {
  if (!("channels" in be[t]))
    throw new Error("missing channels property: " + t);
  if (!("labels" in be[t]))
    throw new Error("missing channel labels property: " + t);
  if (be[t].labels.length !== be[t].channels)
    throw new Error("channel and label counts mismatch: " + t);
  const { channels: e, labels: r } = be[t];
  delete be[t].channels, delete be[t].labels, Object.defineProperty(be[t], "channels", { value: e }), Object.defineProperty(be[t], "labels", { value: r });
}
be.rgb.hsl = function(t) {
  const e = t[0] / 255, r = t[1] / 255, n = t[2] / 255, i = Math.min(e, r, n), l = Math.max(e, r, n), g = l - i;
  let a, s;
  l === i ? a = 0 : e === l ? a = (r - n) / g : r === l ? a = 2 + (n - e) / g : n === l && (a = 4 + (e - r) / g), a = Math.min(a * 60, 360), a < 0 && (a += 360);
  const c = (i + l) / 2;
  return l === i ? s = 0 : c <= 0.5 ? s = g / (l + i) : s = g / (2 - l - i), [a, s * 100, c * 100];
};
be.rgb.hsv = function(t) {
  let e, r, n, i, l;
  const g = t[0] / 255, a = t[1] / 255, s = t[2] / 255, c = Math.max(g, a, s), f = c - Math.min(g, a, s), o = function(h) {
    return (c - h) / 6 / f + 1 / 2;
  };
  return f === 0 ? (i = 0, l = 0) : (l = f / c, e = o(g), r = o(a), n = o(s), g === c ? i = n - r : a === c ? i = 1 / 3 + e - n : s === c && (i = 2 / 3 + r - e), i < 0 ? i += 1 : i > 1 && (i -= 1)), [
    i * 360,
    l * 100,
    c * 100
  ];
};
be.rgb.hwb = function(t) {
  const e = t[0], r = t[1];
  let n = t[2];
  const i = be.rgb.hsl(t)[0], l = 1 / 255 * Math.min(e, Math.min(r, n));
  return n = 1 - 1 / 255 * Math.max(e, Math.max(r, n)), [i, l * 100, n * 100];
};
be.rgb.cmyk = function(t) {
  const e = t[0] / 255, r = t[1] / 255, n = t[2] / 255, i = Math.min(1 - e, 1 - r, 1 - n), l = (1 - e - i) / (1 - i) || 0, g = (1 - r - i) / (1 - i) || 0, a = (1 - n - i) / (1 - i) || 0;
  return [l * 100, g * 100, a * 100, i * 100];
};
function __(t, e) {
  return (t[0] - e[0]) ** 2 + (t[1] - e[1]) ** 2 + (t[2] - e[2]) ** 2;
}
be.rgb.keyword = function(t) {
  const e = ym[t];
  if (e)
    return e;
  let r = 1 / 0, n;
  for (const i of Object.keys(as)) {
    const l = as[i], g = __(t, l);
    g < r && (r = g, n = i);
  }
  return n;
};
be.keyword.rgb = function(t) {
  return as[t];
};
be.rgb.xyz = function(t) {
  let e = t[0] / 255, r = t[1] / 255, n = t[2] / 255;
  e = e > 0.04045 ? ((e + 0.055) / 1.055) ** 2.4 : e / 12.92, r = r > 0.04045 ? ((r + 0.055) / 1.055) ** 2.4 : r / 12.92, n = n > 0.04045 ? ((n + 0.055) / 1.055) ** 2.4 : n / 12.92;
  const i = e * 0.4124 + r * 0.3576 + n * 0.1805, l = e * 0.2126 + r * 0.7152 + n * 0.0722, g = e * 0.0193 + r * 0.1192 + n * 0.9505;
  return [i * 100, l * 100, g * 100];
};
be.rgb.lab = function(t) {
  const e = be.rgb.xyz(t);
  let r = e[0], n = e[1], i = e[2];
  r /= 95.047, n /= 100, i /= 108.883, r = r > 8856e-6 ? r ** (1 / 3) : 7.787 * r + 16 / 116, n = n > 8856e-6 ? n ** (1 / 3) : 7.787 * n + 16 / 116, i = i > 8856e-6 ? i ** (1 / 3) : 7.787 * i + 16 / 116;
  const l = 116 * n - 16, g = 500 * (r - n), a = 200 * (n - i);
  return [l, g, a];
};
be.hsl.rgb = function(t) {
  const e = t[0] / 360, r = t[1] / 100, n = t[2] / 100;
  let i, l, g;
  if (r === 0)
    return g = n * 255, [g, g, g];
  n < 0.5 ? i = n * (1 + r) : i = n + r - n * r;
  const a = 2 * n - i, s = [0, 0, 0];
  for (let c = 0; c < 3; c++)
    l = e + 1 / 3 * -(c - 1), l < 0 && l++, l > 1 && l--, 6 * l < 1 ? g = a + (i - a) * 6 * l : 2 * l < 1 ? g = i : 3 * l < 2 ? g = a + (i - a) * (2 / 3 - l) * 6 : g = a, s[c] = g * 255;
  return s;
};
be.hsl.hsv = function(t) {
  const e = t[0];
  let r = t[1] / 100, n = t[2] / 100, i = r;
  const l = Math.max(n, 0.01);
  n *= 2, r *= n <= 1 ? n : 2 - n, i *= l <= 1 ? l : 2 - l;
  const g = (n + r) / 2, a = n === 0 ? 2 * i / (l + i) : 2 * r / (n + r);
  return [e, a * 100, g * 100];
};
be.hsv.rgb = function(t) {
  const e = t[0] / 60, r = t[1] / 100;
  let n = t[2] / 100;
  const i = Math.floor(e) % 6, l = e - Math.floor(e), g = 255 * n * (1 - r), a = 255 * n * (1 - r * l), s = 255 * n * (1 - r * (1 - l));
  switch (n *= 255, i) {
    case 0:
      return [n, s, g];
    case 1:
      return [a, n, g];
    case 2:
      return [g, n, s];
    case 3:
      return [g, a, n];
    case 4:
      return [s, g, n];
    case 5:
      return [n, g, a];
  }
};
be.hsv.hsl = function(t) {
  const e = t[0], r = t[1] / 100, n = t[2] / 100, i = Math.max(n, 0.01);
  let l, g;
  g = (2 - r) * n;
  const a = (2 - r) * i;
  return l = r * i, l /= a <= 1 ? a : 2 - a, l = l || 0, g /= 2, [e, l * 100, g * 100];
};
be.hwb.rgb = function(t) {
  const e = t[0] / 360;
  let r = t[1] / 100, n = t[2] / 100;
  const i = r + n;
  let l;
  i > 1 && (r /= i, n /= i);
  const g = Math.floor(6 * e), a = 1 - n;
  l = 6 * e - g, g & 1 && (l = 1 - l);
  const s = r + l * (a - r);
  let c, f, o;
  switch (g) {
    default:
    case 6:
    case 0:
      c = a, f = s, o = r;
      break;
    case 1:
      c = s, f = a, o = r;
      break;
    case 2:
      c = r, f = a, o = s;
      break;
    case 3:
      c = r, f = s, o = a;
      break;
    case 4:
      c = s, f = r, o = a;
      break;
    case 5:
      c = a, f = r, o = s;
      break;
  }
  return [c * 255, f * 255, o * 255];
};
be.cmyk.rgb = function(t) {
  const e = t[0] / 100, r = t[1] / 100, n = t[2] / 100, i = t[3] / 100, l = 1 - Math.min(1, e * (1 - i) + i), g = 1 - Math.min(1, r * (1 - i) + i), a = 1 - Math.min(1, n * (1 - i) + i);
  return [l * 255, g * 255, a * 255];
};
be.xyz.rgb = function(t) {
  const e = t[0] / 100, r = t[1] / 100, n = t[2] / 100;
  let i, l, g;
  return i = e * 3.2406 + r * -1.5372 + n * -0.4986, l = e * -0.9689 + r * 1.8758 + n * 0.0415, g = e * 0.0557 + r * -0.204 + n * 1.057, i = i > 31308e-7 ? 1.055 * i ** (1 / 2.4) - 0.055 : i * 12.92, l = l > 31308e-7 ? 1.055 * l ** (1 / 2.4) - 0.055 : l * 12.92, g = g > 31308e-7 ? 1.055 * g ** (1 / 2.4) - 0.055 : g * 12.92, i = Math.min(Math.max(0, i), 1), l = Math.min(Math.max(0, l), 1), g = Math.min(Math.max(0, g), 1), [i * 255, l * 255, g * 255];
};
be.xyz.lab = function(t) {
  let e = t[0], r = t[1], n = t[2];
  e /= 95.047, r /= 100, n /= 108.883, e = e > 8856e-6 ? e ** (1 / 3) : 7.787 * e + 16 / 116, r = r > 8856e-6 ? r ** (1 / 3) : 7.787 * r + 16 / 116, n = n > 8856e-6 ? n ** (1 / 3) : 7.787 * n + 16 / 116;
  const i = 116 * r - 16, l = 500 * (e - r), g = 200 * (r - n);
  return [i, l, g];
};
be.lab.xyz = function(t) {
  const e = t[0], r = t[1], n = t[2];
  let i, l, g;
  l = (e + 16) / 116, i = r / 500 + l, g = l - n / 200;
  const a = l ** 3, s = i ** 3, c = g ** 3;
  return l = a > 8856e-6 ? a : (l - 16 / 116) / 7.787, i = s > 8856e-6 ? s : (i - 16 / 116) / 7.787, g = c > 8856e-6 ? c : (g - 16 / 116) / 7.787, i *= 95.047, l *= 100, g *= 108.883, [i, l, g];
};
be.lab.lch = function(t) {
  const e = t[0], r = t[1], n = t[2];
  let i;
  i = Math.atan2(n, r) * 360 / 2 / Math.PI, i < 0 && (i += 360);
  const g = Math.sqrt(r * r + n * n);
  return [e, g, i];
};
be.lch.lab = function(t) {
  const e = t[0], r = t[1], i = t[2] / 360 * 2 * Math.PI, l = r * Math.cos(i), g = r * Math.sin(i);
  return [e, l, g];
};
be.rgb.ansi16 = function(t, e = null) {
  const [r, n, i] = t;
  let l = e === null ? be.rgb.hsv(t)[2] : e;
  if (l = Math.round(l / 50), l === 0)
    return 30;
  let g = 30 + (Math.round(i / 255) << 2 | Math.round(n / 255) << 1 | Math.round(r / 255));
  return l === 2 && (g += 60), g;
};
be.hsv.ansi16 = function(t) {
  return be.rgb.ansi16(be.hsv.rgb(t), t[2]);
};
be.rgb.ansi256 = function(t) {
  const e = t[0], r = t[1], n = t[2];
  return e === r && r === n ? e < 8 ? 16 : e > 248 ? 231 : Math.round((e - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(e / 255 * 5) + 6 * Math.round(r / 255 * 5) + Math.round(n / 255 * 5);
};
be.ansi16.rgb = function(t) {
  let e = t % 10;
  if (e === 0 || e === 7)
    return t > 50 && (e += 3.5), e = e / 10.5 * 255, [e, e, e];
  const r = (~~(t > 50) + 1) * 0.5, n = (e & 1) * r * 255, i = (e >> 1 & 1) * r * 255, l = (e >> 2 & 1) * r * 255;
  return [n, i, l];
};
be.ansi256.rgb = function(t) {
  if (t >= 232) {
    const l = (t - 232) * 10 + 8;
    return [l, l, l];
  }
  t -= 16;
  let e;
  const r = Math.floor(t / 36) / 5 * 255, n = Math.floor((e = t % 36) / 6) / 5 * 255, i = e % 6 / 5 * 255;
  return [r, n, i];
};
be.rgb.hex = function(t) {
  const r = (((Math.round(t[0]) & 255) << 16) + ((Math.round(t[1]) & 255) << 8) + (Math.round(t[2]) & 255)).toString(16).toUpperCase();
  return "000000".substring(r.length) + r;
};
be.hex.rgb = function(t) {
  const e = t.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
  if (!e)
    return [0, 0, 0];
  let r = e[0];
  e[0].length === 3 && (r = r.split("").map((a) => a + a).join(""));
  const n = parseInt(r, 16), i = n >> 16 & 255, l = n >> 8 & 255, g = n & 255;
  return [i, l, g];
};
be.rgb.hcg = function(t) {
  const e = t[0] / 255, r = t[1] / 255, n = t[2] / 255, i = Math.max(Math.max(e, r), n), l = Math.min(Math.min(e, r), n), g = i - l;
  let a, s;
  return g < 1 ? a = l / (1 - g) : a = 0, g <= 0 ? s = 0 : i === e ? s = (r - n) / g % 6 : i === r ? s = 2 + (n - e) / g : s = 4 + (e - r) / g, s /= 6, s %= 1, [s * 360, g * 100, a * 100];
};
be.hsl.hcg = function(t) {
  const e = t[1] / 100, r = t[2] / 100, n = r < 0.5 ? 2 * e * r : 2 * e * (1 - r);
  let i = 0;
  return n < 1 && (i = (r - 0.5 * n) / (1 - n)), [t[0], n * 100, i * 100];
};
be.hsv.hcg = function(t) {
  const e = t[1] / 100, r = t[2] / 100, n = e * r;
  let i = 0;
  return n < 1 && (i = (r - n) / (1 - n)), [t[0], n * 100, i * 100];
};
be.hcg.rgb = function(t) {
  const e = t[0] / 360, r = t[1] / 100, n = t[2] / 100;
  if (r === 0)
    return [n * 255, n * 255, n * 255];
  const i = [0, 0, 0], l = e % 1 * 6, g = l % 1, a = 1 - g;
  let s = 0;
  switch (Math.floor(l)) {
    case 0:
      i[0] = 1, i[1] = g, i[2] = 0;
      break;
    case 1:
      i[0] = a, i[1] = 1, i[2] = 0;
      break;
    case 2:
      i[0] = 0, i[1] = 1, i[2] = g;
      break;
    case 3:
      i[0] = 0, i[1] = a, i[2] = 1;
      break;
    case 4:
      i[0] = g, i[1] = 0, i[2] = 1;
      break;
    default:
      i[0] = 1, i[1] = 0, i[2] = a;
  }
  return s = (1 - r) * n, [
    (r * i[0] + s) * 255,
    (r * i[1] + s) * 255,
    (r * i[2] + s) * 255
  ];
};
be.hcg.hsv = function(t) {
  const e = t[1] / 100, r = t[2] / 100, n = e + r * (1 - e);
  let i = 0;
  return n > 0 && (i = e / n), [t[0], i * 100, n * 100];
};
be.hcg.hsl = function(t) {
  const e = t[1] / 100, n = t[2] / 100 * (1 - e) + 0.5 * e;
  let i = 0;
  return n > 0 && n < 0.5 ? i = e / (2 * n) : n >= 0.5 && n < 1 && (i = e / (2 * (1 - n))), [t[0], i * 100, n * 100];
};
be.hcg.hwb = function(t) {
  const e = t[1] / 100, r = t[2] / 100, n = e + r * (1 - e);
  return [t[0], (n - e) * 100, (1 - n) * 100];
};
be.hwb.hcg = function(t) {
  const e = t[1] / 100, n = 1 - t[2] / 100, i = n - e;
  let l = 0;
  return i < 1 && (l = (n - i) / (1 - i)), [t[0], i * 100, l * 100];
};
be.apple.rgb = function(t) {
  return [t[0] / 65535 * 255, t[1] / 65535 * 255, t[2] / 65535 * 255];
};
be.rgb.apple = function(t) {
  return [t[0] / 255 * 65535, t[1] / 255 * 65535, t[2] / 255 * 65535];
};
be.gray.rgb = function(t) {
  return [t[0] / 100 * 255, t[0] / 100 * 255, t[0] / 100 * 255];
};
be.gray.hsl = function(t) {
  return [0, 0, t[0]];
};
be.gray.hsv = be.gray.hsl;
be.gray.hwb = function(t) {
  return [0, 100, t[0]];
};
be.gray.cmyk = function(t) {
  return [0, 0, 0, t[0]];
};
be.gray.lab = function(t) {
  return [t[0], 0, 0];
};
be.gray.hex = function(t) {
  const e = Math.round(t[0] / 100 * 255) & 255, n = ((e << 16) + (e << 8) + e).toString(16).toUpperCase();
  return "000000".substring(n.length) + n;
};
be.rgb.gray = function(t) {
  return [(t[0] + t[1] + t[2]) / 3 / 255 * 100];
};
const So = wm;
function S_() {
  const t = {}, e = Object.keys(So);
  for (let r = e.length, n = 0; n < r; n++)
    t[e[n]] = {
      // http://jsperf.com/1-vs-infinity
      // micro-opt, but this is simple.
      distance: -1,
      parent: null
    };
  return t;
}
function T_(t) {
  const e = S_(), r = [t];
  for (e[t].distance = 0; r.length; ) {
    const n = r.pop(), i = Object.keys(So[n]);
    for (let l = i.length, g = 0; g < l; g++) {
      const a = i[g], s = e[a];
      s.distance === -1 && (s.distance = e[n].distance + 1, s.parent = n, r.unshift(a));
    }
  }
  return e;
}
function E_(t, e) {
  return function(r) {
    return e(t(r));
  };
}
function k_(t, e) {
  const r = [e[t].parent, t];
  let n = So[e[t].parent][t], i = e[t].parent;
  for (; e[i].parent; )
    r.unshift(e[i].parent), n = E_(So[e[i].parent][i], n), i = e[i].parent;
  return n.conversion = r, n;
}
var O_ = function(t) {
  const e = T_(t), r = {}, n = Object.keys(e);
  for (let i = n.length, l = 0; l < i; l++) {
    const g = n[l];
    e[g].parent !== null && (r[g] = k_(g, e));
  }
  return r;
};
const tc = wm, A_ = O_, Xn = {}, D_ = Object.keys(tc);
function P_(t) {
  const e = function(...r) {
    const n = r[0];
    return n == null ? n : (n.length > 1 && (r = n), t(r));
  };
  return "conversion" in t && (e.conversion = t.conversion), e;
}
function M_(t) {
  const e = function(...r) {
    const n = r[0];
    if (n == null)
      return n;
    n.length > 1 && (r = n);
    const i = t(r);
    if (typeof i == "object")
      for (let l = i.length, g = 0; g < l; g++)
        i[g] = Math.round(i[g]);
    return i;
  };
  return "conversion" in t && (e.conversion = t.conversion), e;
}
D_.forEach((t) => {
  Xn[t] = {}, Object.defineProperty(Xn[t], "channels", { value: tc[t].channels }), Object.defineProperty(Xn[t], "labels", { value: tc[t].labels });
  const e = A_(t);
  Object.keys(e).forEach((n) => {
    const i = e[n];
    Xn[t][n] = M_(i), Xn[t][n].raw = P_(i);
  });
});
var F_ = Xn;
const Yn = x_, Et = F_, xm = [
  // To be honest, I don't really feel like keyword belongs in color convert, but eh.
  "keyword",
  // Gray conflicts with some method names, and has its own method defined.
  "gray",
  // Shouldn't really be in color-convert either...
  "hex"
], rc = {};
for (const t of Object.keys(Et))
  rc[[...Et[t].labels].sort().join("")] = t;
const To = {};
function rt(t, e) {
  if (!(this instanceof rt))
    return new rt(t, e);
  if (e && e in xm && (e = null), e && !(e in Et))
    throw new Error("Unknown model: " + e);
  let r, n;
  if (t == null)
    this.model = "rgb", this.color = [0, 0, 0], this.valpha = 1;
  else if (t instanceof rt)
    this.model = t.model, this.color = [...t.color], this.valpha = t.valpha;
  else if (typeof t == "string") {
    const i = Yn.get(t);
    if (i === null)
      throw new Error("Unable to parse color from string: " + t);
    this.model = i.model, n = Et[this.model].channels, this.color = i.value.slice(0, n), this.valpha = typeof i.value[n] == "number" ? i.value[n] : 1;
  } else if (t.length > 0) {
    this.model = e || "rgb", n = Et[this.model].channels;
    const i = Array.prototype.slice.call(t, 0, n);
    this.color = nc(i, n), this.valpha = typeof t[n] == "number" ? t[n] : 1;
  } else if (typeof t == "number")
    this.model = "rgb", this.color = [
      t >> 16 & 255,
      t >> 8 & 255,
      t & 255
    ], this.valpha = 1;
  else {
    this.valpha = 1;
    const i = Object.keys(t);
    "alpha" in t && (i.splice(i.indexOf("alpha"), 1), this.valpha = typeof t.alpha == "number" ? t.alpha : 0);
    const l = i.sort().join("");
    if (!(l in rc))
      throw new Error("Unable to parse color from object: " + JSON.stringify(t));
    this.model = rc[l];
    const { labels: g } = Et[this.model], a = [];
    for (r = 0; r < g.length; r++)
      a.push(t[g[r]]);
    this.color = nc(a);
  }
  if (To[this.model])
    for (n = Et[this.model].channels, r = 0; r < n; r++) {
      const i = To[this.model][r];
      i && (this.color[r] = i(this.color[r]));
    }
  this.valpha = Math.max(0, Math.min(1, this.valpha)), Object.freeze && Object.freeze(this);
}
rt.prototype = {
  toString() {
    return this.string();
  },
  toJSON() {
    return this[this.model]();
  },
  string(t) {
    let e = this.model in Yn.to ? this : this.rgb();
    e = e.round(typeof t == "number" ? t : 1);
    const r = e.valpha === 1 ? e.color : [...e.color, this.valpha];
    return Yn.to[e.model](r);
  },
  percentString(t) {
    const e = this.rgb().round(typeof t == "number" ? t : 1), r = e.valpha === 1 ? e.color : [...e.color, this.valpha];
    return Yn.to.rgb.percent(r);
  },
  array() {
    return this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];
  },
  object() {
    const t = {}, { channels: e } = Et[this.model], { labels: r } = Et[this.model];
    for (let n = 0; n < e; n++)
      t[r[n]] = this.color[n];
    return this.valpha !== 1 && (t.alpha = this.valpha), t;
  },
  unitArray() {
    const t = this.rgb().color;
    return t[0] /= 255, t[1] /= 255, t[2] /= 255, this.valpha !== 1 && t.push(this.valpha), t;
  },
  unitObject() {
    const t = this.rgb().object();
    return t.r /= 255, t.g /= 255, t.b /= 255, this.valpha !== 1 && (t.alpha = this.valpha), t;
  },
  round(t) {
    return t = Math.max(t || 0, 0), new rt([...this.color.map(I_(t)), this.valpha], this.model);
  },
  alpha(t) {
    return t !== void 0 ? new rt([...this.color, Math.max(0, Math.min(1, t))], this.model) : this.valpha;
  },
  // Rgb
  red: We("rgb", 0, et(255)),
  green: We("rgb", 1, et(255)),
  blue: We("rgb", 2, et(255)),
  hue: We(["hsl", "hsv", "hsl", "hwb", "hcg"], 0, (t) => (t % 360 + 360) % 360),
  saturationl: We("hsl", 1, et(100)),
  lightness: We("hsl", 2, et(100)),
  saturationv: We("hsv", 1, et(100)),
  value: We("hsv", 2, et(100)),
  chroma: We("hcg", 1, et(100)),
  gray: We("hcg", 2, et(100)),
  white: We("hwb", 1, et(100)),
  wblack: We("hwb", 2, et(100)),
  cyan: We("cmyk", 0, et(100)),
  magenta: We("cmyk", 1, et(100)),
  yellow: We("cmyk", 2, et(100)),
  black: We("cmyk", 3, et(100)),
  x: We("xyz", 0, et(95.047)),
  y: We("xyz", 1, et(100)),
  z: We("xyz", 2, et(108.833)),
  l: We("lab", 0, et(100)),
  a: We("lab", 1),
  b: We("lab", 2),
  keyword(t) {
    return t !== void 0 ? new rt(t) : Et[this.model].keyword(this.color);
  },
  hex(t) {
    return t !== void 0 ? new rt(t) : Yn.to.hex(this.rgb().round().color);
  },
  hexa(t) {
    if (t !== void 0)
      return new rt(t);
    const e = this.rgb().round().color;
    let r = Math.round(this.valpha * 255).toString(16).toUpperCase();
    return r.length === 1 && (r = "0" + r), Yn.to.hex(e) + r;
  },
  rgbNumber() {
    const t = this.rgb().color;
    return (t[0] & 255) << 16 | (t[1] & 255) << 8 | t[2] & 255;
  },
  luminosity() {
    const t = this.rgb().color, e = [];
    for (const [r, n] of t.entries()) {
      const i = n / 255;
      e[r] = i <= 0.04045 ? i / 12.92 : ((i + 0.055) / 1.055) ** 2.4;
    }
    return 0.2126 * e[0] + 0.7152 * e[1] + 0.0722 * e[2];
  },
  contrast(t) {
    const e = this.luminosity(), r = t.luminosity();
    return e > r ? (e + 0.05) / (r + 0.05) : (r + 0.05) / (e + 0.05);
  },
  level(t) {
    const e = this.contrast(t);
    return e >= 7 ? "AAA" : e >= 4.5 ? "AA" : "";
  },
  isDark() {
    const t = this.rgb().color;
    return (t[0] * 2126 + t[1] * 7152 + t[2] * 722) / 1e4 < 128;
  },
  isLight() {
    return !this.isDark();
  },
  negate() {
    const t = this.rgb();
    for (let e = 0; e < 3; e++)
      t.color[e] = 255 - t.color[e];
    return t;
  },
  lighten(t) {
    const e = this.hsl();
    return e.color[2] += e.color[2] * t, e;
  },
  darken(t) {
    const e = this.hsl();
    return e.color[2] -= e.color[2] * t, e;
  },
  saturate(t) {
    const e = this.hsl();
    return e.color[1] += e.color[1] * t, e;
  },
  desaturate(t) {
    const e = this.hsl();
    return e.color[1] -= e.color[1] * t, e;
  },
  whiten(t) {
    const e = this.hwb();
    return e.color[1] += e.color[1] * t, e;
  },
  blacken(t) {
    const e = this.hwb();
    return e.color[2] += e.color[2] * t, e;
  },
  grayscale() {
    const t = this.rgb().color, e = t[0] * 0.3 + t[1] * 0.59 + t[2] * 0.11;
    return rt.rgb(e, e, e);
  },
  fade(t) {
    return this.alpha(this.valpha - this.valpha * t);
  },
  opaquer(t) {
    return this.alpha(this.valpha + this.valpha * t);
  },
  rotate(t) {
    const e = this.hsl();
    let r = e.color[0];
    return r = (r + t) % 360, r = r < 0 ? 360 + r : r, e.color[0] = r, e;
  },
  mix(t, e) {
    if (!t || !t.rgb)
      throw new Error('Argument to "mix" was not a Color instance, but rather an instance of ' + typeof t);
    const r = t.rgb(), n = this.rgb(), i = e === void 0 ? 0.5 : e, l = 2 * i - 1, g = r.alpha() - n.alpha(), a = ((l * g === -1 ? l : (l + g) / (1 + l * g)) + 1) / 2, s = 1 - a;
    return rt.rgb(
      a * r.red() + s * n.red(),
      a * r.green() + s * n.green(),
      a * r.blue() + s * n.blue(),
      r.alpha() * i + n.alpha() * (1 - i)
    );
  }
};
for (const t of Object.keys(Et)) {
  if (xm.includes(t))
    continue;
  const { channels: e } = Et[t];
  rt.prototype[t] = function(...r) {
    return this.model === t ? new rt(this) : r.length > 0 ? new rt(r, t) : new rt([...L_(Et[this.model][t].raw(this.color)), this.valpha], t);
  }, rt[t] = function(...r) {
    let n = r[0];
    return typeof n == "number" && (n = nc(r, e)), new rt(n, t);
  };
}
function R_(t, e) {
  return Number(t.toFixed(e));
}
function I_(t) {
  return function(e) {
    return R_(e, t);
  };
}
function We(t, e, r) {
  t = Array.isArray(t) ? t : [t];
  for (const n of t)
    (To[n] || (To[n] = []))[e] = r;
  return t = t[0], function(n) {
    let i;
    return n !== void 0 ? (r && (n = r(n)), i = this[t](), i.color[e] = n, i) : (i = this[t]().color[e], r && (i = r(i)), i);
  };
}
function et(t) {
  return function(e) {
    return Math.max(0, Math.min(t, e));
  };
}
function L_(t) {
  return Array.isArray(t) ? t : [t];
}
function nc(t, e) {
  for (let r = 0; r < e; r++)
    typeof t[r] != "number" && (t[r] = 0);
  return t;
}
var B_ = rt;
const z_ = /* @__PURE__ */ Es(B_);
function N_(t) {
  const e = t.isDark ? Gl.find((i) => i.isDark) : Gl.find((i) => !i.isDark), r = {
    ...e,
    ...t,
    colors: {
      ...e == null ? void 0 : e.colors,
      ...t.colors
    }
  }, n = Object.entries(r.colors).map(
    ([i, l]) => [i, j_(l)]
  );
  return {
    id: r.name,
    name: r.name,
    values: Object.fromEntries(n),
    is_dark: r.isDark
  };
}
function j_(t) {
  return t.endsWith("%") || t.split(" ").length === 3 ? t : z_(t).rgb().array().slice(0, 3).join(" ");
}
let En = typeof document < "u" ? document.getElementById("root") ?? document.body : void 0, Jn = typeof document < "u" ? document.documentElement : void 0;
function $_(t) {
  En = t, Jn = t;
}
function V_(t, e) {
  Jn == null || Jn.style.setProperty(t, e);
}
function H_(t) {
  Object.entries(t.values).forEach(([e, r]) => {
    V_(e, r);
  }), t.is_dark ? Jn.classList.add("dark") : Jn.classList.remove("dark");
}
const pf = {
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  width: 0,
  height: 0
}, fe = nm()(
  DC(
    pm((t, e) => ({
      editor: null,
      fabric: null,
      bootstrapData: {},
      config: Zg,
      zoom: 1,
      dirty: !1,
      original: {
        width: 1,
        height: 1
      },
      stageSize: pf,
      canvasSize: pf,
      canvasRef: null,
      activeTool: null,
      activeToolOverlay: null,
      loading: !1,
      openPanels: {
        newImage: !1,
        history: !1,
        objects: !1,
        export: !1
      },
      ...i_(t, e),
      ...u_(t, e),
      ...s_(t, e),
      ...o_(t, e),
      ...h_(t, e),
      ...f_(t, e),
      ...d_(t, e),
      // actions
      setZoom: (r) => t((n) => {
        n.zoom = r;
      }),
      setOriginal: (r, n) => t((i) => {
        i.original = { width: r, height: n };
      }),
      setDirty: (r) => t((n) => {
        n.dirty = r;
      }),
      toggleLoading: (r) => t((n) => {
        n.loading = r;
      }),
      setStageSize: (r) => t((n) => {
        n.stageSize = r;
      }),
      setCanvasSize: (r) => t((n) => {
        n.canvasSize = r;
      }),
      setActiveTool: (r, n) => {
        t((i) => {
          i.activeTool = r, i.activeToolOverlay = n;
        });
      },
      setConfig: (r) => t((n) => {
        var c, f;
        const i = n_(r, e().config);
        n.config = i;
        const l = i.activeLanguage || "en", g = (c = i.languages) == null ? void 0 : c[l], a = (((f = i.ui) == null ? void 0 : f.themes) || []).map(
          (o) => N_(o)
        ), s = a.find(
          (o) => {
            var h;
            return o.id === ((h = i.ui) == null ? void 0 : h.activeTheme);
          }
        );
        s && H_(s), n.bootstrapData = {
          i18n: { language: l, name: l, id: 0, lines: g },
          themes: {
            all: a
          }
        };
      }),
      togglePanel: (r, n) => t((i) => {
        i.openPanels[r] = n ?? !i.openPanels[r];
      }),
      applyChanges: async () => {
        var l;
        const r = e().activeTool;
        if (!r)
          return;
        const n = e()[r], i = await ((l = n == null ? void 0 : n.apply) == null ? void 0 : l.call(n));
        t((g) => {
          g.dirty = !1, g.activeTool = null, g.activeToolOverlay = null;
        }), i !== !1 && e().editor.tools.history.addHistoryItem({ name: r }), n == null || n.reset();
      },
      cancelChanges: async () => {
        const r = e().activeTool;
        if (!r)
          return;
        const n = e().dirty;
        t((l) => {
          l.dirty = !1, l.activeTool = null, l.activeToolOverlay = null;
        }), n && await e().editor.tools.history.reload();
        const i = e()[r];
        i == null || i.reset();
      },
      reset: () => {
        e().editor.tools.transform.resetStraightenAnchor(), t({
          activeTool: null,
          activeToolOverlay: null,
          zoom: 1,
          dirty: !1,
          loading: !1,
          openPanels: {
            newImage: !1,
            history: !1,
            objects: !1,
            export: !1
          }
        }), e().history.reset(), e().objects.reset(), e().filter.reset(), e().crop.reset(), e().frame.reset(), e().resize.reset(), e().corners.reset();
      }
    }))
  )
);
function O() {
  return fe.getState();
}
function I() {
  return O().editor.tools;
}
function de() {
  return O().fabric;
}
function ic(t) {
  var r, n, i, l, g;
  I().canvas.clear(), I().frame.remove();
  const e = !((r = O().config.ui) != null && r.visible);
  return O().setConfig({ image: void 0, blankCanvasSize: void 0, ...t }), O().reset(), (n = O().config.ui) != null && n.defaultTool && O().setActiveTool((i = O().config.ui) == null ? void 0 : i.defaultTool, null), e && ((g = (l = O().config).onOpen) == null || g.call(l)), new Promise((a) => setTimeout(a));
}
async function ua(t) {
  return (await fetch(t)).json();
}
const Fn = {
  selectable: !1,
  evented: !1,
  lockMovementX: !0,
  lockMovementY: !0,
  lockRotation: !0,
  lockScalingX: !0,
  lockScalingY: !0,
  lockUniScaling: !0,
  hasControls: !1,
  hasBorders: !1,
  hasRotatingPoint: !1,
  strokeWidth: 0
};
function Eo(t = []) {
  var n;
  t = [
    ...Object.keys(Fn),
    "crossOrigin",
    "name",
    "displayName",
    "data",
    ...t
  ];
  const e = de().toJSON(
    t
  );
  e.objects = e.objects.filter((i) => !i.data.pixieInternal).map((i) => (i.type === "image" && O().config.crossOrigin && (i.crossOrigin = "anonymous"), tn(i) && (i.selectable = !0, i.lockMovementX = !1, i.lockMovementY = !1, i.lockUniScaling = !1), { ...i, data: i.data ? { ...i.data } : {} }));
  const r = I().frame.active.config ? {
    name: I().frame.active.config.name,
    sizePercent: I().frame.active.currentSizeInPercent
  } : null;
  return {
    canvas: e,
    editor: {
      frame: r,
      // fonts: tools().text.getUsedFonts(),
      zoom: O().zoom,
      activeObjectId: ((n = O().objects.active) == null ? void 0 : n.id) || null
    },
    canvasWidth: O().original.width,
    canvasHeight: O().original.height
  };
}
function fu(t = null) {
  if (O().dirty)
    return;
  I().zoom.fitToScreen();
  const [e, r] = Cm(
    de().getActiveObject()
  );
  t ? O().setActiveTool(t, e === t ? r : null) : O().setActiveTool(e, r);
}
function Cm(t) {
  switch (t == null ? void 0 : t.name) {
    case qe.Text:
      return [Be.TEXT, Nt.Text];
    case qe.Sticker:
      return [Be.STICKERS, Nt.ActiveObject];
    case qe.Image:
      return [null, Nt.ActiveObject];
    case qe.Shape:
      return [Be.SHAPES, Nt.ActiveObject];
    default:
      return [null, null];
  }
}
const U_ = `/*! tailwindcss v3.4.4 | MIT License | https://tailwindcss.com*/.pi *,.pi :after,.pi :before{border-color:rgb(var(--be-foreground-base)/var(--be-divider-opacity));border-style:solid;border-width:0;box-sizing:border-box}.pi :after,.pi :before{--tw-content:""},.pi :host{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}.pi hr{border-top-width:1px;color:inherit;height:0}.pi abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}.pi h1,.pi h2,.pi h3,.pi h4,.pi h5,.pi h6{font-size:inherit;font-weight:inherit}.pi a{color:inherit;text-decoration:inherit}.pi b,.pi strong{font-weight:bolder}.pi code,.pi kbd,.pi pre,.pi samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-size:1em;font-variation-settings:normal}.pi small{font-size:80%}.pi sub,.pi sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}.pi sub{bottom:-.25em}.pi sup{top:-.5em}.pi table{border-collapse:collapse;border-color:inherit;text-indent:0}.pi button,.pi input,.pi optgroup,.pi select,.pi textarea{color:inherit;font-family:inherit;font-feature-settings:inherit;font-size:100%;font-variation-settings:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;margin:0;padding:0}.pi button,.pi select{text-transform:none}.pi button,.pi input:where([type=button]),.pi input:where([type=reset]),.pi input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}.pi :-moz-focusring{outline:auto}.pi :-moz-ui-invalid{box-shadow:none}.pi progress{vertical-align:baseline}.pi ::-webkit-inner-spin-button,.pi ::-webkit-outer-spin-button{height:auto}.pi [type=search]{-webkit-appearance:textfield;outline-offset:-2px}.pi ::-webkit-search-decoration{-webkit-appearance:none}.pi ::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.pi summary{display:list-item}.pi blockquote,.pi dd,.pi dl,.pi figure,.pi h1,.pi h2,.pi h3,.pi h4,.pi h5,.pi h6,.pi hr,.pi p,.pi pre{margin:0}.pi fieldset{margin:0;padding:0}.pi legend{padding:0}.pi menu,.pi ol,.pi ul{list-style:none;margin:0;padding:0}.pi dialog{padding:0}.pi textarea{resize:vertical}.pi input::-moz-placeholder,.pi textarea::-moz-placeholder{color:#9ca3af;opacity:1}.pi input::placeholder,.pi textarea::placeholder{color:#9ca3af;opacity:1}.pi [role=button],.pi button{cursor:pointer}.pi :disabled{cursor:default}.pi audio,.pi canvas,.pi embed,.pi iframe,.pi img,.pi object,.pi svg,.pi video{display:block;vertical-align:middle}.pi img,.pi video{height:auto;max-width:100%}.pi [hidden]{display:none}.pi *,.pi :after,.pi :before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(147,197,253,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }.pi ::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(147,197,253,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }.pi .\\!container{width:100%!important}.pi .container{width:100%}@media (min-width:640px){.pi .\\!container{max-width:640px!important}.pi .container{max-width:640px}}@media (min-width:768px){.pi .\\!container{max-width:768px!important}.pi .container{max-width:768px}}@media (min-width:1024px){.pi .\\!container{max-width:1024px!important}.pi .container{max-width:1024px}}@media (min-width:1280px){.pi .\\!container{max-width:1280px!important}.pi .container{max-width:1280px}}@media (min-width:1536px){.pi .\\!container{max-width:1536px!important}.pi .container{max-width:1536px}}.pi .sr-only{height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;clip:rect(0,0,0,0);border-width:0;white-space:nowrap}.pi .pointer-events-none{pointer-events:none}.pi .pointer-events-auto{pointer-events:auto}.pi .\\!visible{visibility:visible!important}.pi .visible{visibility:visible}.pi .invisible{visibility:hidden}.pi .collapse{visibility:collapse}.pi .static{position:static}.pi .fixed{position:fixed}.pi .absolute{position:absolute}.pi .relative{position:relative}.pi .sticky{position:sticky}.pi .inset-0{top:0;right:0;bottom:0;left:0}.pi .inset-x-0{left:0;right:0}.pi .-bottom-10{bottom:-10px}.pi .-bottom-14{bottom:-14px}.pi .-bottom-20{bottom:-20px}.pi .-bottom-5{bottom:-5px}.pi .-bottom-6{bottom:-6px}.pi .-left-5{left:-5px}.pi .-left-8{left:-8px}.pi .-left-80{left:-80px}.pi .-right-5{right:-5px}.pi .-right-6{right:-6px}.pi .-top-144{top:-144px}.pi .-top-40{top:-40px}.pi .-top-5{top:-5px}.pi .bottom-0{bottom:0}.pi .bottom-20{bottom:20px}.pi .left-0{left:0}.pi .left-1\\/2{left:50%}.pi .left-16{left:16px}.pi .left-20{left:20px}.pi .left-24{left:24px}.pi .left-30{left:30px}.pi .right-0{right:0}.pi .right-16{right:16px}.pi .right-2{right:2px}.pi .right-20{right:20px}.pi .right-24{right:24px}.pi .right-4{right:4px}.pi .top-0{top:0}.pi .top-1\\/2{top:50%}.pi .top-10{top:10px}.pi .top-120{top:7.5rem}.pi .top-2{top:2px}.pi .top-24{top:24px}.pi .top-26{top:26px}.pi .isolate{isolation:isolate}.pi .z-10{z-index:10}.pi .z-20{z-index:20}.pi .z-30{z-index:30}.pi .z-40{z-index:40}.pi .z-50{z-index:50}.pi .z-cropzone{z-index:10}.pi .z-loading-indicator{z-index:50}.pi .z-modal{z-index:110}.pi .z-navbar{z-index:40}.pi .z-obj-box{z-index:20}.pi .z-popover{z-index:130}.pi .z-toast{z-index:160}.pi .z-tool-overlay{z-index:30}.pi .z-tooltip{z-index:150}.pi .z-tray{z-index:120}.pi .m-auto{margin:auto}.pi .mx-14{margin-left:14px;margin-right:14px}.pi .mx-20{margin-left:20px;margin-right:20px}.pi .mx-4{margin-left:4px;margin-right:4px}.pi .mx-8{margin-left:8px;margin-right:8px}.pi .mx-auto{margin-left:auto;margin-right:auto}.pi .my-10{margin-bottom:10px;margin-top:10px}.pi .my-100{margin-bottom:6.25rem;margin-top:6.25rem}.pi .my-12{margin-bottom:12px;margin-top:12px}.pi .my-14{margin-bottom:14px;margin-top:14px}.pi .my-16{margin-bottom:16px;margin-top:16px}.pi .my-20{margin-bottom:20px;margin-top:20px}.pi .my-24{margin-bottom:24px;margin-top:24px}.pi .my-30{margin-bottom:30px;margin-top:30px}.pi .my-32{margin-bottom:32px;margin-top:32px}.pi .my-4{margin-bottom:4px;margin-top:4px}.pi .my-40{margin-bottom:40px;margin-top:40px}.pi .my-50{margin-bottom:50px;margin-top:50px}.pi .my-6{margin-bottom:6px;margin-top:6px}.pi .my-8{margin-bottom:8px;margin-top:8px}.pi .my-80{margin-bottom:80px;margin-top:80px}.pi .my-auto{margin-bottom:auto;margin-top:auto}.pi .-ml-1{margin-left:-1px}.pi .-ml-10{margin-left:-10px}.pi .-ml-12{margin-left:-12px}.pi .-ml-3{margin-left:-3px}.pi .-ml-4{margin-left:-4px}.pi .-ml-6{margin-left:-6px}.pi .-ml-8{margin-left:-8px}.pi .-mr-4{margin-right:-4px}.pi .-mr-8{margin-right:-8px}.pi .-mt-2{margin-top:-2px}.pi .mb-1{margin-bottom:1px}.pi .mb-10{margin-bottom:10px}.pi .mb-12{margin-bottom:12px}.pi .mb-14{margin-bottom:14px}.pi .mb-16{margin-bottom:16px}.pi .mb-2{margin-bottom:2px}.pi .mb-20{margin-bottom:20px}.pi .mb-24{margin-bottom:24px}.pi .mb-30{margin-bottom:30px}.pi .mb-32{margin-bottom:32px}.pi .mb-4{margin-bottom:4px}.pi .mb-40{margin-bottom:40px}.pi .mb-44{margin-bottom:44px}.pi .mb-48{margin-bottom:48px}.pi .mb-54{margin-bottom:3.375rem}.pi .mb-6{margin-bottom:6px}.pi .mb-64{margin-bottom:64px}.pi .mb-8{margin-bottom:8px}.pi .ml-10{margin-left:10px}.pi .ml-12{margin-left:12px}.pi .ml-4{margin-left:4px}.pi .ml-6{margin-left:6px}.pi .ml-8{margin-left:8px}.pi .ml-auto{margin-left:auto}.pi .mr-10{margin-right:10px}.pi .mr-12{margin-right:12px}.pi .mr-14{margin-right:14px}.pi .mr-16{margin-right:16px}.pi .mr-2{margin-right:2px}.pi .mr-20{margin-right:20px}.pi .mr-24{margin-right:24px}.pi .mr-4{margin-right:4px}.pi .mr-5{margin-right:5px}.pi .mr-6{margin-right:6px}.pi .mr-8{margin-right:8px}.pi .mr-auto{margin-right:auto}.pi .mt-0{margin-top:0}.pi .mt-10{margin-top:10px}.pi .mt-12{margin-top:12px}.pi .mt-14{margin-top:14px}.pi .mt-16{margin-top:16px}.pi .mt-18{margin-top:18px}.pi .mt-2{margin-top:2px}.pi .mt-20{margin-top:20px}.pi .mt-22{margin-top:22px}.pi .mt-24{margin-top:24px}.pi .mt-30{margin-top:30px}.pi .mt-32{margin-top:32px}.pi .mt-34{margin-top:2.125rem}.pi .mt-36{margin-top:36px}.pi .mt-4{margin-top:4px}.pi .mt-40{margin-top:40px}.pi .mt-48{margin-top:48px}.pi .mt-50{margin-top:50px}.pi .mt-6{margin-top:6px}.pi .mt-60{margin-top:60px}.pi .mt-8{margin-top:8px}.pi .mt-80{margin-top:80px}.pi .mt-auto{margin-top:auto}.pi .box-content{box-sizing:content-box}.pi .line-clamp-2{display:-webkit-box;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2}.pi .block{display:block}.pi .inline-block{display:inline-block}.pi .inline{display:inline}.pi .flex{display:flex}.pi .inline-flex{display:inline-flex}.pi .table{display:table}.pi .table-cell{display:table-cell}.pi .table-row{display:table-row}.pi .\\!grid{display:grid!important}.pi .grid{display:grid}.pi .contents{display:contents}.pi .hidden{display:none}.pi .aspect-square{aspect-ratio:1/1}.pi .aspect-video{aspect-ratio:16/9}.pi .h-1{height:1px}.pi .h-10{height:10px}.pi .h-100{height:6.25rem}.pi .h-12{height:12px}.pi .h-128{height:128px}.pi .h-14{height:14px}.pi .h-16{height:16px}.pi .h-18{height:18px}.pi .h-192{height:192px}.pi .h-2{height:2px}.pi .h-2\\/4{height:50%}.pi .h-20{height:20px}.pi .h-22{height:22px}.pi .h-24{height:24px}.pi .h-26{height:26px}.pi .h-28{height:28px}.pi .h-3{height:3px}.pi .h-30{height:30px}.pi .h-32{height:32px}.pi .h-36{height:36px}.pi .h-38{height:2.375rem}.pi .h-4{height:4px}.pi .h-40{height:40px}.pi .h-400{height:25rem}.pi .h-42{height:42px}.pi .h-46{height:2.875rem}.pi .h-48{height:48px}.pi .h-50{height:50px}.pi .h-52{height:3.25rem}.pi .h-54{height:3.375rem}.pi .h-56{height:56px}.pi .h-6{height:6px}.pi .h-60{height:60px}.pi .h-64{height:64px}.pi .h-68{height:68px}.pi .h-8{height:8px}.pi .h-80{height:80px}.pi .h-84{height:84px}.pi .h-90{height:5.625rem}.pi .h-92{height:92px}.pi .h-\\[186px\\]{height:186px}.pi .h-\\[54px\\]{height:54px}.pi .h-\\[97px\\]{height:97px}.pi .h-\\[calc\\(100\\%-12px\\)\\]{height:calc(100% - 12px)}.pi .h-auto{height:auto}.pi .h-font{height:1em}.pi .h-full{height:100%}.pi .h-max{height:-moz-max-content;height:max-content}.pi .h-px{height:1px}.pi .h-screen{height:100dvh}.pi .max-h-100{max-height:6.25rem}.pi .max-h-160{max-height:160px}.pi .max-h-240{max-height:240px}.pi .max-h-26{max-height:26px}.pi .max-h-288{max-height:288px}.pi .max-h-400{max-height:25rem}.pi .max-h-8{max-height:8px}.pi .max-h-\\[340px\\]{max-height:340px}.pi .max-h-\\[36px\\]{max-height:36px}.pi .max-h-\\[600px\\]{max-height:600px}.pi .max-h-\\[calc\\(100\\%-30px\\)\\]{max-height:calc(100% - 30px)}.pi .max-h-\\[calc\\(100\\%-40px\\)\\]{max-height:calc(100% - 40px)}.pi .max-h-\\[calc\\(100vh-90px\\)\\]{max-height:calc(100vh - 90px)}.pi .max-h-dialog{max-height:calc(var(--be-viewport-height, 100vh)*.9)}.pi .max-h-full{max-height:100%}.pi .max-h-inherit{max-height:inherit}.pi .max-h-tray{max-height:calc(var(--be-viewport-height, 100vh)*.9)}.pi .min-h-200{min-height:12.5rem}.pi .min-h-24{min-height:24px}.pi .min-h-30{min-height:30px}.pi .min-h-320{min-height:320px}.pi .min-h-36{min-height:36px}.pi .min-h-42{min-height:42px}.pi .min-h-440{min-height:27.5rem}.pi .min-h-50{min-height:50px}.pi .min-h-60{min-height:60px}.pi .min-h-70{min-height:70px}.pi .min-h-86{min-height:86px}.pi .min-h-90{min-height:5.625rem}.pi .min-h-\\[1000px\\]{min-height:1000px}.pi .min-h-\\[238px\\]{min-height:238px}.pi .min-h-\\[303px\\]{min-height:303px}.pi .min-h-\\[340px\\]{min-height:340px}.pi .min-h-dialog{min-height:calc(var(--be-viewport-height, 100vh)*.9)}.pi .min-h-full{min-height:100%}.pi .min-h-screen{min-height:100dvh}.pi .\\!w-auto{width:auto!important}.pi .w-1{width:1px}.pi .w-1\\/2{width:50%}.pi .w-1\\/3{width:33.333333%}.pi .w-10{width:10px}.pi .w-100{width:6.25rem}.pi .w-110{width:110px}.pi .w-112{width:112px}.pi .w-12{width:12px}.pi .w-128{width:128px}.pi .w-1280{width:80rem}.pi .w-14{width:14px}.pi .w-144{width:144px}.pi .w-16{width:16px}.pi .w-172{width:10.75rem}.pi .w-18{width:18px}.pi .w-192{width:192px}.pi .w-2{width:2px}.pi .w-20{width:20px}.pi .w-22{width:22px}.pi .w-224{width:224px}.pi .w-24{width:24px}.pi .w-240{width:240px}.pi .w-256{width:256px}.pi .w-26{width:26px}.pi .w-28{width:28px}.pi .w-280{width:17.5rem}.pi .w-288{width:288px}.pi .w-30{width:30px}.pi .w-32{width:32px}.pi .w-320{width:320px}.pi .w-36{width:36px}.pi .w-38{width:2.375rem}.pi .w-384{width:384px}.pi .w-40{width:40px}.pi .w-42{width:42px}.pi .w-440{width:27.5rem}.pi .w-46{width:2.875rem}.pi .w-50{width:50px}.pi .w-56{width:56px}.pi .w-60{width:60px}.pi .w-620{width:38.75rem}.pi .w-64{width:64px}.pi .w-68{width:68px}.pi .w-780{width:48.75rem}.pi .w-8{width:8px}.pi .w-80{width:80px}.pi .w-84{width:84px}.pi .w-850{width:53.125rem}.pi .w-90{width:5.625rem}.pi .w-96{width:96px}.pi .w-\\[168px\\]{width:168px}.pi .w-\\[170px\\]{width:170px}.pi .w-\\[233px\\]{width:233px}.pi .w-\\[480px\\]{width:480px}.pi .w-\\[4ch\\]{width:4ch}.pi .w-\\[calc\\(100\\%-40px\\)\\]{width:calc(100% - 40px)}.pi .w-auto{width:auto}.pi .w-font{width:1em}.pi .w-full{width:100%}.pi .w-max{width:-moz-max-content;width:max-content}.pi .w-min{width:-moz-min-content;width:min-content}.pi .w-px{width:1px}.pi .w-screen{width:100vw}.pi .min-w-0{min-width:0}.pi .min-w-110{min-width:110px}.pi .min-w-112{min-width:112px}.pi .min-w-128{min-width:128px}.pi .min-w-140{min-width:8.75rem}.pi .min-w-144{min-width:144px}.pi .min-w-160{min-width:160px}.pi .min-w-180{min-width:11.25rem}.pi .min-w-192{min-width:192px}.pi .min-w-200{min-width:12.5rem}.pi .min-w-24{min-width:24px}.pi .min-w-288{min-width:288px}.pi .min-w-30{min-width:30px}.pi .min-w-320{min-width:320px}.pi .min-w-4{min-width:4px}.pi .min-w-40{min-width:40px}.pi .min-w-42{min-width:42px}.pi .min-w-50{min-width:50px}.pi .min-w-500{min-width:31.25rem}.pi .min-w-80{min-width:80px}.pi .min-w-82{min-width:5.125rem}.pi .min-w-90{min-width:5.625rem}.pi .min-w-92{min-width:92px}.pi .min-w-96{min-width:96px}.pi .min-w-\\[210px\\]{min-width:210px}.pi .min-w-\\[300px\\]{min-width:300px}.pi .min-w-min{min-width:-moz-min-content;min-width:min-content}.pi .max-w-100{max-width:6.25rem}.pi .max-w-110{max-width:110px}.pi .max-w-112{max-width:112px}.pi .max-w-124{max-width:7.75rem}.pi .max-w-180{max-width:11.25rem}.pi .max-w-184{max-width:11.5rem}.pi .max-w-224{max-width:224px}.pi .max-w-240{max-width:240px}.pi .max-w-280{max-width:17.5rem}.pi .max-w-288{max-width:288px}.pi .max-w-320{max-width:320px}.pi .max-w-375{max-width:375px}.pi .max-w-4\\/5{max-width:80%}.pi .max-w-40{max-width:40px}.pi .max-w-400{max-width:25rem}.pi .max-w-440{max-width:27.5rem}.pi .max-w-500{max-width:31.25rem}.pi .max-w-580{max-width:36.25rem}.pi .max-w-60{max-width:60px}.pi .max-w-620{max-width:38.75rem}.pi .max-w-680{max-width:42.5rem}.pi .max-w-70{max-width:70px}.pi .max-w-84{max-width:84px}.pi .max-w-850{max-width:53.125rem}.pi .max-w-\\[210px\\]{max-width:210px}.pi .max-w-\\[464px\\]{max-width:464px}.pi .max-w-\\[90\\%\\]{max-width:90%}.pi .max-w-\\[calc\\(100\\%-40px\\)\\]{max-width:calc(100% - 40px)}.pi .max-w-\\[calc\\(100\\%-48px\\)\\]{max-width:calc(100% - 48px)}.pi .max-w-\\[calc\\(100vw-90px\\)\\]{max-width:calc(100vw - 90px)}.pi .max-w-dialog{max-width:calc(var(--be-viewport-width, 100vw)*.9)}.pi .max-w-full{max-width:100%}.pi .max-w-max{max-width:-moz-max-content;max-width:max-content}.pi .flex-1{flex:1 1 0%}.pi .flex-2{flex:2 1 0%}.pi .flex-3{flex:3 1 0%}.pi .flex-\\[1_1_60px\\]{flex:1 1 60px}.pi .flex-auto{flex:1 1 auto}.pi .flex-initial{flex:0 1 auto}.pi .flex-shrink-0,.pi .shrink-0{flex-shrink:0}.pi .flex-grow{flex-grow:1}.pi .origin-\\[0_55\\%\\]{transform-origin:0 55%}.pi .origin-\\[100\\%\\]{transform-origin:100%}.pi .-translate-x-1\\/2{--tw-translate-x:-50%}.pi .-translate-x-1\\/2,.pi .-translate-y-1\\/2{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.pi .-translate-y-1\\/2{--tw-translate-y:-50%}.pi .-rotate-45{--tw-rotate:-45deg}.pi .-rotate-45,.pi .rotate-0{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.pi .rotate-0{--tw-rotate:0deg}.pi .rotate-180{--tw-rotate:180deg}.pi .rotate-180,.pi .rotate-45{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.pi .rotate-45{--tw-rotate:45deg}.pi .rotate-90{--tw-rotate:90deg}.pi .rotate-90,.pi .scale-y-\\[0\\.6\\]{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.pi .scale-y-\\[0\\.6\\]{--tw-scale-y:.6}.pi .transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.pi .cursor-default{cursor:default}.pi .cursor-move{cursor:move}.pi .cursor-nesw-resize{cursor:nesw-resize}.pi .cursor-none{cursor:none}.pi .cursor-not-allowed{cursor:not-allowed}.pi .cursor-nwse-resize{cursor:nwse-resize}.pi .cursor-pointer{cursor:pointer}.pi .cursor-se-resize{cursor:se-resize}.pi .cursor-sw-resize{cursor:sw-resize}.pi .cursor-zoom-in{cursor:zoom-in}.pi .touch-none{touch-action:none}.pi .select-none{-webkit-user-select:none;-moz-user-select:none;user-select:none}.pi .resize-none{resize:none}.pi .resize{resize:both}.pi .appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.pi .break-inside-avoid{-moz-column-break-inside:avoid;break-inside:avoid}.pi .grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.pi .grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.pi .grid-cols-5-min-content{grid-template-columns:repeat(5,min-content)}.pi .grid-cols-\\[repeat\\(auto-fill\\,minmax\\(90px\\,1fr\\)\\)\\]{grid-template-columns:repeat(auto-fill,minmax(90px,1fr))}.pi .flex-row{flex-direction:row}.pi .flex-col{flex-direction:column}.pi .flex-col-reverse{flex-direction:column-reverse}.pi .flex-wrap{flex-wrap:wrap}.pi .flex-nowrap{flex-wrap:nowrap}.pi .items-start{align-items:flex-start}.pi .items-end{align-items:flex-end}.pi .items-center{align-items:center}.pi .items-baseline{align-items:baseline}.pi .items-stretch{align-items:stretch}.pi .justify-start{justify-content:flex-start}.pi .justify-end{justify-content:flex-end}.pi .justify-center{justify-content:center}.pi .justify-between{justify-content:space-between}.pi .gap-10{gap:10px}.pi .gap-12{gap:12px}.pi .gap-14{gap:14px}.pi .gap-16{gap:16px}.pi .gap-18{gap:18px}.pi .gap-2{gap:2px}.pi .gap-20{gap:20px}.pi .gap-24{gap:24px}.pi .gap-30{gap:30px}.pi .gap-32{gap:32px}.pi .gap-36{gap:36px}.pi .gap-4{gap:4px}.pi .gap-40{gap:40px}.pi .gap-6{gap:6px}.pi .gap-60{gap:60px}.pi .gap-64{gap:64px}.pi .gap-8{gap:8px}.pi .gap-x-10{-moz-column-gap:10px;column-gap:10px}.pi .gap-x-16{-moz-column-gap:16px;column-gap:16px}.pi .space-y-10>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(10px*var(--tw-space-y-reverse));margin-top:calc(10px*(1 - var(--tw-space-y-reverse)))}.pi .space-y-24>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(24px*var(--tw-space-y-reverse));margin-top:calc(24px*(1 - var(--tw-space-y-reverse)))}.pi .self-stretch{align-self:stretch}.pi .overflow-auto{overflow:auto}.pi .overflow-hidden{overflow:hidden}.pi .overflow-x-auto{overflow-x:auto}.pi .overflow-y-auto{overflow-y:auto}.pi .overflow-x-hidden{overflow-x:hidden}.pi .overflow-y-hidden{overflow-y:hidden}.pi .overflow-y-visible{overflow-y:visible}.pi .overscroll-contain{overscroll-behavior:contain}.pi .truncate{overflow:hidden;white-space:nowrap}.pi .overflow-ellipsis,.pi .text-ellipsis,.pi .truncate{text-overflow:ellipsis}.pi .whitespace-normal{white-space:normal}.pi .whitespace-nowrap{white-space:nowrap}.pi .whitespace-pre-line{white-space:pre-line}.pi .whitespace-pre-wrap{white-space:pre-wrap}.pi .break-words{overflow-wrap:break-word}.pi .rounded{border-radius:4px}.pi .rounded-2xl{border-radius:16px}.pi .rounded-3xl{border-radius:24px}.pi .rounded-button{border-radius:var(--be-button-radius,.25rem)}.pi .rounded-full{border-radius:9999px}.pi .rounded-input{border-radius:var(--be-input-radius,.25rem)}.pi .rounded-lg{border-radius:8px}.pi .rounded-md{border-radius:6px}.pi .rounded-none{border-radius:0}.pi .rounded-panel{border-radius:var(--be-panel-radius,.25rem)}.pi .rounded-xl{border-radius:12px}.pi .rounded-l{border-bottom-left-radius:4px;border-top-left-radius:4px}.pi .rounded-l-full{border-bottom-left-radius:9999px;border-top-left-radius:9999px}.pi .rounded-l-input{border-bottom-left-radius:var(--be-input-radius,.25rem);border-top-left-radius:var(--be-input-radius,.25rem)}.pi .rounded-l-md{border-bottom-left-radius:6px;border-top-left-radius:6px}.pi .rounded-l-none{border-bottom-left-radius:0;border-top-left-radius:0}.pi .rounded-r-full{border-bottom-right-radius:9999px;border-top-right-radius:9999px}.pi .rounded-r-input{border-bottom-right-radius:var(--be-input-radius,.25rem);border-top-right-radius:var(--be-input-radius,.25rem)}.pi .rounded-r-md{border-bottom-right-radius:6px;border-top-right-radius:6px}.pi .rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.pi .rounded-t{border-top-left-radius:4px;border-top-right-radius:4px}.pi .rounded-bl-none{border-bottom-left-radius:0}.pi .rounded-br-none{border-bottom-right-radius:0}.pi .rounded-tl-none{border-top-left-radius:0}.pi .rounded-tr-none{border-top-right-radius:0}.pi .border{border-width:1px}.pi .border-2{border-width:2px}.pi .border-4{border-width:4px}.pi .border-\\[3px\\]{border-width:3px}.pi .border-x{border-left-width:1px;border-right-width:1px}.pi .border-y{border-top-width:1px}.pi .border-b,.pi .border-y{border-bottom-width:1px}.pi .border-b-4{border-bottom-width:4px}.pi .border-l{border-left-width:1px}.pi .border-l-4{border-left-width:4px}.pi .border-r{border-right-width:1px}.pi .border-r-4{border-right-width:4px}.pi .border-t{border-top-width:1px}.pi .border-t-4{border-top-width:4px}.pi .border-dashed{border-style:dashed}.pi .border-dotted{border-style:dotted}.pi .border-none{border-style:none}.pi .border-\\[\\#c3cbdc\\]{--tw-border-opacity:1;border-color:rgb(195 203 220/var(--tw-border-opacity))}.pi .border-background{--tw-border-opacity:1;border-color:rgb(var(--be-background)/var(--tw-border-opacity))}.pi .border-bg-alt{--tw-border-opacity:1;border-color:rgb(var(--be-background-alt)/var(--tw-border-opacity))}.pi .border-chip{--tw-border-opacity:1;border-color:rgb(var(--be-background-chip)/var(--tw-border-opacity))}.pi .border-danger{--tw-border-opacity:1;border-color:rgb(239 68 68/var(--tw-border-opacity))}.pi .border-danger\\/50{border-color:#ef444480}.pi .border-divider{border-color:rgb(var(--be-foreground-base)/var(--be-divider-opacity))}.pi .border-envato{--tw-border-opacity:1;border-color:rgb(108 161 43/var(--tw-border-opacity))}.pi .border-paper{--tw-border-opacity:1;border-color:rgb(var(--be-paper)/var(--tw-border-opacity))}.pi .border-positive\\/50{border-color:#22c55e80}.pi .border-primary{--tw-border-opacity:1;border-color:rgb(var(--be-primary)/var(--tw-border-opacity))}.pi .border-primary\\/50{border-color:rgb(var(--be-primary)/.5)}.pi .border-text-muted{border-color:rgb(var(--be-foreground-base)/var(--be-text-muted-opacity))}.pi .border-transparent{border-color:transparent}.pi .border-white{--tw-border-opacity:1;border-color:rgb(255 255 255/var(--tw-border-opacity))}.pi .border-white\\/30{border-color:#ffffff4d}.pi .border-white\\/50{border-color:#ffffff80}.pi .border-b-bg{--tw-border-opacity:1;border-bottom-color:rgb(var(--be-background)/var(--tw-border-opacity))}.pi .border-b-divider{border-bottom-color:rgb(var(--be-foreground-base)/var(--be-divider-opacity))}.pi .border-b-primary{--tw-border-opacity:1;border-bottom-color:rgb(var(--be-primary)/var(--tw-border-opacity))}.pi .border-b-transparent{border-bottom-color:transparent}.pi .border-r-primary-light{--tw-border-opacity:1;border-right-color:rgb(var(--be-primary-light)/var(--tw-border-opacity))}.pi .border-r-transparent{border-right-color:transparent}.pi .border-t-divider{border-top-color:rgb(var(--be-foreground-base)/var(--be-divider-opacity))}.pi .bg{--tw-bg-opacity:1;background-color:rgb(var(--be-background)/var(--tw-bg-opacity))}.pi .bg-alt{--tw-bg-opacity:1;background-color:rgb(var(--be-background-alt)/var(--tw-bg-opacity))}.pi .bg-background{--tw-bg-opacity:1;background-color:rgb(var(--be-background)/var(--tw-bg-opacity))}.pi .bg-background\\/70{background-color:rgb(var(--be-background)/.7)}.pi .bg-background\\/80{background-color:rgb(var(--be-background)/.8)}.pi .bg-black{--tw-bg-opacity:1;background-color:rgb(0 0 0/var(--tw-bg-opacity))}.pi .bg-black\\/20{background-color:#0003}.pi .bg-black\\/50{background-color:#00000080}.pi .bg-black\\/80{background-color:#000c}.pi .bg-chip{--tw-bg-opacity:1;background-color:rgb(var(--be-background-chip)/var(--tw-bg-opacity))}.pi .bg-controls{--tw-bg-opacity:1;background-color:rgb(50 50 50/var(--tw-bg-opacity))}.pi .bg-danger{--tw-bg-opacity:1;background-color:rgb(239 68 68/var(--tw-bg-opacity))}.pi .bg-danger-lighter{--tw-bg-opacity:1;background-color:rgb(254 202 202/var(--tw-bg-opacity))}.pi .bg-danger\\/20{background-color:#ef444433}.pi .bg-danger\\/30{background-color:#ef44444d}.pi .bg-danger\\/6{background-color:#ef44440f}.pi .bg-danger\\/focus{background-color:rgb(239 68 68/var(--be-focus-opacity))}.pi .bg-divider{background-color:rgb(var(--be-foreground-base)/var(--be-divider-opacity))}.pi .bg-envato{--tw-bg-opacity:1;background-color:rgb(108 161 43/var(--tw-bg-opacity))}.pi .bg-fg-base\\/4{background-color:rgb(var(--be-foreground-base)/4%)}.pi .bg-fg-base\\/8{background-color:rgb(var(--be-foreground-base)/8%)}.pi .bg-focus{background-color:rgb(var(--be-foreground-base)/var(--be-focus-opacity))}.pi .bg-inherit{background-color:inherit}.pi .bg-paper{--tw-bg-opacity:1;background-color:rgb(var(--be-paper)/var(--tw-bg-opacity))}.pi .bg-positive{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.pi .bg-positive-lighter{--tw-bg-opacity:1;background-color:rgb(187 247 208/var(--tw-bg-opacity))}.pi .bg-positive\\/focus{background-color:rgb(34 197 94/var(--be-focus-opacity))}.pi .bg-primary{--tw-bg-opacity:1;background-color:rgb(var(--be-primary)/var(--tw-bg-opacity))}.pi .bg-primary-dark{--tw-bg-opacity:1;background-color:rgb(var(--be-primary-dark)/var(--tw-bg-opacity))}.pi .bg-primary-light{--tw-bg-opacity:1;background-color:rgb(var(--be-primary-light)/var(--tw-bg-opacity))}.pi .bg-primary-light\\/20{background-color:rgb(var(--be-primary-light)/.2)}.pi .bg-primary-light\\/40{background-color:rgb(var(--be-primary-light)/.4)}.pi .bg-primary\\/10{background-color:rgb(var(--be-primary)/.1)}.pi .bg-primary\\/5{background-color:rgb(var(--be-primary)/.05)}.pi .bg-primary\\/6{background-color:rgb(var(--be-primary)/6%)}.pi .bg-primary\\/focus{background-color:rgb(var(--be-primary)/var(--be-focus-opacity))}.pi .bg-primary\\/selected{background-color:rgb(var(--be-primary)/var(--be-selected-opacity))}.pi .bg-selected{background-color:rgb(var(--be-foreground-base)/var(--be-selected-opacity))}.pi .bg-slider-disabled{--tw-bg-opacity:1;background-color:rgb(189 189 189/var(--tw-bg-opacity))}.pi .bg-slider-disabled\\/60{background-color:#bdbdbd99}.pi .bg-toast{--tw-bg-opacity:1;background-color:rgb(50 50 50/var(--tw-bg-opacity))}.pi .bg-transparent{background-color:transparent}.pi .bg-warning{--tw-bg-opacity:1;background-color:rgb(243 164 50/var(--tw-bg-opacity))}.pi .bg-warning\\/15{background-color:#f3a43226}.pi .bg-warning\\/focus{background-color:rgb(243 164 50/var(--be-focus-opacity))}.pi .bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.pi .bg-white\\/20{background-color:#fff3}.pi .bg-white\\/40{background-color:#fff6}.pi .bg-white\\/50{background-color:#ffffff80}.pi .bg-opacity-95{--tw-bg-opacity:.95}.pi .bg-contain{background-size:contain}.pi .bg-cover{background-size:cover}.pi .bg-center{background-position:50%}.pi .bg-no-repeat{background-repeat:no-repeat}.pi .fill-current{fill:currentColor}.pi .fill-transparent{fill:transparent}.pi .stroke-current{stroke:currentColor}.pi .object-contain{-o-object-fit:contain;object-fit:contain}.pi .object-cover{-o-object-fit:cover;object-fit:cover}.pi .p-0{padding:0}.pi .p-10{padding:10px}.pi .p-12{padding:12px}.pi .p-14{padding:14px}.pi .p-16{padding:16px}.pi .p-18{padding:18px}.pi .p-2{padding:2px}.pi .p-20{padding:20px}.pi .p-24{padding:24px}.pi .p-4{padding:4px}.pi .p-40{padding:40px}.pi .p-6{padding:6px}.pi .p-8{padding:8px}.pi .px-10{padding-left:10px;padding-right:10px}.pi .px-12{padding-left:12px;padding-right:12px}.pi .px-14{padding-left:14px;padding-right:14px}.pi .px-16{padding-left:16px;padding-right:16px}.pi .px-18{padding-left:18px;padding-right:18px}.pi .px-20{padding-left:20px;padding-right:20px}.pi .px-22{padding-left:22px;padding-right:22px}.pi .px-24{padding-left:24px;padding-right:24px}.pi .px-26{padding-left:26px;padding-right:26px}.pi .px-28{padding-left:28px;padding-right:28px}.pi .px-30{padding-left:30px;padding-right:30px}.pi .px-32{padding-left:32px;padding-right:32px}.pi .px-4{padding-left:4px;padding-right:4px}.pi .px-40{padding-left:40px;padding-right:40px}.pi .px-5vw{padding-left:5vw;padding-right:5vw}.pi .px-6{padding-left:6px;padding-right:6px}.pi .px-8{padding-left:8px;padding-right:8px}.pi .py-10{padding-bottom:10px;padding-top:10px}.pi .py-12{padding-bottom:12px;padding-top:12px}.pi .py-14{padding-bottom:14px;padding-top:14px}.pi .py-16{padding-bottom:16px;padding-top:16px}.pi .py-18{padding-bottom:18px;padding-top:18px}.pi .py-2{padding-bottom:2px;padding-top:2px}.pi .py-20{padding-bottom:20px;padding-top:20px}.pi .py-24{padding-bottom:24px;padding-top:24px}.pi .py-28{padding-bottom:28px;padding-top:28px}.pi .py-3{padding-bottom:3px;padding-top:3px}.pi .py-30{padding-bottom:30px;padding-top:30px}.pi .py-32{padding-bottom:32px;padding-top:32px}.pi .py-4{padding-bottom:4px;padding-top:4px}.pi .py-40{padding-bottom:40px;padding-top:40px}.pi .py-5{padding-bottom:5px;padding-top:5px}.pi .py-6{padding-bottom:6px;padding-top:6px}.pi .py-8{padding-bottom:8px;padding-top:8px}.pi .py-90{padding-bottom:5.625rem;padding-top:5.625rem}.pi .py-96{padding-bottom:96px;padding-top:96px}.pi .py-\\[9px\\]{padding-bottom:9px;padding-top:9px}.pi .pb-10{padding-bottom:10px}.pi .pb-12{padding-bottom:12px}.pi .pb-14{padding-bottom:14px}.pi .pb-16{padding-bottom:16px}.pi .pb-18{padding-bottom:18px}.pi .pb-20{padding-bottom:20px}.pi .pb-24{padding-bottom:24px}.pi .pb-28{padding-bottom:28px}.pi .pb-30{padding-bottom:30px}.pi .pb-32{padding-bottom:32px}.pi .pb-4{padding-bottom:4px}.pi .pb-48{padding-bottom:48px}.pi .pb-6{padding-bottom:6px}.pi .pb-8{padding-bottom:8px}.pi .pb-safe-area{padding-bottom:env(safe-area-inset-bottom)}.pi .pl-10{padding-left:10px}.pi .pl-12{padding-left:12px}.pi .pl-14{padding-left:14px}.pi .pl-16{padding-left:16px}.pi .pl-18{padding-left:18px}.pi .pl-20{padding-left:20px}.pi .pl-28{padding-left:28px}.pi .pl-4{padding-left:4px}.pi .pl-46{padding-left:2.875rem}.pi .pl-54{padding-left:3.375rem}.pi .pl-8{padding-left:8px}.pi .pr-0{padding-right:0}.pi .pr-10{padding-right:10px}.pi .pr-12{padding-right:12px}.pi .pr-18{padding-right:18px}.pi .pr-24{padding-right:24px}.pi .pr-28{padding-right:28px}.pi .pr-46{padding-right:2.875rem}.pi .pr-54{padding-right:3.375rem}.pi .pr-6{padding-right:6px}.pi .pr-8{padding-right:8px}.pi .pt-10{padding-top:10px}.pi .pt-12{padding-top:12px}.pi .pt-14{padding-top:14px}.pi .pt-16{padding-top:16px}.pi .pt-20{padding-top:20px}.pi .pt-24{padding-top:24px}.pi .pt-26{padding-top:26px}.pi .pt-30{padding-top:30px}.pi .pt-4{padding-top:4px}.pi .pt-40{padding-top:40px}.pi .pt-42{padding-top:42px}.pi .pt-50{padding-top:50px}.pi .pt-54{padding-top:3.375rem}.pi .pt-6{padding-top:6px}.pi .pt-70{padding-top:70px}.pi .text-left{text-align:left}.pi .text-center{text-align:center}.pi .text-right{text-align:right}.pi .text-start{text-align:start}.pi .align-top{vertical-align:top}.pi .align-middle{vertical-align:middle}.pi .font-mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}.pi .text-2xl{font-size:24px;line-height:32px}.pi .text-3xl{font-size:30px;line-height:36px}.pi .text-4xl{font-size:36px;line-height:40px}.pi .text-6xl{font-size:60px;line-height:1}.pi .text-base{font-size:16px;line-height:24px}.pi .text-lg{font-size:18px;line-height:28px}.pi .text-sm{font-size:14px;line-height:20px}.pi .text-xl{font-size:20px;line-height:28px}.pi .text-xs{font-size:12px;line-height:16px}.pi .font-bold{font-weight:700}.pi .font-light{font-weight:300}.pi .font-medium{font-weight:500}.pi .font-normal{font-weight:400}.pi .font-semibold{font-weight:600}.pi .uppercase{text-transform:uppercase}.pi .lowercase{text-transform:lowercase}.pi .capitalize{text-transform:capitalize}.pi .italic{font-style:italic}.pi .tabular-nums{--tw-numeric-spacing:tabular-nums;font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.pi .leading-3{line-height:.75rem}.pi .leading-4{line-height:1rem}.pi .leading-5{line-height:1.25rem}.pi .leading-loose{line-height:2}.pi .leading-none{line-height:1}.pi .leading-snug{line-height:1.375}.pi .leading-tight{line-height:1.25}.pi .tracking-wide{letter-spacing:.025em}.pi .\\!text{color:rgb(var(--be-foreground-base)/var(--be-text-main-opacity))!important}.pi .text{color:rgb(var(--be-foreground-base)/var(--be-text-main-opacity))}.pi .text-background{--tw-text-opacity:1;color:rgb(var(--be-background)/var(--tw-text-opacity))}.pi .text-background-alt{--tw-text-opacity:1;color:rgb(var(--be-background-alt)/var(--tw-text-opacity))}.pi .text-black{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity))}.pi .text-black\\/30{color:#0000004d}.pi .text-danger{--tw-text-opacity:1;color:rgb(239 68 68/var(--tw-text-opacity))}.pi .text-danger-darker{--tw-text-opacity:1;color:rgb(153 27 27/var(--tw-text-opacity))}.pi .text-disabled{color:rgb(var(--be-foreground-base)/var(--be-disabled-fg-opacity))}.pi .text-envato{--tw-text-opacity:1;color:rgb(108 161 43/var(--tw-text-opacity))}.pi .text-facebook{--tw-text-opacity:1;color:rgb(59 89 152/var(--tw-text-opacity))}.pi .text-link{--tw-text-opacity:1;color:rgb(var(--be-link-color,var(--be-primary))/var(--tw-text-opacity))}.pi .text-main{color:rgb(var(--be-foreground-base)/var(--be-text-main-opacity))}.pi .text-muted{color:rgb(var(--be-foreground-base)/var(--be-text-muted-opacity))}.pi .text-on-primary{--tw-text-opacity:1;color:rgb(var(--be-on-primary)/var(--tw-text-opacity))}.pi .text-positive{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity))}.pi .text-positive-darker{--tw-text-opacity:1;color:rgb(22 101 52/var(--tw-text-opacity))}.pi .text-primary{--tw-text-opacity:1;color:rgb(var(--be-primary)/var(--tw-text-opacity))}.pi .text-primary-light{--tw-text-opacity:1;color:rgb(var(--be-primary-light)/var(--tw-text-opacity))}.pi .text-primary\\/40{color:rgb(var(--be-primary)/.4)}.pi .text-transparent{color:transparent}.pi .text-twitter{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity))}.pi .text-warning{--tw-text-opacity:1;color:rgb(243 164 50/var(--tw-text-opacity))}.pi .text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.pi .text-white\\/87{color:#ffffffde}.pi .underline{text-decoration-line:underline}.pi .no-underline{text-decoration-line:none}.pi .caret-transparent{caret-color:transparent}.pi .opacity-0{opacity:0}.pi .opacity-100{opacity:1}.pi .opacity-70{opacity:.7}.pi .opacity-80{opacity:.8}.pi .opacity-90{opacity:.9}.pi .shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color)}.pi .shadow,.pi .shadow-2xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.pi .shadow-2xl{--tw-shadow:0 25px 50px -12px rgba(0,0,0,.25);--tw-shadow-colored:0 25px 50px -12px var(--tw-shadow-color)}.pi .shadow-\\[15px_0_30px_0_rgb\\(0_0_0_\\/_18\\%\\)\\]{--tw-shadow:15px 0 30px 0 rgba(0,0,0,.18);--tw-shadow-colored:15px 0 30px 0 var(--tw-shadow-color)}.pi .shadow-\\[15px_0_30px_0_rgb\\(0_0_0_\\/_18\\%\\)\\],.pi .shadow-lg{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.pi .shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.pi .shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.pi .shadow-md,.pi .shadow-none{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.pi .shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000}.pi .shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color)}.pi .shadow-sm,.pi .shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.pi .shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color)}.pi .outline-none{outline:2px solid transparent;outline-offset:2px}.pi .outline{outline-color:rgb(var(--be-primary-lighter)/1);outline-style:solid;outline-width:2px}.pi .ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.pi .ring,.pi .ring-2{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.pi .ring-2{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.pi .ring-inset{--tw-ring-inset:inset}.pi .ring-primary{--tw-ring-opacity:1;--tw-ring-color:rgb(var(--be-primary)/var(--tw-ring-opacity))}.pi .ring-offset-2{--tw-ring-offset-width:2px}.pi .ring-offset-4{--tw-ring-offset-width:4px}.pi .blur{--tw-blur:blur(8px)}.pi .blur,.pi .grayscale{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.pi .grayscale{--tw-grayscale:grayscale(100%)}.pi .invert{--tw-invert:invert(100%)}.pi .invert,.pi .sepia{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.pi .sepia{--tw-sepia:sepia(100%)}.pi .\\!filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)!important}.pi .filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.pi .backdrop-blur-sm{--tw-backdrop-blur:blur(4px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}.pi .transition{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.pi .transition-all{transition-duration:.15s;transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1)}.pi .transition-bg-color{transition-duration:.15s;transition-property:background-color;transition-timing-function:cubic-bezier(.4,0,.2,1)}.pi .transition-button{transition-duration:.15s;transition-property:background-color,box-shadow,border-color,color;transition-timing-function:cubic-bezier(.4,0,.2,1)}.pi .transition-colors{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1)}.pi .transition-opacity{transition-duration:.15s;transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.pi .transition-shadow{transition-duration:.15s;transition-property:box-shadow;transition-timing-function:cubic-bezier(.4,0,.2,1)}.pi .transition-transform{transition-duration:.15s;transition-property:transform;transition-timing-function:cubic-bezier(.4,0,.2,1)}.pi .transition-width{transition-duration:.15s;transition-property:width;transition-timing-function:cubic-bezier(.4,0,.2,1)}.pi .duration-100{transition-duration:.1s}.pi .duration-200{transition-duration:.2s}.pi .duration-300{transition-duration:.3s}.pi .will-change-\\[width\\]{will-change:width}.pi .will-change-transform{will-change:transform}.pi .\\@container{container-type:inline-size}.pi .icon-2xs{font-size:.75rem}.pi .icon-xs{font-size:1rem}.pi .icon-sm{font-size:1.25rem}.pi .icon-md{font-size:1.5rem}.pi .icon-lg{font-size:2.1875rem}.pi .icon-xl{font-size:2.6875rem}.pi .no-tap-highlight{-webkit-tap-highlight-color:transparent}@media only screen and (min-device-width:768px){.pi .tiny-scrollbar{scrollbar-color:rgba(0,0,0,.2) transparent;scrollbar-width:thin}.pi .tiny-scrollbar::-webkit-scrollbar{background-color:transparent;height:6px;width:6px}.pi .tiny-scrollbar::-webkit-scrollbar-thumb{background-color:rgb(var(--be-foreground-base)/.2);border-radius:10px}.pi .tiny-scrollbar::-webkit-scrollbar-track-piece:start{background:transparent}.pi .tiny-scrollbar::-webkit-scrollbar-track-piece:end{background:transparent}}.pi .hide-scrollbar{-ms-overflow-style:none;scrollbar-width:none}.pi .hide-scrollbar::-webkit-scrollbar{background:transparent;display:none;height:0;width:0}.pi .svg-icon{display:inline-block;flex-shrink:0;-webkit-user-select:none;-moz-user-select:none;user-select:none;fill:currentColor;transition-duration:.15s;transition-property:transform,fill;transition-timing-function:cubic-bezier(.4,0,.2,1)}.pi .cropzone:not(.moving) .cropzone-transition{transition-duration:.15s;transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1)}.pi .first-letter\\:capitalize:first-letter{text-transform:capitalize}.pi .file\\:mr-10::file-selector-button{margin-right:10px}.pi .file\\:h-24::file-selector-button{height:24px}.pi .file\\:rounded::file-selector-button{border-radius:4px}.pi .file\\:border-none::file-selector-button{border-style:none}.pi .file\\:bg-primary::file-selector-button{--tw-bg-opacity:1;background-color:rgb(var(--be-primary)/var(--tw-bg-opacity))}.pi .file\\:px-10::file-selector-button{padding-left:10px;padding-right:10px}.pi .file\\:text-sm::file-selector-button{font-size:14px;line-height:20px}.pi .file\\:font-semibold::file-selector-button{font-weight:600}.pi .file\\:text-on-primary::file-selector-button{--tw-text-opacity:1;color:rgb(var(--be-on-primary)/var(--tw-text-opacity))}.pi .before\\:absolute:before{content:var(--tw-content);position:absolute}.pi .before\\:left-0:before{content:var(--tw-content);left:0}.pi .before\\:top-1\\/2:before{content:var(--tw-content);top:50%}.pi .before\\:z-10:before{content:var(--tw-content);z-index:10}.pi .before\\:block:before{content:var(--tw-content);display:block}.pi .before\\:h-1:before{content:var(--tw-content);height:1px}.pi .before\\:h-12:before{content:var(--tw-content);height:12px}.pi .before\\:h-14:before{content:var(--tw-content);height:14px}.pi .before\\:h-18:before{content:var(--tw-content);height:18px}.pi .before\\:h-22:before{content:var(--tw-content);height:22px}.pi .before\\:h-28:before{content:var(--tw-content);height:28px}.pi .before\\:h-full:before{content:var(--tw-content);height:100%}.pi .before\\:w-12:before{content:var(--tw-content);width:12px}.pi .before\\:w-14:before{content:var(--tw-content);width:14px}.pi .before\\:w-18:before{content:var(--tw-content);width:18px}.pi .before\\:w-22:before{content:var(--tw-content);width:22px}.pi .before\\:w-28:before{content:var(--tw-content);width:28px}.pi .before\\:w-full:before{content:var(--tw-content);width:100%}.pi .before\\:-translate-y-1\\/2:before{--tw-translate-y:-50%}.pi .before\\:-translate-y-1\\/2:before,.pi .before\\:translate-x-2:before{content:var(--tw-content);transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.pi .before\\:translate-x-2:before{--tw-translate-x:2px}.pi .before\\:scale-10:before{content:var(--tw-content);--tw-scale-x:.1;--tw-scale-y:.1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.pi .before\\:rounded-3xl:before{border-radius:24px;content:var(--tw-content)}.pi .before\\:rounded-full:before{border-radius:9999px;content:var(--tw-content)}.pi .before\\:border:before{border-width:1px;content:var(--tw-content)}.pi .before\\:bg-divider:before{background-color:rgb(var(--be-foreground-base)/var(--be-divider-opacity));content:var(--tw-content)}.pi .before\\:bg-primary:before{content:var(--tw-content);--tw-bg-opacity:1;background-color:rgb(var(--be-primary)/var(--tw-bg-opacity))}.pi .before\\:bg-white:before{content:var(--tw-content);--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.pi .before\\:opacity-0:before{content:var(--tw-content);opacity:0}.pi .before\\:transition:before{content:var(--tw-content);transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.pi .before\\:transition-transform:before{content:var(--tw-content);transition-duration:.15s;transition-property:transform;transition-timing-function:cubic-bezier(.4,0,.2,1)}.pi .before\\:duration-200:before{content:var(--tw-content);transition-duration:.2s}.pi .after\\:pointer-events-none:after{content:var(--tw-content);pointer-events:none}.pi .after\\:absolute:after{content:var(--tw-content);position:absolute}.pi .after\\:inset-0:after{content:var(--tw-content);top:0;right:0;bottom:0;left:0}.pi .after\\:bottom-0:after{bottom:0;content:var(--tw-content)}.pi .after\\:left-0:after{content:var(--tw-content);left:0}.pi .after\\:h-20:after{content:var(--tw-content);height:20px}.pi .after\\:w-full:after{content:var(--tw-content);width:100%}.pi .after\\:bg-gradient-to-b:after{background-image:linear-gradient(to bottom,var(--tw-gradient-stops));content:var(--tw-content)}.pi .after\\:from-transparent:after{content:var(--tw-content);--tw-gradient-from:transparent var(--tw-gradient-from-position);--tw-gradient-to:transparent var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.pi .after\\:to-background:after{content:var(--tw-content);--tw-gradient-to:rgb(var(--be-background)/1) var(--tw-gradient-to-position)}.pi .first\\:capitalize:first-child{text-transform:capitalize}.pi .checked\\:border-danger:checked{--tw-border-opacity:1;border-color:rgb(239 68 68/var(--tw-border-opacity))}.pi .checked\\:border-primary:checked{--tw-border-opacity:1;border-color:rgb(var(--be-primary)/var(--tw-border-opacity))}.pi .checked\\:bg-danger:checked{--tw-bg-opacity:1;background-color:rgb(239 68 68/var(--tw-bg-opacity))}.pi .checked\\:bg-primary:checked{--tw-bg-opacity:1;background-color:rgb(var(--be-primary)/var(--tw-bg-opacity))}.pi .checked\\:before\\:translate-x-14:checked:before{--tw-translate-x:14px}.pi .checked\\:before\\:translate-x-14:checked:before,.pi .checked\\:before\\:translate-x-20:checked:before{content:var(--tw-content);transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.pi .checked\\:before\\:translate-x-20:checked:before{--tw-translate-x:20px}.pi .checked\\:before\\:translate-x-24:checked:before{--tw-translate-x:24px}.pi .checked\\:before\\:translate-x-24:checked:before,.pi .checked\\:before\\:translate-x-30:checked:before{content:var(--tw-content);transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.pi .checked\\:before\\:translate-x-30:checked:before{--tw-translate-x:30px}.pi .checked\\:before\\:translate-x-36:checked:before{--tw-translate-x:36px}.pi .checked\\:before\\:scale-\\[\\.65\\]:checked:before,.pi .checked\\:before\\:translate-x-36:checked:before{content:var(--tw-content);transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.pi .checked\\:before\\:scale-\\[\\.65\\]:checked:before{--tw-scale-x:.65;--tw-scale-y:.65}.pi .checked\\:before\\:border-white:checked:before{content:var(--tw-content);--tw-border-opacity:1;border-color:rgb(255 255 255/var(--tw-border-opacity))}.pi .checked\\:before\\:opacity-100:checked:before{content:var(--tw-content);opacity:1}.pi .focus-within\\:border-primary\\/60:focus-within{border-color:rgb(var(--be-primary)/.6)}.pi .focus-within\\:ring:focus-within{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.pi .focus-within\\:ring-primary\\/focus:focus-within{--tw-ring-color:rgb(var(--be-primary)/var(--be-focus-opacity))}.pi .hover\\:scale-105:hover{--tw-scale-x:1.05;--tw-scale-y:1.05}.pi .hover\\:scale-105:hover,.pi .hover\\:scale-110:hover{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.pi .hover\\:scale-110:hover{--tw-scale-x:1.1;--tw-scale-y:1.1}.pi .hover\\:cursor-move:hover{cursor:move}.pi .hover\\:border-chip\\/90:hover{border-color:rgb(var(--be-background-chip)/.9)}.pi .hover\\:border-danger:hover{--tw-border-opacity:1;border-color:rgb(239 68 68/var(--tw-border-opacity))}.pi .hover\\:border-danger\\/90:hover{border-color:#ef4444e6}.pi .hover\\:border-paper\\/90:hover{border-color:rgb(var(--be-paper)/.9)}.pi .hover\\:border-positive:hover{--tw-border-opacity:1;border-color:rgb(34 197 94/var(--tw-border-opacity))}.pi .hover\\:border-primary:hover{--tw-border-opacity:1;border-color:rgb(var(--be-primary)/var(--tw-border-opacity))}.pi .hover\\:border-primary-dark:hover{--tw-border-opacity:1;border-color:rgb(var(--be-primary-dark)/var(--tw-border-opacity))}.pi .hover\\:bg-chip\\/90:hover{background-color:rgb(var(--be-background-chip)/.9)}.pi .hover\\:bg-danger\\/10:hover{background-color:#ef44441a}.pi .hover\\:bg-danger\\/4:hover{background-color:#ef44440a}.pi .hover\\:bg-danger\\/90:hover{background-color:#ef4444e6}.pi .hover\\:bg-fg-base\\/15:hover{background-color:rgb(var(--be-foreground-base)/15%)}.pi .hover\\:bg-focus:hover{background-color:rgb(var(--be-foreground-base)/var(--be-focus-opacity))}.pi .hover\\:bg-hover:hover{background-color:rgb(var(--be-foreground-base)/var(--be-hover-opacity))}.pi .hover\\:bg-paper\\/90:hover{background-color:rgb(var(--be-paper)/.9)}.pi .hover\\:bg-positive\\/4:hover{background-color:#22c55e0a}.pi .hover\\:bg-primary-dark:hover{--tw-bg-opacity:1;background-color:rgb(var(--be-primary-dark)/var(--tw-bg-opacity))}.pi .hover\\:bg-primary\\/10:hover{background-color:rgb(var(--be-primary)/.1)}.pi .hover\\:bg-primary\\/4:hover{background-color:rgb(var(--be-primary)/4%)}.pi .hover\\:bg-primary\\/focus:hover{background-color:rgb(var(--be-primary)/var(--be-focus-opacity))}.pi .hover\\:bg-primary\\/hover:hover{background-color:rgb(var(--be-primary)/var(--be-hover-opacity))}.pi .hover\\:bg-white:hover{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.pi .hover\\:bg-white\\/20:hover{background-color:#fff3}.pi .hover\\:bg-white\\/hover:hover{background-color:rgb(255 255 255/var(--be-hover-opacity))}.pi .hover\\:text:hover{color:rgb(var(--be-foreground-base)/var(--be-text-main-opacity))}.pi .hover\\:text-fg-base:hover{--tw-text-opacity:1;color:rgb(var(--be-foreground-base)/var(--tw-text-opacity))}.pi .hover\\:text-main:hover{color:rgb(var(--be-foreground-base)/var(--be-text-main-opacity))}.pi .hover\\:text-primary-dark:hover{--tw-text-opacity:1;color:rgb(var(--be-primary-dark)/var(--tw-text-opacity))}.pi .hover\\:underline:hover{text-decoration-line:underline}.pi .hover\\:opacity-100:hover{opacity:1}.pi .hover\\:shadow-md:hover{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.pi .before\\:hover\\:bg-primary-dark:hover:before{content:var(--tw-content);--tw-bg-opacity:1;background-color:rgb(var(--be-primary-dark)/var(--tw-bg-opacity))}.pi .hover\\:after\\:bg-black\\/5:hover:after{background-color:#0000000d;content:var(--tw-content)}.pi .checked\\:hover\\:border-primary-dark:hover:checked{--tw-border-opacity:1;border-color:rgb(var(--be-primary-dark)/var(--tw-border-opacity))}.pi .focus\\:border-danger\\/60:focus{border-color:#ef444499}.pi .focus\\:border-primary\\/60:focus{border-color:rgb(var(--be-primary)/.6)}.pi .focus\\:bg-primary:focus{--tw-bg-opacity:1;background-color:rgb(var(--be-primary)/var(--tw-bg-opacity))}.pi .focus\\:text-on-primary:focus{--tw-text-opacity:1;color:rgb(var(--be-on-primary)/var(--tw-text-opacity))}.pi .focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.pi .focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.pi .focus\\:ring-danger\\/focus:focus{--tw-ring-color:rgb(239 68 68/var(--be-focus-opacity))}.pi .focus\\:ring-primary\\/focus:focus{--tw-ring-color:rgb(var(--be-primary)/var(--be-focus-opacity))}.pi .focus\\:after\\:bg-black\\/10:focus:after{background-color:#0000001a;content:var(--tw-content)}.pi .focus-visible\\:bg-focus:focus-visible{background-color:rgb(var(--be-foreground-base)/var(--be-focus-opacity))}.pi .focus-visible\\:bg-primary\\/focus:focus-visible{background-color:rgb(var(--be-primary)/var(--be-focus-opacity))}.pi .focus-visible\\:underline:focus-visible{text-decoration-line:underline}.pi .focus-visible\\:outline:focus-visible{outline-style:solid;outline-width:2px}.pi .focus-visible\\:outline-offset-2:focus-visible{outline-offset:2px}.pi .focus-visible\\:outline:focus-visible{outline-color:rgb(var(--be-primary-lighter)/1)}.pi .focus-visible\\:outline-primary-light:focus-visible{outline-color:rgb(var(--be-primary-light)/1)}.pi .focus-visible\\:ring:focus-visible{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.pi .focus-visible\\:ring-2:focus-visible{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.pi .focus-visible\\:ring-offset-2:focus-visible{--tw-ring-offset-width:2px}.pi .disabled\\:pointer-events-none:disabled{pointer-events:none}.pi .disabled\\:cursor-default:disabled{cursor:default}.pi .disabled\\:border-disabled-bg:disabled{border-color:rgb(var(--be-foreground-base)/var(--be-disabled-bg-opacity))}.pi .disabled\\:border-disabled-fg:disabled{border-color:rgb(var(--be-foreground-base)/var(--be-disabled-fg-opacity))}.pi .disabled\\:border-transparent:disabled{border-color:transparent}.pi .disabled\\:border-white\\/70:disabled{border-color:#ffffffb3}.pi .disabled\\:border-r-transparent:disabled{border-right-color:transparent}.pi .disabled\\:bg-disabled:disabled{background-color:rgb(var(--be-foreground-base)/var(--be-disabled-bg-opacity))}.pi .disabled\\:bg-transparent:disabled{background-color:transparent}.pi .disabled\\:text-disabled:disabled{color:rgb(var(--be-foreground-base)/var(--be-disabled-fg-opacity))}.pi .disabled\\:text-white\\/70:disabled{color:#ffffffb3}.pi .disabled\\:shadow-none:disabled{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.pi .disabled\\:before\\:bg-disabled-fg:disabled:before{background-color:rgb(var(--be-foreground-base)/var(--be-disabled-fg-opacity));content:var(--tw-content)}.pi .group:hover .group-hover\\:visible{visibility:visible}@container (min-width: 20rem){.pi .\\@xs\\:mb-0{margin-bottom:0}.pi .\\@xs\\:flex{display:flex}}.pi .dark\\:bg-alt:is(.dark *){--tw-bg-opacity:1;background-color:rgb(var(--be-background-alt)/var(--tw-bg-opacity))}.pi .dark\\:bg-chip:is(.dark *){--tw-bg-opacity:1;background-color:rgb(var(--be-background-chip)/var(--tw-bg-opacity))}.pi .dark\\:bg-none:is(.dark *){background-image:none}.pi .dark\\:text-white\\/50:is(.dark *){color:#ffffff80}.pi .dark\\:opacity-5:is(.dark *){opacity:.05}.pi .dark\\:opacity-80:is(.dark *){opacity:.8}.pi .dark\\:checked\\:border-primary-dark:checked:is(.dark *){--tw-border-opacity:1;border-color:rgb(var(--be-primary-dark)/var(--tw-border-opacity))}.pi .dark\\:checked\\:bg-primary-dark:checked:is(.dark *){--tw-bg-opacity:1;background-color:rgb(var(--be-primary-dark)/var(--tw-bg-opacity))}@media not all and (min-width:768px){.pi .max-md\\:hidden{display:none}.pi .max-md\\:flex-col{flex-direction:column}}@media (min-width:640px){.pi .sm\\:justify-start{justify-content:flex-start}.pi .sm\\:text-sm{font-size:14px;line-height:20px}}@media (min-width:768px){.pi .md\\:invisible{visibility:hidden}.pi .md\\:mx-40{margin-left:40px;margin-right:40px}.pi .md\\:my-24{margin-bottom:24px;margin-top:24px}.pi .md\\:my-40{margin-bottom:40px;margin-top:40px}.pi .md\\:my-64{margin-bottom:64px;margin-top:64px}.pi .md\\:my-80{margin-bottom:80px;margin-top:80px}.pi .md\\:mb-0{margin-bottom:0}.pi .md\\:mb-16{margin-bottom:16px}.pi .md\\:mb-40{margin-bottom:40px}.pi .md\\:mb-70{margin-bottom:70px}.pi .md\\:mr-0{margin-right:0}.pi .md\\:mr-10{margin-right:10px}.pi .md\\:mr-24{margin-right:24px}.pi .md\\:mr-64{margin-right:64px}.pi .md\\:mr-80{margin-right:80px}.pi .md\\:mt-0{margin-top:0}.pi .md\\:mt-60{margin-top:60px}.pi .md\\:block{display:block}.pi .md\\:flex{display:flex}.pi .md\\:hidden{display:none}.pi .md\\:h-0{height:0}.pi .md\\:h-32{height:32px}.pi .md\\:max-h-36{max-height:36px}.pi .md\\:w-1\\/3{width:33.333333%}.pi .md\\:w-32{width:32px}.pi .md\\:w-320{width:320px}.pi .md\\:w-400{width:25rem}.pi .md\\:min-w-240{min-width:240px}.pi .md\\:max-w-350{max-width:21.875rem}.pi .md\\:max-w-950{max-width:59.375rem}.pi .md\\:flex-row{flex-direction:row}.pi .md\\:items-start{align-items:flex-start}.pi .md\\:items-center{align-items:center}.pi .md\\:justify-center{justify-content:center}.pi .md\\:gap-112{gap:112px}.pi .md\\:gap-12{gap:12px}.pi .md\\:gap-14{gap:14px}.pi .md\\:gap-16{gap:16px}.pi .md\\:gap-18{gap:18px}.pi .md\\:gap-30{gap:30px}.pi .md\\:gap-80{gap:80px}.pi .md\\:overflow-hidden{overflow:hidden}.pi .md\\:p-18{padding:18px}.pi .md\\:p-24{padding:24px}.pi .md\\:p-40{padding:40px}.pi .md\\:px-0{padding-left:0;padding-right:0}.pi .md\\:px-10vw{padding-left:10vw;padding-right:10vw}.pi .md\\:px-176{padding-left:176px;padding-right:176px}.pi .md\\:px-20{padding-left:20px;padding-right:20px}.pi .md\\:px-24{padding-left:24px;padding-right:24px}.pi .md\\:px-30{padding-left:30px;padding-right:30px}.pi .md\\:py-80{padding-bottom:80px;padding-top:80px}.pi .md\\:pb-0{padding-bottom:0}.pi .md\\:pb-54{padding-bottom:3.375rem}.pi .md\\:pl-20{padding-left:20px}.pi .md\\:pr-20{padding-right:20px}.pi .md\\:pt-128{padding-top:128px}.pi .md\\:pt-24{padding-top:24px}.pi .md\\:text-left{text-align:left}.pi .md\\:text-3xl{font-size:30px;line-height:36px}.pi .md\\:text-4xl{font-size:36px;line-height:40px}.pi .md\\:text-5xl{font-size:48px;line-height:1}.pi .md\\:text-base{font-size:16px;line-height:24px}.pi .md\\:text-lg{font-size:18px;line-height:28px}.pi .md\\:font-medium{font-weight:500}.pi .md\\:font-normal{font-weight:400}.pi .md\\:shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}}@media (min-width:1024px){.pi .lg\\:block{display:block}.pi .lg\\:flex-row{flex-direction:row}.pi .lg\\:px-96{padding-left:96px;padding-right:96px}.pi .lg\\:py-96{padding-bottom:96px;padding-top:96px}.pi .lg\\:pb-0{padding-bottom:0}}@media (min-width:1280px){.pi .xl\\:w-1\\/2{width:50%}.pi .xl\\:pt-96{padding-top:96px}}.pi .\\[\\&\\>\\.tree-label\\]\\:focus-visible\\:ring:focus-visible>.tree-label{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.pi .\\[\\&\\>\\.tree-label\\]\\:focus-visible\\:ring-2:focus-visible>.tree-label{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.pi .\\[\\&\\>\\.tree-label\\]\\:focus-visible\\:ring-inset:focus-visible>.tree-label{--tw-ring-inset:inset}
`, W_ = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";
let _m = (t = 21) => {
  let e = "", r = crypto.getRandomValues(new Uint8Array(t));
  for (; t--; )
    e += W_[r[t] & 63];
  return e;
};
class X_ {
  constructor(e, r) {
    Oe(this, "timerId");
    Oe(this, "createdAt", 0);
    this.callback = e, this.remaining = r, this.resume();
  }
  pause() {
    clearTimeout(this.timerId), this.remaining -= Date.now() - this.createdAt;
  }
  resume() {
    this.createdAt = Date.now(), this.timerId && clearTimeout(this.timerId), this.timerId = setTimeout(this.callback, this.remaining);
  }
  clear() {
    clearTimeout(this.timerId);
  }
}
const Y_ = 1;
function G_(t) {
  switch (t) {
    case "danger":
      return 8e3;
    case "loading":
      return 0;
    default:
      return 3e3;
  }
}
const Sm = nm()(
  pm((t, e) => ({
    toasts: [],
    add: (r, n) => {
      const i = e().toasts.length + 1 - Y_;
      i > 0 && t((f) => {
        f.toasts.splice(0, i);
      });
      const l = (n == null ? void 0 : n.id) || _m(6), g = (n == null ? void 0 : n.type) || "positive", a = (n == null ? void 0 : n.duration) ?? G_(g), s = {
        timer: a > 0 ? new X_(() => e().remove(l), a) : null,
        message: r,
        ...n,
        id: l,
        type: g,
        position: (n == null ? void 0 : n.position) || "bottom-center",
        duration: a,
        disableExitAnimation: n == null ? void 0 : n.disableExitAnimation,
        disableEnterAnimation: n == null ? void 0 : n.disableEnterAnimation
      }, c = e().toasts.findIndex((f) => f.id === s.id);
      c > -1 ? t((f) => {
        f.toasts[c] = s;
      }) : t((f) => {
        f.toasts.push(s);
      });
    },
    remove: (r) => {
      const n = e().toasts.filter((i) => {
        var l;
        return r === i.id ? ((l = i.timer) == null || l.clear(), !1) : !0;
      });
      t((i) => {
        i.toasts = n;
      });
    }
  }))
);
function vi() {
  return Sm.getState();
}
function Si(t, e) {
  vi().add(t, e);
}
Si.danger = (t, e) => {
  vi().add(t, { ...e, type: "danger" });
};
Si.positive = (t, e) => {
  vi().add(t, { ...e, type: "positive" });
};
Si.loading = (t, e) => {
  vi().add(t, { ...e, type: "loading" });
};
const Tm = Qr({
  transformPagePoint: (t) => t,
  isStatic: !1,
  reducedMotion: "never"
}), ha = Qr({}), du = Qr(null), fa = typeof document < "u", pu = fa ? xs : ke, gu = Qr({ strict: !1 }), mu = (t) => t.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase(), q_ = "framerAppearId", Em = "data-" + mu(q_);
function K_(t, e, r, n) {
  const { visualElement: i } = Ve(ha), l = Ve(gu), g = Ve(du), a = Ve(Tm).reducedMotion, s = ge();
  n = n || l.renderer, !s.current && n && (s.current = n(t, {
    visualState: e,
    parent: i,
    props: r,
    presenceContext: g,
    blockInitialAnimation: g ? g.initial === !1 : !1,
    reducedMotionConfig: a
  }));
  const c = s.current;
  jp(() => {
    c && c.update(r, g);
  });
  const f = ge(!!(r[Em] && !window.HandoffComplete));
  return pu(() => {
    c && (c.render(), f.current && c.animationState && c.animationState.animateChanges());
  }), ke(() => {
    c && (c.updateFeatures(), !f.current && c.animationState && c.animationState.animateChanges(), f.current && (f.current = !1, window.HandoffComplete = !0));
  }), c;
}
function km(t) {
  return t && typeof t == "object" && Object.prototype.hasOwnProperty.call(t, "current");
}
function J_(t, e, r) {
  return Me(
    (n) => {
      n && t.mount && t.mount(n), e && (n ? e.mount(n) : e.unmount()), r && (typeof r == "function" ? r(n) : km(r) && (r.current = n));
    },
    /**
     * Only pass a new ref callback to React if we've received a visual element
     * factory. Otherwise we'll be mounting/remounting every time externalRef
     * or other dependencies change.
     */
    [e]
  );
}
function ls(t) {
  return typeof t == "string" || Array.isArray(t);
}
function da(t) {
  return t !== null && typeof t == "object" && typeof t.start == "function";
}
const vu = [
  "animate",
  "whileInView",
  "whileFocus",
  "whileHover",
  "whileTap",
  "whileDrag",
  "exit"
], bu = ["initial", ...vu];
function pa(t) {
  return da(t.animate) || bu.some((e) => ls(t[e]));
}
function Om(t) {
  return !!(pa(t) || t.variants);
}
function Z_(t, e) {
  if (pa(t)) {
    const { initial: r, animate: n } = t;
    return {
      initial: r === !1 || ls(r) ? r : void 0,
      animate: ls(n) ? n : void 0
    };
  }
  return t.inherit !== !1 ? e : {};
}
function Q_(t) {
  const { initial: e, animate: r } = Z_(t, Ve(ha));
  return Ye(() => ({ initial: e, animate: r }), [gf(e), gf(r)]);
}
function gf(t) {
  return Array.isArray(t) ? t.join(" ") : t;
}
const mf = {
  animation: [
    "animate",
    "variants",
    "whileHover",
    "whileTap",
    "exit",
    "whileInView",
    "whileFocus",
    "whileDrag"
  ],
  exit: ["exit"],
  drag: ["drag", "dragControls"],
  focus: ["whileFocus"],
  hover: ["whileHover", "onHoverStart", "onHoverEnd"],
  tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
  pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
  inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
  layout: ["layout", "layoutId"]
}, cs = {};
for (const t in mf)
  cs[t] = {
    isEnabled: (e) => mf[t].some((r) => !!e[r])
  };
function sc(t) {
  for (const e in t)
    cs[e] = {
      ...cs[e],
      ...t[e]
    };
}
const Am = Qr({}), eS = Qr({}), tS = Symbol.for("motionComponentSymbol");
function rS({ preloadedFeatures: t, createVisualElement: e, useRender: r, useVisualState: n, Component: i }) {
  t && sc(t);
  function l(a, s) {
    let c;
    const f = {
      ...Ve(Tm),
      ...a,
      layoutId: nS(a)
    }, { isStatic: o } = f, h = Q_(a), u = n(a, o);
    if (!o && fa) {
      h.visualElement = K_(i, u, f, e);
      const d = Ve(eS), m = Ve(gu).strict;
      h.visualElement && (c = h.visualElement.loadFeatures(
        // Note: Pass the full new combined props to correctly re-render dynamic feature components.
        f,
        m,
        t,
        d
      ));
    }
    return ve.createElement(
      ha.Provider,
      { value: h },
      c && h.visualElement ? ve.createElement(c, { visualElement: h.visualElement, ...f }) : null,
      r(i, a, J_(u, h.visualElement, s), u, o, h.visualElement)
    );
  }
  const g = st(l);
  return g[tS] = i, g;
}
function nS({ layoutId: t }) {
  const e = Ve(Am).id;
  return e && t !== void 0 ? e + "-" + t : t;
}
function iS(t) {
  function e(n, i = {}) {
    return rS(t(n, i));
  }
  if (typeof Proxy > "u")
    return e;
  const r = /* @__PURE__ */ new Map();
  return new Proxy(e, {
    /**
     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
     * The prop name is passed through as `key` and we can use that to generate a `motion`
     * DOM component with that name.
     */
    get: (n, i) => (r.has(i) || r.set(i, e(i)), r.get(i))
  });
}
const sS = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "switch",
  "symbol",
  "svg",
  "text",
  "tspan",
  "use",
  "view"
];
function yu(t) {
  return (
    /**
     * If it's not a string, it's a custom React component. Currently we only support
     * HTML custom React components.
     */
    typeof t != "string" || /**
     * If it contains a dash, the element is a custom HTML webcomponent.
     */
    t.includes("-") ? !1 : (
      /**
       * If it's in our list of lowercase SVG tags, it's an SVG component
       */
      !!(sS.indexOf(t) > -1 || /**
       * If it contains a capital letter, it's an SVG component
       */
      /[A-Z]/.test(t))
    )
  );
}
const oS = {}, Os = [
  "transformPerspective",
  "x",
  "y",
  "z",
  "translateX",
  "translateY",
  "translateZ",
  "scale",
  "scaleX",
  "scaleY",
  "rotate",
  "rotateX",
  "rotateY",
  "rotateZ",
  "skew",
  "skewX",
  "skewY"
], Rn = new Set(Os);
function Dm(t, { layout: e, layoutId: r }) {
  return Rn.has(t) || t.startsWith("origin") || (e || r !== void 0) && (!!oS[t] || t === "opacity");
}
const Rt = (t) => !!(t && t.getVelocity), aS = {
  x: "translateX",
  y: "translateY",
  z: "translateZ",
  transformPerspective: "perspective"
}, lS = Os.length;
function cS(t, { enableHardwareAcceleration: e = !0, allowTransformNone: r = !0 }, n, i) {
  let l = "";
  for (let g = 0; g < lS; g++) {
    const a = Os[g];
    if (t[a] !== void 0) {
      const s = aS[a] || a;
      l += `${s}(${t[a]}) `;
    }
  }
  return e && !t.z && (l += "translateZ(0)"), l = l.trim(), i ? l = i(t, n ? "" : l) : r && n && (l = "none"), l;
}
const Pm = (t) => (e) => typeof e == "string" && e.startsWith(t), Mm = Pm("--"), oc = Pm("var(--"), uS = /var\s*\(\s*--[\w-]+(\s*,\s*(?:(?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)+)?\s*\)/g, hS = (t, e) => e && typeof t == "number" ? e.transform(t) : t, bi = (t, e, r) => Math.min(Math.max(r, t), e), In = {
  test: (t) => typeof t == "number",
  parse: parseFloat,
  transform: (t) => t
}, qi = {
  ...In,
  transform: (t) => bi(0, 1, t)
}, Ks = {
  ...In,
  default: 1
}, Ki = (t) => Math.round(t * 1e5) / 1e5, ga = /(-)?([\d]*\.?[\d])+/g, Fm = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi, fS = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;
function As(t) {
  return typeof t == "string";
}
const Ds = (t) => ({
  test: (e) => As(e) && e.endsWith(t) && e.split(" ").length === 1,
  parse: parseFloat,
  transform: (e) => `${e}${t}`
}), Ar = Ds("deg"), Zn = Ds("%"), Se = Ds("px"), dS = Ds("vh"), pS = Ds("vw"), vf = {
  ...Zn,
  parse: (t) => Zn.parse(t) / 100,
  transform: (t) => Zn.transform(t * 100)
}, bf = {
  ...In,
  transform: Math.round
}, Rm = {
  // Border props
  borderWidth: Se,
  borderTopWidth: Se,
  borderRightWidth: Se,
  borderBottomWidth: Se,
  borderLeftWidth: Se,
  borderRadius: Se,
  radius: Se,
  borderTopLeftRadius: Se,
  borderTopRightRadius: Se,
  borderBottomRightRadius: Se,
  borderBottomLeftRadius: Se,
  // Positioning props
  width: Se,
  maxWidth: Se,
  height: Se,
  maxHeight: Se,
  size: Se,
  top: Se,
  right: Se,
  bottom: Se,
  left: Se,
  // Spacing props
  padding: Se,
  paddingTop: Se,
  paddingRight: Se,
  paddingBottom: Se,
  paddingLeft: Se,
  margin: Se,
  marginTop: Se,
  marginRight: Se,
  marginBottom: Se,
  marginLeft: Se,
  // Transform props
  rotate: Ar,
  rotateX: Ar,
  rotateY: Ar,
  rotateZ: Ar,
  scale: Ks,
  scaleX: Ks,
  scaleY: Ks,
  scaleZ: Ks,
  skew: Ar,
  skewX: Ar,
  skewY: Ar,
  distance: Se,
  translateX: Se,
  translateY: Se,
  translateZ: Se,
  x: Se,
  y: Se,
  z: Se,
  perspective: Se,
  transformPerspective: Se,
  opacity: qi,
  originX: vf,
  originY: vf,
  originZ: Se,
  // Misc
  zIndex: bf,
  // SVG
  fillOpacity: qi,
  strokeOpacity: qi,
  numOctaves: bf
};
function wu(t, e, r, n) {
  const { style: i, vars: l, transform: g, transformOrigin: a } = t;
  let s = !1, c = !1, f = !0;
  for (const o in e) {
    const h = e[o];
    if (Mm(o)) {
      l[o] = h;
      continue;
    }
    const u = Rm[o], d = hS(h, u);
    if (Rn.has(o)) {
      if (s = !0, g[o] = d, !f)
        continue;
      h !== (u.default || 0) && (f = !1);
    } else
      o.startsWith("origin") ? (c = !0, a[o] = d) : i[o] = d;
  }
  if (e.transform || (s || n ? i.transform = cS(t.transform, r, f, n) : i.transform && (i.transform = "none")), c) {
    const { originX: o = "50%", originY: h = "50%", originZ: u = 0 } = a;
    i.transformOrigin = `${o} ${h} ${u}`;
  }
}
const xu = () => ({
  style: {},
  transform: {},
  transformOrigin: {},
  vars: {}
});
function Im(t, e, r) {
  for (const n in e)
    !Rt(e[n]) && !Dm(n, r) && (t[n] = e[n]);
}
function gS({ transformTemplate: t }, e, r) {
  return Ye(() => {
    const n = xu();
    return wu(n, e, { enableHardwareAcceleration: !r }, t), Object.assign({}, n.vars, n.style);
  }, [e]);
}
function mS(t, e, r) {
  const n = t.style || {}, i = {};
  return Im(i, n, t), Object.assign(i, gS(t, e, r)), t.transformValues ? t.transformValues(i) : i;
}
function vS(t, e, r) {
  const n = {}, i = mS(t, e, r);
  return t.drag && t.dragListener !== !1 && (n.draggable = !1, i.userSelect = i.WebkitUserSelect = i.WebkitTouchCallout = "none", i.touchAction = t.drag === !0 ? "none" : `pan-${t.drag === "x" ? "y" : "x"}`), t.tabIndex === void 0 && (t.onTap || t.onTapStart || t.whileTap) && (n.tabIndex = 0), n.style = i, n;
}
const bS = /* @__PURE__ */ new Set([
  "animate",
  "exit",
  "variants",
  "initial",
  "style",
  "values",
  "variants",
  "transition",
  "transformTemplate",
  "transformValues",
  "custom",
  "inherit",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "_dragX",
  "_dragY",
  "onHoverStart",
  "onHoverEnd",
  "onViewportEnter",
  "onViewportLeave",
  "globalTapTarget",
  "ignoreStrict",
  "viewport"
]);
function ko(t) {
  return t.startsWith("while") || t.startsWith("drag") && t !== "draggable" || t.startsWith("layout") || t.startsWith("onTap") || t.startsWith("onPan") || t.startsWith("onLayout") || bS.has(t);
}
let Lm = (t) => !ko(t);
function yS(t) {
  t && (Lm = (e) => e.startsWith("on") ? !ko(e) : t(e));
}
try {
  yS(require("@emotion/is-prop-valid").default);
} catch {
}
function wS(t, e, r) {
  const n = {};
  for (const i in t)
    i === "values" && typeof t.values == "object" || (Lm(i) || r === !0 && ko(i) || !e && !ko(i) || // If trying to use native HTML drag events, forward drag listeners
    t.draggable && i.startsWith("onDrag")) && (n[i] = t[i]);
  return n;
}
function yf(t, e, r) {
  return typeof t == "string" ? t : Se.transform(e + r * t);
}
function xS(t, e, r) {
  const n = yf(e, t.x, t.width), i = yf(r, t.y, t.height);
  return `${n} ${i}`;
}
const CS = {
  offset: "stroke-dashoffset",
  array: "stroke-dasharray"
}, _S = {
  offset: "strokeDashoffset",
  array: "strokeDasharray"
};
function SS(t, e, r = 1, n = 0, i = !0) {
  t.pathLength = 1;
  const l = i ? CS : _S;
  t[l.offset] = Se.transform(-n);
  const g = Se.transform(e), a = Se.transform(r);
  t[l.array] = `${g} ${a}`;
}
function Cu(t, {
  attrX: e,
  attrY: r,
  attrScale: n,
  originX: i,
  originY: l,
  pathLength: g,
  pathSpacing: a = 1,
  pathOffset: s = 0,
  // This is object creation, which we try to avoid per-frame.
  ...c
}, f, o, h) {
  if (wu(t, c, f, h), o) {
    t.style.viewBox && (t.attrs.viewBox = t.style.viewBox);
    return;
  }
  t.attrs = t.style, t.style = {};
  const { attrs: u, style: d, dimensions: m } = t;
  u.transform && (m && (d.transform = u.transform), delete u.transform), m && (i !== void 0 || l !== void 0 || d.transform) && (d.transformOrigin = xS(m, i !== void 0 ? i : 0.5, l !== void 0 ? l : 0.5)), e !== void 0 && (u.x = e), r !== void 0 && (u.y = r), n !== void 0 && (u.scale = n), g !== void 0 && SS(u, g, a, s, !1);
}
const Bm = () => ({
  ...xu(),
  attrs: {}
}), _u = (t) => typeof t == "string" && t.toLowerCase() === "svg";
function TS(t, e, r, n) {
  const i = Ye(() => {
    const l = Bm();
    return Cu(l, e, { enableHardwareAcceleration: !1 }, _u(n), t.transformTemplate), {
      ...l.attrs,
      style: { ...l.style }
    };
  }, [e]);
  if (t.style) {
    const l = {};
    Im(l, t.style, t), i.style = { ...l, ...i.style };
  }
  return i;
}
function ES(t = !1) {
  return (r, n, i, { latestValues: l }, g) => {
    const s = (yu(r) ? TS : vS)(n, l, g, r), f = {
      ...wS(n, typeof r == "string", t),
      ...s,
      ref: i
    }, { children: o } = n, h = Ye(() => Rt(o) ? o.get() : o, [o]);
    return Ay(r, {
      ...f,
      children: h
    });
  };
}
function zm(t, { style: e, vars: r }, n, i) {
  Object.assign(t.style, e, i && i.getProjectionStyles(n));
  for (const l in r)
    t.style.setProperty(l, r[l]);
}
const Nm = /* @__PURE__ */ new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform",
  "pathLength",
  "startOffset",
  "textLength",
  "lengthAdjust"
]);
function jm(t, e, r, n) {
  zm(t, e, void 0, n);
  for (const i in e.attrs)
    t.setAttribute(Nm.has(i) ? i : mu(i), e.attrs[i]);
}
function Su(t, e) {
  const { style: r } = t, n = {};
  for (const i in r)
    (Rt(r[i]) || e.style && Rt(e.style[i]) || Dm(i, t)) && (n[i] = r[i]);
  return n;
}
function $m(t, e) {
  const r = Su(t, e);
  for (const n in t)
    if (Rt(t[n]) || Rt(e[n])) {
      const i = Os.indexOf(n) !== -1 ? "attr" + n.charAt(0).toUpperCase() + n.substring(1) : n;
      r[i] = t[n];
    }
  return r;
}
function Tu(t, e, r, n = {}, i = {}) {
  return typeof e == "function" && (e = e(r !== void 0 ? r : t.custom, n, i)), typeof e == "string" && (e = t.variants && t.variants[e]), typeof e == "function" && (e = e(r !== void 0 ? r : t.custom, n, i)), e;
}
function Vm(t) {
  const e = ge(null);
  return e.current === null && (e.current = t()), e.current;
}
const Oo = (t) => Array.isArray(t), kS = (t) => !!(t && typeof t == "object" && t.mix && t.toValue), OS = (t) => Oo(t) ? t[t.length - 1] || 0 : t;
function AS(t) {
  const e = Rt(t) ? t.get() : t;
  return kS(e) ? e.toValue() : e;
}
function DS({ scrapeMotionValuesFromProps: t, createRenderState: e, onMount: r }, n, i, l) {
  const g = {
    latestValues: PS(n, i, l, t),
    renderState: e()
  };
  return r && (g.mount = (a) => r(n, a, g)), g;
}
const Hm = (t) => (e, r) => {
  const n = Ve(ha), i = Ve(du), l = () => DS(t, e, n, i);
  return r ? l() : Vm(l);
};
function PS(t, e, r, n) {
  const i = {}, l = n(t, {});
  for (const h in l)
    i[h] = AS(l[h]);
  let { initial: g, animate: a } = t;
  const s = pa(t), c = Om(t);
  e && c && !s && t.inherit !== !1 && (g === void 0 && (g = e.initial), a === void 0 && (a = e.animate));
  let f = r ? r.initial === !1 : !1;
  f = f || g === !1;
  const o = f ? a : g;
  return o && typeof o != "boolean" && !da(o) && (Array.isArray(o) ? o : [o]).forEach((u) => {
    const d = Tu(t, u);
    if (!d)
      return;
    const { transitionEnd: m, transition: p, ...v } = d;
    for (const b in v) {
      let y = v[b];
      if (Array.isArray(y)) {
        const w = f ? y.length - 1 : 0;
        y = y[w];
      }
      y !== null && (i[b] = y);
    }
    for (const b in m)
      i[b] = m[b];
  }), i;
}
const ut = (t) => t;
class wf {
  constructor() {
    this.order = [], this.scheduled = /* @__PURE__ */ new Set();
  }
  add(e) {
    if (!this.scheduled.has(e))
      return this.scheduled.add(e), this.order.push(e), !0;
  }
  remove(e) {
    const r = this.order.indexOf(e);
    r !== -1 && (this.order.splice(r, 1), this.scheduled.delete(e));
  }
  clear() {
    this.order.length = 0, this.scheduled.clear();
  }
}
function MS(t) {
  let e = new wf(), r = new wf(), n = 0, i = !1, l = !1;
  const g = /* @__PURE__ */ new WeakSet(), a = {
    /**
     * Schedule a process to run on the next frame.
     */
    schedule: (s, c = !1, f = !1) => {
      const o = f && i, h = o ? e : r;
      return c && g.add(s), h.add(s) && o && i && (n = e.order.length), s;
    },
    /**
     * Cancel the provided callback from running on the next frame.
     */
    cancel: (s) => {
      r.remove(s), g.delete(s);
    },
    /**
     * Execute all schedule callbacks.
     */
    process: (s) => {
      if (i) {
        l = !0;
        return;
      }
      if (i = !0, [e, r] = [r, e], r.clear(), n = e.order.length, n)
        for (let c = 0; c < n; c++) {
          const f = e.order[c];
          f(s), g.has(f) && (a.schedule(f), t());
        }
      i = !1, l && (l = !1, a.process(s));
    }
  };
  return a;
}
const Js = [
  "prepare",
  "read",
  "update",
  "preRender",
  "render",
  "postRender"
], FS = 40;
function RS(t, e) {
  let r = !1, n = !0;
  const i = {
    delta: 0,
    timestamp: 0,
    isProcessing: !1
  }, l = Js.reduce((o, h) => (o[h] = MS(() => r = !0), o), {}), g = (o) => l[o].process(i), a = () => {
    const o = performance.now();
    r = !1, i.delta = n ? 1e3 / 60 : Math.max(Math.min(o - i.timestamp, FS), 1), i.timestamp = o, i.isProcessing = !0, Js.forEach(g), i.isProcessing = !1, r && e && (n = !1, t(a));
  }, s = () => {
    r = !0, n = !0, i.isProcessing || t(a);
  };
  return { schedule: Js.reduce((o, h) => {
    const u = l[h];
    return o[h] = (d, m = !1, p = !1) => (r || s(), u.schedule(d, m, p)), o;
  }, {}), cancel: (o) => Js.forEach((h) => l[h].cancel(o)), state: i, steps: l };
}
const { schedule: ft, cancel: Ao, state: ac, steps: V8 } = RS(typeof requestAnimationFrame < "u" ? requestAnimationFrame : ut, !0), IS = {
  useVisualState: Hm({
    scrapeMotionValuesFromProps: $m,
    createRenderState: Bm,
    onMount: (t, e, { renderState: r, latestValues: n }) => {
      ft.read(() => {
        try {
          r.dimensions = typeof e.getBBox == "function" ? e.getBBox() : e.getBoundingClientRect();
        } catch {
          r.dimensions = {
            x: 0,
            y: 0,
            width: 0,
            height: 0
          };
        }
      }), ft.render(() => {
        Cu(r, n, { enableHardwareAcceleration: !1 }, _u(e.tagName), t.transformTemplate), jm(e, r);
      });
    }
  })
}, LS = {
  useVisualState: Hm({
    scrapeMotionValuesFromProps: Su,
    createRenderState: xu
  })
};
function BS(t, { forwardMotionProps: e = !1 }, r, n) {
  return {
    ...yu(t) ? IS : LS,
    preloadedFeatures: r,
    useRender: ES(e),
    createVisualElement: n,
    Component: t
  };
}
function hn(t, e, r, n = { passive: !0 }) {
  return t.addEventListener(e, r, n), () => t.removeEventListener(e, r);
}
const zS = (t) => t.pointerType === "mouse" ? typeof t.button != "number" || t.button <= 0 : t.isPrimary !== !1;
function Um(t, e = "page") {
  return {
    point: {
      x: t[e + "X"],
      y: t[e + "Y"]
    }
  };
}
const NS = (t) => (e) => zS(e) && t(e, Um(e));
function co(t, e, r, n) {
  return hn(t, e, NS(r), n);
}
const jS = (t, e) => (r) => e(t(r)), bn = (...t) => t.reduce(jS);
function Wm(t) {
  let e = null;
  return () => {
    const r = () => {
      e = null;
    };
    return e === null ? (e = t, r) : !1;
  };
}
const xf = Wm("dragHorizontal"), Cf = Wm("dragVertical");
function $S(t) {
  let e = !1;
  if (t === "y")
    e = Cf();
  else if (t === "x")
    e = xf();
  else {
    const r = xf(), n = Cf();
    r && n ? e = () => {
      r(), n();
    } : (r && r(), n && n());
  }
  return e;
}
function Xm() {
  const t = $S(!0);
  return t ? (t(), !1) : !0;
}
class Ti {
  constructor(e) {
    this.isMounted = !1, this.node = e;
  }
  update() {
  }
}
function _f(t, e) {
  const r = "pointer" + (e ? "enter" : "leave"), n = "onHover" + (e ? "Start" : "End"), i = (l, g) => {
    if (l.pointerType === "touch" || Xm())
      return;
    const a = t.getProps();
    t.animationState && a.whileHover && t.animationState.setActive("whileHover", e), a[n] && ft.update(() => a[n](l, g));
  };
  return co(t.current, r, i, {
    passive: !t.getProps()[n]
  });
}
class VS extends Ti {
  mount() {
    this.unmount = bn(_f(this.node, !0), _f(this.node, !1));
  }
  unmount() {
  }
}
class HS extends Ti {
  constructor() {
    super(...arguments), this.isActive = !1;
  }
  onFocus() {
    let e = !1;
    try {
      e = this.node.current.matches(":focus-visible");
    } catch {
      e = !0;
    }
    !e || !this.node.animationState || (this.node.animationState.setActive("whileFocus", !0), this.isActive = !0);
  }
  onBlur() {
    !this.isActive || !this.node.animationState || (this.node.animationState.setActive("whileFocus", !1), this.isActive = !1);
  }
  mount() {
    this.unmount = bn(hn(this.node.current, "focus", () => this.onFocus()), hn(this.node.current, "blur", () => this.onBlur()));
  }
  unmount() {
  }
}
const Ym = (t, e) => e ? t === e ? !0 : Ym(t, e.parentElement) : !1;
function Qa(t, e) {
  if (!e)
    return;
  const r = new PointerEvent("pointer" + t);
  e(r, Um(r));
}
class US extends Ti {
  constructor() {
    super(...arguments), this.removeStartListeners = ut, this.removeEndListeners = ut, this.removeAccessibleListeners = ut, this.startPointerPress = (e, r) => {
      if (this.isPressing)
        return;
      this.removeEndListeners();
      const n = this.node.getProps(), l = co(window, "pointerup", (a, s) => {
        if (!this.checkPressEnd())
          return;
        const { onTap: c, onTapCancel: f, globalTapTarget: o } = this.node.getProps();
        ft.update(() => {
          !o && !Ym(this.node.current, a.target) ? f && f(a, s) : c && c(a, s);
        });
      }, { passive: !(n.onTap || n.onPointerUp) }), g = co(window, "pointercancel", (a, s) => this.cancelPress(a, s), { passive: !(n.onTapCancel || n.onPointerCancel) });
      this.removeEndListeners = bn(l, g), this.startPress(e, r);
    }, this.startAccessiblePress = () => {
      const e = (l) => {
        if (l.key !== "Enter" || this.isPressing)
          return;
        const g = (a) => {
          a.key !== "Enter" || !this.checkPressEnd() || Qa("up", (s, c) => {
            const { onTap: f } = this.node.getProps();
            f && ft.update(() => f(s, c));
          });
        };
        this.removeEndListeners(), this.removeEndListeners = hn(this.node.current, "keyup", g), Qa("down", (a, s) => {
          this.startPress(a, s);
        });
      }, r = hn(this.node.current, "keydown", e), n = () => {
        this.isPressing && Qa("cancel", (l, g) => this.cancelPress(l, g));
      }, i = hn(this.node.current, "blur", n);
      this.removeAccessibleListeners = bn(r, i);
    };
  }
  startPress(e, r) {
    this.isPressing = !0;
    const { onTapStart: n, whileTap: i } = this.node.getProps();
    i && this.node.animationState && this.node.animationState.setActive("whileTap", !0), n && ft.update(() => n(e, r));
  }
  checkPressEnd() {
    return this.removeEndListeners(), this.isPressing = !1, this.node.getProps().whileTap && this.node.animationState && this.node.animationState.setActive("whileTap", !1), !Xm();
  }
  cancelPress(e, r) {
    if (!this.checkPressEnd())
      return;
    const { onTapCancel: n } = this.node.getProps();
    n && ft.update(() => n(e, r));
  }
  mount() {
    const e = this.node.getProps(), r = co(e.globalTapTarget ? window : this.node.current, "pointerdown", this.startPointerPress, { passive: !(e.onTapStart || e.onPointerStart) }), n = hn(this.node.current, "focus", this.startAccessiblePress);
    this.removeStartListeners = bn(r, n);
  }
  unmount() {
    this.removeStartListeners(), this.removeEndListeners(), this.removeAccessibleListeners();
  }
}
const lc = /* @__PURE__ */ new WeakMap(), el = /* @__PURE__ */ new WeakMap(), WS = (t) => {
  const e = lc.get(t.target);
  e && e(t);
}, XS = (t) => {
  t.forEach(WS);
};
function YS({ root: t, ...e }) {
  const r = t || document;
  el.has(r) || el.set(r, {});
  const n = el.get(r), i = JSON.stringify(e);
  return n[i] || (n[i] = new IntersectionObserver(XS, { root: t, ...e })), n[i];
}
function GS(t, e, r) {
  const n = YS(e);
  return lc.set(t, r), n.observe(t), () => {
    lc.delete(t), n.unobserve(t);
  };
}
const qS = {
  some: 0,
  all: 1
};
class KS extends Ti {
  constructor() {
    super(...arguments), this.hasEnteredView = !1, this.isInView = !1;
  }
  startObserver() {
    this.unmount();
    const { viewport: e = {} } = this.node.getProps(), { root: r, margin: n, amount: i = "some", once: l } = e, g = {
      root: r ? r.current : void 0,
      rootMargin: n,
      threshold: typeof i == "number" ? i : qS[i]
    }, a = (s) => {
      const { isIntersecting: c } = s;
      if (this.isInView === c || (this.isInView = c, l && !c && this.hasEnteredView))
        return;
      c && (this.hasEnteredView = !0), this.node.animationState && this.node.animationState.setActive("whileInView", c);
      const { onViewportEnter: f, onViewportLeave: o } = this.node.getProps(), h = c ? f : o;
      h && h(s);
    };
    return GS(this.node.current, g, a);
  }
  mount() {
    this.startObserver();
  }
  update() {
    if (typeof IntersectionObserver > "u")
      return;
    const { props: e, prevProps: r } = this.node;
    ["amount", "margin", "root"].some(JS(e, r)) && this.startObserver();
  }
  unmount() {
  }
}
function JS({ viewport: t = {} }, { viewport: e = {} } = {}) {
  return (r) => t[r] !== e[r];
}
const ZS = {
  inView: {
    Feature: KS
  },
  tap: {
    Feature: US
  },
  focus: {
    Feature: HS
  },
  hover: {
    Feature: VS
  }
};
function Gm(t, e) {
  if (!Array.isArray(e))
    return !1;
  const r = e.length;
  if (r !== t.length)
    return !1;
  for (let n = 0; n < r; n++)
    if (e[n] !== t[n])
      return !1;
  return !0;
}
function QS(t) {
  const e = {};
  return t.values.forEach((r, n) => e[n] = r.get()), e;
}
function e4(t) {
  const e = {};
  return t.values.forEach((r, n) => e[n] = r.getVelocity()), e;
}
function ma(t, e, r) {
  const n = t.getProps();
  return Tu(n, e, r !== void 0 ? r : n.custom, QS(t), e4(t));
}
let t4 = ut, Eu = ut;
const yn = (t) => t * 1e3, $r = (t) => t / 1e3, r4 = {
  current: !1
}, qm = (t) => Array.isArray(t) && typeof t[0] == "number";
function Km(t) {
  return !!(!t || typeof t == "string" && Jm[t] || qm(t) || Array.isArray(t) && t.every(Km));
}
const Wi = ([t, e, r, n]) => `cubic-bezier(${t}, ${e}, ${r}, ${n})`, Jm = {
  linear: "linear",
  ease: "ease",
  easeIn: "ease-in",
  easeOut: "ease-out",
  easeInOut: "ease-in-out",
  circIn: Wi([0, 0.65, 0.55, 1]),
  circOut: Wi([0.55, 0, 1, 0.45]),
  backIn: Wi([0.31, 0.01, 0.66, -0.59]),
  backOut: Wi([0.33, 1.53, 0.69, 0.99])
};
function Zm(t) {
  if (t)
    return qm(t) ? Wi(t) : Array.isArray(t) ? t.map(Zm) : Jm[t];
}
function n4(t, e, r, { delay: n = 0, duration: i, repeat: l = 0, repeatType: g = "loop", ease: a, times: s } = {}) {
  const c = { [e]: r };
  s && (c.offset = s);
  const f = Zm(a);
  return Array.isArray(f) && (c.easing = f), t.animate(c, {
    delay: n,
    duration: i,
    easing: Array.isArray(f) ? "linear" : f,
    fill: "both",
    iterations: l + 1,
    direction: g === "reverse" ? "alternate" : "normal"
  });
}
function i4(t, { repeat: e, repeatType: r = "loop" }) {
  const n = e && r !== "loop" && e % 2 === 1 ? 0 : t.length - 1;
  return t[n];
}
const Qm = (t, e, r) => (((1 - 3 * r + 3 * e) * t + (3 * r - 6 * e)) * t + 3 * e) * t, s4 = 1e-7, o4 = 12;
function a4(t, e, r, n, i) {
  let l, g, a = 0;
  do
    g = e + (r - e) / 2, l = Qm(g, n, i) - t, l > 0 ? r = g : e = g;
  while (Math.abs(l) > s4 && ++a < o4);
  return g;
}
function Ps(t, e, r, n) {
  if (t === e && r === n)
    return ut;
  const i = (l) => a4(l, 0, 1, t, r);
  return (l) => l === 0 || l === 1 ? l : Qm(i(l), e, n);
}
const l4 = Ps(0.42, 0, 1, 1), c4 = Ps(0, 0, 0.58, 1), e0 = Ps(0.42, 0, 0.58, 1), u4 = (t) => Array.isArray(t) && typeof t[0] != "number", t0 = (t) => (e) => e <= 0.5 ? t(2 * e) / 2 : (2 - t(2 * (1 - e))) / 2, r0 = (t) => (e) => 1 - t(1 - e), ku = (t) => 1 - Math.sin(Math.acos(t)), h4 = r0(ku), f4 = t0(ku), n0 = Ps(0.33, 1.53, 0.69, 0.99), Ou = r0(n0), d4 = t0(Ou), p4 = (t) => (t *= 2) < 1 ? 0.5 * Ou(t) : 0.5 * (2 - Math.pow(2, -10 * (t - 1))), g4 = {
  linear: ut,
  easeIn: l4,
  easeInOut: e0,
  easeOut: c4,
  circIn: ku,
  circInOut: f4,
  circOut: h4,
  backIn: Ou,
  backInOut: d4,
  backOut: n0,
  anticipate: p4
}, Sf = (t) => {
  if (Array.isArray(t)) {
    Eu(t.length === 4);
    const [e, r, n, i] = t;
    return Ps(e, r, n, i);
  } else if (typeof t == "string")
    return g4[t];
  return t;
}, Au = (t, e) => (r) => !!(As(r) && fS.test(r) && r.startsWith(t) || e && Object.prototype.hasOwnProperty.call(r, e)), i0 = (t, e, r) => (n) => {
  if (!As(n))
    return n;
  const [i, l, g, a] = n.match(ga);
  return {
    [t]: parseFloat(i),
    [e]: parseFloat(l),
    [r]: parseFloat(g),
    alpha: a !== void 0 ? parseFloat(a) : 1
  };
}, m4 = (t) => bi(0, 255, t), tl = {
  ...In,
  transform: (t) => Math.round(m4(t))
}, fn = {
  test: Au("rgb", "red"),
  parse: i0("red", "green", "blue"),
  transform: ({ red: t, green: e, blue: r, alpha: n = 1 }) => "rgba(" + tl.transform(t) + ", " + tl.transform(e) + ", " + tl.transform(r) + ", " + Ki(qi.transform(n)) + ")"
};
function v4(t) {
  let e = "", r = "", n = "", i = "";
  return t.length > 5 ? (e = t.substring(1, 3), r = t.substring(3, 5), n = t.substring(5, 7), i = t.substring(7, 9)) : (e = t.substring(1, 2), r = t.substring(2, 3), n = t.substring(3, 4), i = t.substring(4, 5), e += e, r += r, n += n, i += i), {
    red: parseInt(e, 16),
    green: parseInt(r, 16),
    blue: parseInt(n, 16),
    alpha: i ? parseInt(i, 16) / 255 : 1
  };
}
const cc = {
  test: Au("#"),
  parse: v4,
  transform: fn.transform
}, qn = {
  test: Au("hsl", "hue"),
  parse: i0("hue", "saturation", "lightness"),
  transform: ({ hue: t, saturation: e, lightness: r, alpha: n = 1 }) => "hsla(" + Math.round(t) + ", " + Zn.transform(Ki(e)) + ", " + Zn.transform(Ki(r)) + ", " + Ki(qi.transform(n)) + ")"
}, bt = {
  test: (t) => fn.test(t) || cc.test(t) || qn.test(t),
  parse: (t) => fn.test(t) ? fn.parse(t) : qn.test(t) ? qn.parse(t) : cc.parse(t),
  transform: (t) => As(t) ? t : t.hasOwnProperty("red") ? fn.transform(t) : qn.transform(t)
}, va = (t, e, r) => -r * t + r * e + t;
function rl(t, e, r) {
  return r < 0 && (r += 1), r > 1 && (r -= 1), r < 1 / 6 ? t + (e - t) * 6 * r : r < 1 / 2 ? e : r < 2 / 3 ? t + (e - t) * (2 / 3 - r) * 6 : t;
}
function b4({ hue: t, saturation: e, lightness: r, alpha: n }) {
  t /= 360, e /= 100, r /= 100;
  let i = 0, l = 0, g = 0;
  if (!e)
    i = l = g = r;
  else {
    const a = r < 0.5 ? r * (1 + e) : r + e - r * e, s = 2 * r - a;
    i = rl(s, a, t + 1 / 3), l = rl(s, a, t), g = rl(s, a, t - 1 / 3);
  }
  return {
    red: Math.round(i * 255),
    green: Math.round(l * 255),
    blue: Math.round(g * 255),
    alpha: n
  };
}
const nl = (t, e, r) => {
  const n = t * t;
  return Math.sqrt(Math.max(0, r * (e * e - n) + n));
}, y4 = [cc, fn, qn], w4 = (t) => y4.find((e) => e.test(t));
function Tf(t) {
  const e = w4(t);
  let r = e.parse(t);
  return e === qn && (r = b4(r)), r;
}
const s0 = (t, e) => {
  const r = Tf(t), n = Tf(e), i = { ...r };
  return (l) => (i.red = nl(r.red, n.red, l), i.green = nl(r.green, n.green, l), i.blue = nl(r.blue, n.blue, l), i.alpha = va(r.alpha, n.alpha, l), fn.transform(i));
};
function x4(t) {
  var e, r;
  return isNaN(t) && As(t) && (((e = t.match(ga)) === null || e === void 0 ? void 0 : e.length) || 0) + (((r = t.match(Fm)) === null || r === void 0 ? void 0 : r.length) || 0) > 0;
}
const o0 = {
  regex: uS,
  countKey: "Vars",
  token: "${v}",
  parse: ut
}, a0 = {
  regex: Fm,
  countKey: "Colors",
  token: "${c}",
  parse: bt.parse
}, l0 = {
  regex: ga,
  countKey: "Numbers",
  token: "${n}",
  parse: In.parse
};
function il(t, { regex: e, countKey: r, token: n, parse: i }) {
  const l = t.tokenised.match(e);
  l && (t["num" + r] = l.length, t.tokenised = t.tokenised.replace(e, n), t.values.push(...l.map(i)));
}
function Do(t) {
  const e = t.toString(), r = {
    value: e,
    tokenised: e,
    values: [],
    numVars: 0,
    numColors: 0,
    numNumbers: 0
  };
  return r.value.includes("var(--") && il(r, o0), il(r, a0), il(r, l0), r;
}
function c0(t) {
  return Do(t).values;
}
function u0(t) {
  const { values: e, numColors: r, numVars: n, tokenised: i } = Do(t), l = e.length;
  return (g) => {
    let a = i;
    for (let s = 0; s < l; s++)
      s < n ? a = a.replace(o0.token, g[s]) : s < n + r ? a = a.replace(a0.token, bt.transform(g[s])) : a = a.replace(l0.token, Ki(g[s]));
    return a;
  };
}
const C4 = (t) => typeof t == "number" ? 0 : t;
function _4(t) {
  const e = c0(t);
  return u0(t)(e.map(C4));
}
const Ei = {
  test: x4,
  parse: c0,
  createTransformer: u0,
  getAnimatableNone: _4
}, h0 = (t, e) => (r) => `${r > 0 ? e : t}`;
function f0(t, e) {
  return typeof t == "number" ? (r) => va(t, e, r) : bt.test(t) ? s0(t, e) : t.startsWith("var(") ? h0(t, e) : p0(t, e);
}
const d0 = (t, e) => {
  const r = [...t], n = r.length, i = t.map((l, g) => f0(l, e[g]));
  return (l) => {
    for (let g = 0; g < n; g++)
      r[g] = i[g](l);
    return r;
  };
}, S4 = (t, e) => {
  const r = { ...t, ...e }, n = {};
  for (const i in r)
    t[i] !== void 0 && e[i] !== void 0 && (n[i] = f0(t[i], e[i]));
  return (i) => {
    for (const l in n)
      r[l] = n[l](i);
    return r;
  };
}, p0 = (t, e) => {
  const r = Ei.createTransformer(e), n = Do(t), i = Do(e);
  return n.numVars === i.numVars && n.numColors === i.numColors && n.numNumbers >= i.numNumbers ? bn(d0(n.values, i.values), r) : h0(t, e);
}, g0 = (t, e, r) => {
  const n = e - t;
  return n === 0 ? 1 : (r - t) / n;
}, Ef = (t, e) => (r) => va(t, e, r);
function T4(t) {
  return typeof t == "number" ? Ef : typeof t == "string" ? bt.test(t) ? s0 : p0 : Array.isArray(t) ? d0 : typeof t == "object" ? S4 : Ef;
}
function E4(t, e, r) {
  const n = [], i = r || T4(t[0]), l = t.length - 1;
  for (let g = 0; g < l; g++) {
    let a = i(t[g], t[g + 1]);
    if (e) {
      const s = Array.isArray(e) ? e[g] || ut : e;
      a = bn(s, a);
    }
    n.push(a);
  }
  return n;
}
function m0(t, e, { clamp: r = !0, ease: n, mixer: i } = {}) {
  const l = t.length;
  if (Eu(l === e.length), l === 1)
    return () => e[0];
  t[0] > t[l - 1] && (t = [...t].reverse(), e = [...e].reverse());
  const g = E4(e, n, i), a = g.length, s = (c) => {
    let f = 0;
    if (a > 1)
      for (; f < t.length - 2 && !(c < t[f + 1]); f++)
        ;
    const o = g0(t[f], t[f + 1], c);
    return g[f](o);
  };
  return r ? (c) => s(bi(t[0], t[l - 1], c)) : s;
}
function k4(t, e) {
  const r = t[t.length - 1];
  for (let n = 1; n <= e; n++) {
    const i = g0(0, e, n);
    t.push(va(r, 1, i));
  }
}
function O4(t) {
  const e = [0];
  return k4(e, t.length - 1), e;
}
function A4(t, e) {
  return t.map((r) => r * e);
}
function D4(t, e) {
  return t.map(() => e || e0).splice(0, t.length - 1);
}
function Po({ duration: t = 300, keyframes: e, times: r, ease: n = "easeInOut" }) {
  const i = u4(n) ? n.map(Sf) : Sf(n), l = {
    done: !1,
    value: e[0]
  }, g = A4(
    // Only use the provided offsets if they're the correct length
    // TODO Maybe we should warn here if there's a length mismatch
    r && r.length === e.length ? r : O4(e),
    t
  ), a = m0(g, e, {
    ease: Array.isArray(i) ? i : D4(e, i)
  });
  return {
    calculatedDuration: t,
    next: (s) => (l.value = a(s), l.done = s >= t, l)
  };
}
function v0(t, e) {
  return e ? t * (1e3 / e) : 0;
}
const P4 = 5;
function b0(t, e, r) {
  const n = Math.max(e - P4, 0);
  return v0(r - t(n), e - n);
}
const sl = 1e-3, M4 = 0.01, kf = 10, F4 = 0.05, R4 = 1;
function I4({ duration: t = 800, bounce: e = 0.25, velocity: r = 0, mass: n = 1 }) {
  let i, l;
  t4(t <= yn(kf));
  let g = 1 - e;
  g = bi(F4, R4, g), t = bi(M4, kf, $r(t)), g < 1 ? (i = (c) => {
    const f = c * g, o = f * t, h = f - r, u = uc(c, g), d = Math.exp(-o);
    return sl - h / u * d;
  }, l = (c) => {
    const o = c * g * t, h = o * r + r, u = Math.pow(g, 2) * Math.pow(c, 2) * t, d = Math.exp(-o), m = uc(Math.pow(c, 2), g);
    return (-i(c) + sl > 0 ? -1 : 1) * ((h - u) * d) / m;
  }) : (i = (c) => {
    const f = Math.exp(-c * t), o = (c - r) * t + 1;
    return -sl + f * o;
  }, l = (c) => {
    const f = Math.exp(-c * t), o = (r - c) * (t * t);
    return f * o;
  });
  const a = 5 / t, s = B4(i, l, a);
  if (t = yn(t), isNaN(s))
    return {
      stiffness: 100,
      damping: 10,
      duration: t
    };
  {
    const c = Math.pow(s, 2) * n;
    return {
      stiffness: c,
      damping: g * 2 * Math.sqrt(n * c),
      duration: t
    };
  }
}
const L4 = 12;
function B4(t, e, r) {
  let n = r;
  for (let i = 1; i < L4; i++)
    n = n - t(n) / e(n);
  return n;
}
function uc(t, e) {
  return t * Math.sqrt(1 - e * e);
}
const z4 = ["duration", "bounce"], N4 = ["stiffness", "damping", "mass"];
function Of(t, e) {
  return e.some((r) => t[r] !== void 0);
}
function j4(t) {
  let e = {
    velocity: 0,
    stiffness: 100,
    damping: 10,
    mass: 1,
    isResolvedFromDuration: !1,
    ...t
  };
  if (!Of(t, N4) && Of(t, z4)) {
    const r = I4(t);
    e = {
      ...e,
      ...r,
      mass: 1
    }, e.isResolvedFromDuration = !0;
  }
  return e;
}
function y0({ keyframes: t, restDelta: e, restSpeed: r, ...n }) {
  const i = t[0], l = t[t.length - 1], g = { done: !1, value: i }, { stiffness: a, damping: s, mass: c, duration: f, velocity: o, isResolvedFromDuration: h } = j4({
    ...n,
    velocity: -$r(n.velocity || 0)
  }), u = o || 0, d = s / (2 * Math.sqrt(a * c)), m = l - i, p = $r(Math.sqrt(a / c)), v = Math.abs(m) < 5;
  r || (r = v ? 0.01 : 2), e || (e = v ? 5e-3 : 0.5);
  let b;
  if (d < 1) {
    const y = uc(p, d);
    b = (w) => {
      const x = Math.exp(-d * p * w);
      return l - x * ((u + d * p * m) / y * Math.sin(y * w) + m * Math.cos(y * w));
    };
  } else if (d === 1)
    b = (y) => l - Math.exp(-p * y) * (m + (u + p * m) * y);
  else {
    const y = p * Math.sqrt(d * d - 1);
    b = (w) => {
      const x = Math.exp(-d * p * w), _ = Math.min(y * w, 300);
      return l - x * ((u + d * p * m) * Math.sinh(_) + y * m * Math.cosh(_)) / y;
    };
  }
  return {
    calculatedDuration: h && f || null,
    next: (y) => {
      const w = b(y);
      if (h)
        g.done = y >= f;
      else {
        let x = u;
        y !== 0 && (d < 1 ? x = b0(b, y, w) : x = 0);
        const _ = Math.abs(x) <= r, S = Math.abs(l - w) <= e;
        g.done = _ && S;
      }
      return g.value = g.done ? l : w, g;
    }
  };
}
function Af({ keyframes: t, velocity: e = 0, power: r = 0.8, timeConstant: n = 325, bounceDamping: i = 10, bounceStiffness: l = 500, modifyTarget: g, min: a, max: s, restDelta: c = 0.5, restSpeed: f }) {
  const o = t[0], h = {
    done: !1,
    value: o
  }, u = (k) => a !== void 0 && k < a || s !== void 0 && k > s, d = (k) => a === void 0 ? s : s === void 0 || Math.abs(a - k) < Math.abs(s - k) ? a : s;
  let m = r * e;
  const p = o + m, v = g === void 0 ? p : g(p);
  v !== p && (m = v - o);
  const b = (k) => -m * Math.exp(-k / n), y = (k) => v + b(k), w = (k) => {
    const F = b(k), L = y(k);
    h.done = Math.abs(F) <= c, h.value = h.done ? v : L;
  };
  let x, _;
  const S = (k) => {
    u(h.value) && (x = k, _ = y0({
      keyframes: [h.value, d(h.value)],
      velocity: b0(y, k, h.value),
      damping: i,
      stiffness: l,
      restDelta: c,
      restSpeed: f
    }));
  };
  return S(0), {
    calculatedDuration: null,
    next: (k) => {
      let F = !1;
      return !_ && x === void 0 && (F = !0, w(k), S(k)), x !== void 0 && k > x ? _.next(k - x) : (!F && w(k), h);
    }
  };
}
const $4 = (t) => {
  const e = ({ timestamp: r }) => t(r);
  return {
    start: () => ft.update(e, !0),
    stop: () => Ao(e),
    /**
     * If we're processing this frame we can use the
     * framelocked timestamp to keep things in sync.
     */
    now: () => ac.isProcessing ? ac.timestamp : performance.now()
  };
}, Df = 2e4;
function Pf(t) {
  let e = 0;
  const r = 50;
  let n = t.next(e);
  for (; !n.done && e < Df; )
    e += r, n = t.next(e);
  return e >= Df ? 1 / 0 : e;
}
const V4 = {
  decay: Af,
  inertia: Af,
  tween: Po,
  keyframes: Po,
  spring: y0
};
function Mo({ autoplay: t = !0, delay: e = 0, driver: r = $4, keyframes: n, type: i = "keyframes", repeat: l = 0, repeatDelay: g = 0, repeatType: a = "loop", onPlay: s, onStop: c, onComplete: f, onUpdate: o, ...h }) {
  let u = 1, d = !1, m, p;
  const v = () => {
    p = new Promise((D) => {
      m = D;
    });
  };
  v();
  let b;
  const y = V4[i] || Po;
  let w;
  y !== Po && typeof n[0] != "number" && (w = m0([0, 100], n, {
    clamp: !1
  }), n = [0, 100]);
  const x = y({ ...h, keyframes: n });
  let _;
  a === "mirror" && (_ = y({
    ...h,
    keyframes: [...n].reverse(),
    velocity: -(h.velocity || 0)
  }));
  let S = "idle", k = null, F = null, L = null;
  x.calculatedDuration === null && l && (x.calculatedDuration = Pf(x));
  const { calculatedDuration: j } = x;
  let G = 1 / 0, te = 1 / 0;
  j !== null && (G = j + g, te = G * (l + 1) - g);
  let U = 0;
  const K = (D) => {
    if (F === null)
      return;
    u > 0 && (F = Math.min(F, D)), u < 0 && (F = Math.min(D - te / u, F)), k !== null ? U = k : U = Math.round(D - F) * u;
    const M = U - e * (u >= 0 ? 1 : -1), $ = u >= 0 ? M < 0 : M > te;
    U = Math.max(M, 0), S === "finished" && k === null && (U = te);
    let A = U, E = x;
    if (l) {
      const V = Math.min(U, te) / G;
      let Z = Math.floor(V), ee = V % 1;
      !ee && V >= 1 && (ee = 1), ee === 1 && Z--, Z = Math.min(Z, l + 1), !!(Z % 2) && (a === "reverse" ? (ee = 1 - ee, g && (ee -= g / G)) : a === "mirror" && (E = _)), A = bi(0, 1, ee) * G;
    }
    const R = $ ? { done: !1, value: n[0] } : E.next(A);
    w && (R.value = w(R.value));
    let { done: N } = R;
    !$ && j !== null && (N = u >= 0 ? U >= te : U <= 0);
    const H = k === null && (S === "finished" || S === "running" && N);
    return o && o(R.value), H && se(), R;
  }, re = () => {
    b && b.stop(), b = void 0;
  }, ne = () => {
    S = "idle", re(), m(), v(), F = L = null;
  }, se = () => {
    S = "finished", f && f(), re(), m();
  }, T = () => {
    if (d)
      return;
    b || (b = r(K));
    const D = b.now();
    s && s(), k !== null ? F = D - k : (!F || S === "finished") && (F = D), S === "finished" && v(), L = F, k = null, S = "running", b.start();
  };
  t && T();
  const P = {
    then(D, M) {
      return p.then(D, M);
    },
    get time() {
      return $r(U);
    },
    set time(D) {
      D = yn(D), U = D, k !== null || !b || u === 0 ? k = D : F = b.now() - D / u;
    },
    get duration() {
      const D = x.calculatedDuration === null ? Pf(x) : x.calculatedDuration;
      return $r(D);
    },
    get speed() {
      return u;
    },
    set speed(D) {
      D === u || !b || (u = D, P.time = $r(U));
    },
    get state() {
      return S;
    },
    play: T,
    pause: () => {
      S = "paused", k = U;
    },
    stop: () => {
      d = !0, S !== "idle" && (S = "idle", c && c(), ne());
    },
    cancel: () => {
      L !== null && K(L), ne();
    },
    complete: () => {
      S = "finished";
    },
    sample: (D) => (F = 0, K(D))
  };
  return P;
}
function H4(t) {
  let e;
  return () => (e === void 0 && (e = t()), e);
}
const U4 = H4(() => Object.hasOwnProperty.call(Element.prototype, "animate")), W4 = /* @__PURE__ */ new Set([
  "opacity",
  "clipPath",
  "filter",
  "transform",
  "backgroundColor"
]), Zs = 10, X4 = 2e4, Y4 = (t, e) => e.type === "spring" || t === "backgroundColor" || !Km(e.ease);
function G4(t, e, { onUpdate: r, onComplete: n, ...i }) {
  if (!(U4() && W4.has(e) && !i.repeatDelay && i.repeatType !== "mirror" && i.damping !== 0 && i.type !== "inertia"))
    return !1;
  let g = !1, a, s, c = !1;
  const f = () => {
    s = new Promise((y) => {
      a = y;
    });
  };
  f();
  let { keyframes: o, duration: h = 300, ease: u, times: d } = i;
  if (Y4(e, i)) {
    const y = Mo({
      ...i,
      repeat: 0,
      delay: 0
    });
    let w = { done: !1, value: o[0] };
    const x = [];
    let _ = 0;
    for (; !w.done && _ < X4; )
      w = y.sample(_), x.push(w.value), _ += Zs;
    d = void 0, o = x, h = _ - Zs, u = "linear";
  }
  const m = n4(t.owner.current, e, o, {
    ...i,
    duration: h,
    /**
     * This function is currently not called if ease is provided
     * as a function so the cast is safe.
     *
     * However it would be possible for a future refinement to port
     * in easing pregeneration from Motion One for browsers that
     * support the upcoming `linear()` easing function.
     */
    ease: u,
    times: d
  }), p = () => {
    c = !1, m.cancel();
  }, v = () => {
    c = !0, ft.update(p), a(), f();
  };
  return m.onfinish = () => {
    c || (t.set(i4(o, i)), n && n(), v());
  }, {
    then(y, w) {
      return s.then(y, w);
    },
    attachTimeline(y) {
      return m.timeline = y, m.onfinish = null, ut;
    },
    get time() {
      return $r(m.currentTime || 0);
    },
    set time(y) {
      m.currentTime = yn(y);
    },
    get speed() {
      return m.playbackRate;
    },
    set speed(y) {
      m.playbackRate = y;
    },
    get duration() {
      return $r(h);
    },
    play: () => {
      g || (m.play(), Ao(p));
    },
    pause: () => m.pause(),
    stop: () => {
      if (g = !0, m.playState === "idle")
        return;
      const { currentTime: y } = m;
      if (y) {
        const w = Mo({
          ...i,
          autoplay: !1
        });
        t.setWithVelocity(w.sample(y - Zs).value, w.sample(y).value, Zs);
      }
      v();
    },
    complete: () => {
      c || m.finish();
    },
    cancel: v
  };
}
function q4({ keyframes: t, delay: e, onUpdate: r, onComplete: n }) {
  const i = () => (r && r(t[t.length - 1]), n && n(), {
    time: 0,
    speed: 1,
    duration: 0,
    play: ut,
    pause: ut,
    stop: ut,
    then: (l) => (l(), Promise.resolve()),
    cancel: ut,
    complete: ut
  });
  return e ? Mo({
    keyframes: [0, 1],
    duration: 0,
    delay: e,
    onComplete: i
  }) : i();
}
const K4 = {
  type: "spring",
  stiffness: 500,
  damping: 25,
  restSpeed: 10
}, J4 = (t) => ({
  type: "spring",
  stiffness: 550,
  damping: t === 0 ? 2 * Math.sqrt(550) : 30,
  restSpeed: 10
}), Z4 = {
  type: "keyframes",
  duration: 0.8
}, Q4 = {
  type: "keyframes",
  ease: [0.25, 0.1, 0.35, 1],
  duration: 0.3
}, e5 = (t, { keyframes: e }) => e.length > 2 ? Z4 : Rn.has(t) ? t.startsWith("scale") ? J4(e[1]) : K4 : Q4, hc = (t, e) => t === "zIndex" ? !1 : !!(typeof e == "number" || Array.isArray(e) || typeof e == "string" && // It's animatable if we have a string
(Ei.test(e) || e === "0") && // And it contains numbers and/or colors
!e.startsWith("url(")), t5 = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
function r5(t) {
  const [e, r] = t.slice(0, -1).split("(");
  if (e === "drop-shadow")
    return t;
  const [n] = r.match(ga) || [];
  if (!n)
    return t;
  const i = r.replace(n, "");
  let l = t5.has(e) ? 1 : 0;
  return n !== r && (l *= 100), e + "(" + l + i + ")";
}
const n5 = /([a-z-]*)\(.*?\)/g, fc = {
  ...Ei,
  getAnimatableNone: (t) => {
    const e = t.match(n5);
    return e ? e.map(r5).join(" ") : t;
  }
}, i5 = {
  ...Rm,
  // Color props
  color: bt,
  backgroundColor: bt,
  outlineColor: bt,
  fill: bt,
  stroke: bt,
  // Border props
  borderColor: bt,
  borderTopColor: bt,
  borderRightColor: bt,
  borderBottomColor: bt,
  borderLeftColor: bt,
  filter: fc,
  WebkitFilter: fc
}, Du = (t) => i5[t];
function w0(t, e) {
  let r = Du(t);
  return r !== fc && (r = Ei), r.getAnimatableNone ? r.getAnimatableNone(e) : void 0;
}
const x0 = (t) => /^0[^.\s]+$/.test(t);
function s5(t) {
  if (typeof t == "number")
    return t === 0;
  if (t !== null)
    return t === "none" || t === "0" || x0(t);
}
function o5(t, e, r, n) {
  const i = hc(e, r);
  let l;
  Array.isArray(r) ? l = [...r] : l = [null, r];
  const g = n.from !== void 0 ? n.from : t.get();
  let a;
  const s = [];
  for (let c = 0; c < l.length; c++)
    l[c] === null && (l[c] = c === 0 ? g : l[c - 1]), s5(l[c]) && s.push(c), typeof l[c] == "string" && l[c] !== "none" && l[c] !== "0" && (a = l[c]);
  if (i && s.length && a)
    for (let c = 0; c < s.length; c++) {
      const f = s[c];
      l[f] = w0(e, a);
    }
  return l;
}
function a5({ when: t, delay: e, delayChildren: r, staggerChildren: n, staggerDirection: i, repeat: l, repeatType: g, repeatDelay: a, from: s, elapsed: c, ...f }) {
  return !!Object.keys(f).length;
}
function C0(t, e) {
  return t[e] || t.default || t;
}
const l5 = {
  skipAnimations: !1
}, c5 = (t, e, r, n = {}) => (i) => {
  const l = C0(n, t) || {}, g = l.delay || n.delay || 0;
  let { elapsed: a = 0 } = n;
  a = a - yn(g);
  const s = o5(e, t, r, l), c = s[0], f = s[s.length - 1], o = hc(t, c), h = hc(t, f);
  let u = {
    keyframes: s,
    velocity: e.getVelocity(),
    ease: "easeOut",
    ...l,
    delay: -a,
    onUpdate: (d) => {
      e.set(d), l.onUpdate && l.onUpdate(d);
    },
    onComplete: () => {
      i(), l.onComplete && l.onComplete();
    }
  };
  if (a5(l) || (u = {
    ...u,
    ...e5(t, u)
  }), u.duration && (u.duration = yn(u.duration)), u.repeatDelay && (u.repeatDelay = yn(u.repeatDelay)), !o || !h || r4.current || l.type === !1 || l5.skipAnimations)
    return q4(u);
  if (
    /**
     * If this is a handoff animation, the optimised animation will be running via
     * WAAPI. Therefore, this animation must be JS to ensure it runs "under" the
     * optimised animation.
     */
    !n.isHandoff && e.owner && e.owner.current instanceof HTMLElement && /**
     * If we're outputting values to onUpdate then we can't use WAAPI as there's
     * no way to read the value from WAAPI every frame.
     */
    !e.owner.getProps().onUpdate
  ) {
    const d = G4(e, t, u);
    if (d)
      return d;
  }
  return Mo(u);
};
function Fo(t) {
  return !!(Rt(t) && t.add);
}
const _0 = (t) => /^\-?\d*\.?\d+$/.test(t);
function u5(t, e) {
  t.indexOf(e) === -1 && t.push(e);
}
function h5(t, e) {
  const r = t.indexOf(e);
  r > -1 && t.splice(r, 1);
}
class S0 {
  constructor() {
    this.subscriptions = [];
  }
  add(e) {
    return u5(this.subscriptions, e), () => h5(this.subscriptions, e);
  }
  notify(e, r, n) {
    const i = this.subscriptions.length;
    if (i)
      if (i === 1)
        this.subscriptions[0](e, r, n);
      else
        for (let l = 0; l < i; l++) {
          const g = this.subscriptions[l];
          g && g(e, r, n);
        }
  }
  getSize() {
    return this.subscriptions.length;
  }
  clear() {
    this.subscriptions.length = 0;
  }
}
const f5 = (t) => !isNaN(parseFloat(t));
class d5 {
  /**
   * @param init - The initiating value
   * @param config - Optional configuration options
   *
   * -  `transformer`: A function to transform incoming values with.
   *
   * @internal
   */
  constructor(e, r = {}) {
    this.version = "10.18.0", this.timeDelta = 0, this.lastUpdated = 0, this.canTrackVelocity = !1, this.events = {}, this.updateAndNotify = (n, i = !0) => {
      this.prev = this.current, this.current = n;
      const { delta: l, timestamp: g } = ac;
      this.lastUpdated !== g && (this.timeDelta = l, this.lastUpdated = g, ft.postRender(this.scheduleVelocityCheck)), this.prev !== this.current && this.events.change && this.events.change.notify(this.current), this.events.velocityChange && this.events.velocityChange.notify(this.getVelocity()), i && this.events.renderRequest && this.events.renderRequest.notify(this.current);
    }, this.scheduleVelocityCheck = () => ft.postRender(this.velocityCheck), this.velocityCheck = ({ timestamp: n }) => {
      n !== this.lastUpdated && (this.prev = this.current, this.events.velocityChange && this.events.velocityChange.notify(this.getVelocity()));
    }, this.hasAnimated = !1, this.prev = this.current = e, this.canTrackVelocity = f5(this.current), this.owner = r.owner;
  }
  /**
   * Adds a function that will be notified when the `MotionValue` is updated.
   *
   * It returns a function that, when called, will cancel the subscription.
   *
   * When calling `onChange` inside a React component, it should be wrapped with the
   * `useEffect` hook. As it returns an unsubscribe function, this should be returned
   * from the `useEffect` function to ensure you don't add duplicate subscribers..
   *
   * ```jsx
   * export const MyComponent = () => {
   *   const x = useMotionValue(0)
   *   const y = useMotionValue(0)
   *   const opacity = useMotionValue(1)
   *
   *   useEffect(() => {
   *     function updateOpacity() {
   *       const maxXY = Math.max(x.get(), y.get())
   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])
   *       opacity.set(newOpacity)
   *     }
   *
   *     const unsubscribeX = x.on("change", updateOpacity)
   *     const unsubscribeY = y.on("change", updateOpacity)
   *
   *     return () => {
   *       unsubscribeX()
   *       unsubscribeY()
   *     }
   *   }, [])
   *
   *   return <motion.div style={{ x }} />
   * }
   * ```
   *
   * @param subscriber - A function that receives the latest value.
   * @returns A function that, when called, will cancel this subscription.
   *
   * @deprecated
   */
  onChange(e) {
    return this.on("change", e);
  }
  on(e, r) {
    this.events[e] || (this.events[e] = new S0());
    const n = this.events[e].add(r);
    return e === "change" ? () => {
      n(), ft.read(() => {
        this.events.change.getSize() || this.stop();
      });
    } : n;
  }
  clearListeners() {
    for (const e in this.events)
      this.events[e].clear();
  }
  /**
   * Attaches a passive effect to the `MotionValue`.
   *
   * @internal
   */
  attach(e, r) {
    this.passiveEffect = e, this.stopPassiveEffect = r;
  }
  /**
   * Sets the state of the `MotionValue`.
   *
   * @remarks
   *
   * ```jsx
   * const x = useMotionValue(0)
   * x.set(10)
   * ```
   *
   * @param latest - Latest value to set.
   * @param render - Whether to notify render subscribers. Defaults to `true`
   *
   * @public
   */
  set(e, r = !0) {
    !r || !this.passiveEffect ? this.updateAndNotify(e, r) : this.passiveEffect(e, this.updateAndNotify);
  }
  setWithVelocity(e, r, n) {
    this.set(r), this.prev = e, this.timeDelta = n;
  }
  /**
   * Set the state of the `MotionValue`, stopping any active animations,
   * effects, and resets velocity to `0`.
   */
  jump(e) {
    this.updateAndNotify(e), this.prev = e, this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();
  }
  /**
   * Returns the latest state of `MotionValue`
   *
   * @returns - The latest state of `MotionValue`
   *
   * @public
   */
  get() {
    return this.current;
  }
  /**
   * @public
   */
  getPrevious() {
    return this.prev;
  }
  /**
   * Returns the latest velocity of `MotionValue`
   *
   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.
   *
   * @public
   */
  getVelocity() {
    return this.canTrackVelocity ? (
      // These casts could be avoided if parseFloat would be typed better
      v0(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta)
    ) : 0;
  }
  /**
   * Registers a new animation to control this `MotionValue`. Only one
   * animation can drive a `MotionValue` at one time.
   *
   * ```jsx
   * value.start()
   * ```
   *
   * @param animation - A function that starts the provided animation
   *
   * @internal
   */
  start(e) {
    return this.stop(), new Promise((r) => {
      this.hasAnimated = !0, this.animation = e(r), this.events.animationStart && this.events.animationStart.notify();
    }).then(() => {
      this.events.animationComplete && this.events.animationComplete.notify(), this.clearAnimation();
    });
  }
  /**
   * Stop the currently active animation.
   *
   * @public
   */
  stop() {
    this.animation && (this.animation.stop(), this.events.animationCancel && this.events.animationCancel.notify()), this.clearAnimation();
  }
  /**
   * Returns `true` if this value is currently animating.
   *
   * @public
   */
  isAnimating() {
    return !!this.animation;
  }
  clearAnimation() {
    delete this.animation;
  }
  /**
   * Destroy and clean up subscribers to this `MotionValue`.
   *
   * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically
   * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually
   * created a `MotionValue` via the `motionValue` function.
   *
   * @public
   */
  destroy() {
    this.clearListeners(), this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();
  }
}
function us(t, e) {
  return new d5(t, e);
}
const T0 = (t) => (e) => e.test(t), p5 = {
  test: (t) => t === "auto",
  parse: (t) => t
}, E0 = [In, Se, Zn, Ar, pS, dS, p5], Bi = (t) => E0.find(T0(t)), g5 = [...E0, bt, Ei], m5 = (t) => g5.find(T0(t));
function v5(t, e, r) {
  t.hasValue(e) ? t.getValue(e).set(r) : t.addValue(e, us(r));
}
function b5(t, e) {
  const r = ma(t, e);
  let { transitionEnd: n = {}, transition: i = {}, ...l } = r ? t.makeTargetAnimatable(r, !1) : {};
  l = { ...l, ...n };
  for (const g in l) {
    const a = OS(l[g]);
    v5(t, g, a);
  }
}
function y5(t, e, r) {
  var n, i;
  const l = Object.keys(e).filter((a) => !t.hasValue(a)), g = l.length;
  if (g)
    for (let a = 0; a < g; a++) {
      const s = l[a], c = e[s];
      let f = null;
      Array.isArray(c) && (f = c[0]), f === null && (f = (i = (n = r[s]) !== null && n !== void 0 ? n : t.readValue(s)) !== null && i !== void 0 ? i : e[s]), f != null && (typeof f == "string" && (_0(f) || x0(f)) ? f = parseFloat(f) : !m5(f) && Ei.test(c) && (f = w0(s, c)), t.addValue(s, us(f, { owner: t })), r[s] === void 0 && (r[s] = f), f !== null && t.setBaseTarget(s, f));
    }
}
function w5(t, e) {
  return e ? (e[t] || e.default || e).from : void 0;
}
function x5(t, e, r) {
  const n = {};
  for (const i in t) {
    const l = w5(i, e);
    if (l !== void 0)
      n[i] = l;
    else {
      const g = r.getValue(i);
      g && (n[i] = g.get());
    }
  }
  return n;
}
function C5({ protectedKeys: t, needsAnimating: e }, r) {
  const n = t.hasOwnProperty(r) && e[r] !== !0;
  return e[r] = !1, n;
}
function _5(t, e) {
  const r = t.get();
  if (Array.isArray(e)) {
    for (let n = 0; n < e.length; n++)
      if (e[n] !== r)
        return !0;
  } else
    return r !== e;
}
function k0(t, e, { delay: r = 0, transitionOverride: n, type: i } = {}) {
  let { transition: l = t.getDefaultTransition(), transitionEnd: g, ...a } = t.makeTargetAnimatable(e);
  const s = t.getValue("willChange");
  n && (l = n);
  const c = [], f = i && t.animationState && t.animationState.getState()[i];
  for (const o in a) {
    const h = t.getValue(o), u = a[o];
    if (!h || u === void 0 || f && C5(f, o))
      continue;
    const d = {
      delay: r,
      elapsed: 0,
      ...C0(l || {}, o)
    };
    if (window.HandoffAppearAnimations) {
      const v = t.getProps()[Em];
      if (v) {
        const b = window.HandoffAppearAnimations(v, o, h, ft);
        b !== null && (d.elapsed = b, d.isHandoff = !0);
      }
    }
    let m = !d.isHandoff && !_5(h, u);
    if (d.type === "spring" && (h.getVelocity() || d.velocity) && (m = !1), h.animation && (m = !1), m)
      continue;
    h.start(c5(o, h, u, t.shouldReduceMotion && Rn.has(o) ? { type: !1 } : d));
    const p = h.animation;
    Fo(s) && (s.add(o), p.then(() => s.remove(o))), c.push(p);
  }
  return g && Promise.all(c).then(() => {
    g && b5(t, g);
  }), c;
}
function dc(t, e, r = {}) {
  const n = ma(t, e, r.custom);
  let { transition: i = t.getDefaultTransition() || {} } = n || {};
  r.transitionOverride && (i = r.transitionOverride);
  const l = n ? () => Promise.all(k0(t, n, r)) : () => Promise.resolve(), g = t.variantChildren && t.variantChildren.size ? (s = 0) => {
    const { delayChildren: c = 0, staggerChildren: f, staggerDirection: o } = i;
    return S5(t, e, c + s, f, o, r);
  } : () => Promise.resolve(), { when: a } = i;
  if (a) {
    const [s, c] = a === "beforeChildren" ? [l, g] : [g, l];
    return s().then(() => c());
  } else
    return Promise.all([l(), g(r.delay)]);
}
function S5(t, e, r = 0, n = 0, i = 1, l) {
  const g = [], a = (t.variantChildren.size - 1) * n, s = i === 1 ? (c = 0) => c * n : (c = 0) => a - c * n;
  return Array.from(t.variantChildren).sort(T5).forEach((c, f) => {
    c.notify("AnimationStart", e), g.push(dc(c, e, {
      ...l,
      delay: r + s(f)
    }).then(() => c.notify("AnimationComplete", e)));
  }), Promise.all(g);
}
function T5(t, e) {
  return t.sortNodePosition(e);
}
function E5(t, e, r = {}) {
  t.notify("AnimationStart", e);
  let n;
  if (Array.isArray(e)) {
    const i = e.map((l) => dc(t, l, r));
    n = Promise.all(i);
  } else if (typeof e == "string")
    n = dc(t, e, r);
  else {
    const i = typeof e == "function" ? ma(t, e, r.custom) : e;
    n = Promise.all(k0(t, i, r));
  }
  return n.then(() => t.notify("AnimationComplete", e));
}
const k5 = [...vu].reverse(), O5 = vu.length;
function A5(t) {
  return (e) => Promise.all(e.map(({ animation: r, options: n }) => E5(t, r, n)));
}
function D5(t) {
  let e = A5(t);
  const r = M5();
  let n = !0;
  const i = (s, c) => {
    const f = ma(t, c);
    if (f) {
      const { transition: o, transitionEnd: h, ...u } = f;
      s = { ...s, ...u, ...h };
    }
    return s;
  };
  function l(s) {
    e = s(t);
  }
  function g(s, c) {
    const f = t.getProps(), o = t.getVariantContext(!0) || {}, h = [], u = /* @__PURE__ */ new Set();
    let d = {}, m = 1 / 0;
    for (let v = 0; v < O5; v++) {
      const b = k5[v], y = r[b], w = f[b] !== void 0 ? f[b] : o[b], x = ls(w), _ = b === c ? y.isActive : null;
      _ === !1 && (m = v);
      let S = w === o[b] && w !== f[b] && x;
      if (S && n && t.manuallyAnimateOnMount && (S = !1), y.protectedKeys = { ...d }, // If it isn't active and hasn't *just* been set as inactive
      !y.isActive && _ === null || // If we didn't and don't have any defined prop for this animation type
      !w && !y.prevProp || // Or if the prop doesn't define an animation
      da(w) || typeof w == "boolean")
        continue;
      let F = P5(y.prevProp, w) || // If we're making this variant active, we want to always make it active
      b === c && y.isActive && !S && x || // If we removed a higher-priority variant (i is in reverse order)
      v > m && x, L = !1;
      const j = Array.isArray(w) ? w : [w];
      let G = j.reduce(i, {});
      _ === !1 && (G = {});
      const { prevResolvedValues: te = {} } = y, U = {
        ...te,
        ...G
      }, K = (re) => {
        F = !0, u.has(re) && (L = !0, u.delete(re)), y.needsAnimating[re] = !0;
      };
      for (const re in U) {
        const ne = G[re], se = te[re];
        if (d.hasOwnProperty(re))
          continue;
        let T = !1;
        Oo(ne) && Oo(se) ? T = !Gm(ne, se) : T = ne !== se, T ? ne !== void 0 ? K(re) : u.add(re) : ne !== void 0 && u.has(re) ? K(re) : y.protectedKeys[re] = !0;
      }
      y.prevProp = w, y.prevResolvedValues = G, y.isActive && (d = { ...d, ...G }), n && t.blockInitialAnimation && (F = !1), F && (!S || L) && h.push(...j.map((re) => ({
        animation: re,
        options: { type: b, ...s }
      })));
    }
    if (u.size) {
      const v = {};
      u.forEach((b) => {
        const y = t.getBaseTarget(b);
        y !== void 0 && (v[b] = y);
      }), h.push({ animation: v });
    }
    let p = !!h.length;
    return n && (f.initial === !1 || f.initial === f.animate) && !t.manuallyAnimateOnMount && (p = !1), n = !1, p ? e(h) : Promise.resolve();
  }
  function a(s, c, f) {
    var o;
    if (r[s].isActive === c)
      return Promise.resolve();
    (o = t.variantChildren) === null || o === void 0 || o.forEach((u) => {
      var d;
      return (d = u.animationState) === null || d === void 0 ? void 0 : d.setActive(s, c);
    }), r[s].isActive = c;
    const h = g(f, s);
    for (const u in r)
      r[u].protectedKeys = {};
    return h;
  }
  return {
    animateChanges: g,
    setActive: a,
    setAnimateFunction: l,
    getState: () => r
  };
}
function P5(t, e) {
  return typeof e == "string" ? e !== t : Array.isArray(e) ? !Gm(e, t) : !1;
}
function sn(t = !1) {
  return {
    isActive: t,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {}
  };
}
function M5() {
  return {
    animate: sn(!0),
    whileInView: sn(),
    whileHover: sn(),
    whileTap: sn(),
    whileDrag: sn(),
    whileFocus: sn(),
    exit: sn()
  };
}
class F5 extends Ti {
  /**
   * We dynamically generate the AnimationState manager as it contains a reference
   * to the underlying animation library. We only want to load that if we load this,
   * so people can optionally code split it out using the `m` component.
   */
  constructor(e) {
    super(e), e.animationState || (e.animationState = D5(e));
  }
  updateAnimationControlsSubscription() {
    const { animate: e } = this.node.getProps();
    this.unmount(), da(e) && (this.unmount = e.subscribe(this.node));
  }
  /**
   * Subscribe any provided AnimationControls to the component's VisualElement
   */
  mount() {
    this.updateAnimationControlsSubscription();
  }
  update() {
    const { animate: e } = this.node.getProps(), { animate: r } = this.node.prevProps || {};
    e !== r && this.updateAnimationControlsSubscription();
  }
  unmount() {
  }
}
let R5 = 0;
class I5 extends Ti {
  constructor() {
    super(...arguments), this.id = R5++;
  }
  update() {
    if (!this.node.presenceContext)
      return;
    const { isPresent: e, onExitComplete: r, custom: n } = this.node.presenceContext, { isPresent: i } = this.node.prevPresenceContext || {};
    if (!this.node.animationState || e === i)
      return;
    const l = this.node.animationState.setActive("exit", !e, { custom: n ?? this.node.getProps().custom });
    r && !e && l.then(() => r(this.id));
  }
  mount() {
    const { register: e } = this.node.presenceContext || {};
    e && (this.unmount = e(this.id));
  }
  unmount() {
  }
}
const L5 = {
  animation: {
    Feature: F5
  },
  exit: {
    Feature: I5
  }
}, Mf = () => ({ min: 0, max: 0 }), O0 = () => ({
  x: Mf(),
  y: Mf()
});
function B5({ top: t, left: e, right: r, bottom: n }) {
  return {
    x: { min: e, max: r },
    y: { min: t, max: n }
  };
}
function z5(t, e) {
  if (!e)
    return t;
  const r = e({ x: t.left, y: t.top }), n = e({ x: t.right, y: t.bottom });
  return {
    top: r.y,
    left: r.x,
    bottom: n.y,
    right: n.x
  };
}
function N5(t, e) {
  return B5(z5(t.getBoundingClientRect(), e));
}
const j5 = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
function $5(t) {
  const e = j5.exec(t);
  if (!e)
    return [,];
  const [, r, n] = e;
  return [r, n];
}
function pc(t, e, r = 1) {
  const [n, i] = $5(t);
  if (!n)
    return;
  const l = window.getComputedStyle(e).getPropertyValue(n);
  if (l) {
    const g = l.trim();
    return _0(g) ? parseFloat(g) : g;
  } else
    return oc(i) ? pc(i, e, r + 1) : i;
}
function V5(t, { ...e }, r) {
  const n = t.current;
  if (!(n instanceof Element))
    return { target: e, transitionEnd: r };
  r && (r = { ...r }), t.values.forEach((i) => {
    const l = i.get();
    if (!oc(l))
      return;
    const g = pc(l, n);
    g && i.set(g);
  });
  for (const i in e) {
    const l = e[i];
    if (!oc(l))
      continue;
    const g = pc(l, n);
    g && (e[i] = g, r || (r = {}), r[i] === void 0 && (r[i] = l));
  }
  return { target: e, transitionEnd: r };
}
const H5 = /* @__PURE__ */ new Set([
  "width",
  "height",
  "top",
  "left",
  "right",
  "bottom",
  "x",
  "y",
  "translateX",
  "translateY"
]), A0 = (t) => H5.has(t), U5 = (t) => Object.keys(t).some(A0), Ff = (t) => t === In || t === Se, Rf = (t, e) => parseFloat(t.split(", ")[e]), If = (t, e) => (r, { transform: n }) => {
  if (n === "none" || !n)
    return 0;
  const i = n.match(/^matrix3d\((.+)\)$/);
  if (i)
    return Rf(i[1], e);
  {
    const l = n.match(/^matrix\((.+)\)$/);
    return l ? Rf(l[1], t) : 0;
  }
}, W5 = /* @__PURE__ */ new Set(["x", "y", "z"]), X5 = Os.filter((t) => !W5.has(t));
function Y5(t) {
  const e = [];
  return X5.forEach((r) => {
    const n = t.getValue(r);
    n !== void 0 && (e.push([r, n.get()]), n.set(r.startsWith("scale") ? 1 : 0));
  }), e.length && t.render(), e;
}
const yi = {
  // Dimensions
  width: ({ x: t }, { paddingLeft: e = "0", paddingRight: r = "0" }) => t.max - t.min - parseFloat(e) - parseFloat(r),
  height: ({ y: t }, { paddingTop: e = "0", paddingBottom: r = "0" }) => t.max - t.min - parseFloat(e) - parseFloat(r),
  top: (t, { top: e }) => parseFloat(e),
  left: (t, { left: e }) => parseFloat(e),
  bottom: ({ y: t }, { top: e }) => parseFloat(e) + (t.max - t.min),
  right: ({ x: t }, { left: e }) => parseFloat(e) + (t.max - t.min),
  // Transform
  x: If(4, 13),
  y: If(5, 14)
};
yi.translateX = yi.x;
yi.translateY = yi.y;
const G5 = (t, e, r) => {
  const n = e.measureViewportBox(), i = e.current, l = getComputedStyle(i), { display: g } = l, a = {};
  g === "none" && e.setStaticValue("display", t.display || "block"), r.forEach((c) => {
    a[c] = yi[c](n, l);
  }), e.render();
  const s = e.measureViewportBox();
  return r.forEach((c) => {
    const f = e.getValue(c);
    f && f.jump(a[c]), t[c] = yi[c](s, l);
  }), t;
}, q5 = (t, e, r = {}, n = {}) => {
  e = { ...e }, n = { ...n };
  const i = Object.keys(e).filter(A0);
  let l = [], g = !1;
  const a = [];
  if (i.forEach((s) => {
    const c = t.getValue(s);
    if (!t.hasValue(s))
      return;
    let f = r[s], o = Bi(f);
    const h = e[s];
    let u;
    if (Oo(h)) {
      const d = h.length, m = h[0] === null ? 1 : 0;
      f = h[m], o = Bi(f);
      for (let p = m; p < d && h[p] !== null; p++)
        u ? Eu(Bi(h[p]) === u) : u = Bi(h[p]);
    } else
      u = Bi(h);
    if (o !== u)
      if (Ff(o) && Ff(u)) {
        const d = c.get();
        typeof d == "string" && c.set(parseFloat(d)), typeof h == "string" ? e[s] = parseFloat(h) : Array.isArray(h) && u === Se && (e[s] = h.map(parseFloat));
      } else
        o != null && o.transform && (u != null && u.transform) && (f === 0 || h === 0) ? f === 0 ? c.set(u.transform(f)) : e[s] = o.transform(h) : (g || (l = Y5(t), g = !0), a.push(s), n[s] = n[s] !== void 0 ? n[s] : e[s], c.jump(h));
  }), a.length) {
    const s = a.indexOf("height") >= 0 ? window.pageYOffset : null, c = G5(e, t, a);
    return l.length && l.forEach(([f, o]) => {
      t.getValue(f).set(o);
    }), t.render(), fa && s !== null && window.scrollTo({ top: s }), { target: c, transitionEnd: n };
  } else
    return { target: e, transitionEnd: n };
};
function K5(t, e, r, n) {
  return U5(e) ? q5(t, e, r, n) : { target: e, transitionEnd: n };
}
const J5 = (t, e, r, n) => {
  const i = V5(t, e, n);
  return e = i.target, n = i.transitionEnd, K5(t, e, r, n);
}, gc = { current: null }, D0 = { current: !1 };
function Z5() {
  if (D0.current = !0, !!fa)
    if (window.matchMedia) {
      const t = window.matchMedia("(prefers-reduced-motion)"), e = () => gc.current = t.matches;
      t.addListener(e), e();
    } else
      gc.current = !1;
}
function Q5(t, e, r) {
  const { willChange: n } = e;
  for (const i in e) {
    const l = e[i], g = r[i];
    if (Rt(l))
      t.addValue(i, l), Fo(n) && n.add(i);
    else if (Rt(g))
      t.addValue(i, us(l, { owner: t })), Fo(n) && n.remove(i);
    else if (g !== l)
      if (t.hasValue(i)) {
        const a = t.getValue(i);
        !a.hasAnimated && a.set(l);
      } else {
        const a = t.getStaticValue(i);
        t.addValue(i, us(a !== void 0 ? a : l, { owner: t }));
      }
  }
  for (const i in r)
    e[i] === void 0 && t.removeValue(i);
  return e;
}
const Lf = /* @__PURE__ */ new WeakMap(), P0 = Object.keys(cs), e3 = P0.length, Bf = [
  "AnimationStart",
  "AnimationComplete",
  "Update",
  "BeforeLayoutMeasure",
  "LayoutMeasure",
  "LayoutAnimationStart",
  "LayoutAnimationComplete"
], t3 = bu.length;
class r3 {
  constructor({ parent: e, props: r, presenceContext: n, reducedMotionConfig: i, visualState: l }, g = {}) {
    this.current = null, this.children = /* @__PURE__ */ new Set(), this.isVariantNode = !1, this.isControllingVariants = !1, this.shouldReduceMotion = null, this.values = /* @__PURE__ */ new Map(), this.features = {}, this.valueSubscriptions = /* @__PURE__ */ new Map(), this.prevMotionValues = {}, this.events = {}, this.propEventSubscriptions = {}, this.notifyUpdate = () => this.notify("Update", this.latestValues), this.render = () => {
      this.current && (this.triggerBuild(), this.renderInstance(this.current, this.renderState, this.props.style, this.projection));
    }, this.scheduleRender = () => ft.render(this.render, !1, !0);
    const { latestValues: a, renderState: s } = l;
    this.latestValues = a, this.baseTarget = { ...a }, this.initialValues = r.initial ? { ...a } : {}, this.renderState = s, this.parent = e, this.props = r, this.presenceContext = n, this.depth = e ? e.depth + 1 : 0, this.reducedMotionConfig = i, this.options = g, this.isControllingVariants = pa(r), this.isVariantNode = Om(r), this.isVariantNode && (this.variantChildren = /* @__PURE__ */ new Set()), this.manuallyAnimateOnMount = !!(e && e.current);
    const { willChange: c, ...f } = this.scrapeMotionValuesFromProps(r, {});
    for (const o in f) {
      const h = f[o];
      a[o] !== void 0 && Rt(h) && (h.set(a[o], !1), Fo(c) && c.add(o));
    }
  }
  /**
   * This method takes React props and returns found MotionValues. For example, HTML
   * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.
   *
   * This isn't an abstract method as it needs calling in the constructor, but it is
   * intended to be one.
   */
  scrapeMotionValuesFromProps(e, r) {
    return {};
  }
  mount(e) {
    this.current = e, Lf.set(e, this), this.projection && !this.projection.instance && this.projection.mount(e), this.parent && this.isVariantNode && !this.isControllingVariants && (this.removeFromVariantTree = this.parent.addVariantChild(this)), this.values.forEach((r, n) => this.bindToMotionValue(n, r)), D0.current || Z5(), this.shouldReduceMotion = this.reducedMotionConfig === "never" ? !1 : this.reducedMotionConfig === "always" ? !0 : gc.current, this.parent && this.parent.children.add(this), this.update(this.props, this.presenceContext);
  }
  unmount() {
    Lf.delete(this.current), this.projection && this.projection.unmount(), Ao(this.notifyUpdate), Ao(this.render), this.valueSubscriptions.forEach((e) => e()), this.removeFromVariantTree && this.removeFromVariantTree(), this.parent && this.parent.children.delete(this);
    for (const e in this.events)
      this.events[e].clear();
    for (const e in this.features)
      this.features[e].unmount();
    this.current = null;
  }
  bindToMotionValue(e, r) {
    const n = Rn.has(e), i = r.on("change", (g) => {
      this.latestValues[e] = g, this.props.onUpdate && ft.update(this.notifyUpdate, !1, !0), n && this.projection && (this.projection.isTransformDirty = !0);
    }), l = r.on("renderRequest", this.scheduleRender);
    this.valueSubscriptions.set(e, () => {
      i(), l();
    });
  }
  sortNodePosition(e) {
    return !this.current || !this.sortInstanceNodePosition || this.type !== e.type ? 0 : this.sortInstanceNodePosition(this.current, e.current);
  }
  loadFeatures({ children: e, ...r }, n, i, l) {
    let g, a;
    for (let s = 0; s < e3; s++) {
      const c = P0[s], { isEnabled: f, Feature: o, ProjectionNode: h, MeasureLayout: u } = cs[c];
      h && (g = h), f(r) && (!this.features[c] && o && (this.features[c] = new o(this)), u && (a = u));
    }
    if ((this.type === "html" || this.type === "svg") && !this.projection && g) {
      this.projection = new g(this.latestValues, this.parent && this.parent.projection);
      const { layoutId: s, layout: c, drag: f, dragConstraints: o, layoutScroll: h, layoutRoot: u } = r;
      this.projection.setOptions({
        layoutId: s,
        layout: c,
        alwaysMeasureLayout: !!f || o && km(o),
        visualElement: this,
        scheduleRender: () => this.scheduleRender(),
        /**
         * TODO: Update options in an effect. This could be tricky as it'll be too late
         * to update by the time layout animations run.
         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,
         * ensuring it gets called if there's no potential layout animations.
         *
         */
        animationType: typeof c == "string" ? c : "both",
        initialPromotionConfig: l,
        layoutScroll: h,
        layoutRoot: u
      });
    }
    return a;
  }
  updateFeatures() {
    for (const e in this.features) {
      const r = this.features[e];
      r.isMounted ? r.update() : (r.mount(), r.isMounted = !0);
    }
  }
  triggerBuild() {
    this.build(this.renderState, this.latestValues, this.options, this.props);
  }
  /**
   * Measure the current viewport box with or without transforms.
   * Only measures axis-aligned boxes, rotate and skew must be manually
   * removed with a re-render to work.
   */
  measureViewportBox() {
    return this.current ? this.measureInstanceViewportBox(this.current, this.props) : O0();
  }
  getStaticValue(e) {
    return this.latestValues[e];
  }
  setStaticValue(e, r) {
    this.latestValues[e] = r;
  }
  /**
   * Make a target animatable by Popmotion. For instance, if we're
   * trying to animate width from 100px to 100vw we need to measure 100vw
   * in pixels to determine what we really need to animate to. This is also
   * pluggable to support Framer's custom value types like Color,
   * and CSS variables.
   */
  makeTargetAnimatable(e, r = !0) {
    return this.makeTargetAnimatableFromInstance(e, this.props, r);
  }
  /**
   * Update the provided props. Ensure any newly-added motion values are
   * added to our map, old ones removed, and listeners updated.
   */
  update(e, r) {
    (e.transformTemplate || this.props.transformTemplate) && this.scheduleRender(), this.prevProps = this.props, this.props = e, this.prevPresenceContext = this.presenceContext, this.presenceContext = r;
    for (let n = 0; n < Bf.length; n++) {
      const i = Bf[n];
      this.propEventSubscriptions[i] && (this.propEventSubscriptions[i](), delete this.propEventSubscriptions[i]);
      const l = e["on" + i];
      l && (this.propEventSubscriptions[i] = this.on(i, l));
    }
    this.prevMotionValues = Q5(this, this.scrapeMotionValuesFromProps(e, this.prevProps), this.prevMotionValues), this.handleChildMotionValue && this.handleChildMotionValue();
  }
  getProps() {
    return this.props;
  }
  /**
   * Returns the variant definition with a given name.
   */
  getVariant(e) {
    return this.props.variants ? this.props.variants[e] : void 0;
  }
  /**
   * Returns the defined default transition on this component.
   */
  getDefaultTransition() {
    return this.props.transition;
  }
  getTransformPagePoint() {
    return this.props.transformPagePoint;
  }
  getClosestVariantNode() {
    return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : void 0;
  }
  getVariantContext(e = !1) {
    if (e)
      return this.parent ? this.parent.getVariantContext() : void 0;
    if (!this.isControllingVariants) {
      const n = this.parent ? this.parent.getVariantContext() || {} : {};
      return this.props.initial !== void 0 && (n.initial = this.props.initial), n;
    }
    const r = {};
    for (let n = 0; n < t3; n++) {
      const i = bu[n], l = this.props[i];
      (ls(l) || l === !1) && (r[i] = l);
    }
    return r;
  }
  /**
   * Add a child visual element to our set of children.
   */
  addVariantChild(e) {
    const r = this.getClosestVariantNode();
    if (r)
      return r.variantChildren && r.variantChildren.add(e), () => r.variantChildren.delete(e);
  }
  /**
   * Add a motion value and bind it to this visual element.
   */
  addValue(e, r) {
    r !== this.values.get(e) && (this.removeValue(e), this.bindToMotionValue(e, r)), this.values.set(e, r), this.latestValues[e] = r.get();
  }
  /**
   * Remove a motion value and unbind any active subscriptions.
   */
  removeValue(e) {
    this.values.delete(e);
    const r = this.valueSubscriptions.get(e);
    r && (r(), this.valueSubscriptions.delete(e)), delete this.latestValues[e], this.removeValueFromRenderState(e, this.renderState);
  }
  /**
   * Check whether we have a motion value for this key
   */
  hasValue(e) {
    return this.values.has(e);
  }
  getValue(e, r) {
    if (this.props.values && this.props.values[e])
      return this.props.values[e];
    let n = this.values.get(e);
    return n === void 0 && r !== void 0 && (n = us(r, { owner: this }), this.addValue(e, n)), n;
  }
  /**
   * If we're trying to animate to a previously unencountered value,
   * we need to check for it in our state and as a last resort read it
   * directly from the instance (which might have performance implications).
   */
  readValue(e) {
    var r;
    return this.latestValues[e] !== void 0 || !this.current ? this.latestValues[e] : (r = this.getBaseTargetFromProps(this.props, e)) !== null && r !== void 0 ? r : this.readValueFromInstance(this.current, e, this.options);
  }
  /**
   * Set the base target to later animate back to. This is currently
   * only hydrated on creation and when we first read a value.
   */
  setBaseTarget(e, r) {
    this.baseTarget[e] = r;
  }
  /**
   * Find the base target for a value thats been removed from all animation
   * props.
   */
  getBaseTarget(e) {
    var r;
    const { initial: n } = this.props, i = typeof n == "string" || typeof n == "object" ? (r = Tu(this.props, n)) === null || r === void 0 ? void 0 : r[e] : void 0;
    if (n && i !== void 0)
      return i;
    const l = this.getBaseTargetFromProps(this.props, e);
    return l !== void 0 && !Rt(l) ? l : this.initialValues[e] !== void 0 && i === void 0 ? void 0 : this.baseTarget[e];
  }
  on(e, r) {
    return this.events[e] || (this.events[e] = new S0()), this.events[e].add(r);
  }
  notify(e, ...r) {
    this.events[e] && this.events[e].notify(...r);
  }
}
class M0 extends r3 {
  sortInstanceNodePosition(e, r) {
    return e.compareDocumentPosition(r) & 2 ? 1 : -1;
  }
  getBaseTargetFromProps(e, r) {
    return e.style ? e.style[r] : void 0;
  }
  removeValueFromRenderState(e, { vars: r, style: n }) {
    delete r[e], delete n[e];
  }
  makeTargetAnimatableFromInstance({ transition: e, transitionEnd: r, ...n }, { transformValues: i }, l) {
    let g = x5(n, e || {}, this);
    if (i && (r && (r = i(r)), n && (n = i(n)), g && (g = i(g))), l) {
      y5(this, n, g);
      const a = J5(this, n, g, r);
      r = a.transitionEnd, n = a.target;
    }
    return {
      transition: e,
      transitionEnd: r,
      ...n
    };
  }
}
function n3(t) {
  return window.getComputedStyle(t);
}
class i3 extends M0 {
  constructor() {
    super(...arguments), this.type = "html";
  }
  readValueFromInstance(e, r) {
    if (Rn.has(r)) {
      const n = Du(r);
      return n && n.default || 0;
    } else {
      const n = n3(e), i = (Mm(r) ? n.getPropertyValue(r) : n[r]) || 0;
      return typeof i == "string" ? i.trim() : i;
    }
  }
  measureInstanceViewportBox(e, { transformPagePoint: r }) {
    return N5(e, r);
  }
  build(e, r, n, i) {
    wu(e, r, n, i.transformTemplate);
  }
  scrapeMotionValuesFromProps(e, r) {
    return Su(e, r);
  }
  handleChildMotionValue() {
    this.childSubscription && (this.childSubscription(), delete this.childSubscription);
    const { children: e } = this.props;
    Rt(e) && (this.childSubscription = e.on("change", (r) => {
      this.current && (this.current.textContent = `${r}`);
    }));
  }
  renderInstance(e, r, n, i) {
    zm(e, r, n, i);
  }
}
class s3 extends M0 {
  constructor() {
    super(...arguments), this.type = "svg", this.isSVGTag = !1;
  }
  getBaseTargetFromProps(e, r) {
    return e[r];
  }
  readValueFromInstance(e, r) {
    if (Rn.has(r)) {
      const n = Du(r);
      return n && n.default || 0;
    }
    return r = Nm.has(r) ? r : mu(r), e.getAttribute(r);
  }
  measureInstanceViewportBox() {
    return O0();
  }
  scrapeMotionValuesFromProps(e, r) {
    return $m(e, r);
  }
  build(e, r, n, i) {
    Cu(e, r, n, this.isSVGTag, i.transformTemplate);
  }
  renderInstance(e, r, n, i) {
    jm(e, r, n, i);
  }
  mount(e) {
    this.isSVGTag = _u(e.tagName), super.mount(e);
  }
}
const o3 = (t, e) => yu(t) ? new s3(e, { enableHardwareAcceleration: !1 }) : new i3(e, { enableHardwareAcceleration: !0 }), gt = iS(BS);
function F0() {
  const t = ge(!1);
  return pu(() => (t.current = !0, () => {
    t.current = !1;
  }), []), t;
}
function a3() {
  const t = F0(), [e, r] = Fe(0), n = Me(() => {
    t.current && r(e + 1);
  }, [e]);
  return [Me(() => ft.postRender(n), [n]), e];
}
class l3 extends ve.Component {
  getSnapshotBeforeUpdate(e) {
    const r = this.props.childRef.current;
    if (r && e.isPresent && !this.props.isPresent) {
      const n = this.props.sizeRef.current;
      n.height = r.offsetHeight || 0, n.width = r.offsetWidth || 0, n.top = r.offsetTop, n.left = r.offsetLeft;
    }
    return null;
  }
  /**
   * Required with getSnapshotBeforeUpdate to stop React complaining.
   */
  componentDidUpdate() {
  }
  render() {
    return this.props.children;
  }
}
function c3({ children: t, isPresent: e }) {
  const r = qt(), n = ge(null), i = ge({
    width: 0,
    height: 0,
    top: 0,
    left: 0
  });
  return jp(() => {
    const { width: l, height: g, top: a, left: s } = i.current;
    if (e || !n.current || !l || !g)
      return;
    n.current.dataset.motionPopId = r;
    const c = document.createElement("style");
    return document.head.appendChild(c), c.sheet && c.sheet.insertRule(`
          [data-motion-pop-id="${r}"] {
            position: absolute !important;
            width: ${l}px !important;
            height: ${g}px !important;
            top: ${a}px !important;
            left: ${s}px !important;
          }
        `), () => {
      document.head.removeChild(c);
    };
  }, [e]), ve.createElement(l3, { isPresent: e, childRef: n, sizeRef: i }, ve.cloneElement(t, { ref: n }));
}
const ol = ({ children: t, initial: e, isPresent: r, onExitComplete: n, custom: i, presenceAffectsLayout: l, mode: g }) => {
  const a = Vm(u3), s = qt(), c = Ye(
    () => ({
      id: s,
      initial: e,
      isPresent: r,
      custom: i,
      onExitComplete: (f) => {
        a.set(f, !0);
        for (const o of a.values())
          if (!o)
            return;
        n && n();
      },
      register: (f) => (a.set(f, !1), () => a.delete(f))
    }),
    /**
     * If the presence of a child affects the layout of the components around it,
     * we want to make a new context value to ensure they get re-rendered
     * so they can detect that layout change.
     */
    l ? void 0 : [r]
  );
  return Ye(() => {
    a.forEach((f, o) => a.set(o, !1));
  }, [r]), ve.useEffect(() => {
    !r && !a.size && n && n();
  }, [r]), g === "popLayout" && (t = ve.createElement(c3, { isPresent: r }, t)), ve.createElement(du.Provider, { value: c }, t);
};
function u3() {
  return /* @__PURE__ */ new Map();
}
function h3(t) {
  return ke(() => () => t(), []);
}
const un = (t) => t.key || "";
function f3(t, e) {
  t.forEach((r) => {
    const n = un(r);
    e.set(n, r);
  });
}
function d3(t) {
  const e = [];
  return Wr.forEach(t, (r) => {
    xr(r) && e.push(r);
  }), e;
}
const Sr = ({ children: t, custom: e, initial: r = !0, onExitComplete: n, exitBeforeEnter: i, presenceAffectsLayout: l = !0, mode: g = "sync" }) => {
  const a = Ve(Am).forceRender || a3()[0], s = F0(), c = d3(t);
  let f = c;
  const o = ge(/* @__PURE__ */ new Map()).current, h = ge(f), u = ge(/* @__PURE__ */ new Map()).current, d = ge(!0);
  if (pu(() => {
    d.current = !1, f3(c, u), h.current = f;
  }), h3(() => {
    d.current = !0, u.clear(), o.clear();
  }), d.current)
    return ve.createElement(ve.Fragment, null, f.map((b) => ve.createElement(ol, { key: un(b), isPresent: !0, initial: r ? void 0 : !1, presenceAffectsLayout: l, mode: g }, b)));
  f = [...f];
  const m = h.current.map(un), p = c.map(un), v = m.length;
  for (let b = 0; b < v; b++) {
    const y = m[b];
    p.indexOf(y) === -1 && !o.has(y) && o.set(y, void 0);
  }
  return g === "wait" && o.size && (f = []), o.forEach((b, y) => {
    if (p.indexOf(y) !== -1)
      return;
    const w = u.get(y);
    if (!w)
      return;
    const x = m.indexOf(y);
    let _ = b;
    if (!_) {
      const S = () => {
        o.delete(y);
        const k = Array.from(u.keys()).filter((F) => !p.includes(F));
        if (k.forEach((F) => u.delete(F)), h.current = c.filter((F) => {
          const L = un(F);
          return (
            // filter out the node exiting
            L === y || // filter out the leftover children
            k.includes(L)
          );
        }), !o.size) {
          if (s.current === !1)
            return;
          a(), n && n();
        }
      };
      _ = ve.createElement(ol, { key: un(w), isPresent: !1, onExitComplete: S, custom: e, presenceAffectsLayout: l, mode: g }, w), o.set(y, _);
    }
    f.splice(x, 0, _);
  }), f = f.map((b) => {
    const y = b.key;
    return o.has(y) ? b : ve.createElement(ol, { key: un(b), isPresent: !0, presenceAffectsLayout: l, mode: g }, b);
  }), ve.createElement(ve.Fragment, null, o.size ? f : f.map((b) => xt(b)));
};
function p3({ children: t, features: e, strict: r = !1 }) {
  const [, n] = Fe(!al(e)), i = ge(void 0);
  if (!al(e)) {
    const { renderer: l, ...g } = e;
    i.current = l, sc(g);
  }
  return ke(() => {
    al(e) && e().then(({ renderer: l, ...g }) => {
      sc(g), i.current = l, n(!0);
    });
  }, []), ve.createElement(gu.Provider, { value: { renderer: i.current, strict: r } }, t);
}
function al(t) {
  return typeof t == "function";
}
const g3 = {
  renderer: o3,
  ...L5,
  ...ZS
}, Ot = typeof document < "u" ? he.useLayoutEffect : () => {
}, Ro = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0
}, R0 = /* @__PURE__ */ he.createContext(Ro), m3 = /* @__PURE__ */ he.createContext(!1);
let v3 = !!(typeof window < "u" && window.document && window.document.createElement), ll = /* @__PURE__ */ new WeakMap();
function b3(t = !1) {
  let e = Ve(R0), r = ge(null);
  if (r.current === null && !t) {
    var n, i;
    let l = (i = he.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || i === void 0 || (n = i.ReactCurrentOwner) === null || n === void 0 ? void 0 : n.current;
    if (l) {
      let g = ll.get(l);
      g == null ? ll.set(l, {
        id: e.current,
        state: l.memoizedState
      }) : l.memoizedState !== g.state && (e.current = g.id, ll.delete(l));
    }
    r.current = ++e.current;
  }
  return r.current;
}
function y3(t) {
  let e = Ve(R0);
  e === Ro && !v3 && console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let r = b3(!!t), n = `react-aria${e.prefix}`;
  return t || `${n}-${r}`;
}
function w3(t) {
  let e = he.useId(), [r] = Fe(Pu()), n = r ? "react-aria" : `react-aria${Ro.prefix}`;
  return t || `${n}-${e}`;
}
he.useId;
function x3() {
  return !1;
}
function C3() {
  return !0;
}
function _3(t) {
  return () => {
  };
}
function Pu() {
  return typeof he.useSyncExternalStore == "function" ? he.useSyncExternalStore(_3, x3, C3) : Ve(m3);
}
let zf = /* @__PURE__ */ new Map();
function S3(t, e) {
  if (t === e)
    return t;
  let r = zf.get(t);
  if (r)
    return r(e), e;
  let n = zf.get(e);
  return n ? (n(t), t) : e;
}
function T3(...t) {
  return (...e) => {
    for (let r of t)
      typeof r == "function" && r(...e);
  };
}
const dt = (t) => {
  var e;
  return (e = t == null ? void 0 : t.ownerDocument) !== null && e !== void 0 ? e : document;
}, Io = (t) => t && "window" in t && t.window === t ? t : dt(t).defaultView || window;
function Tr(...t) {
  let e = {
    ...t[0]
  };
  for (let r = 1; r < t.length; r++) {
    let n = t[r];
    for (let i in n) {
      let l = e[i], g = n[i];
      typeof l == "function" && typeof g == "function" && // This is a lot faster than a regex.
      i[0] === "o" && i[1] === "n" && i.charCodeAt(2) >= /* 'A' */
      65 && i.charCodeAt(2) <= /* 'Z' */
      90 ? e[i] = T3(l, g) : (i === "className" || i === "UNSAFE_className") && typeof l == "string" && typeof g == "string" ? e[i] = ce(l, g) : i === "id" && l && g ? e.id = S3(l, g) : e[i] = g !== void 0 ? g : l;
    }
  }
  return e;
}
function Nf(t) {
  if (E3())
    t.focus({
      preventScroll: !0
    });
  else {
    let e = k3(t);
    t.focus(), O3(e);
  }
}
let Qs = null;
function E3() {
  if (Qs == null) {
    Qs = !1;
    try {
      document.createElement("div").focus({
        get preventScroll() {
          return Qs = !0, !0;
        }
      });
    } catch {
    }
  }
  return Qs;
}
function k3(t) {
  let e = t.parentNode, r = [], n = document.scrollingElement || document.documentElement;
  for (; e instanceof HTMLElement && e !== n; )
    (e.offsetHeight < e.scrollHeight || e.offsetWidth < e.scrollWidth) && r.push({
      element: e,
      scrollTop: e.scrollTop,
      scrollLeft: e.scrollLeft
    }), e = e.parentNode;
  return n instanceof HTMLElement && r.push({
    element: n,
    scrollTop: n.scrollTop,
    scrollLeft: n.scrollLeft
  }), r;
}
function O3(t) {
  for (let { element: e, scrollTop: r, scrollLeft: n } of t)
    e.scrollTop = r, e.scrollLeft = n;
}
function A3(t) {
  var e;
  return typeof window > "u" || window.navigator == null ? !1 : ((e = window.navigator.userAgentData) === null || e === void 0 ? void 0 : e.brands.some((r) => t.test(r.brand))) || t.test(window.navigator.userAgent);
}
function D3(t) {
  var e;
  return typeof window < "u" && window.navigator != null ? t.test(((e = window.navigator.userAgentData) === null || e === void 0 ? void 0 : e.platform) || window.navigator.platform) : !1;
}
function I0() {
  return D3(/^Mac/i);
}
function P3() {
  return A3(/Android/i);
}
let Gn = /* @__PURE__ */ new Map(), mc = /* @__PURE__ */ new Set();
function jf() {
  if (typeof window > "u")
    return;
  function t(n) {
    return "propertyName" in n;
  }
  let e = (n) => {
    if (!t(n) || !n.target)
      return;
    let i = Gn.get(n.target);
    i || (i = /* @__PURE__ */ new Set(), Gn.set(n.target, i), n.target.addEventListener("transitioncancel", r, {
      once: !0
    })), i.add(n.propertyName);
  }, r = (n) => {
    if (!t(n) || !n.target)
      return;
    let i = Gn.get(n.target);
    if (i && (i.delete(n.propertyName), i.size === 0 && (n.target.removeEventListener("transitioncancel", r), Gn.delete(n.target)), Gn.size === 0)) {
      for (let l of mc)
        l();
      mc.clear();
    }
  };
  document.body.addEventListener("transitionrun", e), document.body.addEventListener("transitionend", r);
}
typeof document < "u" && (document.readyState !== "loading" ? jf() : document.addEventListener("DOMContentLoaded", jf));
function M3(t) {
  requestAnimationFrame(() => {
    Gn.size === 0 ? t() : mc.add(t);
  });
}
function Mu() {
  let t = ge(/* @__PURE__ */ new Map()), e = Me((i, l, g, a) => {
    let s = a != null && a.once ? (...c) => {
      t.current.delete(g), g(...c);
    } : g;
    t.current.set(g, {
      type: l,
      eventTarget: i,
      fn: s,
      options: a
    }), i.addEventListener(l, g, a);
  }, []), r = Me((i, l, g, a) => {
    var s;
    let c = ((s = t.current.get(g)) === null || s === void 0 ? void 0 : s.fn) || g;
    i.removeEventListener(l, c, a), t.current.delete(g);
  }, []), n = Me(() => {
    t.current.forEach((i, l) => {
      r(i.eventTarget, i.type, l, i.options);
    });
  }, [
    r
  ]);
  return ke(() => n, [
    n
  ]), {
    addGlobalListener: e,
    removeGlobalListener: r,
    removeAllGlobalListeners: n
  };
}
function Ln(t) {
  const e = ge(null);
  return Ye(() => ({
    get current() {
      return e.current;
    },
    set current(r) {
      e.current = r, typeof t == "function" ? t(r) : t && (t.current = r);
    }
  }), [
    t
  ]);
}
let Lt = typeof document < "u" && window.visualViewport;
function F3() {
  let t = Pu(), [e, r] = Fe(() => t ? {
    width: 0,
    height: 0
  } : $f());
  return ke(() => {
    let n = () => {
      r((i) => {
        let l = $f();
        return l.width === i.width && l.height === i.height ? i : l;
      });
    };
    return Lt ? Lt.addEventListener("resize", n) : window.addEventListener("resize", n), () => {
      Lt ? Lt.removeEventListener("resize", n) : window.removeEventListener("resize", n);
    };
  }, []), e;
}
function $f() {
  return {
    width: Lt && (Lt == null ? void 0 : Lt.width) || window.innerWidth,
    height: Lt && (Lt == null ? void 0 : Lt.height) || window.innerHeight
  };
}
function R3(t) {
  return t.mozInputSource === 0 && t.isTrusted ? !0 : P3() && t.pointerType ? t.type === "click" && t.buttons === 1 : t.detail === 0 && !t.pointerType;
}
function Gr(t, e, r) {
  let [n, i] = Fe(t || e), l = ge(t !== void 0), g = t !== void 0;
  ke(() => {
    let c = l.current;
    c !== g && console.warn(`WARN: A component changed from ${c ? "controlled" : "uncontrolled"} to ${g ? "controlled" : "uncontrolled"}.`), l.current = g;
  }, [
    g
  ]);
  let a = g ? t : n, s = Me((c, ...f) => {
    let o = (h, ...u) => {
      r && (Object.is(a, h) || r(h, ...u)), g || (a = h);
    };
    typeof c == "function" ? (console.warn("We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320"), i((u, ...d) => {
      let m = c(g ? a : u, ...d);
      return o(m, ...f), g ? u : m;
    })) : (g || i(c), o(c, ...f));
  }, [
    g,
    a,
    r
  ]);
  return [
    a,
    s
  ];
}
function wn(t, e = -1 / 0, r = 1 / 0) {
  return Math.min(Math.max(t, e), r);
}
function eo(t, e) {
  let r = t, n = e.toString(), i = n.indexOf("."), l = i >= 0 ? n.length - i : 0;
  if (l > 0) {
    let g = Math.pow(10, l);
    r = Math.round(r * g) / g;
  }
  return r;
}
function I3(t, e, r, n) {
  e = Number(e), r = Number(r);
  let i = (t - (isNaN(e) ? 0 : e)) % n, l = eo(Math.abs(i) * 2 >= n ? t + Math.sign(i) * (n - Math.abs(i)) : t - i, n);
  return isNaN(e) ? !isNaN(r) && l > r && (l = Math.floor(eo(r / n, n)) * n) : l < e ? l = e : !isNaN(r) && l > r && (l = e + Math.floor(eo((r - e) / n, n)) * n), l = eo(l, n), l;
}
function Ze(t, e, r = 10) {
  const n = Math.pow(r, e);
  return Math.round(t * n) / n;
}
var Ce = {};
const L3 = {}, B3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: L3
}, Symbol.toStringTag, { value: "Module" })), cl = /* @__PURE__ */ w2(B3);
(function(t) {
  /*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */
  var e = e || { version: "5.3.0" };
  if (t.fabric = e, typeof document < "u" && typeof window < "u")
    document instanceof (typeof HTMLDocument < "u" ? HTMLDocument : Document) ? e.document = document : e.document = document.implementation.createHTMLDocument(""), e.window = window;
  else {
    var r = cl, n = new r.JSDOM(
      decodeURIComponent("%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E"),
      {
        features: {
          FetchExternalResources: ["img"]
        },
        resources: "usable"
      }
    ).window;
    e.document = n.document, e.jsdomImplForWrapper = cl.implForWrapper, e.nodeCanvas = cl.Canvas, e.window = n, DOMParser = e.window.DOMParser;
  }
  e.isTouchSupported = "ontouchstart" in e.window || "ontouchstart" in e.document || e.window && e.window.navigator && e.window.navigator.maxTouchPoints > 0, e.isLikelyNode = typeof Buffer < "u" && typeof window > "u", e.SHARED_ATTRIBUTES = [
    "display",
    "transform",
    "fill",
    "fill-opacity",
    "fill-rule",
    "opacity",
    "stroke",
    "stroke-dasharray",
    "stroke-linecap",
    "stroke-dashoffset",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-width",
    "id",
    "paint-order",
    "vector-effect",
    "instantiated_by_use",
    "clip-path"
  ], e.DPI = 96, e.reNum = "(?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?)", e.commaWsp = "(?:\\s+,?\\s*|,\\s*)", e.rePathCommand = /([-+]?((\d+\.\d+)|((\d+)|(\.\d+)))(?:[eE][-+]?\d+)?)/ig, e.reNonWord = /[ \n\.,;!\?\-]/, e.fontPaths = {}, e.iMatrix = [1, 0, 0, 1, 0, 0], e.svgNS = "http://www.w3.org/2000/svg", e.perfLimitSizeTotal = 2097152, e.maxCacheSideLimit = 4096, e.minCacheSideLimit = 256, e.charWidthsCache = {}, e.textureSize = 2048, e.disableStyleCopyPaste = !1, e.enableGLFiltering = !0, e.devicePixelRatio = e.window.devicePixelRatio || e.window.webkitDevicePixelRatio || e.window.mozDevicePixelRatio || 1, e.browserShadowBlurConstant = 1, e.arcToSegmentsCache = {}, e.boundsOfCurveCache = {}, e.cachesBoundsOfCurve = !0, e.forceGLPutImageData = !1, e.initFilterBackend = function() {
    if (e.enableGLFiltering && e.isWebglSupported && e.isWebglSupported(e.textureSize))
      return console.log("max texture size: " + e.maxTextureSize), new e.WebglFilterBackend({ tileSize: e.textureSize });
    if (e.Canvas2dFilterBackend)
      return new e.Canvas2dFilterBackend();
  }, typeof document < "u" && typeof window < "u" && (window.fabric = e), function() {
    function a(u, d) {
      if (this.__eventListeners[u]) {
        var m = this.__eventListeners[u];
        d ? m[m.indexOf(d)] = !1 : e.util.array.fill(m, !1);
      }
    }
    function s(u, d) {
      if (this.__eventListeners || (this.__eventListeners = {}), arguments.length === 1)
        for (var m in u)
          this.on(m, u[m]);
      else
        this.__eventListeners[u] || (this.__eventListeners[u] = []), this.__eventListeners[u].push(d);
      return this;
    }
    function c(u, d) {
      var m = (function() {
        d.apply(this, arguments), this.off(u, m);
      }).bind(this);
      this.on(u, m);
    }
    function f(u, d) {
      if (arguments.length === 1)
        for (var m in u)
          c.call(this, m, u[m]);
      else
        c.call(this, u, d);
      return this;
    }
    function o(u, d) {
      if (!this.__eventListeners)
        return this;
      if (arguments.length === 0)
        for (u in this.__eventListeners)
          a.call(this, u);
      else if (arguments.length === 1 && typeof arguments[0] == "object")
        for (var m in u)
          a.call(this, m, u[m]);
      else
        a.call(this, u, d);
      return this;
    }
    function h(u, d) {
      if (!this.__eventListeners)
        return this;
      var m = this.__eventListeners[u];
      if (!m)
        return this;
      for (var p = 0, v = m.length; p < v; p++)
        m[p] && m[p].call(this, d || {});
      return this.__eventListeners[u] = m.filter(function(b) {
        return b !== !1;
      }), this;
    }
    e.Observable = {
      fire: h,
      on: s,
      once: f,
      off: o
    };
  }(), e.Collection = {
    _objects: [],
    /**
     * Adds objects to collection, Canvas or Group, then renders canvas
     * (if `renderOnAddRemove` is not `false`).
     * in case of Group no changes to bounding box are made.
     * Objects should be instances of (or inherit from) fabric.Object
     * Use of this function is highly discouraged for groups.
     * you can add a bunch of objects with the add method but then you NEED
     * to run a addWithUpdate call for the Group class or position/bbox will be wrong.
     * @param {...fabric.Object} object Zero or more fabric instances
     * @return {Self} thisArg
     * @chainable
     */
    add: function() {
      if (this._objects.push.apply(this._objects, arguments), this._onObjectAdded)
        for (var a = 0, s = arguments.length; a < s; a++)
          this._onObjectAdded(arguments[a]);
      return this.renderOnAddRemove && this.requestRenderAll(), this;
    },
    /**
     * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)
     * An object should be an instance of (or inherit from) fabric.Object
     * Use of this function is highly discouraged for groups.
     * you can add a bunch of objects with the insertAt method but then you NEED
     * to run a addWithUpdate call for the Group class or position/bbox will be wrong.
     * @param {Object} object Object to insert
     * @param {Number} index Index to insert object at
     * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs
     * @return {Self} thisArg
     * @chainable
     */
    insertAt: function(a, s, c) {
      var f = this._objects;
      return c ? f[s] = a : f.splice(s, 0, a), this._onObjectAdded && this._onObjectAdded(a), this.renderOnAddRemove && this.requestRenderAll(), this;
    },
    /**
     * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)
     * @param {...fabric.Object} object Zero or more fabric instances
     * @return {Self} thisArg
     * @chainable
     */
    remove: function() {
      for (var a = this._objects, s, c = !1, f = 0, o = arguments.length; f < o; f++)
        s = a.indexOf(arguments[f]), s !== -1 && (c = !0, a.splice(s, 1), this._onObjectRemoved && this._onObjectRemoved(arguments[f]));
      return this.renderOnAddRemove && c && this.requestRenderAll(), this;
    },
    /**
     * Executes given function for each object in this group
     * @param {Function} callback
     *                   Callback invoked with current object as first argument,
     *                   index - as second and an array of all objects - as third.
     *                   Callback is invoked in a context of Global Object (e.g. `window`)
     *                   when no `context` argument is given
     *
     * @param {Object} context Context (aka thisObject)
     * @return {Self} thisArg
     * @chainable
     */
    forEachObject: function(a, s) {
      for (var c = this.getObjects(), f = 0, o = c.length; f < o; f++)
        a.call(s, c[f], f, c);
      return this;
    },
    /**
     * Returns an array of children objects of this instance
     * Type parameter introduced in 1.3.10
     * since 2.3.5 this method return always a COPY of the array;
     * @param {String} [type] When specified, only objects of this type are returned
     * @return {Array}
     */
    getObjects: function(a) {
      return typeof a > "u" ? this._objects.concat() : this._objects.filter(function(s) {
        return s.type === a;
      });
    },
    /**
     * Returns object at specified index
     * @param {Number} index
     * @return {Self} thisArg
     */
    item: function(a) {
      return this._objects[a];
    },
    /**
     * Returns true if collection contains no objects
     * @return {Boolean} true if collection is empty
     */
    isEmpty: function() {
      return this._objects.length === 0;
    },
    /**
     * Returns a size of a collection (i.e: length of an array containing its objects)
     * @return {Number} Collection size
     */
    size: function() {
      return this._objects.length;
    },
    /**
     * Returns true if collection contains an object
     * @param {Object} object Object to check against
     * @param {Boolean} [deep=false] `true` to check all descendants, `false` to check only `_objects`
     * @return {Boolean} `true` if collection contains an object
     */
    contains: function(a, s) {
      return this._objects.indexOf(a) > -1 ? !0 : s ? this._objects.some(function(c) {
        return typeof c.contains == "function" && c.contains(a, !0);
      }) : !1;
    },
    /**
     * Returns number representation of a collection complexity
     * @return {Number} complexity
     */
    complexity: function() {
      return this._objects.reduce(function(a, s) {
        return a += s.complexity ? s.complexity() : 0, a;
      }, 0);
    }
  }, e.CommonMethods = {
    /**
     * Sets object's properties from options
     * @param {Object} [options] Options object
     */
    _setOptions: function(a) {
      for (var s in a)
        this.set(s, a[s]);
    },
    /**
     * @private
     * @param {Object} [filler] Options object
     * @param {String} [property] property to set the Gradient to
     */
    _initGradient: function(a, s) {
      a && a.colorStops && !(a instanceof e.Gradient) && this.set(s, new e.Gradient(a));
    },
    /**
     * @private
     * @param {Object} [filler] Options object
     * @param {String} [property] property to set the Pattern to
     * @param {Function} [callback] callback to invoke after pattern load
     */
    _initPattern: function(a, s, c) {
      a && a.source && !(a instanceof e.Pattern) ? this.set(s, new e.Pattern(a, c)) : c && c();
    },
    /**
     * @private
     */
    _setObject: function(a) {
      for (var s in a)
        this._set(s, a[s]);
    },
    /**
     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.
     * @param {String|Object} key Property name or object (if object, iterate over the object properties)
     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)
     * @return {fabric.Object} thisArg
     * @chainable
     */
    set: function(a, s) {
      return typeof a == "object" ? this._setObject(a) : this._set(a, s), this;
    },
    _set: function(a, s) {
      this[a] = s;
    },
    /**
     * Toggles specified property from `true` to `false` or from `false` to `true`
     * @param {String} property Property to toggle
     * @return {fabric.Object} thisArg
     * @chainable
     */
    toggle: function(a) {
      var s = this.get(a);
      return typeof s == "boolean" && this.set(a, !s), this;
    },
    /**
     * Basic getter
     * @param {String} property Property name
     * @return {*} value of a property
     */
    get: function(a) {
      return this[a];
    }
  }, function(a) {
    var s = Math.sqrt, c = Math.atan2, f = Math.pow, o = Math.PI / 180, h = Math.PI / 2;
    e.util = {
      /**
       * Calculate the cos of an angle, avoiding returning floats for known results
       * @static
       * @memberOf fabric.util
       * @param {Number} angle the angle in radians or in degree
       * @return {Number}
       */
      cos: function(u) {
        if (u === 0)
          return 1;
        u < 0 && (u = -u);
        var d = u / h;
        switch (d) {
          case 1:
          case 3:
            return 0;
          case 2:
            return -1;
        }
        return Math.cos(u);
      },
      /**
       * Calculate the sin of an angle, avoiding returning floats for known results
       * @static
       * @memberOf fabric.util
       * @param {Number} angle the angle in radians or in degree
       * @return {Number}
       */
      sin: function(u) {
        if (u === 0)
          return 0;
        var d = u / h, m = 1;
        switch (u < 0 && (m = -1), d) {
          case 1:
            return m;
          case 2:
            return 0;
          case 3:
            return -m;
        }
        return Math.sin(u);
      },
      /**
       * Removes value from an array.
       * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`
       * @static
       * @memberOf fabric.util
       * @param {Array} array
       * @param {*} value
       * @return {Array} original array
       */
      removeFromArray: function(u, d) {
        var m = u.indexOf(d);
        return m !== -1 && u.splice(m, 1), u;
      },
      /**
       * Returns random number between 2 specified ones.
       * @static
       * @memberOf fabric.util
       * @param {Number} min lower limit
       * @param {Number} max upper limit
       * @return {Number} random value (between min and max)
       */
      getRandomInt: function(u, d) {
        return Math.floor(Math.random() * (d - u + 1)) + u;
      },
      /**
       * Transforms degrees to radians.
       * @static
       * @memberOf fabric.util
       * @param {Number} degrees value in degrees
       * @return {Number} value in radians
       */
      degreesToRadians: function(u) {
        return u * o;
      },
      /**
       * Transforms radians to degrees.
       * @static
       * @memberOf fabric.util
       * @param {Number} radians value in radians
       * @return {Number} value in degrees
       */
      radiansToDegrees: function(u) {
        return u / o;
      },
      /**
       * Rotates `point` around `origin` with `radians`
       * @static
       * @memberOf fabric.util
       * @param {fabric.Point} point The point to rotate
       * @param {fabric.Point} origin The origin of the rotation
       * @param {Number} radians The radians of the angle for the rotation
       * @return {fabric.Point} The new rotated point
       */
      rotatePoint: function(u, d, m) {
        var p = new e.Point(u.x - d.x, u.y - d.y), v = e.util.rotateVector(p, m);
        return new e.Point(v.x, v.y).addEquals(d);
      },
      /**
       * Rotates `vector` with `radians`
       * @static
       * @memberOf fabric.util
       * @param {Object} vector The vector to rotate (x and y)
       * @param {Number} radians The radians of the angle for the rotation
       * @return {Object} The new rotated point
       */
      rotateVector: function(u, d) {
        var m = e.util.sin(d), p = e.util.cos(d), v = u.x * p - u.y * m, b = u.x * m + u.y * p;
        return {
          x: v,
          y: b
        };
      },
      /**
       * Creates a vetor from points represented as a point
       * @static
       * @memberOf fabric.util
       *
       * @typedef {Object} Point
       * @property {number} x
       * @property {number} y
       *
       * @param {Point} from
       * @param {Point} to
       * @returns {Point} vector
       */
      createVector: function(u, d) {
        return new e.Point(d.x - u.x, d.y - u.y);
      },
      /**
       * Calculates angle between 2 vectors using dot product
       * @static
       * @memberOf fabric.util
       * @param {Point} a
       * @param {Point} b
       * @returns the angle in radian between the vectors
       */
      calcAngleBetweenVectors: function(u, d) {
        return Math.acos((u.x * d.x + u.y * d.y) / (Math.hypot(u.x, u.y) * Math.hypot(d.x, d.y)));
      },
      /**
       * @static
       * @memberOf fabric.util
       * @param {Point} v
       * @returns {Point} vector representing the unit vector of pointing to the direction of `v`
       */
      getHatVector: function(u) {
        return new e.Point(u.x, u.y).multiply(1 / Math.hypot(u.x, u.y));
      },
      /**
       * @static
       * @memberOf fabric.util
       * @param {Point} A
       * @param {Point} B
       * @param {Point} C
       * @returns {{ vector: Point, angle: number }} vector representing the bisector of A and A's angle
       */
      getBisector: function(u, d, m) {
        var p = e.util.createVector(u, d), v = e.util.createVector(u, m), b = e.util.calcAngleBetweenVectors(p, v), y = e.util.calcAngleBetweenVectors(e.util.rotateVector(p, b), v), w = b * (y === 0 ? 1 : -1) / 2;
        return {
          vector: e.util.getHatVector(e.util.rotateVector(p, w)),
          angle: b
        };
      },
      /**
       * Project stroke width on points returning 2 projections for each point as follows:
       * - `miter`: 2 points corresponding to the outer boundary and the inner boundary of stroke.
       * - `bevel`: 2 points corresponding to the bevel boundaries, tangent to the bisector.
       * - `round`: same as `bevel`
       * Used to calculate object's bounding box
       * @static
       * @memberOf fabric.util
       * @param {Point[]} points
       * @param {Object} options
       * @param {number} options.strokeWidth
       * @param {'miter'|'bevel'|'round'} options.strokeLineJoin
       * @param {number} options.strokeMiterLimit https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit
       * @param {boolean} options.strokeUniform
       * @param {number} options.scaleX
       * @param {number} options.scaleY
       * @param {boolean} [openPath] whether the shape is open or not, affects the calculations of the first and last points
       * @returns {fabric.Point[]} array of size 2n/4n of all suspected points
       */
      projectStrokeOnPoints: function(u, d, m) {
        var p = [], v = d.strokeWidth / 2, b = d.strokeUniform ? new e.Point(1 / d.scaleX, 1 / d.scaleY) : new e.Point(1, 1), y = function(w) {
          var x = v / Math.hypot(w.x, w.y);
          return new e.Point(w.x * x * b.x, w.y * x * b.y);
        };
        return u.length <= 1 || u.forEach(function(w, x) {
          var _ = new e.Point(w.x, w.y), S, k;
          x === 0 ? (k = u[x + 1], S = m ? y(e.util.createVector(k, _)).addEquals(_) : u[u.length - 1]) : x === u.length - 1 ? (S = u[x - 1], k = m ? y(e.util.createVector(S, _)).addEquals(_) : u[0]) : (S = u[x - 1], k = u[x + 1]);
          var F = e.util.getBisector(_, S, k), L = F.vector, j = F.angle, G, te;
          if (d.strokeLineJoin === "miter" && (G = -v / Math.sin(j / 2), te = new e.Point(
            L.x * G * b.x,
            L.y * G * b.y
          ), Math.hypot(te.x, te.y) / v <= d.strokeMiterLimit)) {
            p.push(_.add(te)), p.push(_.subtract(te));
            return;
          }
          G = -v * Math.SQRT2, te = new e.Point(
            L.x * G * b.x,
            L.y * G * b.y
          ), p.push(_.add(te)), p.push(_.subtract(te));
        }), p;
      },
      /**
       * Apply transform t to point p
       * @static
       * @memberOf fabric.util
       * @param  {fabric.Point} p The point to transform
       * @param  {Array} t The transform
       * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied
       * @return {fabric.Point} The transformed point
       */
      transformPoint: function(u, d, m) {
        return m ? new e.Point(
          d[0] * u.x + d[2] * u.y,
          d[1] * u.x + d[3] * u.y
        ) : new e.Point(
          d[0] * u.x + d[2] * u.y + d[4],
          d[1] * u.x + d[3] * u.y + d[5]
        );
      },
      /**
       * Returns coordinates of points's bounding rectangle (left, top, width, height)
       * @param {Array} points 4 points array
       * @param {Array} [transform] an array of 6 numbers representing a 2x3 transform matrix
       * @return {Object} Object with left, top, width, height properties
       */
      makeBoundingBoxFromPoints: function(u, d) {
        if (d)
          for (var m = 0; m < u.length; m++)
            u[m] = e.util.transformPoint(u[m], d);
        var p = [u[0].x, u[1].x, u[2].x, u[3].x], v = e.util.array.min(p), b = e.util.array.max(p), y = b - v, w = [u[0].y, u[1].y, u[2].y, u[3].y], x = e.util.array.min(w), _ = e.util.array.max(w), S = _ - x;
        return {
          left: v,
          top: x,
          width: y,
          height: S
        };
      },
      /**
       * Invert transformation t
       * @static
       * @memberOf fabric.util
       * @param {Array} t The transform
       * @return {Array} The inverted transform
       */
      invertTransform: function(u) {
        var d = 1 / (u[0] * u[3] - u[1] * u[2]), m = [d * u[3], -d * u[1], -d * u[2], d * u[0]], p = e.util.transformPoint({ x: u[4], y: u[5] }, m, !0);
        return m[4] = -p.x, m[5] = -p.y, m;
      },
      /**
       * A wrapper around Number#toFixed, which contrary to native method returns number, not string.
       * @static
       * @memberOf fabric.util
       * @param {Number|String} number number to operate on
       * @param {Number} fractionDigits number of fraction digits to "leave"
       * @return {Number}
       */
      toFixed: function(u, d) {
        return parseFloat(Number(u).toFixed(d));
      },
      /**
       * Converts from attribute value to pixel value if applicable.
       * Returns converted pixels or original value not converted.
       * @param {Number|String} value number to operate on
       * @param {Number} fontSize
       * @return {Number|String}
       */
      parseUnit: function(u, d) {
        var m = /\D{0,2}$/.exec(u), p = parseFloat(u);
        switch (d || (d = e.Text.DEFAULT_SVG_FONT_SIZE), m[0]) {
          case "mm":
            return p * e.DPI / 25.4;
          case "cm":
            return p * e.DPI / 2.54;
          case "in":
            return p * e.DPI;
          case "pt":
            return p * e.DPI / 72;
          case "pc":
            return p * e.DPI / 72 * 12;
          case "em":
            return p * d;
          default:
            return p;
        }
      },
      /**
       * Function which always returns `false`.
       * @static
       * @memberOf fabric.util
       * @return {Boolean}
       */
      falseFunction: function() {
        return !1;
      },
      /**
       * Returns klass "Class" object of given namespace
       * @memberOf fabric.util
       * @param {String} type Type of object (eg. 'circle')
       * @param {String} namespace Namespace to get klass "Class" object from
       * @return {Object} klass "Class"
       */
      getKlass: function(u, d) {
        return u = e.util.string.camelize(u.charAt(0).toUpperCase() + u.slice(1)), e.util.resolveNamespace(d)[u];
      },
      /**
       * Returns array of attributes for given svg that fabric parses
       * @memberOf fabric.util
       * @param {String} type Type of svg element (eg. 'circle')
       * @return {Array} string names of supported attributes
       */
      getSvgAttributes: function(u) {
        var d = [
          "instantiated_by_use",
          "style",
          "id",
          "class"
        ];
        switch (u) {
          case "linearGradient":
            d = d.concat(["x1", "y1", "x2", "y2", "gradientUnits", "gradientTransform"]);
            break;
          case "radialGradient":
            d = d.concat(["gradientUnits", "gradientTransform", "cx", "cy", "r", "fx", "fy", "fr"]);
            break;
          case "stop":
            d = d.concat(["offset", "stop-color", "stop-opacity"]);
            break;
        }
        return d;
      },
      /**
       * Returns object of given namespace
       * @memberOf fabric.util
       * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'
       * @return {Object} Object for given namespace (default fabric)
       */
      resolveNamespace: function(u) {
        if (!u)
          return e;
        var d = u.split("."), m = d.length, p, v = a || e.window;
        for (p = 0; p < m; ++p)
          v = v[d[p]];
        return v;
      },
      /**
       * Loads image element from given url and passes it to a callback
       * @memberOf fabric.util
       * @param {String} url URL representing an image
       * @param {Function} callback Callback; invoked with loaded image
       * @param {*} [context] Context to invoke callback in
       * @param {Object} [crossOrigin] crossOrigin value to set image element to
       */
      loadImage: function(u, d, m, p) {
        if (!u) {
          d && d.call(m, u);
          return;
        }
        var v = e.util.createImage(), b = function() {
          d && d.call(m, v, !1), v = v.onload = v.onerror = null;
        };
        v.onload = b, v.onerror = function() {
          e.log("Error loading " + v.src), d && d.call(m, null, !0), v = v.onload = v.onerror = null;
        }, u.indexOf("data") !== 0 && p !== void 0 && p !== null && (v.crossOrigin = p), u.substring(0, 14) === "data:image/svg" && (v.onload = null, e.util.loadImageInDom(v, b)), v.src = u;
      },
      /**
       * Attaches SVG image with data: URL to the dom
       * @memberOf fabric.util
       * @param {Object} img Image object with data:image/svg src
       * @param {Function} callback Callback; invoked with loaded image
       * @return {Object} DOM element (div containing the SVG image)
       */
      loadImageInDom: function(u, d) {
        var m = e.document.createElement("div");
        m.style.width = m.style.height = "1px", m.style.left = m.style.top = "-100%", m.style.position = "absolute", m.appendChild(u), e.document.querySelector("body").appendChild(m), u.onload = function() {
          d(), m.parentNode.removeChild(m), m = null;
        };
      },
      /**
       * Creates corresponding fabric instances from their object representations
       * @static
       * @memberOf fabric.util
       * @param {Array} objects Objects to enliven
       * @param {Function} callback Callback to invoke when all objects are created
       * @param {String} namespace Namespace to get klass "Class" object from
       * @param {Function} reviver Method for further parsing of object elements,
       * called after each fabric object created.
       */
      enlivenObjects: function(u, d, m, p) {
        u = u || [];
        var v = [], b = 0, y = u.length;
        function w() {
          ++b === y && d && d(v.filter(function(x) {
            return x;
          }));
        }
        if (!y) {
          d && d(v);
          return;
        }
        u.forEach(function(x, _) {
          if (!x || !x.type) {
            w();
            return;
          }
          var S = e.util.getKlass(x.type, m);
          S.fromObject(x, function(k, F) {
            F || (v[_] = k), p && p(x, k, F), w();
          });
        });
      },
      /**
       * Creates corresponding fabric instances residing in an object, e.g. `clipPath`
       * @see {@link fabric.Object.ENLIVEN_PROPS}
       * @param {Object} object
       * @param {Object} [context] assign enlived props to this object (pass null to skip this)
       * @param {(objects:fabric.Object[]) => void} callback
       */
      enlivenObjectEnlivables: function(u, d, m) {
        var p = e.Object.ENLIVEN_PROPS.filter(function(v) {
          return !!u[v];
        });
        e.util.enlivenObjects(p.map(function(v) {
          return u[v];
        }), function(v) {
          var b = {};
          p.forEach(function(y, w) {
            b[y] = v[w], d && (d[y] = v[w]);
          }), m && m(b);
        });
      },
      /**
       * Create and wait for loading of patterns
       * @static
       * @memberOf fabric.util
       * @param {Array} patterns Objects to enliven
       * @param {Function} callback Callback to invoke when all objects are created
       * called after each fabric object created.
       */
      enlivenPatterns: function(u, d) {
        u = u || [];
        function m() {
          ++v === b && d && d(p);
        }
        var p = [], v = 0, b = u.length;
        if (!b) {
          d && d(p);
          return;
        }
        u.forEach(function(y, w) {
          y && y.source ? new e.Pattern(y, function(x) {
            p[w] = x, m();
          }) : (p[w] = y, m());
        });
      },
      /**
       * Groups SVG elements (usually those retrieved from SVG document)
       * @static
       * @memberOf fabric.util
       * @param {Array} elements SVG elements to group
       * @param {Object} [options] Options object
       * @param {String} path Value to set sourcePath to
       * @return {fabric.Object|fabric.Group}
       */
      groupSVGElements: function(u, d, m) {
        var p;
        return u && u.length === 1 ? (typeof m < "u" && (u[0].sourcePath = m), u[0]) : (d && (d.width && d.height ? d.centerPoint = {
          x: d.width / 2,
          y: d.height / 2
        } : (delete d.width, delete d.height)), p = new e.Group(u, d), typeof m < "u" && (p.sourcePath = m), p);
      },
      /**
       * Populates an object with properties of another object
       * @static
       * @memberOf fabric.util
       * @param {Object} source Source object
       * @param {Object} destination Destination object
       * @return {Array} properties Properties names to include
       */
      populateWithProperties: function(u, d, m) {
        if (m && Array.isArray(m))
          for (var p = 0, v = m.length; p < v; p++)
            m[p] in u && (d[m[p]] = u[m[p]]);
      },
      /**
       * Creates canvas element
       * @static
       * @memberOf fabric.util
       * @return {CanvasElement} initialized canvas element
       */
      createCanvasElement: function() {
        return e.document.createElement("canvas");
      },
      /**
       * Creates a canvas element that is a copy of another and is also painted
       * @param {CanvasElement} canvas to copy size and content of
       * @static
       * @memberOf fabric.util
       * @return {CanvasElement} initialized canvas element
       */
      copyCanvasElement: function(u) {
        var d = e.util.createCanvasElement();
        return d.width = u.width, d.height = u.height, d.getContext("2d").drawImage(u, 0, 0), d;
      },
      /**
       * since 2.6.0 moved from canvas instance to utility.
       * @param {CanvasElement} canvasEl to copy size and content of
       * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too
       * @param {Number} quality <= 1 and > 0
       * @static
       * @memberOf fabric.util
       * @return {String} data url
       */
      toDataURL: function(u, d, m) {
        return u.toDataURL("image/" + d, m);
      },
      /**
       * Creates image element (works on client and node)
       * @static
       * @memberOf fabric.util
       * @return {HTMLImageElement} HTML image element
       */
      createImage: function() {
        return e.document.createElement("img");
      },
      /**
       * Multiply matrix A by matrix B to nest transformations
       * @static
       * @memberOf fabric.util
       * @param  {Array} a First transformMatrix
       * @param  {Array} b Second transformMatrix
       * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices
       * @return {Array} The product of the two transform matrices
       */
      multiplyTransformMatrices: function(u, d, m) {
        return [
          u[0] * d[0] + u[2] * d[1],
          u[1] * d[0] + u[3] * d[1],
          u[0] * d[2] + u[2] * d[3],
          u[1] * d[2] + u[3] * d[3],
          m ? 0 : u[0] * d[4] + u[2] * d[5] + u[4],
          m ? 0 : u[1] * d[4] + u[3] * d[5] + u[5]
        ];
      },
      /**
       * Decomposes standard 2x3 matrix into transform components
       * @static
       * @memberOf fabric.util
       * @param  {Array} a transformMatrix
       * @return {Object} Components of transform
       */
      qrDecompose: function(u) {
        var d = c(u[1], u[0]), m = f(u[0], 2) + f(u[1], 2), p = s(m), v = (u[0] * u[3] - u[2] * u[1]) / p, b = c(u[0] * u[2] + u[1] * u[3], m);
        return {
          angle: d / o,
          scaleX: p,
          scaleY: v,
          skewX: b / o,
          skewY: 0,
          translateX: u[4],
          translateY: u[5]
        };
      },
      /**
       * Returns a transform matrix starting from an object of the same kind of
       * the one returned from qrDecompose, useful also if you want to calculate some
       * transformations from an object that is not enlived yet
       * @static
       * @memberOf fabric.util
       * @param  {Object} options
       * @param  {Number} [options.angle] angle in degrees
       * @return {Number[]} transform matrix
       */
      calcRotateMatrix: function(u) {
        if (!u.angle)
          return e.iMatrix.concat();
        var d = e.util.degreesToRadians(u.angle), m = e.util.cos(d), p = e.util.sin(d);
        return [m, p, -p, m, 0, 0];
      },
      /**
       * Returns a transform matrix starting from an object of the same kind of
       * the one returned from qrDecompose, useful also if you want to calculate some
       * transformations from an object that is not enlived yet.
       * is called DimensionsTransformMatrix because those properties are the one that influence
       * the size of the resulting box of the object.
       * @static
       * @memberOf fabric.util
       * @param  {Object} options
       * @param  {Number} [options.scaleX]
       * @param  {Number} [options.scaleY]
       * @param  {Boolean} [options.flipX]
       * @param  {Boolean} [options.flipY]
       * @param  {Number} [options.skewX]
       * @param  {Number} [options.skewY]
       * @return {Number[]} transform matrix
       */
      calcDimensionsMatrix: function(u) {
        var d = typeof u.scaleX > "u" ? 1 : u.scaleX, m = typeof u.scaleY > "u" ? 1 : u.scaleY, p = [
          u.flipX ? -d : d,
          0,
          0,
          u.flipY ? -m : m,
          0,
          0
        ], v = e.util.multiplyTransformMatrices, b = e.util.degreesToRadians;
        return u.skewX && (p = v(
          p,
          [1, 0, Math.tan(b(u.skewX)), 1],
          !0
        )), u.skewY && (p = v(
          p,
          [1, Math.tan(b(u.skewY)), 0, 1],
          !0
        )), p;
      },
      /**
       * Returns a transform matrix starting from an object of the same kind of
       * the one returned from qrDecompose, useful also if you want to calculate some
       * transformations from an object that is not enlived yet
       * @static
       * @memberOf fabric.util
       * @param  {Object} options
       * @param  {Number} [options.angle]
       * @param  {Number} [options.scaleX]
       * @param  {Number} [options.scaleY]
       * @param  {Boolean} [options.flipX]
       * @param  {Boolean} [options.flipY]
       * @param  {Number} [options.skewX]
       * @param  {Number} [options.skewX]
       * @param  {Number} [options.translateX]
       * @param  {Number} [options.translateY]
       * @return {Number[]} transform matrix
       */
      composeMatrix: function(u) {
        var d = [1, 0, 0, 1, u.translateX || 0, u.translateY || 0], m = e.util.multiplyTransformMatrices;
        return u.angle && (d = m(d, e.util.calcRotateMatrix(u))), (u.scaleX !== 1 || u.scaleY !== 1 || u.skewX || u.skewY || u.flipX || u.flipY) && (d = m(d, e.util.calcDimensionsMatrix(u))), d;
      },
      /**
       * reset an object transform state to neutral. Top and left are not accounted for
       * @static
       * @memberOf fabric.util
       * @param  {fabric.Object} target object to transform
       */
      resetObjectTransform: function(u) {
        u.scaleX = 1, u.scaleY = 1, u.skewX = 0, u.skewY = 0, u.flipX = !1, u.flipY = !1, u.rotate(0);
      },
      /**
       * Extract Object transform values
       * @static
       * @memberOf fabric.util
       * @param  {fabric.Object} target object to read from
       * @return {Object} Components of transform
       */
      saveObjectTransform: function(u) {
        return {
          scaleX: u.scaleX,
          scaleY: u.scaleY,
          skewX: u.skewX,
          skewY: u.skewY,
          angle: u.angle,
          left: u.left,
          flipX: u.flipX,
          flipY: u.flipY,
          top: u.top
        };
      },
      /**
       * Returns true if context has transparent pixel
       * at specified location (taking tolerance into account)
       * @param {CanvasRenderingContext2D} ctx context
       * @param {Number} x x coordinate
       * @param {Number} y y coordinate
       * @param {Number} tolerance Tolerance
       */
      isTransparent: function(u, d, m, p) {
        p > 0 && (d > p ? d -= p : d = 0, m > p ? m -= p : m = 0);
        var v = !0, b, y, w = u.getImageData(d, m, p * 2 || 1, p * 2 || 1), x = w.data.length;
        for (b = 3; b < x && (y = w.data[b], v = y <= 0, v !== !1); b += 4)
          ;
        return w = null, v;
      },
      /**
       * Parse preserveAspectRatio attribute from element
       * @param {string} attribute to be parsed
       * @return {Object} an object containing align and meetOrSlice attribute
       */
      parsePreserveAspectRatioAttribute: function(u) {
        var d = "meet", m = "Mid", p = "Mid", v = u.split(" "), b;
        return v && v.length && (d = v.pop(), d !== "meet" && d !== "slice" ? (b = d, d = "meet") : v.length && (b = v.pop())), m = b !== "none" ? b.slice(1, 4) : "none", p = b !== "none" ? b.slice(5, 8) : "none", {
          meetOrSlice: d,
          alignX: m,
          alignY: p
        };
      },
      /**
       * Clear char widths cache for the given font family or all the cache if no
       * fontFamily is specified.
       * Use it if you know you are loading fonts in a lazy way and you are not waiting
       * for custom fonts to load properly when adding text objects to the canvas.
       * If a text object is added when its own font is not loaded yet, you will get wrong
       * measurement and so wrong bounding boxes.
       * After the font cache is cleared, either change the textObject text content or call
       * initDimensions() to trigger a recalculation
       * @memberOf fabric.util
       * @param {String} [fontFamily] font family to clear
       */
      clearFabricFontCache: function(u) {
        u = (u || "").toLowerCase(), u ? e.charWidthsCache[u] && delete e.charWidthsCache[u] : e.charWidthsCache = {};
      },
      /**
       * Given current aspect ratio, determines the max width and height that can
       * respect the total allowed area for the cache.
       * @memberOf fabric.util
       * @param {Number} ar aspect ratio
       * @param {Number} maximumArea Maximum area you want to achieve
       * @return {Object.x} Limited dimensions by X
       * @return {Object.y} Limited dimensions by Y
       */
      limitDimsByArea: function(u, d) {
        var m = Math.sqrt(d * u), p = Math.floor(d / m);
        return { x: Math.floor(m), y: p };
      },
      capValue: function(u, d, m) {
        return Math.max(u, Math.min(d, m));
      },
      /**
       * Finds the scale for the object source to fit inside the object destination,
       * keeping aspect ratio intact.
       * respect the total allowed area for the cache.
       * @memberOf fabric.util
       * @param {Object | fabric.Object} source
       * @param {Number} source.height natural unscaled height of the object
       * @param {Number} source.width natural unscaled width of the object
       * @param {Object | fabric.Object} destination
       * @param {Number} destination.height natural unscaled height of the object
       * @param {Number} destination.width natural unscaled width of the object
       * @return {Number} scale factor to apply to source to fit into destination
       */
      findScaleToFit: function(u, d) {
        return Math.min(d.width / u.width, d.height / u.height);
      },
      /**
       * Finds the scale for the object source to cover entirely the object destination,
       * keeping aspect ratio intact.
       * respect the total allowed area for the cache.
       * @memberOf fabric.util
       * @param {Object | fabric.Object} source
       * @param {Number} source.height natural unscaled height of the object
       * @param {Number} source.width natural unscaled width of the object
       * @param {Object | fabric.Object} destination
       * @param {Number} destination.height natural unscaled height of the object
       * @param {Number} destination.width natural unscaled width of the object
       * @return {Number} scale factor to apply to source to cover destination
       */
      findScaleToCover: function(u, d) {
        return Math.max(d.width / u.width, d.height / u.height);
      },
      /**
       * given an array of 6 number returns something like `"matrix(...numbers)"`
       * @memberOf fabric.util
       * @param {Array} transform an array with 6 numbers
       * @return {String} transform matrix for svg
       * @return {Object.y} Limited dimensions by Y
       */
      matrixToSVG: function(u) {
        return "matrix(" + u.map(function(d) {
          return e.util.toFixed(d, e.Object.NUM_FRACTION_DIGITS);
        }).join(" ") + ")";
      },
      /**
       * given an object and a transform, apply the inverse transform to the object,
       * this is equivalent to remove from that object that transformation, so that
       * added in a space with the removed transform, the object will be the same as before.
       * Removing from an object a transform that scale by 2 is like scaling it by 1/2.
       * Removing from an object a transfrom that rotate by 30deg is like rotating by 30deg
       * in the opposite direction.
       * This util is used to add objects inside transformed groups or nested groups.
       * @memberOf fabric.util
       * @param {fabric.Object} object the object you want to transform
       * @param {Array} transform the destination transform
       */
      removeTransformFromObject: function(u, d) {
        var m = e.util.invertTransform(d), p = e.util.multiplyTransformMatrices(m, u.calcOwnMatrix());
        e.util.applyTransformToObject(u, p);
      },
      /**
       * given an object and a transform, apply the transform to the object.
       * this is equivalent to change the space where the object is drawn.
       * Adding to an object a transform that scale by 2 is like scaling it by 2.
       * This is used when removing an object from an active selection for example.
       * @memberOf fabric.util
       * @param {fabric.Object} object the object you want to transform
       * @param {Array} transform the destination transform
       */
      addTransformToObject: function(u, d) {
        e.util.applyTransformToObject(
          u,
          e.util.multiplyTransformMatrices(d, u.calcOwnMatrix())
        );
      },
      /**
       * discard an object transform state and apply the one from the matrix.
       * @memberOf fabric.util
       * @param {fabric.Object} object the object you want to transform
       * @param {Array} transform the destination transform
       */
      applyTransformToObject: function(u, d) {
        var m = e.util.qrDecompose(d), p = new e.Point(m.translateX, m.translateY);
        u.flipX = !1, u.flipY = !1, u.set("scaleX", m.scaleX), u.set("scaleY", m.scaleY), u.skewX = m.skewX, u.skewY = m.skewY, u.angle = m.angle, u.setPositionByOrigin(p, "center", "center");
      },
      /**
       * given a width and height, return the size of the bounding box
       * that can contains the box with width/height with applied transform
       * described in options.
       * Use to calculate the boxes around objects for controls.
       * @memberOf fabric.util
       * @param {Number} width
       * @param {Number} height
       * @param {Object} options
       * @param {Number} options.scaleX
       * @param {Number} options.scaleY
       * @param {Number} options.skewX
       * @param {Number} options.skewY
       * @return {Object.x} width of containing
       * @return {Object.y} height of containing
       */
      sizeAfterTransform: function(u, d, m) {
        var p = u / 2, v = d / 2, b = [
          {
            x: -p,
            y: -v
          },
          {
            x: p,
            y: -v
          },
          {
            x: -p,
            y: v
          },
          {
            x: p,
            y: v
          }
        ], y = e.util.calcDimensionsMatrix(m), w = e.util.makeBoundingBoxFromPoints(b, y);
        return {
          x: w.width,
          y: w.height
        };
      },
      /**
       * Merges 2 clip paths into one visually equal clip path
       *
       * **IMPORTANT**:\
       * Does **NOT** clone the arguments, clone them proir if necessary.
       *
       * Creates a wrapper (group) that contains one clip path and is clipped by the other so content is kept where both overlap.
       * Use this method if both the clip paths may have nested clip paths of their own, so assigning one to the other's clip path property is not possible.
       *
       * In order to handle the `inverted` property we follow logic described in the following cases:\
       * **(1)** both clip paths are inverted - the clip paths pass the inverted prop to the wrapper and loose it themselves.\
       * **(2)** one is inverted and the other isn't - the wrapper shouldn't become inverted and the inverted clip path must clip the non inverted one to produce an identical visual effect.\
       * **(3)** both clip paths are not inverted - wrapper and clip paths remain unchanged.
       *
       * @memberOf fabric.util
       * @param {fabric.Object} c1
       * @param {fabric.Object} c2
       * @returns {fabric.Object} merged clip path
       */
      mergeClipPaths: function(u, d) {
        var m = u, p = d;
        m.inverted && !p.inverted && (m = d, p = u), e.util.applyTransformToObject(
          p,
          e.util.multiplyTransformMatrices(
            e.util.invertTransform(m.calcTransformMatrix()),
            p.calcTransformMatrix()
          )
        );
        var v = m.inverted && p.inverted;
        return v && (m.inverted = p.inverted = !1), new e.Group([m], { clipPath: p, inverted: v });
      },
      /**
       * @memberOf fabric.util
       * @param {Object} prevStyle first style to compare
       * @param {Object} thisStyle second style to compare
       * @param {boolean} forTextSpans whether to check overline, underline, and line-through properties
       * @return {boolean} true if the style changed
       */
      hasStyleChanged: function(u, d, m) {
        return m = m || !1, u.fill !== d.fill || u.stroke !== d.stroke || u.strokeWidth !== d.strokeWidth || u.fontSize !== d.fontSize || u.fontFamily !== d.fontFamily || u.fontWeight !== d.fontWeight || u.fontStyle !== d.fontStyle || u.textBackgroundColor !== d.textBackgroundColor || u.deltaY !== d.deltaY || m && (u.overline !== d.overline || u.underline !== d.underline || u.linethrough !== d.linethrough);
      },
      /**
       * Returns the array form of a text object's inline styles property with styles grouped in ranges
       * rather than per character. This format is less verbose, and is better suited for storage
       * so it is used in serialization (not during runtime).
       * @memberOf fabric.util
       * @param {object} styles per character styles for a text object
       * @param {String} text the text string that the styles are applied to
       * @return {{start: number, end: number, style: object}[]}
       */
      stylesToArray: function(m, d) {
        for (var m = e.util.object.clone(m, !0), p = d.split(`
`), v = -1, b = {}, y = [], w = 0; w < p.length; w++) {
          if (!m[w]) {
            v += p[w].length;
            continue;
          }
          for (var x = 0; x < p[w].length; x++) {
            v++;
            var _ = m[w][x];
            if (_ && Object.keys(_).length > 0) {
              var S = e.util.hasStyleChanged(b, _, !0);
              S ? y.push({
                start: v,
                end: v + 1,
                style: _
              }) : y[y.length - 1].end++;
            }
            b = _ || {};
          }
        }
        return y;
      },
      /**
       * Returns the object form of the styles property with styles that are assigned per
       * character rather than grouped by range. This format is more verbose, and is
       * only used during runtime (not for serialization/storage)
       * @memberOf fabric.util
       * @param {Array} styles the serialized form of a text object's styles
       * @param {String} text the text string that the styles are applied to
       * @return {Object}
       */
      stylesFromArray: function(u, d) {
        if (!Array.isArray(u))
          return u;
        for (var m = d.split(`
`), p = -1, v = 0, b = {}, y = 0; y < m.length; y++)
          for (var w = 0; w < m[y].length; w++)
            p++, u[v] && u[v].start <= p && p < u[v].end && (b[y] = b[y] || {}, b[y][w] = Object.assign({}, u[v].style), p === u[v].end - 1 && v++);
        return b;
      }
    };
  }(t), function() {
    var a = Array.prototype.join, s = {
      m: 2,
      l: 2,
      h: 1,
      v: 1,
      c: 6,
      s: 4,
      q: 4,
      t: 2,
      a: 7
    }, c = {
      m: "l",
      M: "L"
    };
    function f(T, P, D, M, $, A, E, R, N, H, V) {
      var Z = e.util.cos(T), ee = e.util.sin(T), ue = e.util.cos(P), W = e.util.sin(P), B = D * $ * ue - M * A * W + E, X = M * $ * ue + D * A * W + R, Q = H + N * (-D * $ * ee - M * A * Z), z = V + N * (-M * $ * ee + D * A * Z), Y = B + N * (D * $ * W + M * A * ue), ae = X + N * (M * $ * W - D * A * ue);
      return [
        "C",
        Q,
        z,
        Y,
        ae,
        B,
        X
      ];
    }
    function o(T, P, D, M, $, A, E) {
      var R = Math.PI, N = E * R / 180, H = e.util.sin(N), V = e.util.cos(N), Z = 0, ee = 0;
      D = Math.abs(D), M = Math.abs(M);
      var ue = -V * T * 0.5 - H * P * 0.5, W = -V * P * 0.5 + H * T * 0.5, B = D * D, X = M * M, Q = W * W, z = ue * ue, Y = B * X - B * Q - X * z, ae = 0;
      if (Y < 0) {
        var ye = Math.sqrt(1 - Y / (B * X));
        D *= ye, M *= ye;
      } else
        ae = ($ === A ? -1 : 1) * Math.sqrt(Y / (B * Q + X * z));
      var me = ae * D * W / M, J = -ae * M * ue / D, pe = V * me - H * J + T * 0.5, _e = H * me + V * J + P * 0.5, De = h(1, 0, (ue - me) / D, (W - J) / M), je = h((ue - me) / D, (W - J) / M, (-ue - me) / D, (-W - J) / M);
      A === 0 && je > 0 ? je -= 2 * R : A === 1 && je < 0 && (je += 2 * R);
      for (var Le = Math.ceil(Math.abs(je / R * 2)), mt = [], Ke = je / Le, nn = 8 / 3 * Math.sin(Ke / 4) * Math.sin(Ke / 4) / Math.sin(Ke / 2), Ri = De + Ke, Jt = 0; Jt < Le; Jt++)
        mt[Jt] = f(De, Ri, V, H, D, M, pe, _e, nn, Z, ee), Z = mt[Jt][5], ee = mt[Jt][6], De = Ri, Ri += Ke;
      return mt;
    }
    function h(T, P, D, M) {
      var $ = Math.atan2(P, T), A = Math.atan2(M, D);
      return A >= $ ? A - $ : 2 * Math.PI - ($ - A);
    }
    function u(T, P, D, M, $, A, E, R) {
      var N;
      if (e.cachesBoundsOfCurve && (N = a.call(arguments), e.boundsOfCurveCache[N]))
        return e.boundsOfCurveCache[N];
      var H = Math.sqrt, V = Math.min, Z = Math.max, ee = Math.abs, ue = [], W = [[], []], B, X, Q, z, Y, ae, ye, me;
      X = 6 * T - 12 * D + 6 * $, B = -3 * T + 9 * D - 9 * $ + 3 * E, Q = 3 * D - 3 * T;
      for (var J = 0; J < 2; ++J) {
        if (J > 0 && (X = 6 * P - 12 * M + 6 * A, B = -3 * P + 9 * M - 9 * A + 3 * R, Q = 3 * M - 3 * P), ee(B) < 1e-12) {
          if (ee(X) < 1e-12)
            continue;
          z = -Q / X, 0 < z && z < 1 && ue.push(z);
          continue;
        }
        ye = X * X - 4 * Q * B, !(ye < 0) && (me = H(ye), Y = (-X + me) / (2 * B), 0 < Y && Y < 1 && ue.push(Y), ae = (-X - me) / (2 * B), 0 < ae && ae < 1 && ue.push(ae));
      }
      for (var pe, _e, De = ue.length, je = De, Le; De--; )
        z = ue[De], Le = 1 - z, pe = Le * Le * Le * T + 3 * Le * Le * z * D + 3 * Le * z * z * $ + z * z * z * E, W[0][De] = pe, _e = Le * Le * Le * P + 3 * Le * Le * z * M + 3 * Le * z * z * A + z * z * z * R, W[1][De] = _e;
      W[0][je] = T, W[1][je] = P, W[0][je + 1] = E, W[1][je + 1] = R;
      var mt = [
        {
          x: V.apply(null, W[0]),
          y: V.apply(null, W[1])
        },
        {
          x: Z.apply(null, W[0]),
          y: Z.apply(null, W[1])
        }
      ];
      return e.cachesBoundsOfCurve && (e.boundsOfCurveCache[N] = mt), mt;
    }
    function d(T, P, D) {
      for (var M = D[1], $ = D[2], A = D[3], E = D[4], R = D[5], N = D[6], H = D[7], V = o(N - T, H - P, M, $, E, R, A), Z = 0, ee = V.length; Z < ee; Z++)
        V[Z][1] += T, V[Z][2] += P, V[Z][3] += T, V[Z][4] += P, V[Z][5] += T, V[Z][6] += P;
      return V;
    }
    function m(T) {
      var P = 0, D = 0, M = T.length, $ = 0, A = 0, E, R, N, H = [], V, Z, ee;
      for (R = 0; R < M; ++R) {
        switch (N = !1, E = T[R].slice(0), E[0]) {
          case "l":
            E[0] = "L", E[1] += P, E[2] += D;
          case "L":
            P = E[1], D = E[2];
            break;
          case "h":
            E[1] += P;
          case "H":
            E[0] = "L", E[2] = D, P = E[1];
            break;
          case "v":
            E[1] += D;
          case "V":
            E[0] = "L", D = E[1], E[1] = P, E[2] = D;
            break;
          case "m":
            E[0] = "M", E[1] += P, E[2] += D;
          case "M":
            P = E[1], D = E[2], $ = E[1], A = E[2];
            break;
          case "c":
            E[0] = "C", E[1] += P, E[2] += D, E[3] += P, E[4] += D, E[5] += P, E[6] += D;
          case "C":
            Z = E[3], ee = E[4], P = E[5], D = E[6];
            break;
          case "s":
            E[0] = "S", E[1] += P, E[2] += D, E[3] += P, E[4] += D;
          case "S":
            V === "C" ? (Z = 2 * P - Z, ee = 2 * D - ee) : (Z = P, ee = D), P = E[3], D = E[4], E[0] = "C", E[5] = E[3], E[6] = E[4], E[3] = E[1], E[4] = E[2], E[1] = Z, E[2] = ee, Z = E[3], ee = E[4];
            break;
          case "q":
            E[0] = "Q", E[1] += P, E[2] += D, E[3] += P, E[4] += D;
          case "Q":
            Z = E[1], ee = E[2], P = E[3], D = E[4];
            break;
          case "t":
            E[0] = "T", E[1] += P, E[2] += D;
          case "T":
            V === "Q" ? (Z = 2 * P - Z, ee = 2 * D - ee) : (Z = P, ee = D), E[0] = "Q", P = E[1], D = E[2], E[1] = Z, E[2] = ee, E[3] = P, E[4] = D;
            break;
          case "a":
            E[0] = "A", E[6] += P, E[7] += D;
          case "A":
            N = !0, H = H.concat(d(P, D, E)), P = E[6], D = E[7];
            break;
          case "z":
          case "Z":
            P = $, D = A;
            break;
        }
        N || H.push(E), V = E[0];
      }
      return H;
    }
    function p(T, P, D, M) {
      return Math.sqrt((D - T) * (D - T) + (M - P) * (M - P));
    }
    function v(T) {
      return T * T * T;
    }
    function b(T) {
      return 3 * T * T * (1 - T);
    }
    function y(T) {
      return 3 * T * (1 - T) * (1 - T);
    }
    function w(T) {
      return (1 - T) * (1 - T) * (1 - T);
    }
    function x(T, P, D, M, $, A, E, R) {
      return function(N) {
        var H = v(N), V = b(N), Z = y(N), ee = w(N);
        return {
          x: E * H + $ * V + D * Z + T * ee,
          y: R * H + A * V + M * Z + P * ee
        };
      };
    }
    function _(T, P, D, M, $, A, E, R) {
      return function(N) {
        var H = 1 - N, V = 3 * H * H * (D - T) + 6 * H * N * ($ - D) + 3 * N * N * (E - $), Z = 3 * H * H * (M - P) + 6 * H * N * (A - M) + 3 * N * N * (R - A);
        return Math.atan2(Z, V);
      };
    }
    function S(T) {
      return T * T;
    }
    function k(T) {
      return 2 * T * (1 - T);
    }
    function F(T) {
      return (1 - T) * (1 - T);
    }
    function L(T, P, D, M, $, A) {
      return function(E) {
        var R = S(E), N = k(E), H = F(E);
        return {
          x: $ * R + D * N + T * H,
          y: A * R + M * N + P * H
        };
      };
    }
    function j(T, P, D, M, $, A) {
      return function(E) {
        var R = 1 - E, N = 2 * R * (D - T) + 2 * E * ($ - D), H = 2 * R * (M - P) + 2 * E * (A - M);
        return Math.atan2(H, N);
      };
    }
    function G(T, P, D) {
      var M = { x: P, y: D }, $, A = 0, E;
      for (E = 1; E <= 100; E += 1)
        $ = T(E / 100), A += p(M.x, M.y, $.x, $.y), M = $;
      return A;
    }
    function te(T, P) {
      for (var D = 0, M = 0, $ = T.iterator, A = { x: T.x, y: T.y }, E, R, N = 0.01, H = T.angleFinder, V; M < P && N > 1e-4; )
        E = $(D), V = D, R = p(A.x, A.y, E.x, E.y), R + M > P ? (D -= N, N /= 2) : (A = E, D += N, M += R);
      return E.angle = H(V), E;
    }
    function U(T) {
      for (var P = 0, D = T.length, M, $ = 0, A = 0, E = 0, R = 0, N = [], H, V, Z, ee = 0; ee < D; ee++) {
        switch (M = T[ee], V = {
          x: $,
          y: A,
          command: M[0]
        }, M[0]) {
          case "M":
            V.length = 0, E = $ = M[1], R = A = M[2];
            break;
          case "L":
            V.length = p($, A, M[1], M[2]), $ = M[1], A = M[2];
            break;
          case "C":
            H = x(
              $,
              A,
              M[1],
              M[2],
              M[3],
              M[4],
              M[5],
              M[6]
            ), Z = _(
              $,
              A,
              M[1],
              M[2],
              M[3],
              M[4],
              M[5],
              M[6]
            ), V.iterator = H, V.angleFinder = Z, V.length = G(H, $, A), $ = M[5], A = M[6];
            break;
          case "Q":
            H = L(
              $,
              A,
              M[1],
              M[2],
              M[3],
              M[4]
            ), Z = j(
              $,
              A,
              M[1],
              M[2],
              M[3],
              M[4]
            ), V.iterator = H, V.angleFinder = Z, V.length = G(H, $, A), $ = M[3], A = M[4];
            break;
          case "Z":
          case "z":
            V.destX = E, V.destY = R, V.length = p($, A, E, R), $ = E, A = R;
            break;
        }
        P += V.length, N.push(V);
      }
      return N.push({ length: P, x: $, y: A }), N;
    }
    function K(T, P, D) {
      D || (D = U(T));
      for (var M = 0; P - D[M].length > 0 && M < D.length - 2; )
        P -= D[M].length, M++;
      var $ = D[M], A = P / $.length, E = $.command, R = T[M], N;
      switch (E) {
        case "M":
          return { x: $.x, y: $.y, angle: 0 };
        case "Z":
        case "z":
          return N = new e.Point($.x, $.y).lerp(
            new e.Point($.destX, $.destY),
            A
          ), N.angle = Math.atan2($.destY - $.y, $.destX - $.x), N;
        case "L":
          return N = new e.Point($.x, $.y).lerp(
            new e.Point(R[1], R[2]),
            A
          ), N.angle = Math.atan2(R[2] - $.y, R[1] - $.x), N;
        case "C":
          return te($, P);
        case "Q":
          return te($, P);
      }
    }
    function re(T) {
      var P = [], D = [], M, $, A = e.rePathCommand, E = "[-+]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][-+]?\\d+)?\\s*", R = "(" + E + ")" + e.commaWsp, N = "([01])" + e.commaWsp + "?", H = R + "?" + R + "?" + R + N + N + R + "?(" + E + ")", V = new RegExp(H, "g"), Z, ee, ue;
      if (!T || !T.match)
        return P;
      ue = T.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);
      for (var W = 0, B, X = ue.length; W < X; W++) {
        M = ue[W], ee = M.slice(1).trim(), D.length = 0;
        var Q = M.charAt(0);
        if (B = [Q], Q.toLowerCase() === "a")
          for (var z; z = V.exec(ee); )
            for (var Y = 1; Y < z.length; Y++)
              D.push(z[Y]);
        else
          for (; Z = A.exec(ee); )
            D.push(Z[0]);
        for (var Y = 0, ae = D.length; Y < ae; Y++)
          $ = parseFloat(D[Y]), isNaN($) || B.push($);
        var ye = s[Q.toLowerCase()], me = c[Q] || Q;
        if (B.length - 1 > ye)
          for (var J = 1, pe = B.length; J < pe; J += ye)
            P.push([Q].concat(B.slice(J, J + ye))), Q = me;
        else
          P.push(B);
      }
      return P;
    }
    function ne(T, P) {
      var D = [], M, $ = new e.Point(T[0].x, T[0].y), A = new e.Point(T[1].x, T[1].y), E = T.length, R = 1, N = 0, H = E > 2;
      for (P = P || 0, H && (R = T[2].x < A.x ? -1 : T[2].x === A.x ? 0 : 1, N = T[2].y < A.y ? -1 : T[2].y === A.y ? 0 : 1), D.push(["M", $.x - R * P, $.y - N * P]), M = 1; M < E; M++) {
        if (!$.eq(A)) {
          var V = $.midPointFrom(A);
          D.push(["Q", $.x, $.y, V.x, V.y]);
        }
        $ = T[M], M + 1 < T.length && (A = T[M + 1]);
      }
      return H && (R = $.x > T[M - 2].x ? 1 : $.x === T[M - 2].x ? 0 : -1, N = $.y > T[M - 2].y ? 1 : $.y === T[M - 2].y ? 0 : -1), D.push(["L", $.x + R * P, $.y + N * P]), D;
    }
    function se(T, P, D) {
      return D && (P = e.util.multiplyTransformMatrices(
        P,
        [1, 0, 0, 1, -D.x, -D.y]
      )), T.map(function(M) {
        for (var $ = M.slice(0), A = {}, E = 1; E < M.length - 1; E += 2)
          A.x = M[E], A.y = M[E + 1], A = e.util.transformPoint(A, P), $[E] = A.x, $[E + 1] = A.y;
        return $;
      });
    }
    e.util.joinPath = function(T) {
      return T.map(function(P) {
        return P.join(" ");
      }).join(" ");
    }, e.util.parsePath = re, e.util.makePathSimpler = m, e.util.getSmoothPathFromPoints = ne, e.util.getPathSegmentsInfo = U, e.util.getBoundsOfCurve = u, e.util.getPointOnPath = K, e.util.transformPath = se;
  }(), function() {
    var a = Array.prototype.slice;
    function s(u, d) {
      for (var m = a.call(arguments, 2), p = [], v = 0, b = u.length; v < b; v++)
        p[v] = m.length ? u[v][d].apply(u[v], m) : u[v][d].call(u[v]);
      return p;
    }
    function c(u, d) {
      return h(u, d, function(m, p) {
        return m >= p;
      });
    }
    function f(u, d) {
      return h(u, d, function(m, p) {
        return m < p;
      });
    }
    function o(u, d) {
      for (var m = u.length; m--; )
        u[m] = d;
      return u;
    }
    function h(u, d, m) {
      if (!(!u || u.length === 0)) {
        var p = u.length - 1, v = d ? u[p][d] : u[p];
        if (d)
          for (; p--; )
            m(u[p][d], v) && (v = u[p][d]);
        else
          for (; p--; )
            m(u[p], v) && (v = u[p]);
        return v;
      }
    }
    e.util.array = {
      fill: o,
      invoke: s,
      min: f,
      max: c
    };
  }(), function() {
    function a(c, f, o) {
      if (o)
        if (!e.isLikelyNode && f instanceof Element)
          c = f;
        else if (f instanceof Array) {
          c = [];
          for (var h = 0, u = f.length; h < u; h++)
            c[h] = a({}, f[h], o);
        } else if (f && typeof f == "object")
          for (var d in f)
            d === "canvas" || d === "group" ? c[d] = null : f.hasOwnProperty(d) && (c[d] = a({}, f[d], o));
        else
          c = f;
      else
        for (var d in f)
          c[d] = f[d];
      return c;
    }
    function s(c, f) {
      return a({}, c, f);
    }
    e.util.object = {
      extend: a,
      clone: s
    }, e.util.object.extend(e.util, e.Observable);
  }(), function() {
    function a(h) {
      return h.replace(/-+(.)?/g, function(u, d) {
        return d ? d.toUpperCase() : "";
      });
    }
    function s(h, u) {
      return h.charAt(0).toUpperCase() + (u ? h.slice(1) : h.slice(1).toLowerCase());
    }
    function c(h) {
      return h.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&apos;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
    }
    function f(h) {
      var u = 0, d, m = [];
      for (u = 0, d; u < h.length; u++)
        (d = o(h, u)) !== !1 && m.push(d);
      return m;
    }
    function o(h, u) {
      var d = h.charCodeAt(u);
      if (isNaN(d))
        return "";
      if (d < 55296 || d > 57343)
        return h.charAt(u);
      if (55296 <= d && d <= 56319) {
        if (h.length <= u + 1)
          throw "High surrogate without following low surrogate";
        var m = h.charCodeAt(u + 1);
        if (56320 > m || m > 57343)
          throw "High surrogate without following low surrogate";
        return h.charAt(u) + h.charAt(u + 1);
      }
      if (u === 0)
        throw "Low surrogate without preceding high surrogate";
      var p = h.charCodeAt(u - 1);
      if (55296 > p || p > 56319)
        throw "Low surrogate without preceding high surrogate";
      return !1;
    }
    e.util.string = {
      camelize: a,
      capitalize: s,
      escapeXml: c,
      graphemeSplit: f
    };
  }(), function() {
    var a = Array.prototype.slice, s = function() {
    }, c = function() {
      for (var d in { toString: 1 })
        if (d === "toString")
          return !1;
      return !0;
    }(), f = function(d, m, p) {
      for (var v in m)
        v in d.prototype && typeof d.prototype[v] == "function" && (m[v] + "").indexOf("callSuper") > -1 ? d.prototype[v] = function(b) {
          return function() {
            var y = this.constructor.superclass;
            this.constructor.superclass = p;
            var w = m[b].apply(this, arguments);
            if (this.constructor.superclass = y, b !== "initialize")
              return w;
          };
        }(v) : d.prototype[v] = m[v], c && (m.toString !== Object.prototype.toString && (d.prototype.toString = m.toString), m.valueOf !== Object.prototype.valueOf && (d.prototype.valueOf = m.valueOf));
    };
    function o() {
    }
    function h(d) {
      for (var m = null, p = this; p.constructor.superclass; ) {
        var v = p.constructor.superclass.prototype[d];
        if (p[d] !== v) {
          m = v;
          break;
        }
        p = p.constructor.superclass.prototype;
      }
      return m ? arguments.length > 1 ? m.apply(this, a.call(arguments, 1)) : m.call(this) : console.log("tried to callSuper " + d + ", method not found in prototype chain", this);
    }
    function u() {
      var d = null, m = a.call(arguments, 0);
      typeof m[0] == "function" && (d = m.shift());
      function p() {
        this.initialize.apply(this, arguments);
      }
      p.superclass = d, p.subclasses = [], d && (o.prototype = d.prototype, p.prototype = new o(), d.subclasses.push(p));
      for (var v = 0, b = m.length; v < b; v++)
        f(p, m[v], d);
      return p.prototype.initialize || (p.prototype.initialize = s), p.prototype.constructor = p, p.prototype.callSuper = h, p;
    }
    e.util.createClass = u;
  }(), function() {
    var a = !!e.document.createElement("div").attachEvent, s = ["touchstart", "touchmove", "touchend"];
    e.util.addListener = function(f, o, h, u) {
      f && f.addEventListener(o, h, a ? !1 : u);
    }, e.util.removeListener = function(f, o, h, u) {
      f && f.removeEventListener(o, h, a ? !1 : u);
    };
    function c(f) {
      var o = f.changedTouches;
      return o && o[0] ? o[0] : f;
    }
    e.util.getPointer = function(f) {
      var o = f.target, h = e.util.getScrollLeftTop(o), u = c(f);
      return {
        x: u.clientX + h.left,
        y: u.clientY + h.top
      };
    }, e.util.isTouchEvent = function(f) {
      return s.indexOf(f.type) > -1 || f.pointerType === "touch";
    };
  }(), function() {
    function a(u, d) {
      var m = u.style;
      if (!m)
        return u;
      if (typeof d == "string")
        return u.style.cssText += ";" + d, d.indexOf("opacity") > -1 ? h(u, d.match(/opacity:\s*(\d?\.?\d*)/)[1]) : u;
      for (var p in d)
        if (p === "opacity")
          h(u, d[p]);
        else {
          var v = p === "float" || p === "cssFloat" ? typeof m.styleFloat > "u" ? "cssFloat" : "styleFloat" : p;
          m.setProperty(v, d[p]);
        }
      return u;
    }
    var s = e.document.createElement("div"), c = typeof s.style.opacity == "string", f = typeof s.style.filter == "string", o = /alpha\s*\(\s*opacity\s*=\s*([^\)]+)\)/, h = function(u) {
      return u;
    };
    c ? h = function(u, d) {
      return u.style.opacity = d, u;
    } : f && (h = function(u, d) {
      var m = u.style;
      return u.currentStyle && !u.currentStyle.hasLayout && (m.zoom = 1), o.test(m.filter) ? (d = d >= 0.9999 ? "" : "alpha(opacity=" + d * 100 + ")", m.filter = m.filter.replace(o, d)) : m.filter += " alpha(opacity=" + d * 100 + ")", u;
    }), e.util.setStyle = a;
  }(), function() {
    var a = Array.prototype.slice;
    function s(w) {
      return typeof w == "string" ? e.document.getElementById(w) : w;
    }
    var c, f = function(w) {
      return a.call(w, 0);
    };
    try {
      c = f(e.document.childNodes) instanceof Array;
    } catch {
    }
    c || (f = function(w) {
      for (var x = new Array(w.length), _ = w.length; _--; )
        x[_] = w[_];
      return x;
    });
    function o(w, x) {
      var _ = e.document.createElement(w);
      for (var S in x)
        S === "class" ? _.className = x[S] : S === "for" ? _.htmlFor = x[S] : _.setAttribute(S, x[S]);
      return _;
    }
    function h(w, x) {
      w && (" " + w.className + " ").indexOf(" " + x + " ") === -1 && (w.className += (w.className ? " " : "") + x);
    }
    function u(w, x, _) {
      return typeof x == "string" && (x = o(x, _)), w.parentNode && w.parentNode.replaceChild(x, w), x.appendChild(w), x;
    }
    function d(w) {
      for (var x = 0, _ = 0, S = e.document.documentElement, k = e.document.body || {
        scrollLeft: 0,
        scrollTop: 0
      }; w && (w.parentNode || w.host) && (w = w.parentNode || w.host, w === e.document ? (x = k.scrollLeft || S.scrollLeft || 0, _ = k.scrollTop || S.scrollTop || 0) : (x += w.scrollLeft || 0, _ += w.scrollTop || 0), !(w.nodeType === 1 && w.style.position === "fixed")); )
        ;
      return { left: x, top: _ };
    }
    function m(w) {
      var x, _ = w && w.ownerDocument, S = { left: 0, top: 0 }, k = { left: 0, top: 0 }, F, L = {
        borderLeftWidth: "left",
        borderTopWidth: "top",
        paddingLeft: "left",
        paddingTop: "top"
      };
      if (!_)
        return k;
      for (var j in L)
        k[L[j]] += parseInt(p(w, j), 10) || 0;
      return x = _.documentElement, typeof w.getBoundingClientRect < "u" && (S = w.getBoundingClientRect()), F = d(w), {
        left: S.left + F.left - (x.clientLeft || 0) + k.left,
        top: S.top + F.top - (x.clientTop || 0) + k.top
      };
    }
    var p;
    e.document.defaultView && e.document.defaultView.getComputedStyle ? p = function(w, x) {
      var _ = e.document.defaultView.getComputedStyle(w, null);
      return _ ? _[x] : void 0;
    } : p = function(w, x) {
      var _ = w.style[x];
      return !_ && w.currentStyle && (_ = w.currentStyle[x]), _;
    }, function() {
      var w = e.document.documentElement.style, x = "userSelect" in w ? "userSelect" : "MozUserSelect" in w ? "MozUserSelect" : "WebkitUserSelect" in w ? "WebkitUserSelect" : "KhtmlUserSelect" in w ? "KhtmlUserSelect" : "";
      function _(k) {
        return typeof k.onselectstart < "u" && (k.onselectstart = e.util.falseFunction), x ? k.style[x] = "none" : typeof k.unselectable == "string" && (k.unselectable = "on"), k;
      }
      function S(k) {
        return typeof k.onselectstart < "u" && (k.onselectstart = null), x ? k.style[x] = "" : typeof k.unselectable == "string" && (k.unselectable = ""), k;
      }
      e.util.makeElementUnselectable = _, e.util.makeElementSelectable = S;
    }();
    function v(w) {
      var x = e.jsdomImplForWrapper(w);
      return x._canvas || x._image;
    }
    function b(w) {
      if (e.isLikelyNode) {
        var x = e.jsdomImplForWrapper(w);
        x && (x._image = null, x._canvas = null, x._currentSrc = null, x._attributes = null, x._classList = null);
      }
    }
    function y(w, x) {
      w.imageSmoothingEnabled = w.imageSmoothingEnabled || w.webkitImageSmoothingEnabled || w.mozImageSmoothingEnabled || w.msImageSmoothingEnabled || w.oImageSmoothingEnabled, w.imageSmoothingEnabled = x;
    }
    e.util.setImageSmoothing = y, e.util.getById = s, e.util.toArray = f, e.util.addClass = h, e.util.makeElement = o, e.util.wrapElement = u, e.util.getScrollLeftTop = d, e.util.getElementOffset = m, e.util.getNodeCanvas = v, e.util.cleanUpJsdomNode = b;
  }(), function() {
    function a(f, o) {
      return f + (/\?/.test(f) ? "&" : "?") + o;
    }
    function s() {
    }
    function c(f, o) {
      o || (o = {});
      var h = o.method ? o.method.toUpperCase() : "GET", u = o.onComplete || function() {
      }, d = new e.window.XMLHttpRequest(), m = o.body || o.parameters;
      return d.onreadystatechange = function() {
        d.readyState === 4 && (u(d), d.onreadystatechange = s);
      }, h === "GET" && (m = null, typeof o.parameters == "string" && (f = a(f, o.parameters))), d.open(h, f, !0), (h === "POST" || h === "PUT") && d.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), d.send(m), d;
    }
    e.util.request = c;
  }(), e.log = console.log, e.warn = console.warn, function() {
    var a = e.util.object.extend, s = e.util.object.clone, c = [];
    e.util.object.extend(c, {
      /**
       * cancel all running animations at the next requestAnimFrame
       * @returns {AnimationContext[]}
       */
      cancelAll: function() {
        var v = this.splice(0);
        return v.forEach(function(b) {
          b.cancel();
        }), v;
      },
      /**
       * cancel all running animations attached to canvas at the next requestAnimFrame
       * @param {fabric.Canvas} canvas
       * @returns {AnimationContext[]}
       */
      cancelByCanvas: function(v) {
        if (!v)
          return [];
        var b = this.filter(function(y) {
          return typeof y.target == "object" && y.target.canvas === v;
        });
        return b.forEach(function(y) {
          y.cancel();
        }), b;
      },
      /**
       * cancel all running animations for target at the next requestAnimFrame
       * @param {*} target
       * @returns {AnimationContext[]}
       */
      cancelByTarget: function(v) {
        var b = this.findAnimationsByTarget(v);
        return b.forEach(function(y) {
          y.cancel();
        }), b;
      },
      /**
       *
       * @param {CancelFunction} cancelFunc the function returned by animate
       * @returns {number}
       */
      findAnimationIndex: function(v) {
        return this.indexOf(this.findAnimation(v));
      },
      /**
       *
       * @param {CancelFunction} cancelFunc the function returned by animate
       * @returns {AnimationContext | undefined} animation's options object
       */
      findAnimation: function(v) {
        return this.find(function(b) {
          return b.cancel === v;
        });
      },
      /**
       *
       * @param {*} target the object that is assigned to the target property of the animation context
       * @returns {AnimationContext[]} array of animation options object associated with target
       */
      findAnimationsByTarget: function(v) {
        return v ? this.filter(function(b) {
          return b.target === v;
        }) : [];
      }
    });
    function f() {
      return !1;
    }
    function o(v, b, y, w) {
      return -y * Math.cos(v / w * (Math.PI / 2)) + y + b;
    }
    function h(v) {
      v || (v = {});
      var b = !1, y, w = function() {
        var x = e.runningAnimations.indexOf(y);
        return x > -1 && e.runningAnimations.splice(x, 1)[0];
      };
      return y = a(s(v), {
        cancel: function() {
          return b = !0, w();
        },
        currentValue: "startValue" in v ? v.startValue : 0,
        completionRate: 0,
        durationRate: 0
      }), e.runningAnimations.push(y), m(function(x) {
        var _ = x || +/* @__PURE__ */ new Date(), S = v.duration || 500, k = _ + S, F, L = v.onChange || f, j = v.abort || f, G = v.onComplete || f, te = v.easing || o, U = "startValue" in v ? v.startValue.length > 0 : !1, K = "startValue" in v ? v.startValue : 0, re = "endValue" in v ? v.endValue : 100, ne = v.byValue || (U ? K.map(function(se, T) {
          return re[T] - K[T];
        }) : re - K);
        v.onStart && v.onStart(), function se(T) {
          F = T || +/* @__PURE__ */ new Date();
          var P = F > k ? S : F - _, D = P / S, M = U ? K.map(function(A, E) {
            return te(P, K[E], ne[E], S);
          }) : te(P, K, ne, S), $ = Math.abs(U ? (M[0] - K[0]) / ne[0] : (M - K) / ne);
          if (y.currentValue = U ? M.slice() : M, y.completionRate = $, y.durationRate = D, !b) {
            if (j(M, $, D)) {
              w();
              return;
            }
            if (F > k) {
              y.currentValue = U ? re.slice() : re, y.completionRate = 1, y.durationRate = 1, L(U ? re.slice() : re, 1, 1), G(re, 1, 1), w();
              return;
            } else
              L(M, $, D), m(se);
          }
        }(_);
      }), y.cancel;
    }
    var u = e.window.requestAnimationFrame || e.window.webkitRequestAnimationFrame || e.window.mozRequestAnimationFrame || e.window.oRequestAnimationFrame || e.window.msRequestAnimationFrame || function(v) {
      return e.window.setTimeout(v, 1e3 / 60);
    }, d = e.window.cancelAnimationFrame || e.window.clearTimeout;
    function m() {
      return u.apply(e.window, arguments);
    }
    function p() {
      return d.apply(e.window, arguments);
    }
    e.util.animate = h, e.util.requestAnimFrame = m, e.util.cancelAnimFrame = p, e.runningAnimations = c;
  }(), function() {
    function a(c, f, o) {
      var h = "rgba(" + parseInt(c[0] + o * (f[0] - c[0]), 10) + "," + parseInt(c[1] + o * (f[1] - c[1]), 10) + "," + parseInt(c[2] + o * (f[2] - c[2]), 10);
      return h += "," + (c && f ? parseFloat(c[3] + o * (f[3] - c[3])) : 1), h += ")", h;
    }
    function s(c, f, o, h) {
      var u = new e.Color(c).getSource(), d = new e.Color(f).getSource(), m = h.onComplete, p = h.onChange;
      return h = h || {}, e.util.animate(e.util.object.extend(h, {
        duration: o || 500,
        startValue: u,
        endValue: d,
        byValue: d,
        easing: function(v, b, y, w) {
          var x = h.colorEasing ? h.colorEasing(v, w) : 1 - Math.cos(v / w * (Math.PI / 2));
          return a(b, y, x);
        },
        // has to take in account for color restoring;
        onComplete: function(v, b, y) {
          if (m)
            return m(
              a(d, d, 0),
              b,
              y
            );
        },
        onChange: function(v, b, y) {
          if (p) {
            if (Array.isArray(v))
              return p(
                a(v, v, 0),
                b,
                y
              );
            p(v, b, y);
          }
        }
      }));
    }
    e.util.animateColor = s;
  }(), function() {
    function a(T, P, D, M) {
      return T < Math.abs(P) ? (T = P, M = D / 4) : P === 0 && T === 0 ? M = D / (2 * Math.PI) * Math.asin(1) : M = D / (2 * Math.PI) * Math.asin(P / T), { a: T, c: P, p: D, s: M };
    }
    function s(T, P, D) {
      return T.a * Math.pow(2, 10 * (P -= 1)) * Math.sin((P * D - T.s) * (2 * Math.PI) / T.p);
    }
    function c(T, P, D, M) {
      return D * ((T = T / M - 1) * T * T + 1) + P;
    }
    function f(T, P, D, M) {
      return T /= M / 2, T < 1 ? D / 2 * T * T * T + P : D / 2 * ((T -= 2) * T * T + 2) + P;
    }
    function o(T, P, D, M) {
      return D * (T /= M) * T * T * T + P;
    }
    function h(T, P, D, M) {
      return -D * ((T = T / M - 1) * T * T * T - 1) + P;
    }
    function u(T, P, D, M) {
      return T /= M / 2, T < 1 ? D / 2 * T * T * T * T + P : -D / 2 * ((T -= 2) * T * T * T - 2) + P;
    }
    function d(T, P, D, M) {
      return D * (T /= M) * T * T * T * T + P;
    }
    function m(T, P, D, M) {
      return D * ((T = T / M - 1) * T * T * T * T + 1) + P;
    }
    function p(T, P, D, M) {
      return T /= M / 2, T < 1 ? D / 2 * T * T * T * T * T + P : D / 2 * ((T -= 2) * T * T * T * T + 2) + P;
    }
    function v(T, P, D, M) {
      return -D * Math.cos(T / M * (Math.PI / 2)) + D + P;
    }
    function b(T, P, D, M) {
      return D * Math.sin(T / M * (Math.PI / 2)) + P;
    }
    function y(T, P, D, M) {
      return -D / 2 * (Math.cos(Math.PI * T / M) - 1) + P;
    }
    function w(T, P, D, M) {
      return T === 0 ? P : D * Math.pow(2, 10 * (T / M - 1)) + P;
    }
    function x(T, P, D, M) {
      return T === M ? P + D : D * (-Math.pow(2, -10 * T / M) + 1) + P;
    }
    function _(T, P, D, M) {
      return T === 0 ? P : T === M ? P + D : (T /= M / 2, T < 1 ? D / 2 * Math.pow(2, 10 * (T - 1)) + P : D / 2 * (-Math.pow(2, -10 * --T) + 2) + P);
    }
    function S(T, P, D, M) {
      return -D * (Math.sqrt(1 - (T /= M) * T) - 1) + P;
    }
    function k(T, P, D, M) {
      return D * Math.sqrt(1 - (T = T / M - 1) * T) + P;
    }
    function F(T, P, D, M) {
      return T /= M / 2, T < 1 ? -D / 2 * (Math.sqrt(1 - T * T) - 1) + P : D / 2 * (Math.sqrt(1 - (T -= 2) * T) + 1) + P;
    }
    function L(T, P, D, M) {
      var $ = 1.70158, A = 0, E = D;
      if (T === 0)
        return P;
      if (T /= M, T === 1)
        return P + D;
      A || (A = M * 0.3);
      var R = a(E, D, A, $);
      return -s(R, T, M) + P;
    }
    function j(T, P, D, M) {
      var $ = 1.70158, A = 0, E = D;
      if (T === 0)
        return P;
      if (T /= M, T === 1)
        return P + D;
      A || (A = M * 0.3);
      var R = a(E, D, A, $);
      return R.a * Math.pow(2, -10 * T) * Math.sin((T * M - R.s) * (2 * Math.PI) / R.p) + R.c + P;
    }
    function G(T, P, D, M) {
      var $ = 1.70158, A = 0, E = D;
      if (T === 0)
        return P;
      if (T /= M / 2, T === 2)
        return P + D;
      A || (A = M * (0.3 * 1.5));
      var R = a(E, D, A, $);
      return T < 1 ? -0.5 * s(R, T, M) + P : R.a * Math.pow(2, -10 * (T -= 1)) * Math.sin((T * M - R.s) * (2 * Math.PI) / R.p) * 0.5 + R.c + P;
    }
    function te(T, P, D, M, $) {
      return $ === void 0 && ($ = 1.70158), D * (T /= M) * T * (($ + 1) * T - $) + P;
    }
    function U(T, P, D, M, $) {
      return $ === void 0 && ($ = 1.70158), D * ((T = T / M - 1) * T * (($ + 1) * T + $) + 1) + P;
    }
    function K(T, P, D, M, $) {
      return $ === void 0 && ($ = 1.70158), T /= M / 2, T < 1 ? D / 2 * (T * T * ((($ *= 1.525) + 1) * T - $)) + P : D / 2 * ((T -= 2) * T * ((($ *= 1.525) + 1) * T + $) + 2) + P;
    }
    function re(T, P, D, M) {
      return D - ne(M - T, 0, D, M) + P;
    }
    function ne(T, P, D, M) {
      return (T /= M) < 1 / 2.75 ? D * (7.5625 * T * T) + P : T < 2 / 2.75 ? D * (7.5625 * (T -= 1.5 / 2.75) * T + 0.75) + P : T < 2.5 / 2.75 ? D * (7.5625 * (T -= 2.25 / 2.75) * T + 0.9375) + P : D * (7.5625 * (T -= 2.625 / 2.75) * T + 0.984375) + P;
    }
    function se(T, P, D, M) {
      return T < M / 2 ? re(T * 2, 0, D, M) * 0.5 + P : ne(T * 2 - M, 0, D, M) * 0.5 + D * 0.5 + P;
    }
    e.util.ease = {
      /**
       * Quadratic easing in
       * @memberOf fabric.util.ease
       */
      easeInQuad: function(T, P, D, M) {
        return D * (T /= M) * T + P;
      },
      /**
       * Quadratic easing out
       * @memberOf fabric.util.ease
       */
      easeOutQuad: function(T, P, D, M) {
        return -D * (T /= M) * (T - 2) + P;
      },
      /**
       * Quadratic easing in and out
       * @memberOf fabric.util.ease
       */
      easeInOutQuad: function(T, P, D, M) {
        return T /= M / 2, T < 1 ? D / 2 * T * T + P : -D / 2 * (--T * (T - 2) - 1) + P;
      },
      /**
       * Cubic easing in
       * @memberOf fabric.util.ease
       */
      easeInCubic: function(T, P, D, M) {
        return D * (T /= M) * T * T + P;
      },
      easeOutCubic: c,
      easeInOutCubic: f,
      easeInQuart: o,
      easeOutQuart: h,
      easeInOutQuart: u,
      easeInQuint: d,
      easeOutQuint: m,
      easeInOutQuint: p,
      easeInSine: v,
      easeOutSine: b,
      easeInOutSine: y,
      easeInExpo: w,
      easeOutExpo: x,
      easeInOutExpo: _,
      easeInCirc: S,
      easeOutCirc: k,
      easeInOutCirc: F,
      easeInElastic: L,
      easeOutElastic: j,
      easeInOutElastic: G,
      easeInBack: te,
      easeOutBack: U,
      easeInOutBack: K,
      easeInBounce: re,
      easeOutBounce: ne,
      easeInOutBounce: se
    };
  }(), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.util.object.extend, f = s.util.object.clone, o = s.util.toFixed, h = s.util.parseUnit, u = s.util.multiplyTransformMatrices, d = [
      "path",
      "circle",
      "polygon",
      "polyline",
      "ellipse",
      "rect",
      "line",
      "image",
      "text"
    ], m = ["symbol", "image", "marker", "pattern", "view", "svg"], p = ["pattern", "defs", "symbol", "metadata", "clipPath", "mask", "desc"], v = ["symbol", "g", "a", "svg", "clipPath", "defs"], b = {
      cx: "left",
      x: "left",
      r: "radius",
      cy: "top",
      y: "top",
      display: "visible",
      visibility: "visible",
      transform: "transformMatrix",
      "fill-opacity": "fillOpacity",
      "fill-rule": "fillRule",
      "font-family": "fontFamily",
      "font-size": "fontSize",
      "font-style": "fontStyle",
      "font-weight": "fontWeight",
      "letter-spacing": "charSpacing",
      "paint-order": "paintFirst",
      "stroke-dasharray": "strokeDashArray",
      "stroke-dashoffset": "strokeDashOffset",
      "stroke-linecap": "strokeLineCap",
      "stroke-linejoin": "strokeLineJoin",
      "stroke-miterlimit": "strokeMiterLimit",
      "stroke-opacity": "strokeOpacity",
      "stroke-width": "strokeWidth",
      "text-decoration": "textDecoration",
      "text-anchor": "textAnchor",
      opacity: "opacity",
      "clip-path": "clipPath",
      "clip-rule": "clipRule",
      "vector-effect": "strokeUniform",
      "image-rendering": "imageSmoothing"
    }, y = {
      stroke: "strokeOpacity",
      fill: "fillOpacity"
    }, w = "font-size", x = "clip-path";
    s.svgValidTagNamesRegEx = k(d), s.svgViewBoxElementsRegEx = k(m), s.svgInvalidAncestorsRegEx = k(p), s.svgValidParentsRegEx = k(v), s.cssRules = {}, s.gradientDefs = {}, s.clipPaths = {};
    function _(A) {
      return A in b ? b[A] : A;
    }
    function S(A, E, R, N) {
      var H = Array.isArray(E), V;
      if ((A === "fill" || A === "stroke") && E === "none")
        E = "";
      else {
        if (A === "strokeUniform")
          return E === "non-scaling-stroke";
        if (A === "strokeDashArray")
          E === "none" ? E = null : E = E.replace(/,/g, " ").split(/\s+/).map(parseFloat);
        else if (A === "transformMatrix")
          R && R.transformMatrix ? E = u(
            R.transformMatrix,
            s.parseTransformAttribute(E)
          ) : E = s.parseTransformAttribute(E);
        else if (A === "visible")
          E = E !== "none" && E !== "hidden", R && R.visible === !1 && (E = !1);
        else if (A === "opacity")
          E = parseFloat(E), R && typeof R.opacity < "u" && (E *= R.opacity);
        else if (A === "textAnchor")
          E = E === "start" ? "left" : E === "end" ? "right" : "center";
        else if (A === "charSpacing")
          V = h(E, N) / N * 1e3;
        else if (A === "paintFirst") {
          var Z = E.indexOf("fill"), ee = E.indexOf("stroke"), E = "fill";
          (Z > -1 && ee > -1 && ee < Z || Z === -1 && ee > -1) && (E = "stroke");
        } else {
          if (A === "href" || A === "xlink:href" || A === "font")
            return E;
          if (A === "imageSmoothing")
            return E === "optimizeQuality";
          V = H ? E.map(h) : h(E, N);
        }
      }
      return !H && isNaN(V) ? E : V;
    }
    function k(A) {
      return new RegExp("^(" + A.join("|") + ")\\b", "i");
    }
    function F(A) {
      for (var E in y)
        if (!(typeof A[y[E]] > "u" || A[E] === "")) {
          if (typeof A[E] > "u") {
            if (!s.Object.prototype[E])
              continue;
            A[E] = s.Object.prototype[E];
          }
          if (A[E].indexOf("url(") !== 0) {
            var R = new s.Color(A[E]);
            A[E] = R.setAlpha(o(R.getAlpha() * A[y[E]], 2)).toRgba();
          }
        }
      return A;
    }
    function L(A, E) {
      var R, N = [], H, V, Z;
      for (V = 0, Z = E.length; V < Z; V++)
        R = E[V], H = A.getElementsByTagName(R), N = N.concat(Array.prototype.slice.call(H));
      return N;
    }
    s.parseTransformAttribute = function() {
      function A(J, pe) {
        var _e = s.util.cos(pe[0]), De = s.util.sin(pe[0]), je = 0, Le = 0;
        pe.length === 3 && (je = pe[1], Le = pe[2]), J[0] = _e, J[1] = De, J[2] = -De, J[3] = _e, J[4] = je - (_e * je - De * Le), J[5] = Le - (De * je + _e * Le);
      }
      function E(J, pe) {
        var _e = pe[0], De = pe.length === 2 ? pe[1] : pe[0];
        J[0] = _e, J[3] = De;
      }
      function R(J, pe, _e) {
        J[_e] = Math.tan(s.util.degreesToRadians(pe[0]));
      }
      function N(J, pe) {
        J[4] = pe[0], pe.length === 2 && (J[5] = pe[1]);
      }
      var H = s.iMatrix, V = s.reNum, Z = s.commaWsp, ee = "(?:(skewX)\\s*\\(\\s*(" + V + ")\\s*\\))", ue = "(?:(skewY)\\s*\\(\\s*(" + V + ")\\s*\\))", W = "(?:(rotate)\\s*\\(\\s*(" + V + ")(?:" + Z + "(" + V + ")" + Z + "(" + V + "))?\\s*\\))", B = "(?:(scale)\\s*\\(\\s*(" + V + ")(?:" + Z + "(" + V + "))?\\s*\\))", X = "(?:(translate)\\s*\\(\\s*(" + V + ")(?:" + Z + "(" + V + "))?\\s*\\))", Q = "(?:(matrix)\\s*\\(\\s*(" + V + ")" + Z + "(" + V + ")" + Z + "(" + V + ")" + Z + "(" + V + ")" + Z + "(" + V + ")" + Z + "(" + V + ")\\s*\\))", z = "(?:" + Q + "|" + X + "|" + B + "|" + W + "|" + ee + "|" + ue + ")", Y = "(?:" + z + "(?:" + Z + "*" + z + ")*)", ae = "^\\s*(?:" + Y + "?)\\s*$", ye = new RegExp(ae), me = new RegExp(z, "g");
      return function(J) {
        var pe = H.concat(), _e = [];
        if (!J || J && !ye.test(J))
          return pe;
        J.replace(me, function(je) {
          var Le = new RegExp(z).exec(je).filter(function(nn) {
            return !!nn;
          }), mt = Le[1], Ke = Le.slice(2).map(parseFloat);
          switch (mt) {
            case "translate":
              N(pe, Ke);
              break;
            case "rotate":
              Ke[0] = s.util.degreesToRadians(Ke[0]), A(pe, Ke);
              break;
            case "scale":
              E(pe, Ke);
              break;
            case "skewX":
              R(pe, Ke, 2);
              break;
            case "skewY":
              R(pe, Ke, 1);
              break;
            case "matrix":
              pe = Ke;
              break;
          }
          _e.push(pe.concat()), pe = H.concat();
        });
        for (var De = _e[0]; _e.length > 1; )
          _e.shift(), De = s.util.multiplyTransformMatrices(De, _e[0]);
        return De;
      };
    }();
    function j(A, E) {
      var R, N;
      A.replace(/;\s*$/, "").split(";").forEach(function(H) {
        var V = H.split(":");
        R = V[0].trim().toLowerCase(), N = V[1].trim(), E[R] = N;
      });
    }
    function G(A, E) {
      var R, N;
      for (var H in A)
        typeof A[H] > "u" || (R = H.toLowerCase(), N = A[H], E[R] = N);
    }
    function te(A, E) {
      var R = {};
      for (var N in s.cssRules[E])
        if (U(A, N.split(" ")))
          for (var H in s.cssRules[E][N])
            R[H] = s.cssRules[E][N][H];
      return R;
    }
    function U(A, E) {
      var R, N = !0;
      return R = re(A, E.pop()), R && E.length && (N = K(A, E)), R && N && E.length === 0;
    }
    function K(A, E) {
      for (var R, N = !0; A.parentNode && A.parentNode.nodeType === 1 && E.length; )
        N && (R = E.pop()), A = A.parentNode, N = re(A, R);
      return E.length === 0;
    }
    function re(A, E) {
      var R = A.nodeName, N = A.getAttribute("class"), H = A.getAttribute("id"), V, Z;
      if (V = new RegExp("^" + R, "i"), E = E.replace(V, ""), H && E.length && (V = new RegExp("#" + H + "(?![a-zA-Z\\-]+)", "i"), E = E.replace(V, "")), N && E.length)
        for (N = N.split(" "), Z = N.length; Z--; )
          V = new RegExp("\\." + N[Z] + "(?![a-zA-Z\\-]+)", "i"), E = E.replace(V, "");
      return E.length === 0;
    }
    function ne(A, E) {
      var R;
      if (A.getElementById && (R = A.getElementById(E)), R)
        return R;
      var N, H, V, Z = A.getElementsByTagName("*");
      for (H = 0, V = Z.length; H < V; H++)
        if (N = Z[H], E === N.getAttribute("id"))
          return N;
    }
    function se(A) {
      for (var E = L(A, ["use", "svg:use"]), R = 0; E.length && R < E.length; ) {
        var N = E[R], H = N.getAttribute("xlink:href") || N.getAttribute("href");
        if (H === null)
          return;
        var V = H.slice(1), Z = N.getAttribute("x") || 0, ee = N.getAttribute("y") || 0, ue = ne(A, V).cloneNode(!0), W = (ue.getAttribute("transform") || "") + " translate(" + Z + ", " + ee + ")", B, X = E.length, Q, z, Y, ae, ye = s.svgNS;
        if (P(ue), /^svg$/i.test(ue.nodeName)) {
          var me = ue.ownerDocument.createElementNS(ye, "g");
          for (z = 0, Y = ue.attributes, ae = Y.length; z < ae; z++)
            Q = Y.item(z), me.setAttributeNS(ye, Q.nodeName, Q.nodeValue);
          for (; ue.firstChild; )
            me.appendChild(ue.firstChild);
          ue = me;
        }
        for (z = 0, Y = N.attributes, ae = Y.length; z < ae; z++)
          Q = Y.item(z), !(Q.nodeName === "x" || Q.nodeName === "y" || Q.nodeName === "xlink:href" || Q.nodeName === "href") && (Q.nodeName === "transform" ? W = Q.nodeValue + " " + W : ue.setAttribute(Q.nodeName, Q.nodeValue));
        ue.setAttribute("transform", W), ue.setAttribute("instantiated_by_use", "1"), ue.removeAttribute("id"), B = N.parentNode, B.replaceChild(ue, N), E.length === X && R++;
      }
    }
    var T = new RegExp(
      "^\\s*(" + s.reNum + "+)\\s*,?\\s*(" + s.reNum + "+)\\s*,?\\s*(" + s.reNum + "+)\\s*,?\\s*(" + s.reNum + "+)\\s*$"
    );
    function P(A) {
      if (!s.svgViewBoxElementsRegEx.test(A.nodeName))
        return {};
      var E = A.getAttribute("viewBox"), R = 1, N = 1, H = 0, V = 0, Z, ee, ue, W, B = A.getAttribute("width"), X = A.getAttribute("height"), Q = A.getAttribute("x") || 0, z = A.getAttribute("y") || 0, Y = A.getAttribute("preserveAspectRatio") || "", ae = !E || !(E = E.match(T)), ye = !B || !X || B === "100%" || X === "100%", me = ae && ye, J = {}, pe = "", _e = 0, De = 0;
      if (J.width = 0, J.height = 0, J.toBeParsed = me, ae && (Q || z) && A.parentNode && A.parentNode.nodeName !== "#document" && (pe = " translate(" + h(Q) + " " + h(z) + ") ", ue = (A.getAttribute("transform") || "") + pe, A.setAttribute("transform", ue), A.removeAttribute("x"), A.removeAttribute("y")), me)
        return J;
      if (ae)
        return J.width = h(B), J.height = h(X), J;
      if (H = -parseFloat(E[1]), V = -parseFloat(E[2]), Z = parseFloat(E[3]), ee = parseFloat(E[4]), J.minX = H, J.minY = V, J.viewBoxWidth = Z, J.viewBoxHeight = ee, ye ? (J.width = Z, J.height = ee) : (J.width = h(B), J.height = h(X), R = J.width / Z, N = J.height / ee), Y = s.util.parsePreserveAspectRatioAttribute(Y), Y.alignX !== "none" && (Y.meetOrSlice === "meet" && (N = R = R > N ? N : R), Y.meetOrSlice === "slice" && (N = R = R > N ? R : N), _e = J.width - Z * R, De = J.height - ee * R, Y.alignX === "Mid" && (_e /= 2), Y.alignY === "Mid" && (De /= 2), Y.alignX === "Min" && (_e = 0), Y.alignY === "Min" && (De = 0)), R === 1 && N === 1 && H === 0 && V === 0 && Q === 0 && z === 0)
        return J;
      if ((Q || z) && A.parentNode.nodeName !== "#document" && (pe = " translate(" + h(Q) + " " + h(z) + ") "), ue = pe + " matrix(" + R + " 0 0 " + N + " " + (H * R + _e) + " " + (V * N + De) + ") ", A.nodeName === "svg") {
        for (W = A.ownerDocument.createElementNS(s.svgNS, "g"); A.firstChild; )
          W.appendChild(A.firstChild);
        A.appendChild(W);
      } else
        W = A, W.removeAttribute("x"), W.removeAttribute("y"), ue = W.getAttribute("transform") + ue;
      return W.setAttribute("transform", ue), J;
    }
    function D(A, E) {
      for (; A && (A = A.parentNode); )
        if (A.nodeName && E.test(A.nodeName.replace("svg:", "")) && !A.getAttribute("instantiated_by_use"))
          return !0;
      return !1;
    }
    s.parseSVGDocument = function(A, E, R, N) {
      if (A) {
        se(A);
        var H = s.Object.__uid++, V, Z, ee = P(A), ue = s.util.toArray(A.getElementsByTagName("*"));
        if (ee.crossOrigin = N && N.crossOrigin, ee.svgUid = H, ue.length === 0 && s.isLikelyNode) {
          ue = A.selectNodes('//*[name(.)!="svg"]');
          var W = [];
          for (V = 0, Z = ue.length; V < Z; V++)
            W[V] = ue[V];
          ue = W;
        }
        var B = ue.filter(function(Q) {
          return P(Q), s.svgValidTagNamesRegEx.test(Q.nodeName.replace("svg:", "")) && !D(Q, s.svgInvalidAncestorsRegEx);
        });
        if (!B || B && !B.length) {
          E && E([], {});
          return;
        }
        var X = {};
        ue.filter(function(Q) {
          return Q.nodeName.replace("svg:", "") === "clipPath";
        }).forEach(function(Q) {
          var z = Q.getAttribute("id");
          X[z] = s.util.toArray(Q.getElementsByTagName("*")).filter(function(Y) {
            return s.svgValidTagNamesRegEx.test(Y.nodeName.replace("svg:", ""));
          });
        }), s.gradientDefs[H] = s.getGradientDefs(A), s.cssRules[H] = s.getCSSRules(A), s.clipPaths[H] = X, s.parseElements(B, function(Q, z) {
          E && (E(Q, ee, z, ue), delete s.gradientDefs[H], delete s.cssRules[H], delete s.clipPaths[H]);
        }, f(ee), R, N);
      }
    };
    function M(A, E) {
      var R = ["gradientTransform", "x1", "x2", "y1", "y2", "gradientUnits", "cx", "cy", "r", "fx", "fy"], N = "xlink:href", H = E.getAttribute(N).slice(1), V = ne(A, H);
      if (V && V.getAttribute(N) && M(A, V), R.forEach(function(ee) {
        V && !E.hasAttribute(ee) && V.hasAttribute(ee) && E.setAttribute(ee, V.getAttribute(ee));
      }), !E.children.length)
        for (var Z = V.cloneNode(!0); Z.firstChild; )
          E.appendChild(Z.firstChild);
      E.removeAttribute(N);
    }
    var $ = new RegExp(
      "(normal|italic)?\\s*(normal|small-caps)?\\s*(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\s*(" + s.reNum + "(?:px|cm|mm|em|pt|pc|in)*)(?:\\/(normal|" + s.reNum + "))?\\s+(.*)"
    );
    c(s, {
      /**
       * Parses a short font declaration, building adding its properties to a style object
       * @static
       * @function
       * @memberOf fabric
       * @param {String} value font declaration
       * @param {Object} oStyle definition
       */
      parseFontDeclaration: function(A, E) {
        var R = A.match($);
        if (R) {
          var N = R[1], H = R[3], V = R[4], Z = R[5], ee = R[6];
          N && (E.fontStyle = N), H && (E.fontWeight = isNaN(parseFloat(H)) ? H : parseFloat(H)), V && (E.fontSize = h(V)), ee && (E.fontFamily = ee), Z && (E.lineHeight = Z === "normal" ? 1 : Z);
        }
      },
      /**
       * Parses an SVG document, returning all of the gradient declarations found in it
       * @static
       * @function
       * @memberOf fabric
       * @param {SVGDocument} doc SVG document to parse
       * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element
       */
      getGradientDefs: function(A) {
        var E = [
          "linearGradient",
          "radialGradient",
          "svg:linearGradient",
          "svg:radialGradient"
        ], R = L(A, E), N, H = 0, V = {};
        for (H = R.length; H--; )
          N = R[H], N.getAttribute("xlink:href") && M(A, N), V[N.getAttribute("id")] = N;
        return V;
      },
      /**
       * Returns an object of attributes' name/value, given element and an array of attribute names;
       * Parses parent "g" nodes recursively upwards.
       * @static
       * @memberOf fabric
       * @param {DOMElement} element Element to parse
       * @param {Array} attributes Array of attributes to parse
       * @return {Object} object containing parsed attributes' names/values
       */
      parseAttributes: function(A, E, R) {
        if (A) {
          var N, H = {}, V, Z;
          typeof R > "u" && (R = A.getAttribute("svgUid")), A.parentNode && s.svgValidParentsRegEx.test(A.parentNode.nodeName) && (H = s.parseAttributes(A.parentNode, E, R));
          var ee = E.reduce(function(Y, ae) {
            return N = A.getAttribute(ae), N && (Y[ae] = N), Y;
          }, {}), ue = c(
            te(A, R),
            s.parseStyleAttribute(A)
          );
          ee = c(
            ee,
            ue
          ), ue[x] && A.setAttribute(x, ue[x]), V = Z = H.fontSize || s.Text.DEFAULT_SVG_FONT_SIZE, ee[w] && (ee[w] = V = h(ee[w], Z));
          var W, B, X = {};
          for (var Q in ee)
            W = _(Q), B = S(W, ee[Q], H, V), X[W] = B;
          X && X.font && s.parseFontDeclaration(X.font, X);
          var z = c(H, X);
          return s.svgValidParentsRegEx.test(A.nodeName) ? z : F(z);
        }
      },
      /**
       * Transforms an array of svg elements to corresponding fabric.* instances
       * @static
       * @memberOf fabric
       * @param {Array} elements Array of elements to parse
       * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)
       * @param {Object} [options] Options object
       * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.
       */
      parseElements: function(A, E, R, N, H) {
        new s.ElementsParser(A, E, R, N, H).parse();
      },
      /**
       * Parses "style" attribute, retuning an object with values
       * @static
       * @memberOf fabric
       * @param {SVGElement} element Element to parse
       * @return {Object} Objects with values parsed from style attribute of an element
       */
      parseStyleAttribute: function(A) {
        var E = {}, R = A.getAttribute("style");
        return R && (typeof R == "string" ? j(R, E) : G(R, E)), E;
      },
      /**
       * Parses "points" attribute, returning an array of values
       * @static
       * @memberOf fabric
       * @param {String} points points attribute string
       * @return {Array} array of points
       */
      parsePointsAttribute: function(A) {
        if (!A)
          return null;
        A = A.replace(/,/g, " ").trim(), A = A.split(/\s+/);
        var E = [], R, N;
        for (R = 0, N = A.length; R < N; R += 2)
          E.push({
            x: parseFloat(A[R]),
            y: parseFloat(A[R + 1])
          });
        return E;
      },
      /**
       * Returns CSS rules for a given SVG document
       * @static
       * @function
       * @memberOf fabric
       * @param {SVGDocument} doc SVG document to parse
       * @return {Object} CSS rules of this document
       */
      getCSSRules: function(A) {
        var E = A.getElementsByTagName("style"), R, N, H = {}, V;
        for (R = 0, N = E.length; R < N; R++) {
          var Z = E[R].textContent;
          Z = Z.replace(/\/\*[\s\S]*?\*\//g, ""), Z.trim() !== "" && (V = Z.split("}"), V = V.filter(function(ee) {
            return ee.trim();
          }), V.forEach(function(ee) {
            var ue = ee.split("{"), W = {}, B = ue[1].trim(), X = B.split(";").filter(function(ae) {
              return ae.trim();
            });
            for (R = 0, N = X.length; R < N; R++) {
              var Q = X[R].split(":"), z = Q[0].trim(), Y = Q[1].trim();
              W[z] = Y;
            }
            ee = ue[0].trim(), ee.split(",").forEach(function(ae) {
              ae = ae.replace(/^svg/i, "").trim(), ae !== "" && (H[ae] ? s.util.object.extend(H[ae], W) : H[ae] = s.util.object.clone(W));
            });
          }));
        }
        return H;
      },
      /**
       * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.
       * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)
       * @memberOf fabric
       * @param {String} url
       * @param {Function} callback
       * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.
       * @param {Object} [options] Object containing options for parsing
       * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources
       */
      loadSVGFromURL: function(A, E, R, N) {
        A = A.replace(/^\n\s*/, "").trim(), new s.util.request(A, {
          method: "get",
          onComplete: H
        });
        function H(V) {
          var Z = V.responseXML;
          if (!Z || !Z.documentElement)
            return E && E(null), !1;
          s.parseSVGDocument(Z.documentElement, function(ee, ue, W, B) {
            E && E(ee, ue, W, B);
          }, R, N);
        }
      },
      /**
       * Takes string corresponding to an SVG document, and parses it into a set of fabric objects
       * @memberOf fabric
       * @param {String} string
       * @param {Function} callback
       * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.
       * @param {Object} [options] Object containing options for parsing
       * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources
       */
      loadSVGFromString: function(A, E, R, N) {
        var H = new s.window.DOMParser(), V = H.parseFromString(A.trim(), "text/xml");
        s.parseSVGDocument(V.documentElement, function(Z, ee, ue, W) {
          E(Z, ee, ue, W);
        }, R, N);
      }
    });
  }(t), e.ElementsParser = function(a, s, c, f, o, h) {
    this.elements = a, this.callback = s, this.options = c, this.reviver = f, this.svgUid = c && c.svgUid || 0, this.parsingOptions = o, this.regexUrl = /^url\(['"]?#([^'"]+)['"]?\)/g, this.doc = h;
  }, function(a) {
    a.parse = function() {
      this.instances = new Array(this.elements.length), this.numElements = this.elements.length, this.createObjects();
    }, a.createObjects = function() {
      var s = this;
      this.elements.forEach(function(c, f) {
        c.setAttribute("svgUid", s.svgUid), s.createObject(c, f);
      });
    }, a.findTag = function(s) {
      return e[e.util.string.capitalize(s.tagName.replace("svg:", ""))];
    }, a.createObject = function(s, c) {
      var f = this.findTag(s);
      if (f && f.fromElement)
        try {
          f.fromElement(s, this.createCallback(c, s), this.options);
        } catch (o) {
          e.log(o);
        }
      else
        this.checkIfDone();
    }, a.createCallback = function(s, c) {
      var f = this;
      return function(o) {
        var h;
        f.resolveGradient(o, c, "fill"), f.resolveGradient(o, c, "stroke"), o instanceof e.Image && o._originalElement && (h = o.parsePreserveAspectRatioAttribute(c)), o._removeTransformMatrix(h), f.resolveClipPath(o, c), f.reviver && f.reviver(c, o), f.instances[s] = o, f.checkIfDone();
      };
    }, a.extractPropertyDefinition = function(s, c, f) {
      var o = s[c], h = this.regexUrl;
      if (h.test(o)) {
        h.lastIndex = 0;
        var u = h.exec(o)[1];
        return h.lastIndex = 0, e[f][this.svgUid][u];
      }
    }, a.resolveGradient = function(s, c, f) {
      var o = this.extractPropertyDefinition(s, f, "gradientDefs");
      if (o) {
        var h = c.getAttribute(f + "-opacity"), u = e.Gradient.fromElement(o, s, h, this.options);
        s.set(f, u);
      }
    }, a.createClipPathCallback = function(s, c) {
      return function(f) {
        f._removeTransformMatrix(), f.fillRule = f.clipRule, c.push(f);
      };
    }, a.resolveClipPath = function(s, c) {
      var f = this.extractPropertyDefinition(s, "clipPath", "clipPaths"), o, h, u, d, m, p;
      if (f) {
        d = [], u = e.util.invertTransform(s.calcTransformMatrix());
        for (var v = f[0].parentNode, b = c; b.parentNode && b.getAttribute("clip-path") !== s.clipPath; )
          b = b.parentNode;
        b.parentNode.appendChild(v);
        for (var y = 0; y < f.length; y++)
          o = f[y], h = this.findTag(o), h.fromElement(
            o,
            this.createClipPathCallback(s, d),
            this.options
          );
        d.length === 1 ? f = d[0] : f = new e.Group(d), m = e.util.multiplyTransformMatrices(
          u,
          f.calcTransformMatrix()
        ), f.clipPath && this.resolveClipPath(f, b);
        var p = e.util.qrDecompose(m);
        f.flipX = !1, f.flipY = !1, f.set("scaleX", p.scaleX), f.set("scaleY", p.scaleY), f.angle = p.angle, f.skewX = p.skewX, f.skewY = 0, f.setPositionByOrigin({ x: p.translateX, y: p.translateY }, "center", "center"), s.clipPath = f;
      } else
        delete s.clipPath;
    }, a.checkIfDone = function() {
      --this.numElements === 0 && (this.instances = this.instances.filter(function(s) {
        return s != null;
      }), this.callback(this.instances, this.elements));
    };
  }(e.ElementsParser.prototype), function(a) {
    var s = a.fabric || (a.fabric = {});
    if (s.Point) {
      s.warn("fabric.Point is already defined");
      return;
    }
    s.Point = c;
    function c(f, o) {
      this.x = f, this.y = o;
    }
    c.prototype = /** @lends fabric.Point.prototype */
    {
      type: "point",
      constructor: c,
      /**
       * Adds another point to this one and returns another one
       * @param {fabric.Point} that
       * @return {fabric.Point} new Point instance with added values
       */
      add: function(f) {
        return new c(this.x + f.x, this.y + f.y);
      },
      /**
       * Adds another point to this one
       * @param {fabric.Point} that
       * @return {fabric.Point} thisArg
       * @chainable
       */
      addEquals: function(f) {
        return this.x += f.x, this.y += f.y, this;
      },
      /**
       * Adds value to this point and returns a new one
       * @param {Number} scalar
       * @return {fabric.Point} new Point with added value
       */
      scalarAdd: function(f) {
        return new c(this.x + f, this.y + f);
      },
      /**
       * Adds value to this point
       * @param {Number} scalar
       * @return {fabric.Point} thisArg
       * @chainable
       */
      scalarAddEquals: function(f) {
        return this.x += f, this.y += f, this;
      },
      /**
       * Subtracts another point from this point and returns a new one
       * @param {fabric.Point} that
       * @return {fabric.Point} new Point object with subtracted values
       */
      subtract: function(f) {
        return new c(this.x - f.x, this.y - f.y);
      },
      /**
       * Subtracts another point from this point
       * @param {fabric.Point} that
       * @return {fabric.Point} thisArg
       * @chainable
       */
      subtractEquals: function(f) {
        return this.x -= f.x, this.y -= f.y, this;
      },
      /**
       * Subtracts value from this point and returns a new one
       * @param {Number} scalar
       * @return {fabric.Point}
       */
      scalarSubtract: function(f) {
        return new c(this.x - f, this.y - f);
      },
      /**
       * Subtracts value from this point
       * @param {Number} scalar
       * @return {fabric.Point} thisArg
       * @chainable
       */
      scalarSubtractEquals: function(f) {
        return this.x -= f, this.y -= f, this;
      },
      /**
       * Multiplies this point by a value and returns a new one
       * TODO: rename in scalarMultiply in 2.0
       * @param {Number} scalar
       * @return {fabric.Point}
       */
      multiply: function(f) {
        return new c(this.x * f, this.y * f);
      },
      /**
       * Multiplies this point by a value
       * TODO: rename in scalarMultiplyEquals in 2.0
       * @param {Number} scalar
       * @return {fabric.Point} thisArg
       * @chainable
       */
      multiplyEquals: function(f) {
        return this.x *= f, this.y *= f, this;
      },
      /**
       * Divides this point by a value and returns a new one
       * TODO: rename in scalarDivide in 2.0
       * @param {Number} scalar
       * @return {fabric.Point}
       */
      divide: function(f) {
        return new c(this.x / f, this.y / f);
      },
      /**
       * Divides this point by a value
       * TODO: rename in scalarDivideEquals in 2.0
       * @param {Number} scalar
       * @return {fabric.Point} thisArg
       * @chainable
       */
      divideEquals: function(f) {
        return this.x /= f, this.y /= f, this;
      },
      /**
       * Returns true if this point is equal to another one
       * @param {fabric.Point} that
       * @return {Boolean}
       */
      eq: function(f) {
        return this.x === f.x && this.y === f.y;
      },
      /**
       * Returns true if this point is less than another one
       * @param {fabric.Point} that
       * @return {Boolean}
       */
      lt: function(f) {
        return this.x < f.x && this.y < f.y;
      },
      /**
       * Returns true if this point is less than or equal to another one
       * @param {fabric.Point} that
       * @return {Boolean}
       */
      lte: function(f) {
        return this.x <= f.x && this.y <= f.y;
      },
      /**
      
      	     * Returns true if this point is greater another one
      	     * @param {fabric.Point} that
      	     * @return {Boolean}
      	     */
      gt: function(f) {
        return this.x > f.x && this.y > f.y;
      },
      /**
       * Returns true if this point is greater than or equal to another one
       * @param {fabric.Point} that
       * @return {Boolean}
       */
      gte: function(f) {
        return this.x >= f.x && this.y >= f.y;
      },
      /**
       * Returns new point which is the result of linear interpolation with this one and another one
       * @param {fabric.Point} that
       * @param {Number} t , position of interpolation, between 0 and 1 default 0.5
       * @return {fabric.Point}
       */
      lerp: function(f, o) {
        return typeof o > "u" && (o = 0.5), o = Math.max(Math.min(1, o), 0), new c(this.x + (f.x - this.x) * o, this.y + (f.y - this.y) * o);
      },
      /**
       * Returns distance from this point and another one
       * @param {fabric.Point} that
       * @return {Number}
       */
      distanceFrom: function(f) {
        var o = this.x - f.x, h = this.y - f.y;
        return Math.sqrt(o * o + h * h);
      },
      /**
       * Returns the point between this point and another one
       * @param {fabric.Point} that
       * @return {fabric.Point}
       */
      midPointFrom: function(f) {
        return this.lerp(f);
      },
      /**
       * Returns a new point which is the min of this and another one
       * @param {fabric.Point} that
       * @return {fabric.Point}
       */
      min: function(f) {
        return new c(Math.min(this.x, f.x), Math.min(this.y, f.y));
      },
      /**
       * Returns a new point which is the max of this and another one
       * @param {fabric.Point} that
       * @return {fabric.Point}
       */
      max: function(f) {
        return new c(Math.max(this.x, f.x), Math.max(this.y, f.y));
      },
      /**
       * Returns string representation of this point
       * @return {String}
       */
      toString: function() {
        return this.x + "," + this.y;
      },
      /**
       * Sets x/y of this point
       * @param {Number} x
       * @param {Number} y
       * @chainable
       */
      setXY: function(f, o) {
        return this.x = f, this.y = o, this;
      },
      /**
       * Sets x of this point
       * @param {Number} x
       * @chainable
       */
      setX: function(f) {
        return this.x = f, this;
      },
      /**
       * Sets y of this point
       * @param {Number} y
       * @chainable
       */
      setY: function(f) {
        return this.y = f, this;
      },
      /**
       * Sets x/y of this point from another point
       * @param {fabric.Point} that
       * @chainable
       */
      setFromPoint: function(f) {
        return this.x = f.x, this.y = f.y, this;
      },
      /**
       * Swaps x/y of this point and another point
       * @param {fabric.Point} that
       */
      swap: function(f) {
        var o = this.x, h = this.y;
        this.x = f.x, this.y = f.y, f.x = o, f.y = h;
      },
      /**
       * return a cloned instance of the point
       * @return {fabric.Point}
       */
      clone: function() {
        return new c(this.x, this.y);
      }
    };
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {});
    if (s.Intersection) {
      s.warn("fabric.Intersection is already defined");
      return;
    }
    function c(f) {
      this.status = f, this.points = [];
    }
    s.Intersection = c, s.Intersection.prototype = /** @lends fabric.Intersection.prototype */
    {
      constructor: c,
      /**
       * Appends a point to intersection
       * @param {fabric.Point} point
       * @return {fabric.Intersection} thisArg
       * @chainable
       */
      appendPoint: function(f) {
        return this.points.push(f), this;
      },
      /**
       * Appends points to intersection
       * @param {Array} points
       * @return {fabric.Intersection} thisArg
       * @chainable
       */
      appendPoints: function(f) {
        return this.points = this.points.concat(f), this;
      }
    }, s.Intersection.intersectLineLine = function(f, o, h, u) {
      var d, m = (u.x - h.x) * (f.y - h.y) - (u.y - h.y) * (f.x - h.x), p = (o.x - f.x) * (f.y - h.y) - (o.y - f.y) * (f.x - h.x), v = (u.y - h.y) * (o.x - f.x) - (u.x - h.x) * (o.y - f.y);
      if (v !== 0) {
        var b = m / v, y = p / v;
        0 <= b && b <= 1 && 0 <= y && y <= 1 ? (d = new c("Intersection"), d.appendPoint(new s.Point(f.x + b * (o.x - f.x), f.y + b * (o.y - f.y)))) : d = new c();
      } else
        m === 0 || p === 0 ? d = new c("Coincident") : d = new c("Parallel");
      return d;
    }, s.Intersection.intersectLinePolygon = function(f, o, h) {
      var u = new c(), d = h.length, m, p, v, b;
      for (b = 0; b < d; b++)
        m = h[b], p = h[(b + 1) % d], v = c.intersectLineLine(f, o, m, p), u.appendPoints(v.points);
      return u.points.length > 0 && (u.status = "Intersection"), u;
    }, s.Intersection.intersectPolygonPolygon = function(f, o) {
      var h = new c(), u = f.length, d;
      for (d = 0; d < u; d++) {
        var m = f[d], p = f[(d + 1) % u], v = c.intersectLinePolygon(m, p, o);
        h.appendPoints(v.points);
      }
      return h.points.length > 0 && (h.status = "Intersection"), h;
    }, s.Intersection.intersectPolygonRectangle = function(f, o, h) {
      var u = o.min(h), d = o.max(h), m = new s.Point(d.x, u.y), p = new s.Point(u.x, d.y), v = c.intersectLinePolygon(u, m, f), b = c.intersectLinePolygon(m, d, f), y = c.intersectLinePolygon(d, p, f), w = c.intersectLinePolygon(p, u, f), x = new c();
      return x.appendPoints(v.points), x.appendPoints(b.points), x.appendPoints(y.points), x.appendPoints(w.points), x.points.length > 0 && (x.status = "Intersection"), x;
    };
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {});
    if (s.Color) {
      s.warn("fabric.Color is already defined.");
      return;
    }
    function c(o) {
      o ? this._tryParsingColor(o) : this.setSource([0, 0, 0, 1]);
    }
    s.Color = c, s.Color.prototype = /** @lends fabric.Color.prototype */
    {
      /**
       * @private
       * @param {String|Array} color Color value to parse
       */
      _tryParsingColor: function(o) {
        var h;
        o in c.colorNameMap && (o = c.colorNameMap[o]), o === "transparent" && (h = [255, 255, 255, 0]), h || (h = c.sourceFromHex(o)), h || (h = c.sourceFromRgb(o)), h || (h = c.sourceFromHsl(o)), h || (h = [0, 0, 0, 1]), h && this.setSource(h);
      },
      /**
       * Adapted from <a href="https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html">https://github.com/mjijackson</a>
       * @private
       * @param {Number} r Red color value
       * @param {Number} g Green color value
       * @param {Number} b Blue color value
       * @return {Array} Hsl color
       */
      _rgbToHsl: function(o, h, u) {
        o /= 255, h /= 255, u /= 255;
        var d, m, p, v = s.util.array.max([o, h, u]), b = s.util.array.min([o, h, u]);
        if (p = (v + b) / 2, v === b)
          d = m = 0;
        else {
          var y = v - b;
          switch (m = p > 0.5 ? y / (2 - v - b) : y / (v + b), v) {
            case o:
              d = (h - u) / y + (h < u ? 6 : 0);
              break;
            case h:
              d = (u - o) / y + 2;
              break;
            case u:
              d = (o - h) / y + 4;
              break;
          }
          d /= 6;
        }
        return [
          Math.round(d * 360),
          Math.round(m * 100),
          Math.round(p * 100)
        ];
      },
      /**
       * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])
       * @return {Array}
       */
      getSource: function() {
        return this._source;
      },
      /**
       * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])
       * @param {Array} source
       */
      setSource: function(o) {
        this._source = o;
      },
      /**
       * Returns color representation in RGB format
       * @return {String} ex: rgb(0-255,0-255,0-255)
       */
      toRgb: function() {
        var o = this.getSource();
        return "rgb(" + o[0] + "," + o[1] + "," + o[2] + ")";
      },
      /**
       * Returns color representation in RGBA format
       * @return {String} ex: rgba(0-255,0-255,0-255,0-1)
       */
      toRgba: function() {
        var o = this.getSource();
        return "rgba(" + o[0] + "," + o[1] + "," + o[2] + "," + o[3] + ")";
      },
      /**
       * Returns color representation in HSL format
       * @return {String} ex: hsl(0-360,0%-100%,0%-100%)
       */
      toHsl: function() {
        var o = this.getSource(), h = this._rgbToHsl(o[0], o[1], o[2]);
        return "hsl(" + h[0] + "," + h[1] + "%," + h[2] + "%)";
      },
      /**
       * Returns color representation in HSLA format
       * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)
       */
      toHsla: function() {
        var o = this.getSource(), h = this._rgbToHsl(o[0], o[1], o[2]);
        return "hsla(" + h[0] + "," + h[1] + "%," + h[2] + "%," + o[3] + ")";
      },
      /**
       * Returns color representation in HEX format
       * @return {String} ex: FF5555
       */
      toHex: function() {
        var o = this.getSource(), h, u, d;
        return h = o[0].toString(16), h = h.length === 1 ? "0" + h : h, u = o[1].toString(16), u = u.length === 1 ? "0" + u : u, d = o[2].toString(16), d = d.length === 1 ? "0" + d : d, h.toUpperCase() + u.toUpperCase() + d.toUpperCase();
      },
      /**
       * Returns color representation in HEXA format
       * @return {String} ex: FF5555CC
       */
      toHexa: function() {
        var o = this.getSource(), h;
        return h = Math.round(o[3] * 255), h = h.toString(16), h = h.length === 1 ? "0" + h : h, this.toHex() + h.toUpperCase();
      },
      /**
       * Gets value of alpha channel for this color
       * @return {Number} 0-1
       */
      getAlpha: function() {
        return this.getSource()[3];
      },
      /**
       * Sets value of alpha channel for this color
       * @param {Number} alpha Alpha value 0-1
       * @return {fabric.Color} thisArg
       */
      setAlpha: function(o) {
        var h = this.getSource();
        return h[3] = o, this.setSource(h), this;
      },
      /**
       * Transforms color to its grayscale representation
       * @return {fabric.Color} thisArg
       */
      toGrayscale: function() {
        var o = this.getSource(), h = parseInt((o[0] * 0.3 + o[1] * 0.59 + o[2] * 0.11).toFixed(0), 10), u = o[3];
        return this.setSource([h, h, h, u]), this;
      },
      /**
       * Transforms color to its black and white representation
       * @param {Number} threshold
       * @return {fabric.Color} thisArg
       */
      toBlackWhite: function(o) {
        var h = this.getSource(), u = (h[0] * 0.3 + h[1] * 0.59 + h[2] * 0.11).toFixed(0), d = h[3];
        return o = o || 127, u = Number(u) < Number(o) ? 0 : 255, this.setSource([u, u, u, d]), this;
      },
      /**
       * Overlays color with another color
       * @param {String|fabric.Color} otherColor
       * @return {fabric.Color} thisArg
       */
      overlayWith: function(o) {
        o instanceof c || (o = new c(o));
        var h = [], u = this.getAlpha(), d = 0.5, m = this.getSource(), p = o.getSource(), v;
        for (v = 0; v < 3; v++)
          h.push(Math.round(m[v] * (1 - d) + p[v] * d));
        return h[3] = u, this.setSource(h), this;
      }
    }, s.Color.reRGBa = /^rgba?\(\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*(?:\s*,\s*((?:\d*\.?\d+)?)\s*)?\)$/i, s.Color.reHSLa = /^hsla?\(\s*(\d{1,3})\s*,\s*(\d{1,3}\%)\s*,\s*(\d{1,3}\%)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/i, s.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i, s.Color.colorNameMap = {
      aliceblue: "#F0F8FF",
      antiquewhite: "#FAEBD7",
      aqua: "#00FFFF",
      aquamarine: "#7FFFD4",
      azure: "#F0FFFF",
      beige: "#F5F5DC",
      bisque: "#FFE4C4",
      black: "#000000",
      blanchedalmond: "#FFEBCD",
      blue: "#0000FF",
      blueviolet: "#8A2BE2",
      brown: "#A52A2A",
      burlywood: "#DEB887",
      cadetblue: "#5F9EA0",
      chartreuse: "#7FFF00",
      chocolate: "#D2691E",
      coral: "#FF7F50",
      cornflowerblue: "#6495ED",
      cornsilk: "#FFF8DC",
      crimson: "#DC143C",
      cyan: "#00FFFF",
      darkblue: "#00008B",
      darkcyan: "#008B8B",
      darkgoldenrod: "#B8860B",
      darkgray: "#A9A9A9",
      darkgrey: "#A9A9A9",
      darkgreen: "#006400",
      darkkhaki: "#BDB76B",
      darkmagenta: "#8B008B",
      darkolivegreen: "#556B2F",
      darkorange: "#FF8C00",
      darkorchid: "#9932CC",
      darkred: "#8B0000",
      darksalmon: "#E9967A",
      darkseagreen: "#8FBC8F",
      darkslateblue: "#483D8B",
      darkslategray: "#2F4F4F",
      darkslategrey: "#2F4F4F",
      darkturquoise: "#00CED1",
      darkviolet: "#9400D3",
      deeppink: "#FF1493",
      deepskyblue: "#00BFFF",
      dimgray: "#696969",
      dimgrey: "#696969",
      dodgerblue: "#1E90FF",
      firebrick: "#B22222",
      floralwhite: "#FFFAF0",
      forestgreen: "#228B22",
      fuchsia: "#FF00FF",
      gainsboro: "#DCDCDC",
      ghostwhite: "#F8F8FF",
      gold: "#FFD700",
      goldenrod: "#DAA520",
      gray: "#808080",
      grey: "#808080",
      green: "#008000",
      greenyellow: "#ADFF2F",
      honeydew: "#F0FFF0",
      hotpink: "#FF69B4",
      indianred: "#CD5C5C",
      indigo: "#4B0082",
      ivory: "#FFFFF0",
      khaki: "#F0E68C",
      lavender: "#E6E6FA",
      lavenderblush: "#FFF0F5",
      lawngreen: "#7CFC00",
      lemonchiffon: "#FFFACD",
      lightblue: "#ADD8E6",
      lightcoral: "#F08080",
      lightcyan: "#E0FFFF",
      lightgoldenrodyellow: "#FAFAD2",
      lightgray: "#D3D3D3",
      lightgrey: "#D3D3D3",
      lightgreen: "#90EE90",
      lightpink: "#FFB6C1",
      lightsalmon: "#FFA07A",
      lightseagreen: "#20B2AA",
      lightskyblue: "#87CEFA",
      lightslategray: "#778899",
      lightslategrey: "#778899",
      lightsteelblue: "#B0C4DE",
      lightyellow: "#FFFFE0",
      lime: "#00FF00",
      limegreen: "#32CD32",
      linen: "#FAF0E6",
      magenta: "#FF00FF",
      maroon: "#800000",
      mediumaquamarine: "#66CDAA",
      mediumblue: "#0000CD",
      mediumorchid: "#BA55D3",
      mediumpurple: "#9370DB",
      mediumseagreen: "#3CB371",
      mediumslateblue: "#7B68EE",
      mediumspringgreen: "#00FA9A",
      mediumturquoise: "#48D1CC",
      mediumvioletred: "#C71585",
      midnightblue: "#191970",
      mintcream: "#F5FFFA",
      mistyrose: "#FFE4E1",
      moccasin: "#FFE4B5",
      navajowhite: "#FFDEAD",
      navy: "#000080",
      oldlace: "#FDF5E6",
      olive: "#808000",
      olivedrab: "#6B8E23",
      orange: "#FFA500",
      orangered: "#FF4500",
      orchid: "#DA70D6",
      palegoldenrod: "#EEE8AA",
      palegreen: "#98FB98",
      paleturquoise: "#AFEEEE",
      palevioletred: "#DB7093",
      papayawhip: "#FFEFD5",
      peachpuff: "#FFDAB9",
      peru: "#CD853F",
      pink: "#FFC0CB",
      plum: "#DDA0DD",
      powderblue: "#B0E0E6",
      purple: "#800080",
      rebeccapurple: "#663399",
      red: "#FF0000",
      rosybrown: "#BC8F8F",
      royalblue: "#4169E1",
      saddlebrown: "#8B4513",
      salmon: "#FA8072",
      sandybrown: "#F4A460",
      seagreen: "#2E8B57",
      seashell: "#FFF5EE",
      sienna: "#A0522D",
      silver: "#C0C0C0",
      skyblue: "#87CEEB",
      slateblue: "#6A5ACD",
      slategray: "#708090",
      slategrey: "#708090",
      snow: "#FFFAFA",
      springgreen: "#00FF7F",
      steelblue: "#4682B4",
      tan: "#D2B48C",
      teal: "#008080",
      thistle: "#D8BFD8",
      tomato: "#FF6347",
      turquoise: "#40E0D0",
      violet: "#EE82EE",
      wheat: "#F5DEB3",
      white: "#FFFFFF",
      whitesmoke: "#F5F5F5",
      yellow: "#FFFF00",
      yellowgreen: "#9ACD32"
    };
    function f(o, h, u) {
      return u < 0 && (u += 1), u > 1 && (u -= 1), u < 1 / 6 ? o + (h - o) * 6 * u : u < 1 / 2 ? h : u < 2 / 3 ? o + (h - o) * (2 / 3 - u) * 6 : o;
    }
    s.Color.fromRgb = function(o) {
      return c.fromSource(c.sourceFromRgb(o));
    }, s.Color.sourceFromRgb = function(o) {
      var h = o.match(c.reRGBa);
      if (h) {
        var u = parseInt(h[1], 10) / (/%$/.test(h[1]) ? 100 : 1) * (/%$/.test(h[1]) ? 255 : 1), d = parseInt(h[2], 10) / (/%$/.test(h[2]) ? 100 : 1) * (/%$/.test(h[2]) ? 255 : 1), m = parseInt(h[3], 10) / (/%$/.test(h[3]) ? 100 : 1) * (/%$/.test(h[3]) ? 255 : 1);
        return [
          parseInt(u, 10),
          parseInt(d, 10),
          parseInt(m, 10),
          h[4] ? parseFloat(h[4]) : 1
        ];
      }
    }, s.Color.fromRgba = c.fromRgb, s.Color.fromHsl = function(o) {
      return c.fromSource(c.sourceFromHsl(o));
    }, s.Color.sourceFromHsl = function(o) {
      var h = o.match(c.reHSLa);
      if (h) {
        var u = (parseFloat(h[1]) % 360 + 360) % 360 / 360, d = parseFloat(h[2]) / (/%$/.test(h[2]) ? 100 : 1), m = parseFloat(h[3]) / (/%$/.test(h[3]) ? 100 : 1), p, v, b;
        if (d === 0)
          p = v = b = m;
        else {
          var y = m <= 0.5 ? m * (d + 1) : m + d - m * d, w = m * 2 - y;
          p = f(w, y, u + 1 / 3), v = f(w, y, u), b = f(w, y, u - 1 / 3);
        }
        return [
          Math.round(p * 255),
          Math.round(v * 255),
          Math.round(b * 255),
          h[4] ? parseFloat(h[4]) : 1
        ];
      }
    }, s.Color.fromHsla = c.fromHsl, s.Color.fromHex = function(o) {
      return c.fromSource(c.sourceFromHex(o));
    }, s.Color.sourceFromHex = function(o) {
      if (o.match(c.reHex)) {
        var h = o.slice(o.indexOf("#") + 1), u = h.length === 3 || h.length === 4, d = h.length === 8 || h.length === 4, m = u ? h.charAt(0) + h.charAt(0) : h.substring(0, 2), p = u ? h.charAt(1) + h.charAt(1) : h.substring(2, 4), v = u ? h.charAt(2) + h.charAt(2) : h.substring(4, 6), b = d ? u ? h.charAt(3) + h.charAt(3) : h.substring(6, 8) : "FF";
        return [
          parseInt(m, 16),
          parseInt(p, 16),
          parseInt(v, 16),
          parseFloat((parseInt(b, 16) / 255).toFixed(2))
        ];
      }
    }, s.Color.fromSource = function(o) {
      var h = new c();
      return h.setSource(o), h;
    };
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = ["e", "se", "s", "sw", "w", "nw", "n", "ne", "e"], f = ["ns", "nesw", "ew", "nwse"], o = {}, h = "left", u = "top", d = "right", m = "bottom", p = "center", v = {
      top: m,
      bottom: u,
      left: d,
      right: h,
      center: p
    }, b = s.util.radiansToDegrees, y = Math.sign || function(W) {
      return (W > 0) - (W < 0) || +W;
    };
    function w(W, B) {
      var X = W.angle + b(Math.atan2(B.y, B.x)) + 360;
      return Math.round(X % 360 / 45);
    }
    function x(W, B) {
      var X = B.transform.target, Q = X.canvas, z = s.util.object.clone(B);
      z.target = X, Q && Q.fire("object:" + W, z), X.fire(W, B);
    }
    function _(W, B) {
      var X = B.canvas, Q = X.uniScaleKey, z = W[Q];
      return X.uniformScaling && !z || !X.uniformScaling && z;
    }
    function S(W) {
      return W.originX === p && W.originY === p;
    }
    function k(W, B, X) {
      var Q = W.lockScalingX, z = W.lockScalingY;
      return !!(Q && z || !B && (Q || z) && X || Q && B === "x" || z && B === "y");
    }
    function F(W, B, X) {
      var Q = "not-allowed", z = _(W, X), Y = "";
      if (B.x !== 0 && B.y === 0 ? Y = "x" : B.x === 0 && B.y !== 0 && (Y = "y"), k(X, Y, z))
        return Q;
      var ae = w(X, B);
      return c[ae] + "-resize";
    }
    function L(W, B, X) {
      var Q = "not-allowed";
      if (B.x !== 0 && X.lockSkewingY || B.y !== 0 && X.lockSkewingX)
        return Q;
      var z = w(X, B) % 4;
      return f[z] + "-resize";
    }
    function j(W, B, X) {
      return W[X.canvas.altActionKey] ? o.skewCursorStyleHandler(W, B, X) : o.scaleCursorStyleHandler(W, B, X);
    }
    function G(W, B, X) {
      var Q = W[X.canvas.altActionKey];
      if (B.x === 0)
        return Q ? "skewX" : "scaleY";
      if (B.y === 0)
        return Q ? "skewY" : "scaleX";
    }
    function te(W, B, X) {
      return X.lockRotation ? "not-allowed" : B.cursorStyle;
    }
    function U(W, B, X, Q) {
      return {
        e: W,
        transform: B,
        pointer: {
          x: X,
          y: Q
        }
      };
    }
    function K(W) {
      return function(B, X, Q, z) {
        var Y = X.target, ae = Y.getCenterPoint(), ye = Y.translateToOriginPoint(ae, X.originX, X.originY), me = W(B, X, Q, z);
        return Y.setPositionByOrigin(ye, X.originX, X.originY), me;
      };
    }
    function re(W, B) {
      return function(X, Q, z, Y) {
        var ae = B(X, Q, z, Y);
        return ae && x(W, U(X, Q, z, Y)), ae;
      };
    }
    function ne(W, B, X, Q, z) {
      var Y = W.target, ae = Y.controls[W.corner], ye = Y.canvas.getZoom(), me = Y.padding / ye, J = Y.toLocalPoint(new s.Point(Q, z), B, X);
      return J.x >= me && (J.x -= me), J.x <= -me && (J.x += me), J.y >= me && (J.y -= me), J.y <= me && (J.y += me), J.x -= ae.offsetX, J.y -= ae.offsetY, J;
    }
    function se(W) {
      return W.flipX !== W.flipY;
    }
    function T(W, B, X, Q, z) {
      if (W[B] !== 0) {
        var Y = W._getTransformedDimensions()[Q], ae = z / Y * W[X];
        W.set(X, ae);
      }
    }
    function P(W, B, X, Q) {
      var z = B.target, Y = z._getTransformedDimensions(0, z.skewY), ae = ne(B, B.originX, B.originY, X, Q), ye = Math.abs(ae.x * 2) - Y.x, me = z.skewX, J;
      ye < 2 ? J = 0 : (J = b(
        Math.atan2(ye / z.scaleX, Y.y / z.scaleY)
      ), B.originX === h && B.originY === m && (J = -J), B.originX === d && B.originY === u && (J = -J), se(z) && (J = -J));
      var pe = me !== J;
      if (pe) {
        var _e = z._getTransformedDimensions().y;
        z.set("skewX", J), T(z, "skewY", "scaleY", "y", _e);
      }
      return pe;
    }
    function D(W, B, X, Q) {
      var z = B.target, Y = z._getTransformedDimensions(z.skewX, 0), ae = ne(B, B.originX, B.originY, X, Q), ye = Math.abs(ae.y * 2) - Y.y, me = z.skewY, J;
      ye < 2 ? J = 0 : (J = b(
        Math.atan2(ye / z.scaleY, Y.x / z.scaleX)
      ), B.originX === h && B.originY === m && (J = -J), B.originX === d && B.originY === u && (J = -J), se(z) && (J = -J));
      var pe = me !== J;
      if (pe) {
        var _e = z._getTransformedDimensions().x;
        z.set("skewY", J), T(z, "skewX", "scaleX", "x", _e);
      }
      return pe;
    }
    function M(W, B, X, Q) {
      var z = B.target, Y = z.skewX, ae, ye = B.originY;
      if (z.lockSkewingX)
        return !1;
      if (Y === 0) {
        var me = ne(B, p, p, X, Q);
        me.x > 0 ? ae = h : ae = d;
      } else
        Y > 0 && (ae = ye === u ? h : d), Y < 0 && (ae = ye === u ? d : h), se(z) && (ae = ae === h ? d : h);
      B.originX = ae;
      var J = re("skewing", K(P));
      return J(W, B, X, Q);
    }
    function $(W, B, X, Q) {
      var z = B.target, Y = z.skewY, ae, ye = B.originX;
      if (z.lockSkewingY)
        return !1;
      if (Y === 0) {
        var me = ne(B, p, p, X, Q);
        me.y > 0 ? ae = u : ae = m;
      } else
        Y > 0 && (ae = ye === h ? u : m), Y < 0 && (ae = ye === h ? m : u), se(z) && (ae = ae === u ? m : u);
      B.originY = ae;
      var J = re("skewing", K(D));
      return J(W, B, X, Q);
    }
    function A(W, B, X, Q) {
      var z = B, Y = z.target, ae = Y.translateToOriginPoint(Y.getCenterPoint(), z.originX, z.originY);
      if (Y.lockRotation)
        return !1;
      var ye = Math.atan2(z.ey - ae.y, z.ex - ae.x), me = Math.atan2(Q - ae.y, X - ae.x), J = b(me - ye + z.theta), pe = !0;
      if (Y.snapAngle > 0) {
        var _e = Y.snapAngle, De = Y.snapThreshold || _e, je = Math.ceil(J / _e) * _e, Le = Math.floor(J / _e) * _e;
        Math.abs(J - Le) < De ? J = Le : Math.abs(J - je) < De && (J = je);
      }
      return J < 0 && (J = 360 + J), J %= 360, pe = Y.angle !== J, Y.angle = J, pe;
    }
    function E(W, B, X, Q, z) {
      z = z || {};
      var Y = B.target, ae = Y.lockScalingX, ye = Y.lockScalingY, me = z.by, J, pe, _e, De, je = _(W, Y), Le = k(Y, me, je), mt, Ke, nn = B.gestureScale;
      if (Le)
        return !1;
      if (nn)
        pe = B.scaleX * nn, _e = B.scaleY * nn;
      else {
        if (J = ne(B, B.originX, B.originY, X, Q), mt = me !== "y" ? y(J.x) : 1, Ke = me !== "x" ? y(J.y) : 1, B.signX || (B.signX = mt), B.signY || (B.signY = Ke), Y.lockScalingFlip && (B.signX !== mt || B.signY !== Ke))
          return !1;
        if (De = Y._getTransformedDimensions(), je && !me) {
          var Ri = Math.abs(J.x) + Math.abs(J.y), Jt = B.original, Sy = Math.abs(De.x * Jt.scaleX / Y.scaleX) + Math.abs(De.y * Jt.scaleY / Y.scaleY), bh = Ri / Sy;
          pe = Jt.scaleX * bh, _e = Jt.scaleY * bh;
        } else
          pe = Math.abs(J.x * Y.scaleX / De.x), _e = Math.abs(J.y * Y.scaleY / De.y);
        S(B) && (pe *= 2, _e *= 2), B.signX !== mt && me !== "y" && (B.originX = v[B.originX], pe *= -1, B.signX = mt), B.signY !== Ke && me !== "x" && (B.originY = v[B.originY], _e *= -1, B.signY = Ke);
      }
      var Ty = Y.scaleX, Ey = Y.scaleY;
      return me ? (me === "x" && Y.set("scaleX", pe), me === "y" && Y.set("scaleY", _e)) : (!ae && Y.set("scaleX", pe), !ye && Y.set("scaleY", _e)), Ty !== Y.scaleX || Ey !== Y.scaleY;
    }
    function R(W, B, X, Q) {
      return E(W, B, X, Q);
    }
    function N(W, B, X, Q) {
      return E(W, B, X, Q, { by: "x" });
    }
    function H(W, B, X, Q) {
      return E(W, B, X, Q, { by: "y" });
    }
    function V(W, B, X, Q) {
      return W[B.target.canvas.altActionKey] ? o.skewHandlerX(W, B, X, Q) : o.scalingY(W, B, X, Q);
    }
    function Z(W, B, X, Q) {
      return W[B.target.canvas.altActionKey] ? o.skewHandlerY(W, B, X, Q) : o.scalingX(W, B, X, Q);
    }
    function ee(W, B, X, Q) {
      var z = B.target, Y = ne(B, B.originX, B.originY, X, Q), ae = z.strokeWidth / (z.strokeUniform ? z.scaleX : 1), ye = S(B) ? 2 : 1, me = z.width, J = Math.abs(Y.x * ye / z.scaleX) - ae;
      return z.set("width", Math.max(J, 0)), me !== J;
    }
    function ue(W, B, X, Q) {
      var z = B.target, Y = X - B.offsetX, ae = Q - B.offsetY, ye = !z.get("lockMovementX") && z.left !== Y, me = !z.get("lockMovementY") && z.top !== ae;
      return ye && z.set("left", Y), me && z.set("top", ae), (ye || me) && x("moving", U(W, B, X, Q)), ye || me;
    }
    o.scaleCursorStyleHandler = F, o.skewCursorStyleHandler = L, o.scaleSkewCursorStyleHandler = j, o.rotationWithSnapping = re("rotating", K(A)), o.scalingEqually = re("scaling", K(R)), o.scalingX = re("scaling", K(N)), o.scalingY = re("scaling", K(H)), o.scalingYOrSkewingX = V, o.scalingXOrSkewingY = Z, o.changeWidth = re("resizing", K(ee)), o.skewHandlerX = M, o.skewHandlerY = $, o.dragHandler = ue, o.scaleOrSkewActionName = G, o.rotationStyleHandler = te, o.fireEvent = x, o.wrapWithFixedAnchor = K, o.wrapWithFireEvent = re, o.getLocalPoint = ne, s.controlsUtils = o;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.util.degreesToRadians, f = s.controlsUtils;
    function o(u, d, m, p, v) {
      p = p || {};
      var b = this.sizeX || p.cornerSize || v.cornerSize, y = this.sizeY || p.cornerSize || v.cornerSize, w = typeof p.transparentCorners < "u" ? p.transparentCorners : v.transparentCorners, x = w ? "stroke" : "fill", _ = !w && (p.cornerStrokeColor || v.cornerStrokeColor), S = d, k = m, F;
      u.save(), u.fillStyle = p.cornerColor || v.cornerColor, u.strokeStyle = p.cornerStrokeColor || v.cornerStrokeColor, b > y ? (F = b, u.scale(1, y / b), k = m * b / y) : y > b ? (F = y, u.scale(b / y, 1), S = d * y / b) : F = b, u.lineWidth = 1, u.beginPath(), u.arc(S, k, F / 2, 0, 2 * Math.PI, !1), u[x](), _ && u.stroke(), u.restore();
    }
    function h(u, d, m, p, v) {
      p = p || {};
      var b = this.sizeX || p.cornerSize || v.cornerSize, y = this.sizeY || p.cornerSize || v.cornerSize, w = typeof p.transparentCorners < "u" ? p.transparentCorners : v.transparentCorners, x = w ? "stroke" : "fill", _ = !w && (p.cornerStrokeColor || v.cornerStrokeColor), S = b / 2, k = y / 2;
      u.save(), u.fillStyle = p.cornerColor || v.cornerColor, u.strokeStyle = p.cornerStrokeColor || v.cornerStrokeColor, u.lineWidth = 1, u.translate(d, m), u.rotate(c(v.angle)), u[x + "Rect"](-S, -k, b, y), _ && u.strokeRect(-S, -k, b, y), u.restore();
    }
    f.renderCircleControl = o, f.renderSquareControl = h;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {});
    function c(f) {
      for (var o in f)
        this[o] = f[o];
    }
    s.Control = c, s.Control.prototype = /** @lends fabric.Control.prototype */
    {
      /**
       * keep track of control visibility.
       * mainly for backward compatibility.
       * if you do not want to see a control, you can remove it
       * from the controlset.
       * @type {Boolean}
       * @default true
       */
      visible: !0,
      /**
       * Name of the action that the control will likely execute.
       * This is optional. FabricJS uses to identify what the user is doing for some
       * extra optimizations. If you are writing a custom control and you want to know
       * somewhere else in the code what is going on, you can use this string here.
       * you can also provide a custom getActionName if your control run multiple actions
       * depending on some external state.
       * default to scale since is the most common, used on 4 corners by default
       * @type {String}
       * @default 'scale'
       */
      actionName: "scale",
      /**
       * Drawing angle of the control.
       * NOT used for now, but name marked as needed for internal logic
       * example: to reuse the same drawing function for different rotated controls
       * @type {Number}
       * @default 0
       */
      angle: 0,
      /**
       * Relative position of the control. X
       * 0,0 is the center of the Object, while -0.5 (left) or 0.5 (right) are the extremities
       * of the bounding box.
       * @type {Number}
       * @default 0
       */
      x: 0,
      /**
       * Relative position of the control. Y
       * 0,0 is the center of the Object, while -0.5 (top) or 0.5 (bottom) are the extremities
       * of the bounding box.
       * @type {Number}
       * @default 0
       */
      y: 0,
      /**
       * Horizontal offset of the control from the defined position. In pixels
       * Positive offset moves the control to the right, negative to the left.
       * It used when you want to have position of control that does not scale with
       * the bounding box. Example: rotation control is placed at x:0, y: 0.5 on
       * the boundindbox, with an offset of 30 pixels vertically. Those 30 pixels will
       * stay 30 pixels no matter how the object is big. Another example is having 2
       * controls in the corner, that stay in the same position when the object scale.
       * of the bounding box.
       * @type {Number}
       * @default 0
       */
      offsetX: 0,
      /**
       * Vertical offset of the control from the defined position. In pixels
       * Positive offset moves the control to the bottom, negative to the top.
       * @type {Number}
       * @default 0
       */
      offsetY: 0,
      /**
       * Sets the length of the control. If null, defaults to object's cornerSize.
       * Expects both sizeX and sizeY to be set when set.
       * @type {?Number}
       * @default null
       */
      sizeX: null,
      /**
       * Sets the height of the control. If null, defaults to object's cornerSize.
       * Expects both sizeX and sizeY to be set when set.
       * @type {?Number}
       * @default null
       */
      sizeY: null,
      /**
       * Sets the length of the touch area of the control. If null, defaults to object's touchCornerSize.
       * Expects both touchSizeX and touchSizeY to be set when set.
       * @type {?Number}
       * @default null
       */
      touchSizeX: null,
      /**
       * Sets the height of the touch area of the control. If null, defaults to object's touchCornerSize.
       * Expects both touchSizeX and touchSizeY to be set when set.
       * @type {?Number}
       * @default null
       */
      touchSizeY: null,
      /**
       * Css cursor style to display when the control is hovered.
       * if the method `cursorStyleHandler` is provided, this property is ignored.
       * @type {String}
       * @default 'crosshair'
       */
      cursorStyle: "crosshair",
      /**
       * If controls has an offsetY or offsetX, draw a line that connects
       * the control to the bounding box
       * @type {Boolean}
       * @default false
       */
      withConnection: !1,
      /**
       * The control actionHandler, provide one to handle action ( control being moved )
       * @param {Event} eventData the native mouse event
       * @param {Object} transformData properties of the current transform
       * @param {Number} x x position of the cursor
       * @param {Number} y y position of the cursor
       * @return {Boolean} true if the action/event modified the object
       */
      actionHandler: function() {
      },
      /**
       * The control handler for mouse down, provide one to handle mouse down on control
       * @param {Event} eventData the native mouse event
       * @param {Object} transformData properties of the current transform
       * @param {Number} x x position of the cursor
       * @param {Number} y y position of the cursor
       * @return {Boolean} true if the action/event modified the object
       */
      mouseDownHandler: function() {
      },
      /**
       * The control mouseUpHandler, provide one to handle an effect on mouse up.
       * @param {Event} eventData the native mouse event
       * @param {Object} transformData properties of the current transform
       * @param {Number} x x position of the cursor
       * @param {Number} y y position of the cursor
       * @return {Boolean} true if the action/event modified the object
       */
      mouseUpHandler: function() {
      },
      /**
       * Returns control actionHandler
       * @param {Event} eventData the native mouse event
       * @param {fabric.Object} fabricObject on which the control is displayed
       * @param {fabric.Control} control control for which the action handler is being asked
       * @return {Function} the action handler
       */
      getActionHandler: function() {
        return this.actionHandler;
      },
      /**
       * Returns control mouseDown handler
       * @param {Event} eventData the native mouse event
       * @param {fabric.Object} fabricObject on which the control is displayed
       * @param {fabric.Control} control control for which the action handler is being asked
       * @return {Function} the action handler
       */
      getMouseDownHandler: function() {
        return this.mouseDownHandler;
      },
      /**
       * Returns control mouseUp handler
       * @param {Event} eventData the native mouse event
       * @param {fabric.Object} fabricObject on which the control is displayed
       * @param {fabric.Control} control control for which the action handler is being asked
       * @return {Function} the action handler
       */
      getMouseUpHandler: function() {
        return this.mouseUpHandler;
      },
      /**
       * Returns control cursorStyle for css using cursorStyle. If you need a more elaborate
       * function you can pass one in the constructor
       * the cursorStyle property
       * @param {Event} eventData the native mouse event
       * @param {fabric.Control} control the current control ( likely this)
       * @param {fabric.Object} object on which the control is displayed
       * @return {String}
       */
      cursorStyleHandler: function(f, o) {
        return o.cursorStyle;
      },
      /**
       * Returns the action name. The basic implementation just return the actionName property.
       * @param {Event} eventData the native mouse event
       * @param {fabric.Control} control the current control ( likely this)
       * @param {fabric.Object} object on which the control is displayed
       * @return {String}
       */
      getActionName: function(f, o) {
        return o.actionName;
      },
      /**
       * Returns controls visibility
       * @param {fabric.Object} object on which the control is displayed
       * @param {String} controlKey key where the control is memorized on the
       * @return {Boolean}
       */
      getVisibility: function(f, o) {
        var h = f._controlsVisibility;
        return h && typeof h[o] < "u" ? h[o] : this.visible;
      },
      /**
       * Sets controls visibility
       * @param {Boolean} visibility for the object
       * @return {Void}
       */
      setVisibility: function(f) {
        this.visible = f;
      },
      positionHandler: function(f, o) {
        var h = s.util.transformPoint({
          x: this.x * f.x + this.offsetX,
          y: this.y * f.y + this.offsetY
        }, o);
        return h;
      },
      /**
       * Returns the coords for this control based on object values.
       * @param {Number} objectAngle angle from the fabric object holding the control
       * @param {Number} objectCornerSize cornerSize from the fabric object holding the control (or touchCornerSize if
       *   isTouch is true)
       * @param {Number} centerX x coordinate where the control center should be
       * @param {Number} centerY y coordinate where the control center should be
       * @param {boolean} isTouch true if touch corner, false if normal corner
       */
      calcCornerCoords: function(f, o, h, u, d) {
        var m, p, v, b, y = d ? this.touchSizeX : this.sizeX, w = d ? this.touchSizeY : this.sizeY;
        if (y && w && y !== w) {
          var x = Math.atan2(w, y), _ = Math.sqrt(y * y + w * w) / 2, S = x - s.util.degreesToRadians(f), k = Math.PI / 2 - x - s.util.degreesToRadians(f);
          m = _ * s.util.cos(S), p = _ * s.util.sin(S), v = _ * s.util.cos(k), b = _ * s.util.sin(k);
        } else {
          var F = y && w ? y : o;
          _ = F * 0.7071067812;
          var S = s.util.degreesToRadians(45 - f);
          m = v = _ * s.util.cos(S), p = b = _ * s.util.sin(S);
        }
        return {
          tl: {
            x: h - b,
            y: u - v
          },
          tr: {
            x: h + m,
            y: u - p
          },
          bl: {
            x: h - m,
            y: u + p
          },
          br: {
            x: h + b,
            y: u + v
          }
        };
      },
      /**
      * Render function for the control.
      * When this function runs the context is unscaled. unrotate. Just retina scaled.
      * all the functions will have to translate to the point left,top before starting Drawing
      * if they want to draw a control where the position is detected.
      * left and top are the result of the positionHandler function
      * @param {RenderingContext2D} ctx the context where the control will be drawn
      * @param {Number} left position of the canvas where we are about to render the control.
      * @param {Number} top position of the canvas where we are about to render the control.
      * @param {Object} styleOverride
      * @param {fabric.Object} fabricObject the object where the control is about to be rendered
      */
      render: function(f, o, h, u, d) {
        switch (u = u || {}, u.cornerStyle || d.cornerStyle) {
          case "circle":
            s.controlsUtils.renderCircleControl.call(this, f, o, h, u, d);
            break;
          default:
            s.controlsUtils.renderSquareControl.call(this, f, o, h, u, d);
        }
      }
    };
  }(t), function() {
    function a(h, u) {
      var d = h.getAttribute("style"), m = h.getAttribute("offset") || 0, p, v, b, y;
      if (m = parseFloat(m) / (/%$/.test(m) ? 100 : 1), m = m < 0 ? 0 : m > 1 ? 1 : m, d) {
        var w = d.split(/\s*;\s*/);
        for (w[w.length - 1] === "" && w.pop(), y = w.length; y--; ) {
          var x = w[y].split(/\s*:\s*/), _ = x[0].trim(), S = x[1].trim();
          _ === "stop-color" ? p = S : _ === "stop-opacity" && (b = S);
        }
      }
      return p || (p = h.getAttribute("stop-color") || "rgb(0,0,0)"), b || (b = h.getAttribute("stop-opacity")), p = new e.Color(p), v = p.getAlpha(), b = isNaN(parseFloat(b)) ? 1 : parseFloat(b), b *= v * u, {
        offset: m,
        color: p.toRgb(),
        opacity: b
      };
    }
    function s(h) {
      return {
        x1: h.getAttribute("x1") || 0,
        y1: h.getAttribute("y1") || 0,
        x2: h.getAttribute("x2") || "100%",
        y2: h.getAttribute("y2") || 0
      };
    }
    function c(h) {
      return {
        x1: h.getAttribute("fx") || h.getAttribute("cx") || "50%",
        y1: h.getAttribute("fy") || h.getAttribute("cy") || "50%",
        r1: 0,
        x2: h.getAttribute("cx") || "50%",
        y2: h.getAttribute("cy") || "50%",
        r2: h.getAttribute("r") || "50%"
      };
    }
    var f = e.util.object.clone;
    e.Gradient = e.util.createClass(
      /** @lends fabric.Gradient.prototype */
      {
        /**
         * Horizontal offset for aligning gradients coming from SVG when outside pathgroups
         * @type Number
         * @default 0
         */
        offsetX: 0,
        /**
         * Vertical offset for aligning gradients coming from SVG when outside pathgroups
         * @type Number
         * @default 0
         */
        offsetY: 0,
        /**
         * A transform matrix to apply to the gradient before painting.
         * Imported from svg gradients, is not applied with the current transform in the center.
         * Before this transform is applied, the origin point is at the top left corner of the object
         * plus the addition of offsetY and offsetX.
         * @type Number[]
         * @default null
         */
        gradientTransform: null,
        /**
         * coordinates units for coords.
         * If `pixels`, the number of coords are in the same unit of width / height.
         * If set as `percentage` the coords are still a number, but 1 means 100% of width
         * for the X and 100% of the height for the y. It can be bigger than 1 and negative.
         * allowed values pixels or percentage.
         * @type String
         * @default 'pixels'
         */
        gradientUnits: "pixels",
        /**
         * Gradient type linear or radial
         * @type String
         * @default 'pixels'
         */
        type: "linear",
        /**
         * Constructor
         * @param {Object} options Options object with type, coords, gradientUnits and colorStops
         * @param {Object} [options.type] gradient type linear or radial
         * @param {Object} [options.gradientUnits] gradient units
         * @param {Object} [options.offsetX] SVG import compatibility
         * @param {Object} [options.offsetY] SVG import compatibility
         * @param {Object[]} options.colorStops contains the colorstops.
         * @param {Object} options.coords contains the coords of the gradient
         * @param {Number} [options.coords.x1] X coordiante of the first point for linear or of the focal point for radial
         * @param {Number} [options.coords.y1] Y coordiante of the first point for linear or of the focal point for radial
         * @param {Number} [options.coords.x2] X coordiante of the second point for linear or of the center point for radial
         * @param {Number} [options.coords.y2] Y coordiante of the second point for linear or of the center point for radial
         * @param {Number} [options.coords.r1] only for radial gradient, radius of the inner circle
         * @param {Number} [options.coords.r2] only for radial gradient, radius of the external circle
         * @return {fabric.Gradient} thisArg
         */
        initialize: function(h) {
          h || (h = {}), h.coords || (h.coords = {});
          var u, d = this;
          Object.keys(h).forEach(function(m) {
            d[m] = h[m];
          }), this.id ? this.id += "_" + e.Object.__uid++ : this.id = e.Object.__uid++, u = {
            x1: h.coords.x1 || 0,
            y1: h.coords.y1 || 0,
            x2: h.coords.x2 || 0,
            y2: h.coords.y2 || 0
          }, this.type === "radial" && (u.r1 = h.coords.r1 || 0, u.r2 = h.coords.r2 || 0), this.coords = u, this.colorStops = h.colorStops.slice();
        },
        /**
         * Adds another colorStop
         * @param {Object} colorStop Object with offset and color
         * @return {fabric.Gradient} thisArg
         */
        addColorStop: function(h) {
          for (var u in h) {
            var d = new e.Color(h[u]);
            this.colorStops.push({
              offset: parseFloat(u),
              color: d.toRgb(),
              opacity: d.getAlpha()
            });
          }
          return this;
        },
        /**
         * Returns object representation of a gradient
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object}
         */
        toObject: function(h) {
          var u = {
            type: this.type,
            coords: this.coords,
            colorStops: this.colorStops,
            offsetX: this.offsetX,
            offsetY: this.offsetY,
            gradientUnits: this.gradientUnits,
            gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform
          };
          return e.util.populateWithProperties(this, u, h), u;
        },
        /* _TO_SVG_START_ */
        /**
         * Returns SVG representation of an gradient
         * @param {Object} object Object to create a gradient for
         * @return {String} SVG representation of an gradient (linear/radial)
         */
        toSVG: function(h, v) {
          var d = f(this.coords, !0), m, p, v = v || {}, b, y, w = f(this.colorStops, !0), x = d.r1 > d.r2, _ = this.gradientTransform ? this.gradientTransform.concat() : e.iMatrix.concat(), S = -this.offsetX, k = -this.offsetY, F = !!v.additionalTransform, L = this.gradientUnits === "pixels" ? "userSpaceOnUse" : "objectBoundingBox";
          if (w.sort(function(K, re) {
            return K.offset - re.offset;
          }), L === "objectBoundingBox" ? (S /= h.width, k /= h.height) : (S += h.width / 2, k += h.height / 2), h.type === "path" && this.gradientUnits !== "percentage" && (S -= h.pathOffset.x, k -= h.pathOffset.y), _[4] -= S, _[5] -= k, y = 'id="SVGID_' + this.id + '" gradientUnits="' + L + '"', y += ' gradientTransform="' + (F ? v.additionalTransform + " " : "") + e.util.matrixToSVG(_) + '" ', this.type === "linear" ? b = [
            "<linearGradient ",
            y,
            ' x1="',
            d.x1,
            '" y1="',
            d.y1,
            '" x2="',
            d.x2,
            '" y2="',
            d.y2,
            `">
`
          ] : this.type === "radial" && (b = [
            "<radialGradient ",
            y,
            ' cx="',
            x ? d.x1 : d.x2,
            '" cy="',
            x ? d.y1 : d.y2,
            '" r="',
            x ? d.r1 : d.r2,
            '" fx="',
            x ? d.x2 : d.x1,
            '" fy="',
            x ? d.y2 : d.y1,
            `">
`
          ]), this.type === "radial") {
            if (x)
              for (w = w.concat(), w.reverse(), m = 0, p = w.length; m < p; m++)
                w[m].offset = 1 - w[m].offset;
            var j = Math.min(d.r1, d.r2);
            if (j > 0) {
              var G = Math.max(d.r1, d.r2), te = j / G;
              for (m = 0, p = w.length; m < p; m++)
                w[m].offset += te * (1 - w[m].offset);
            }
          }
          for (m = 0, p = w.length; m < p; m++) {
            var U = w[m];
            b.push(
              "<stop ",
              'offset="',
              U.offset * 100 + "%",
              '" style="stop-color:',
              U.color,
              typeof U.opacity < "u" ? ";stop-opacity: " + U.opacity : ";",
              `"/>
`
            );
          }
          return b.push(this.type === "linear" ? `</linearGradient>
` : `</radialGradient>
`), b.join("");
        },
        /* _TO_SVG_END_ */
        /**
         * Returns an instance of CanvasGradient
         * @param {CanvasRenderingContext2D} ctx Context to render on
         * @return {CanvasGradient}
         */
        toLive: function(h) {
          var u, d = e.util.object.clone(this.coords), m, p;
          if (this.type) {
            for (this.type === "linear" ? u = h.createLinearGradient(
              d.x1,
              d.y1,
              d.x2,
              d.y2
            ) : this.type === "radial" && (u = h.createRadialGradient(
              d.x1,
              d.y1,
              d.r1,
              d.x2,
              d.y2,
              d.r2
            )), m = 0, p = this.colorStops.length; m < p; m++) {
              var v = this.colorStops[m].color, b = this.colorStops[m].opacity, y = this.colorStops[m].offset;
              typeof b < "u" && (v = new e.Color(v).setAlpha(b).toRgba()), u.addColorStop(y, v);
            }
            return u;
          }
        }
      }
    ), e.util.object.extend(e.Gradient, {
      /* _FROM_SVG_START_ */
      /**
       * Returns {@link fabric.Gradient} instance from an SVG element
       * @static
       * @memberOf fabric.Gradient
       * @param {SVGGradientElement} el SVG gradient element
       * @param {fabric.Object} instance
       * @param {String} opacityAttr A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.
       * @param {Object} svgOptions an object containing the size of the SVG in order to parse correctly gradients
       * that uses gradientUnits as 'userSpaceOnUse' and percentages.
       * @param {Object.number} viewBoxWidth width part of the viewBox attribute on svg
       * @param {Object.number} viewBoxHeight height part of the viewBox attribute on svg
       * @param {Object.number} width width part of the svg tag if viewBox is not specified
       * @param {Object.number} height height part of the svg tag if viewBox is not specified
       * @return {fabric.Gradient} Gradient instance
       * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement
       * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement
       */
      fromElement: function(h, u, d, m) {
        var p = parseFloat(d) / (/%$/.test(d) ? 100 : 1);
        p = p < 0 ? 0 : p > 1 ? 1 : p, isNaN(p) && (p = 1);
        var v = h.getElementsByTagName("stop"), b, y = h.getAttribute("gradientUnits") === "userSpaceOnUse" ? "pixels" : "percentage", w = h.getAttribute("gradientTransform") || "", x = [], _, S, k = 0, F = 0, L;
        for (h.nodeName === "linearGradient" || h.nodeName === "LINEARGRADIENT" ? (b = "linear", _ = s(h)) : (b = "radial", _ = c(h)), S = v.length; S--; )
          x.push(a(v[S], p));
        L = e.parseTransformAttribute(w), o(u, _, m, y), y === "pixels" && (k = -u.left, F = -u.top);
        var j = new e.Gradient({
          id: h.getAttribute("id"),
          type: b,
          coords: _,
          colorStops: x,
          gradientUnits: y,
          gradientTransform: L,
          offsetX: k,
          offsetY: F
        });
        return j;
      }
      /* _FROM_SVG_END_ */
    });
    function o(h, u, d, m) {
      var p, v;
      Object.keys(u).forEach(function(b) {
        p = u[b], p === "Infinity" ? v = 1 : p === "-Infinity" ? v = 0 : (v = parseFloat(u[b], 10), typeof p == "string" && /^(\d+\.\d+)%|(\d+)%$/.test(p) && (v *= 0.01, m === "pixels" && ((b === "x1" || b === "x2" || b === "r2") && (v *= d.viewBoxWidth || d.width), (b === "y1" || b === "y2") && (v *= d.viewBoxHeight || d.height)))), u[b] = v;
      });
    }
  }(), function() {
    var a = e.util.toFixed;
    e.Pattern = e.util.createClass(
      /** @lends fabric.Pattern.prototype */
      {
        /**
         * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)
         * @type String
         * @default
         */
        repeat: "repeat",
        /**
         * Pattern horizontal offset from object's left/top corner
         * @type Number
         * @default
         */
        offsetX: 0,
        /**
         * Pattern vertical offset from object's left/top corner
         * @type Number
         * @default
         */
        offsetY: 0,
        /**
         * crossOrigin value (one of "", "anonymous", "use-credentials")
         * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes
         * @type String
         * @default
         */
        crossOrigin: "",
        /**
         * transform matrix to change the pattern, imported from svgs.
         * @type Array
         * @default
         */
        patternTransform: null,
        /**
         * Constructor
         * @param {Object} [options] Options object
         * @param {Function} [callback] function to invoke after callback init.
         * @return {fabric.Pattern} thisArg
         */
        initialize: function(s, c) {
          if (s || (s = {}), this.id = e.Object.__uid++, this.setOptions(s), !s.source || s.source && typeof s.source != "string") {
            c && c(this);
            return;
          } else {
            var f = this;
            this.source = e.util.createImage(), e.util.loadImage(s.source, function(o, h) {
              f.source = o, c && c(f, h);
            }, null, this.crossOrigin);
          }
        },
        /**
         * Returns object representation of a pattern
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} Object representation of a pattern instance
         */
        toObject: function(s) {
          var c = e.Object.NUM_FRACTION_DIGITS, f, o;
          return typeof this.source.src == "string" ? f = this.source.src : typeof this.source == "object" && this.source.toDataURL && (f = this.source.toDataURL()), o = {
            type: "pattern",
            source: f,
            repeat: this.repeat,
            crossOrigin: this.crossOrigin,
            offsetX: a(this.offsetX, c),
            offsetY: a(this.offsetY, c),
            patternTransform: this.patternTransform ? this.patternTransform.concat() : null
          }, e.util.populateWithProperties(this, o, s), o;
        },
        /* _TO_SVG_START_ */
        /**
         * Returns SVG representation of a pattern
         * @param {fabric.Object} object
         * @return {String} SVG representation of a pattern
         */
        toSVG: function(s) {
          var c = typeof this.source == "function" ? this.source() : this.source, f = c.width / s.width, o = c.height / s.height, h = this.offsetX / s.width, u = this.offsetY / s.height, d = "";
          return (this.repeat === "repeat-x" || this.repeat === "no-repeat") && (o = 1, u && (o += Math.abs(u))), (this.repeat === "repeat-y" || this.repeat === "no-repeat") && (f = 1, h && (f += Math.abs(h))), c.src ? d = c.src : c.toDataURL && (d = c.toDataURL()), '<pattern id="SVGID_' + this.id + '" x="' + h + '" y="' + u + '" width="' + f + '" height="' + o + `">
<image x="0" y="0" width="` + c.width + '" height="' + c.height + '" xlink:href="' + d + `"></image>
</pattern>
`;
        },
        /* _TO_SVG_END_ */
        setOptions: function(s) {
          for (var c in s)
            this[c] = s[c];
        },
        /**
         * Returns an instance of CanvasPattern
         * @param {CanvasRenderingContext2D} ctx Context to create pattern
         * @return {CanvasPattern}
         */
        toLive: function(s) {
          var c = this.source;
          return !c || typeof c.src < "u" && (!c.complete || c.naturalWidth === 0 || c.naturalHeight === 0) ? "" : s.createPattern(c, this.repeat);
        }
      }
    );
  }(), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.util.toFixed;
    if (s.Shadow) {
      s.warn("fabric.Shadow is already defined.");
      return;
    }
    s.Shadow = s.util.createClass(
      /** @lends fabric.Shadow.prototype */
      {
        /**
         * Shadow color
         * @type String
         * @default
         */
        color: "rgb(0,0,0)",
        /**
         * Shadow blur
         * @type Number
         */
        blur: 0,
        /**
         * Shadow horizontal offset
         * @type Number
         * @default
         */
        offsetX: 0,
        /**
         * Shadow vertical offset
         * @type Number
         * @default
         */
        offsetY: 0,
        /**
         * Whether the shadow should affect stroke operations
         * @type Boolean
         * @default
         */
        affectStroke: !1,
        /**
         * Indicates whether toObject should include default values
         * @type Boolean
         * @default
         */
        includeDefaultValues: !0,
        /**
         * When `false`, the shadow will scale with the object.
         * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.
         * default to false
         * @type Boolean
         * @default
         */
        nonScaling: !1,
        /**
         * Constructor
         * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. "rgba(0,0,0,0.2) 2px 2px 10px")
         * @return {fabric.Shadow} thisArg
         */
        initialize: function(f) {
          typeof f == "string" && (f = this._parseShadow(f));
          for (var o in f)
            this[o] = f[o];
          this.id = s.Object.__uid++;
        },
        /**
         * @private
         * @param {String} shadow Shadow value to parse
         * @return {Object} Shadow object with color, offsetX, offsetY and blur
         */
        _parseShadow: function(f) {
          var o = f.trim(), h = s.Shadow.reOffsetsAndBlur.exec(o) || [], u = o.replace(s.Shadow.reOffsetsAndBlur, "") || "rgb(0,0,0)";
          return {
            color: u.trim(),
            offsetX: parseFloat(h[1], 10) || 0,
            offsetY: parseFloat(h[2], 10) || 0,
            blur: parseFloat(h[3], 10) || 0
          };
        },
        /**
         * Returns a string representation of an instance
         * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow
         * @return {String} Returns CSS3 text-shadow declaration
         */
        toString: function() {
          return [this.offsetX, this.offsetY, this.blur, this.color].join("px ");
        },
        /* _TO_SVG_START_ */
        /**
         * Returns SVG representation of a shadow
         * @param {fabric.Object} object
         * @return {String} SVG representation of a shadow
         */
        toSVG: function(f) {
          var o = 40, h = 40, u = s.Object.NUM_FRACTION_DIGITS, d = s.util.rotateVector(
            { x: this.offsetX, y: this.offsetY },
            s.util.degreesToRadians(-f.angle)
          ), m = 20, p = new s.Color(this.color);
          return f.width && f.height && (o = c((Math.abs(d.x) + this.blur) / f.width, u) * 100 + m, h = c((Math.abs(d.y) + this.blur) / f.height, u) * 100 + m), f.flipX && (d.x *= -1), f.flipY && (d.y *= -1), '<filter id="SVGID_' + this.id + '" y="-' + h + '%" height="' + (100 + 2 * h) + '%" x="-' + o + '%" width="' + (100 + 2 * o) + `%" >
	<feGaussianBlur in="SourceAlpha" stdDeviation="` + c(this.blur ? this.blur / 2 : 0, u) + `"></feGaussianBlur>
	<feOffset dx="` + c(d.x, u) + '" dy="' + c(d.y, u) + `" result="oBlur" ></feOffset>
	<feFlood flood-color="` + p.toRgb() + '" flood-opacity="' + p.getAlpha() + `"/>
	<feComposite in2="oBlur" operator="in" />
	<feMerge>
		<feMergeNode></feMergeNode>
		<feMergeNode in="SourceGraphic"></feMergeNode>
	</feMerge>
</filter>
`;
        },
        /* _TO_SVG_END_ */
        /**
         * Returns object representation of a shadow
         * @return {Object} Object representation of a shadow instance
         */
        toObject: function() {
          if (this.includeDefaultValues)
            return {
              color: this.color,
              blur: this.blur,
              offsetX: this.offsetX,
              offsetY: this.offsetY,
              affectStroke: this.affectStroke,
              nonScaling: this.nonScaling
            };
          var f = {}, o = s.Shadow.prototype;
          return ["color", "blur", "offsetX", "offsetY", "affectStroke", "nonScaling"].forEach(function(h) {
            this[h] !== o[h] && (f[h] = this[h]);
          }, this), f;
        }
      }
    ), s.Shadow.reOffsetsAndBlur = /(?:\s|^)(-?\d+(?:\.\d*)?(?:px)?(?:\s?|$))?(-?\d+(?:\.\d*)?(?:px)?(?:\s?|$))?(\d+(?:\.\d*)?(?:px)?)?(?:\s?|$)(?:$|\s)/;
  }(t), function() {
    if (e.StaticCanvas) {
      e.warn("fabric.StaticCanvas is already defined.");
      return;
    }
    var a = e.util.object.extend, s = e.util.getElementOffset, c = e.util.removeFromArray, f = e.util.toFixed, o = e.util.transformPoint, h = e.util.invertTransform, u = e.util.getNodeCanvas, d = e.util.createCanvasElement, m = new Error("Could not initialize `canvas` element");
    e.StaticCanvas = e.util.createClass(
      e.CommonMethods,
      /** @lends fabric.StaticCanvas.prototype */
      {
        /**
         * Constructor
         * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on
         * @param {Object} [options] Options object
         * @return {Object} thisArg
         */
        initialize: function(p, v) {
          v || (v = {}), this.renderAndResetBound = this.renderAndReset.bind(this), this.requestRenderAllBound = this.requestRenderAll.bind(this), this._initStatic(p, v);
        },
        /**
         * Background color of canvas instance.
         * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.
         * @type {(String|fabric.Pattern)}
         * @default
         */
        backgroundColor: "",
        /**
         * Background image of canvas instance.
         * since 2.4.0 image caching is active, please when putting an image as background, add to the
         * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom
         * vale. As an alternative you can disable image objectCaching
         * @type fabric.Image
         * @default
         */
        backgroundImage: null,
        /**
         * Overlay color of canvas instance.
         * Should be set via {@link fabric.StaticCanvas#setOverlayColor}
         * @since 1.3.9
         * @type {(String|fabric.Pattern)}
         * @default
         */
        overlayColor: "",
        /**
         * Overlay image of canvas instance.
         * since 2.4.0 image caching is active, please when putting an image as overlay, add to the
         * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom
         * vale. As an alternative you can disable image objectCaching
         * @type fabric.Image
         * @default
         */
        overlayImage: null,
        /**
         * Indicates whether toObject/toDatalessObject should include default values
         * if set to false, takes precedence over the object value.
         * @type Boolean
         * @default
         */
        includeDefaultValues: !0,
        /**
         * Indicates whether objects' state should be saved
         * @type Boolean
         * @default
         */
        stateful: !1,
        /**
         * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},
         * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.
         * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once
         * since the renders are quequed and executed one per frame.
         * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )
         * Left default to true to do not break documentation and old app, fiddles.
         * @type Boolean
         * @default
         */
        renderOnAddRemove: !0,
        /**
         * Indicates whether object controls (borders/controls) are rendered above overlay image
         * @type Boolean
         * @default
         */
        controlsAboveOverlay: !1,
        /**
         * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas
         * @type Boolean
         * @default
         */
        allowTouchScrolling: !1,
        /**
         * Indicates whether this canvas will use image smoothing, this is on by default in browsers
         * @type Boolean
         * @default
         */
        imageSmoothingEnabled: !0,
        /**
         * The transformation (a Canvas 2D API transform matrix) which focuses the viewport
         * @type Array
         * @example <caption>Default transform</caption>
         * canvas.viewportTransform = [1, 0, 0, 1, 0, 0];
         * @example <caption>Scale by 70% and translate toward bottom-right by 50, without skewing</caption>
         * canvas.viewportTransform = [0.7, 0, 0, 0.7, 50, 50];
         * @default
         */
        viewportTransform: e.iMatrix.concat(),
        /**
         * if set to false background image is not affected by viewport transform
         * @since 1.6.3
         * @type Boolean
         * @default
         */
        backgroundVpt: !0,
        /**
         * if set to false overlya image is not affected by viewport transform
         * @since 1.6.3
         * @type Boolean
         * @default
         */
        overlayVpt: !0,
        /**
         * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens
         * @type Boolean
         * @default
         */
        enableRetinaScaling: !0,
        /**
         * Describe canvas element extension over design
         * properties are tl,tr,bl,br.
         * if canvas is not zoomed/panned those points are the four corner of canvas
         * if canvas is viewportTransformed you those points indicate the extension
         * of canvas element in plain untrasformed coordinates
         * The coordinates get updated with @method calcViewportBoundaries.
         * @memberOf fabric.StaticCanvas.prototype
         */
        vptCoords: {},
        /**
         * Based on vptCoords and object.aCoords, skip rendering of objects that
         * are not included in current viewport.
         * May greatly help in applications with crowded canvas and use of zoom/pan
         * If One of the corner of the bounding box of the object is on the canvas
         * the objects get rendered.
         * @memberOf fabric.StaticCanvas.prototype
         * @type Boolean
         * @default
         */
        skipOffscreen: !0,
        /**
         * a fabricObject that, without stroke define a clipping area with their shape. filled in black
         * the clipPath object gets used when the canvas has rendered, and the context is placed in the
         * top left corner of the canvas.
         * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true
         * @type fabric.Object
         */
        clipPath: void 0,
        /**
         * @private
         * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on
         * @param {Object} [options] Options object
         */
        _initStatic: function(p, v) {
          var b = this.requestRenderAllBound;
          this._objects = [], this._createLowerCanvas(p), this._initOptions(v), this.interactive || this._initRetinaScaling(), v.overlayImage && this.setOverlayImage(v.overlayImage, b), v.backgroundImage && this.setBackgroundImage(v.backgroundImage, b), v.backgroundColor && this.setBackgroundColor(v.backgroundColor, b), v.overlayColor && this.setOverlayColor(v.overlayColor, b), this.calcOffset();
        },
        /**
         * @private
         */
        _isRetinaScaling: function() {
          return e.devicePixelRatio > 1 && this.enableRetinaScaling;
        },
        /**
         * @private
         * @return {Number} retinaScaling if applied, otherwise 1;
         */
        getRetinaScaling: function() {
          return this._isRetinaScaling() ? Math.max(1, e.devicePixelRatio) : 1;
        },
        /**
         * @private
         */
        _initRetinaScaling: function() {
          if (this._isRetinaScaling()) {
            var p = e.devicePixelRatio;
            this.__initRetinaScaling(p, this.lowerCanvasEl, this.contextContainer), this.upperCanvasEl && this.__initRetinaScaling(p, this.upperCanvasEl, this.contextTop);
          }
        },
        __initRetinaScaling: function(p, v, b) {
          v.setAttribute("width", this.width * p), v.setAttribute("height", this.height * p), b.scale(p, p);
        },
        /**
         * Calculates canvas element offset relative to the document
         * This method is also attached as "resize" event handler of window
         * @return {fabric.Canvas} instance
         * @chainable
         */
        calcOffset: function() {
          return this._offset = s(this.lowerCanvasEl), this;
        },
        /**
         * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas
         * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to
         * @param {Function} callback callback to invoke when image is loaded and set as an overlay
         * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.
         * @return {fabric.Canvas} thisArg
         * @chainable
         * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}
         * @example <caption>Normal overlayImage with left/top = 0</caption>
         * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {
         *   // Needed to position overlayImage at 0/0
         *   originX: 'left',
         *   originY: 'top'
         * });
         * @example <caption>overlayImage with different properties</caption>
         * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {
         *   opacity: 0.5,
         *   angle: 45,
         *   left: 400,
         *   top: 400,
         *   originX: 'left',
         *   originY: 'top'
         * });
         * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>
         * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img, isError) {
         *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});
         *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));
         * });
         * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>
         * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {
         *   width: canvas.width,
         *   height: canvas.height,
         *   // Needed to position overlayImage at 0/0
         *   originX: 'left',
         *   originY: 'top'
         * });
         * @example <caption>overlayImage loaded from cross-origin</caption>
         * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {
         *   opacity: 0.5,
         *   angle: 45,
         *   left: 400,
         *   top: 400,
         *   originX: 'left',
         *   originY: 'top',
         *   crossOrigin: 'anonymous'
         * });
         */
        setOverlayImage: function(p, v, b) {
          return this.__setBgOverlayImage("overlayImage", p, v, b);
        },
        /**
         * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas
         * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to
         * @param {Function} callback Callback to invoke when image is loaded and set as background
         * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.
         * @return {fabric.Canvas} thisArg
         * @chainable
         * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}
         * @example <caption>Normal backgroundImage with left/top = 0</caption>
         * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {
         *   // Needed to position backgroundImage at 0/0
         *   originX: 'left',
         *   originY: 'top'
         * });
         * @example <caption>backgroundImage with different properties</caption>
         * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {
         *   opacity: 0.5,
         *   angle: 45,
         *   left: 400,
         *   top: 400,
         *   originX: 'left',
         *   originY: 'top'
         * });
         * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>
         * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img, isError) {
         *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});
         *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));
         * });
         * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>
         * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {
         *   width: canvas.width,
         *   height: canvas.height,
         *   // Needed to position backgroundImage at 0/0
         *   originX: 'left',
         *   originY: 'top'
         * });
         * @example <caption>backgroundImage loaded from cross-origin</caption>
         * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {
         *   opacity: 0.5,
         *   angle: 45,
         *   left: 400,
         *   top: 400,
         *   originX: 'left',
         *   originY: 'top',
         *   crossOrigin: 'anonymous'
         * });
         */
        // TODO: fix stretched examples
        setBackgroundImage: function(p, v, b) {
          return this.__setBgOverlayImage("backgroundImage", p, v, b);
        },
        /**
         * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas
         * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to
         * @param {Function} callback Callback to invoke when foreground color is set
         * @return {fabric.Canvas} thisArg
         * @chainable
         * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}
         * @example <caption>Normal overlayColor - color value</caption>
         * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));
         * @example <caption>fabric.Pattern used as overlayColor</caption>
         * canvas.setOverlayColor({
         *   source: 'http://fabricjs.com/assets/escheresque_ste.png'
         * }, canvas.renderAll.bind(canvas));
         * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>
         * canvas.setOverlayColor({
         *   source: 'http://fabricjs.com/assets/escheresque_ste.png',
         *   repeat: 'repeat',
         *   offsetX: 200,
         *   offsetY: 100
         * }, canvas.renderAll.bind(canvas));
         */
        setOverlayColor: function(p, v) {
          return this.__setBgOverlayColor("overlayColor", p, v);
        },
        /**
         * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas
         * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to
         * @param {Function} callback Callback to invoke when background color is set
         * @return {fabric.Canvas} thisArg
         * @chainable
         * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}
         * @example <caption>Normal backgroundColor - color value</caption>
         * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));
         * @example <caption>fabric.Pattern used as backgroundColor</caption>
         * canvas.setBackgroundColor({
         *   source: 'http://fabricjs.com/assets/escheresque_ste.png'
         * }, canvas.renderAll.bind(canvas));
         * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>
         * canvas.setBackgroundColor({
         *   source: 'http://fabricjs.com/assets/escheresque_ste.png',
         *   repeat: 'repeat',
         *   offsetX: 200,
         *   offsetY: 100
         * }, canvas.renderAll.bind(canvas));
         */
        setBackgroundColor: function(p, v) {
          return this.__setBgOverlayColor("backgroundColor", p, v);
        },
        /**
         * @private
         * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}
         * or {@link fabric.StaticCanvas#overlayImage|overlayImage})
         * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to
         * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay. The first argument is the created image, the second argument is a flag indicating whether an error occurred or not.
         * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.
         */
        __setBgOverlayImage: function(p, v, b, y) {
          return typeof v == "string" ? e.util.loadImage(v, function(w, x) {
            if (w) {
              var _ = new e.Image(w, y);
              this[p] = _, _.canvas = this;
            }
            b && b(w, x);
          }, this, y && y.crossOrigin) : (y && v.setOptions(y), this[p] = v, v && (v.canvas = this), b && b(v, !1)), this;
        },
        /**
         * @private
         * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}
         * or {@link fabric.StaticCanvas#overlayColor|overlayColor})
         * @param {(Object|String|null)} color Object with pattern information, color value or null
         * @param {Function} [callback] Callback is invoked when color is set
         */
        __setBgOverlayColor: function(p, v, b) {
          return this[p] = v, this._initGradient(v, p), this._initPattern(v, p, b), this;
        },
        /**
         * @private
         */
        _createCanvasElement: function() {
          var p = d();
          if (!p || (p.style || (p.style = {}), typeof p.getContext > "u"))
            throw m;
          return p;
        },
        /**
         * @private
         * @param {Object} [options] Options object
         */
        _initOptions: function(p) {
          var v = this.lowerCanvasEl;
          this._setOptions(p), this.width = this.width || parseInt(v.width, 10) || 0, this.height = this.height || parseInt(v.height, 10) || 0, this.lowerCanvasEl.style && (v.width = this.width, v.height = this.height, v.style.width = this.width + "px", v.style.height = this.height + "px", this.viewportTransform = this.viewportTransform.slice());
        },
        /**
         * Creates a bottom canvas
         * @private
         * @param {HTMLElement} [canvasEl]
         */
        _createLowerCanvas: function(p) {
          p && p.getContext ? this.lowerCanvasEl = p : this.lowerCanvasEl = e.util.getById(p) || this._createCanvasElement(), e.util.addClass(this.lowerCanvasEl, "lower-canvas"), this._originalCanvasStyle = this.lowerCanvasEl.style, this.interactive && this._applyCanvasStyle(this.lowerCanvasEl), this.contextContainer = this.lowerCanvasEl.getContext("2d");
        },
        /**
         * Returns canvas width (in px)
         * @return {Number}
         */
        getWidth: function() {
          return this.width;
        },
        /**
         * Returns canvas height (in px)
         * @return {Number}
         */
        getHeight: function() {
          return this.height;
        },
        /**
         * Sets width of this canvas instance
         * @param {Number|String} value                         Value to set width to
         * @param {Object}        [options]                     Options object
         * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions
         * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions
         * @return {fabric.Canvas} instance
         * @chainable true
         */
        setWidth: function(p, v) {
          return this.setDimensions({ width: p }, v);
        },
        /**
         * Sets height of this canvas instance
         * @param {Number|String} value                         Value to set height to
         * @param {Object}        [options]                     Options object
         * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions
         * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions
         * @return {fabric.Canvas} instance
         * @chainable true
         */
        setHeight: function(p, v) {
          return this.setDimensions({ height: p }, v);
        },
        /**
         * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)
         * @param {Object}        dimensions                    Object with width/height properties
         * @param {Number|String} [dimensions.width]            Width of canvas element
         * @param {Number|String} [dimensions.height]           Height of canvas element
         * @param {Object}        [options]                     Options object
         * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions
         * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        setDimensions: function(p, v) {
          var b;
          v = v || {};
          for (var y in p)
            b = p[y], v.cssOnly || (this._setBackstoreDimension(y, p[y]), b += "px", this.hasLostContext = !0), v.backstoreOnly || this._setCssDimension(y, b);
          return this._isCurrentlyDrawing && this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles(this.contextTop), this._initRetinaScaling(), this.calcOffset(), v.cssOnly || this.requestRenderAll(), this;
        },
        /**
         * Helper for setting width/height
         * @private
         * @param {String} prop property (width|height)
         * @param {Number} value value to set property to
         * @return {fabric.Canvas} instance
         * @chainable true
         */
        _setBackstoreDimension: function(p, v) {
          return this.lowerCanvasEl[p] = v, this.upperCanvasEl && (this.upperCanvasEl[p] = v), this.cacheCanvasEl && (this.cacheCanvasEl[p] = v), this[p] = v, this;
        },
        /**
         * Helper for setting css width/height
         * @private
         * @param {String} prop property (width|height)
         * @param {String} value value to set property to
         * @return {fabric.Canvas} instance
         * @chainable true
         */
        _setCssDimension: function(p, v) {
          return this.lowerCanvasEl.style[p] = v, this.upperCanvasEl && (this.upperCanvasEl.style[p] = v), this.wrapperEl && (this.wrapperEl.style[p] = v), this;
        },
        /**
         * Returns canvas zoom level
         * @return {Number}
         */
        getZoom: function() {
          return this.viewportTransform[0];
        },
        /**
         * Sets viewport transformation of this canvas instance
         * @param {Array} vpt a Canvas 2D API transform matrix
         * @return {fabric.Canvas} instance
         * @chainable true
         */
        setViewportTransform: function(p) {
          var v = this._activeObject, b = this.backgroundImage, y = this.overlayImage, w, x, _;
          for (this.viewportTransform = p, x = 0, _ = this._objects.length; x < _; x++)
            w = this._objects[x], w.group || w.setCoords(!0);
          return v && v.setCoords(), b && b.setCoords(!0), y && y.setCoords(!0), this.calcViewportBoundaries(), this.renderOnAddRemove && this.requestRenderAll(), this;
        },
        /**
         * Sets zoom level of this canvas instance, the zoom centered around point
         * meaning that following zoom to point with the same point will have the visual
         * effect of the zoom originating from that point. The point won't move.
         * It has nothing to do with canvas center or visual center of the viewport.
         * @param {fabric.Point} point to zoom with respect to
         * @param {Number} value to set zoom to, less than 1 zooms out
         * @return {fabric.Canvas} instance
         * @chainable true
         */
        zoomToPoint: function(p, v) {
          var b = p, y = this.viewportTransform.slice(0);
          p = o(p, h(this.viewportTransform)), y[0] = v, y[3] = v;
          var w = o(p, y);
          return y[4] += b.x - w.x, y[5] += b.y - w.y, this.setViewportTransform(y);
        },
        /**
         * Sets zoom level of this canvas instance
         * @param {Number} value to set zoom to, less than 1 zooms out
         * @return {fabric.Canvas} instance
         * @chainable true
         */
        setZoom: function(p) {
          return this.zoomToPoint(new e.Point(0, 0), p), this;
        },
        /**
         * Pan viewport so as to place point at top left corner of canvas
         * @param {fabric.Point} point to move to
         * @return {fabric.Canvas} instance
         * @chainable true
         */
        absolutePan: function(p) {
          var v = this.viewportTransform.slice(0);
          return v[4] = -p.x, v[5] = -p.y, this.setViewportTransform(v);
        },
        /**
         * Pans viewpoint relatively
         * @param {fabric.Point} point (position vector) to move by
         * @return {fabric.Canvas} instance
         * @chainable true
         */
        relativePan: function(p) {
          return this.absolutePan(new e.Point(
            -p.x - this.viewportTransform[4],
            -p.y - this.viewportTransform[5]
          ));
        },
        /**
         * Returns &lt;canvas> element corresponding to this instance
         * @return {HTMLCanvasElement}
         */
        getElement: function() {
          return this.lowerCanvasEl;
        },
        /**
         * @private
         * @param {fabric.Object} obj Object that was added
         */
        _onObjectAdded: function(p) {
          this.stateful && p.setupState(), p._set("canvas", this), p.setCoords(), this.fire("object:added", { target: p }), p.fire("added");
        },
        /**
         * @private
         * @param {fabric.Object} obj Object that was removed
         */
        _onObjectRemoved: function(p) {
          this.fire("object:removed", { target: p }), p.fire("removed"), delete p.canvas;
        },
        /**
         * Clears specified context of canvas element
         * @param {CanvasRenderingContext2D} ctx Context to clear
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        clearContext: function(p) {
          return p.clearRect(0, 0, this.width, this.height), this;
        },
        /**
         * Returns context of canvas where objects are drawn
         * @return {CanvasRenderingContext2D}
         */
        getContext: function() {
          return this.contextContainer;
        },
        /**
         * Clears all contexts (background, main, top) of an instance
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        clear: function() {
          return this.remove.apply(this, this.getObjects()), this.backgroundImage = null, this.overlayImage = null, this.backgroundColor = "", this.overlayColor = "", this._hasITextHandlers && (this.off("mouse:up", this._mouseUpITextHandler), this._iTextInstances = null, this._hasITextHandlers = !1), this.clearContext(this.contextContainer), this.fire("canvas:cleared"), this.renderOnAddRemove && this.requestRenderAll(), this;
        },
        /**
         * Renders the canvas
         * @return {fabric.Canvas} instance
         * @chainable
         */
        renderAll: function() {
          var p = this.contextContainer;
          return this.renderCanvas(p, this._objects), this;
        },
        /**
         * Function created to be instance bound at initialization
         * used in requestAnimationFrame rendering
         * Let the fabricJS call it. If you call it manually you could have more
         * animationFrame stacking on to of each other
         * for an imperative rendering, use canvas.renderAll
         * @private
         * @return {fabric.Canvas} instance
         * @chainable
         */
        renderAndReset: function() {
          this.isRendering = 0, this.renderAll();
        },
        /**
         * Append a renderAll request to next animation frame.
         * unless one is already in progress, in that case nothing is done
         * a boolean flag will avoid appending more.
         * @return {fabric.Canvas} instance
         * @chainable
         */
        requestRenderAll: function() {
          return this.isRendering || (this.isRendering = e.util.requestAnimFrame(this.renderAndResetBound)), this;
        },
        /**
         * Calculate the position of the 4 corner of canvas with current viewportTransform.
         * helps to determinate when an object is in the current rendering viewport using
         * object absolute coordinates ( aCoords )
         * @return {Object} points.tl
         * @chainable
         */
        calcViewportBoundaries: function() {
          var p = {}, v = this.width, b = this.height, y = h(this.viewportTransform);
          return p.tl = o({ x: 0, y: 0 }, y), p.br = o({ x: v, y: b }, y), p.tr = new e.Point(p.br.x, p.tl.y), p.bl = new e.Point(p.tl.x, p.br.y), this.vptCoords = p, p;
        },
        cancelRequestedRender: function() {
          this.isRendering && (e.util.cancelAnimFrame(this.isRendering), this.isRendering = 0);
        },
        /**
         * Renders background, objects, overlay and controls.
         * @param {CanvasRenderingContext2D} ctx
         * @param {Array} objects to render
         * @return {fabric.Canvas} instance
         * @chainable
         */
        renderCanvas: function(p, v) {
          var b = this.viewportTransform, y = this.clipPath;
          this.cancelRequestedRender(), this.calcViewportBoundaries(), this.clearContext(p), e.util.setImageSmoothing(p, this.imageSmoothingEnabled), this.fire("before:render", { ctx: p }), this._renderBackground(p), p.save(), p.transform(b[0], b[1], b[2], b[3], b[4], b[5]), this._renderObjects(p, v), p.restore(), !this.controlsAboveOverlay && this.interactive && this.drawControls(p), y && (y.canvas = this, y.shouldCache(), y._transformDone = !0, y.renderCache({ forClipping: !0 }), this.drawClipPathOnCanvas(p)), this._renderOverlay(p), this.controlsAboveOverlay && this.interactive && this.drawControls(p), this.fire("after:render", { ctx: p });
        },
        /**
         * Paint the cached clipPath on the lowerCanvasEl
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        drawClipPathOnCanvas: function(p) {
          var v = this.viewportTransform, b = this.clipPath;
          p.save(), p.transform(v[0], v[1], v[2], v[3], v[4], v[5]), p.globalCompositeOperation = "destination-in", b.transform(p), p.scale(1 / b.zoomX, 1 / b.zoomY), p.drawImage(b._cacheCanvas, -b.cacheTranslationX, -b.cacheTranslationY), p.restore();
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         * @param {Array} objects to render
         */
        _renderObjects: function(p, v) {
          var b, y;
          for (b = 0, y = v.length; b < y; ++b)
            v[b] && v[b].render(p);
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         * @param {string} property 'background' or 'overlay'
         */
        _renderBackgroundOrOverlay: function(p, v) {
          var b = this[v + "Color"], y = this[v + "Image"], w = this.viewportTransform, x = this[v + "Vpt"];
          if (!(!b && !y)) {
            if (b) {
              p.save(), p.beginPath(), p.moveTo(0, 0), p.lineTo(this.width, 0), p.lineTo(this.width, this.height), p.lineTo(0, this.height), p.closePath(), p.fillStyle = b.toLive ? b.toLive(p, this) : b, x && p.transform(w[0], w[1], w[2], w[3], w[4], w[5]), p.transform(1, 0, 0, 1, b.offsetX || 0, b.offsetY || 0);
              var _ = b.gradientTransform || b.patternTransform;
              _ && p.transform(_[0], _[1], _[2], _[3], _[4], _[5]), p.fill(), p.restore();
            }
            y && (p.save(), x && p.transform(w[0], w[1], w[2], w[3], w[4], w[5]), y.render(p), p.restore());
          }
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _renderBackground: function(p) {
          this._renderBackgroundOrOverlay(p, "background");
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _renderOverlay: function(p) {
          this._renderBackgroundOrOverlay(p, "overlay");
        },
        /**
         * Returns coordinates of a center of canvas.
         * Returned value is an object with top and left properties
         * @return {Object} object with "top" and "left" number values
         * @deprecated migrate to `getCenterPoint`
         */
        getCenter: function() {
          return {
            top: this.height / 2,
            left: this.width / 2
          };
        },
        /**
         * Returns coordinates of a center of canvas.
         * @return {fabric.Point} 
         */
        getCenterPoint: function() {
          return new e.Point(this.width / 2, this.height / 2);
        },
        /**
         * Centers object horizontally in the canvas
         * @param {fabric.Object} object Object to center horizontally
         * @return {fabric.Canvas} thisArg
         */
        centerObjectH: function(p) {
          return this._centerObject(p, new e.Point(this.getCenterPoint().x, p.getCenterPoint().y));
        },
        /**
         * Centers object vertically in the canvas
         * @param {fabric.Object} object Object to center vertically
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        centerObjectV: function(p) {
          return this._centerObject(p, new e.Point(p.getCenterPoint().x, this.getCenterPoint().y));
        },
        /**
         * Centers object vertically and horizontally in the canvas
         * @param {fabric.Object} object Object to center vertically and horizontally
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        centerObject: function(p) {
          var v = this.getCenterPoint();
          return this._centerObject(p, v);
        },
        /**
         * Centers object vertically and horizontally in the viewport
         * @param {fabric.Object} object Object to center vertically and horizontally
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        viewportCenterObject: function(p) {
          var v = this.getVpCenter();
          return this._centerObject(p, v);
        },
        /**
         * Centers object horizontally in the viewport, object.top is unchanged
         * @param {fabric.Object} object Object to center vertically and horizontally
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        viewportCenterObjectH: function(p) {
          var v = this.getVpCenter();
          return this._centerObject(p, new e.Point(v.x, p.getCenterPoint().y)), this;
        },
        /**
         * Centers object Vertically in the viewport, object.top is unchanged
         * @param {fabric.Object} object Object to center vertically and horizontally
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        viewportCenterObjectV: function(p) {
          var v = this.getVpCenter();
          return this._centerObject(p, new e.Point(p.getCenterPoint().x, v.y));
        },
        /**
         * Calculate the point in canvas that correspond to the center of actual viewport.
         * @return {fabric.Point} vpCenter, viewport center
         * @chainable
         */
        getVpCenter: function() {
          var p = this.getCenterPoint(), v = h(this.viewportTransform);
          return o(p, v);
        },
        /**
         * @private
         * @param {fabric.Object} object Object to center
         * @param {fabric.Point} center Center point
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        _centerObject: function(p, v) {
          return p.setPositionByOrigin(v, "center", "center"), p.setCoords(), this.renderOnAddRemove && this.requestRenderAll(), this;
        },
        /**
         * Returns dataless JSON representation of canvas
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {String} json string
         */
        toDatalessJSON: function(p) {
          return this.toDatalessObject(p);
        },
        /**
         * Returns object representation of canvas
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} object representation of an instance
         */
        toObject: function(p) {
          return this._toObjectMethod("toObject", p);
        },
        /**
         * Returns dataless object representation of canvas
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} object representation of an instance
         */
        toDatalessObject: function(p) {
          return this._toObjectMethod("toDatalessObject", p);
        },
        /**
         * @private
         */
        _toObjectMethod: function(p, v) {
          var b = this.clipPath, y = {
            version: e.version,
            objects: this._toObjects(p, v)
          };
          return b && !b.excludeFromExport && (y.clipPath = this._toObject(this.clipPath, p, v)), a(y, this.__serializeBgOverlay(p, v)), e.util.populateWithProperties(this, y, v), y;
        },
        /**
         * @private
         */
        _toObjects: function(p, v) {
          return this._objects.filter(function(b) {
            return !b.excludeFromExport;
          }).map(function(b) {
            return this._toObject(b, p, v);
          }, this);
        },
        /**
         * @private
         */
        _toObject: function(p, v, b) {
          var y;
          this.includeDefaultValues || (y = p.includeDefaultValues, p.includeDefaultValues = !1);
          var w = p[v](b);
          return this.includeDefaultValues || (p.includeDefaultValues = y), w;
        },
        /**
         * @private
         */
        __serializeBgOverlay: function(p, v) {
          var b = {}, y = this.backgroundImage, w = this.overlayImage, x = this.backgroundColor, _ = this.overlayColor;
          return x && x.toObject ? x.excludeFromExport || (b.background = x.toObject(v)) : x && (b.background = x), _ && _.toObject ? _.excludeFromExport || (b.overlay = _.toObject(v)) : _ && (b.overlay = _), y && !y.excludeFromExport && (b.backgroundImage = this._toObject(y, p, v)), w && !w.excludeFromExport && (b.overlayImage = this._toObject(w, p, v)), b;
        },
        /* _TO_SVG_START_ */
        /**
         * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,
         * a zoomed canvas will then produce zoomed SVG output.
         * @type Boolean
         * @default
         */
        svgViewportTransformation: !0,
        /**
         * Returns SVG representation of canvas
         * @function
         * @param {Object} [options] Options object for SVG output
         * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included
         * @param {Object} [options.viewBox] SVG viewbox object
         * @param {Number} [options.viewBox.x] x-coordinate of viewbox
         * @param {Number} [options.viewBox.y] y-coordinate of viewbox
         * @param {Number} [options.viewBox.width] Width of viewbox
         * @param {Number} [options.viewBox.height] Height of viewbox
         * @param {String} [options.encoding=UTF-8] Encoding of SVG output
         * @param {String} [options.width] desired width of svg with or without units
         * @param {String} [options.height] desired height of svg with or without units
         * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.
         * @return {String} SVG string
         * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}
         * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}
         * @example <caption>Normal SVG output</caption>
         * var svg = canvas.toSVG();
         * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>
         * var svg = canvas.toSVG({suppressPreamble: true});
         * @example <caption>SVG output with viewBox attribute</caption>
         * var svg = canvas.toSVG({
         *   viewBox: {
         *     x: 100,
         *     y: 100,
         *     width: 200,
         *     height: 300
         *   }
         * });
         * @example <caption>SVG output with different encoding (default: UTF-8)</caption>
         * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});
         * @example <caption>Modify SVG output with reviver function</caption>
         * var svg = canvas.toSVG(null, function(svg) {
         *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');
         * });
         */
        toSVG: function(p, v) {
          p || (p = {}), p.reviver = v;
          var b = [];
          return this._setSVGPreamble(b, p), this._setSVGHeader(b, p), this.clipPath && b.push('<g clip-path="url(#' + this.clipPath.clipPathId + `)" >
`), this._setSVGBgOverlayColor(b, "background"), this._setSVGBgOverlayImage(b, "backgroundImage", v), this._setSVGObjects(b, v), this.clipPath && b.push(`</g>
`), this._setSVGBgOverlayColor(b, "overlay"), this._setSVGBgOverlayImage(b, "overlayImage", v), b.push("</svg>"), b.join("");
        },
        /**
         * @private
         */
        _setSVGPreamble: function(p, v) {
          v.suppressPreamble || p.push(
            '<?xml version="1.0" encoding="',
            v.encoding || "UTF-8",
            `" standalone="no" ?>
`,
            '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" ',
            `"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
`
          );
        },
        /**
         * @private
         */
        _setSVGHeader: function(p, v) {
          var b = v.width || this.width, y = v.height || this.height, w, x = 'viewBox="0 0 ' + this.width + " " + this.height + '" ', _ = e.Object.NUM_FRACTION_DIGITS;
          v.viewBox ? x = 'viewBox="' + v.viewBox.x + " " + v.viewBox.y + " " + v.viewBox.width + " " + v.viewBox.height + '" ' : this.svgViewportTransformation && (w = this.viewportTransform, x = 'viewBox="' + f(-w[4] / w[0], _) + " " + f(-w[5] / w[3], _) + " " + f(this.width / w[0], _) + " " + f(this.height / w[3], _) + '" '), p.push(
            "<svg ",
            'xmlns="http://www.w3.org/2000/svg" ',
            'xmlns:xlink="http://www.w3.org/1999/xlink" ',
            'version="1.1" ',
            'width="',
            b,
            '" ',
            'height="',
            y,
            '" ',
            x,
            `xml:space="preserve">
`,
            "<desc>Created with Fabric.js ",
            e.version,
            `</desc>
`,
            `<defs>
`,
            this.createSVGFontFacesMarkup(),
            this.createSVGRefElementsMarkup(),
            this.createSVGClipPathMarkup(v),
            `</defs>
`
          );
        },
        createSVGClipPathMarkup: function(p) {
          var v = this.clipPath;
          return v ? (v.clipPathId = "CLIPPATH_" + e.Object.__uid++, '<clipPath id="' + v.clipPathId + `" >
` + this.clipPath.toClipPathSVG(p.reviver) + `</clipPath>
`) : "";
        },
        /**
         * Creates markup containing SVG referenced elements like patterns, gradients etc.
         * @return {String}
         */
        createSVGRefElementsMarkup: function() {
          var p = this, v = ["background", "overlay"].map(function(b) {
            var y = p[b + "Color"];
            if (y && y.toLive) {
              var w = p[b + "Vpt"], x = p.viewportTransform, _ = {
                width: p.width / (w ? x[0] : 1),
                height: p.height / (w ? x[3] : 1)
              };
              return y.toSVG(
                _,
                { additionalTransform: w ? e.util.matrixToSVG(x) : "" }
              );
            }
          });
          return v.join("");
        },
        /**
         * Creates markup containing SVG font faces,
         * font URLs for font faces must be collected by developers
         * and are not extracted from the DOM by fabricjs
         * @param {Array} objects Array of fabric objects
         * @return {String}
         */
        createSVGFontFacesMarkup: function() {
          var p = "", v = {}, b, y, w, x, _, S, k, F, L, j = e.fontPaths, G = [];
          for (this._objects.forEach(function U(K) {
            G.push(K), K._objects && K._objects.forEach(U);
          }), F = 0, L = G.length; F < L; F++)
            if (b = G[F], y = b.fontFamily, !(b.type.indexOf("text") === -1 || v[y] || !j[y]) && (v[y] = !0, !!b.styles)) {
              w = b.styles;
              for (_ in w) {
                x = w[_];
                for (k in x)
                  S = x[k], y = S.fontFamily, !v[y] && j[y] && (v[y] = !0);
              }
            }
          for (var te in v)
            p += [
              `		@font-face {
`,
              "			font-family: '",
              te,
              `';
`,
              "			src: url('",
              j[te],
              `');
`,
              `		}
`
            ].join("");
          return p && (p = [
            '	<style type="text/css">',
            `<![CDATA[
`,
            p,
            "]]>",
            `</style>
`
          ].join("")), p;
        },
        /**
         * @private
         */
        _setSVGObjects: function(p, v) {
          var b, y, w, x = this._objects;
          for (y = 0, w = x.length; y < w; y++)
            b = x[y], !b.excludeFromExport && this._setSVGObject(p, b, v);
        },
        /**
         * @private
         */
        _setSVGObject: function(p, v, b) {
          p.push(v.toSVG(b));
        },
        /**
         * @private
         */
        _setSVGBgOverlayImage: function(p, v, b) {
          this[v] && !this[v].excludeFromExport && this[v].toSVG && p.push(this[v].toSVG(b));
        },
        /**
         * @private
         */
        _setSVGBgOverlayColor: function(p, v) {
          var b = this[v + "Color"], y = this.viewportTransform, w = this.width, x = this.height;
          if (b)
            if (b.toLive) {
              var _ = b.repeat, S = e.util.invertTransform(y), k = this[v + "Vpt"], F = k ? e.util.matrixToSVG(S) : "";
              p.push(
                '<rect transform="' + F + " translate(",
                w / 2,
                ",",
                x / 2,
                ')"',
                ' x="',
                b.offsetX - w / 2,
                '" y="',
                b.offsetY - x / 2,
                '" ',
                'width="',
                _ === "repeat-y" || _ === "no-repeat" ? b.source.width : w,
                '" height="',
                _ === "repeat-x" || _ === "no-repeat" ? b.source.height : x,
                '" fill="url(#SVGID_' + b.id + ')"',
                `></rect>
`
              );
            } else
              p.push(
                '<rect x="0" y="0" width="100%" height="100%" ',
                'fill="',
                b,
                '"',
                `></rect>
`
              );
        },
        /* _TO_SVG_END_ */
        /**
         * Moves an object or the objects of a multiple selection
         * to the bottom of the stack of drawn objects
         * @param {fabric.Object} object Object to send to back
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        sendToBack: function(p) {
          if (!p)
            return this;
          var v = this._activeObject, b, y, w;
          if (p === v && p.type === "activeSelection")
            for (w = v._objects, b = w.length; b--; )
              y = w[b], c(this._objects, y), this._objects.unshift(y);
          else
            c(this._objects, p), this._objects.unshift(p);
          return this.renderOnAddRemove && this.requestRenderAll(), this;
        },
        /**
         * Moves an object or the objects of a multiple selection
         * to the top of the stack of drawn objects
         * @param {fabric.Object} object Object to send
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        bringToFront: function(p) {
          if (!p)
            return this;
          var v = this._activeObject, b, y, w;
          if (p === v && p.type === "activeSelection")
            for (w = v._objects, b = 0; b < w.length; b++)
              y = w[b], c(this._objects, y), this._objects.push(y);
          else
            c(this._objects, p), this._objects.push(p);
          return this.renderOnAddRemove && this.requestRenderAll(), this;
        },
        /**
         * Moves an object or a selection down in stack of drawn objects
         * An optional parameter, intersecting allows to move the object in behind
         * the first intersecting object. Where intersection is calculated with
         * bounding box. If no intersection is found, there will not be change in the
         * stack.
         * @param {fabric.Object} object Object to send
         * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        sendBackwards: function(p, v) {
          if (!p)
            return this;
          var b = this._activeObject, y, w, x, _, S, k = 0;
          if (p === b && p.type === "activeSelection")
            for (S = b._objects, y = 0; y < S.length; y++)
              w = S[y], x = this._objects.indexOf(w), x > 0 + k && (_ = x - 1, c(this._objects, w), this._objects.splice(_, 0, w)), k++;
          else
            x = this._objects.indexOf(p), x !== 0 && (_ = this._findNewLowerIndex(p, x, v), c(this._objects, p), this._objects.splice(_, 0, p));
          return this.renderOnAddRemove && this.requestRenderAll(), this;
        },
        /**
         * @private
         */
        _findNewLowerIndex: function(p, v, b) {
          var y, w;
          if (b)
            for (y = v, w = v - 1; w >= 0; --w) {
              var x = p.intersectsWithObject(this._objects[w]) || p.isContainedWithinObject(this._objects[w]) || this._objects[w].isContainedWithinObject(p);
              if (x) {
                y = w;
                break;
              }
            }
          else
            y = v - 1;
          return y;
        },
        /**
         * Moves an object or a selection up in stack of drawn objects
         * An optional parameter, intersecting allows to move the object in front
         * of the first intersecting object. Where intersection is calculated with
         * bounding box. If no intersection is found, there will not be change in the
         * stack.
         * @param {fabric.Object} object Object to send
         * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        bringForward: function(p, v) {
          if (!p)
            return this;
          var b = this._activeObject, y, w, x, _, S, k = 0;
          if (p === b && p.type === "activeSelection")
            for (S = b._objects, y = S.length; y--; )
              w = S[y], x = this._objects.indexOf(w), x < this._objects.length - 1 - k && (_ = x + 1, c(this._objects, w), this._objects.splice(_, 0, w)), k++;
          else
            x = this._objects.indexOf(p), x !== this._objects.length - 1 && (_ = this._findNewUpperIndex(p, x, v), c(this._objects, p), this._objects.splice(_, 0, p));
          return this.renderOnAddRemove && this.requestRenderAll(), this;
        },
        /**
         * @private
         */
        _findNewUpperIndex: function(p, v, b) {
          var y, w, x;
          if (b)
            for (y = v, w = v + 1, x = this._objects.length; w < x; ++w) {
              var _ = p.intersectsWithObject(this._objects[w]) || p.isContainedWithinObject(this._objects[w]) || this._objects[w].isContainedWithinObject(p);
              if (_) {
                y = w;
                break;
              }
            }
          else
            y = v + 1;
          return y;
        },
        /**
         * Moves an object to specified level in stack of drawn objects
         * @param {fabric.Object} object Object to send
         * @param {Number} index Position to move to
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        moveTo: function(p, v) {
          return c(this._objects, p), this._objects.splice(v, 0, p), this.renderOnAddRemove && this.requestRenderAll();
        },
        /**
         * Clears a canvas element and dispose objects
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        dispose: function() {
          return this.isRendering && (e.util.cancelAnimFrame(this.isRendering), this.isRendering = 0), this.forEachObject(function(p) {
            p.dispose && p.dispose();
          }), this._objects = [], this.backgroundImage && this.backgroundImage.dispose && this.backgroundImage.dispose(), this.backgroundImage = null, this.overlayImage && this.overlayImage.dispose && this.overlayImage.dispose(), this.overlayImage = null, this._iTextInstances = null, this.contextContainer = null, this.lowerCanvasEl.classList.remove("lower-canvas"), e.util.setStyle(this.lowerCanvasEl, this._originalCanvasStyle), delete this._originalCanvasStyle, this.lowerCanvasEl.setAttribute("width", this.width), this.lowerCanvasEl.setAttribute("height", this.height), e.util.cleanUpJsdomNode(this.lowerCanvasEl), this.lowerCanvasEl = void 0, this;
        },
        /**
         * Returns a string representation of an instance
         * @return {String} string representation of an instance
         */
        toString: function() {
          return "#<fabric.Canvas (" + this.complexity() + "): { objects: " + this._objects.length + " }>";
        }
      }
    ), a(e.StaticCanvas.prototype, e.Observable), a(e.StaticCanvas.prototype, e.Collection), a(e.StaticCanvas.prototype, e.DataURLExporter), a(
      e.StaticCanvas,
      /** @lends fabric.StaticCanvas */
      {
        /**
         * @static
         * @type String
         * @default
         */
        EMPTY_JSON: '{"objects": [], "background": "white"}',
        /**
         * Provides a way to check support of some of the canvas methods
         * (either those of HTMLCanvasElement itself, or rendering context)
         *
         * @param {String} methodName Method to check support for;
         *                            Could be one of "setLineDash"
         * @return {Boolean | null} `true` if method is supported (or at least exists),
         *                          `null` if canvas element or context can not be initialized
         */
        supports: function(p) {
          var v = d();
          if (!v || !v.getContext)
            return null;
          var b = v.getContext("2d");
          if (!b)
            return null;
          switch (p) {
            case "setLineDash":
              return typeof b.setLineDash < "u";
            default:
              return null;
          }
        }
      }
    ), e.StaticCanvas.prototype.toJSON = e.StaticCanvas.prototype.toObject, e.isLikelyNode && (e.StaticCanvas.prototype.createPNGStream = function() {
      var p = u(this.lowerCanvasEl);
      return p && p.createPNGStream();
    }, e.StaticCanvas.prototype.createJPEGStream = function(p) {
      var v = u(this.lowerCanvasEl);
      return v && v.createJPEGStream(p);
    });
  }(), e.BaseBrush = e.util.createClass(
    /** @lends fabric.BaseBrush.prototype */
    {
      /**
       * Color of a brush
       * @type String
       * @default
       */
      color: "rgb(0, 0, 0)",
      /**
       * Width of a brush, has to be a Number, no string literals
       * @type Number
       * @default
       */
      width: 1,
      /**
       * Shadow object representing shadow of this shape.
       * <b>Backwards incompatibility note:</b> This property replaces "shadowColor" (String), "shadowOffsetX" (Number),
       * "shadowOffsetY" (Number) and "shadowBlur" (Number) since v1.2.12
       * @type fabric.Shadow
       * @default
       */
      shadow: null,
      /**
       * Line endings style of a brush (one of "butt", "round", "square")
       * @type String
       * @default
       */
      strokeLineCap: "round",
      /**
       * Corner style of a brush (one of "bevel", "round", "miter")
       * @type String
       * @default
       */
      strokeLineJoin: "round",
      /**
       * Maximum miter length (used for strokeLineJoin = "miter") of a brush's
       * @type Number
       * @default
       */
      strokeMiterLimit: 10,
      /**
       * Stroke Dash Array.
       * @type Array
       * @default
       */
      strokeDashArray: null,
      /**
       * When `true`, the free drawing is limited to the whiteboard size. Default to false.
       * @type Boolean
       * @default false
      */
      limitedToCanvasSize: !1,
      /**
       * Sets brush styles
       * @private
       * @param {CanvasRenderingContext2D} ctx
       */
      _setBrushStyles: function(a) {
        a.strokeStyle = this.color, a.lineWidth = this.width, a.lineCap = this.strokeLineCap, a.miterLimit = this.strokeMiterLimit, a.lineJoin = this.strokeLineJoin, a.setLineDash(this.strokeDashArray || []);
      },
      /**
       * Sets the transformation on given context
       * @param {RenderingContext2d} ctx context to render on
       * @private
       */
      _saveAndTransform: function(a) {
        var s = this.canvas.viewportTransform;
        a.save(), a.transform(s[0], s[1], s[2], s[3], s[4], s[5]);
      },
      /**
       * Sets brush shadow styles
       * @private
       */
      _setShadow: function() {
        if (this.shadow) {
          var a = this.canvas, s = this.shadow, c = a.contextTop, f = a.getZoom();
          a && a._isRetinaScaling() && (f *= e.devicePixelRatio), c.shadowColor = s.color, c.shadowBlur = s.blur * f, c.shadowOffsetX = s.offsetX * f, c.shadowOffsetY = s.offsetY * f;
        }
      },
      needsFullRender: function() {
        var a = new e.Color(this.color);
        return a.getAlpha() < 1 || !!this.shadow;
      },
      /**
       * Removes brush shadow styles
       * @private
       */
      _resetShadow: function() {
        var a = this.canvas.contextTop;
        a.shadowColor = "", a.shadowBlur = a.shadowOffsetX = a.shadowOffsetY = 0;
      },
      /**
       * Check is pointer is outside canvas boundaries
       * @param {Object} pointer
       * @private
      */
      _isOutSideCanvas: function(a) {
        return a.x < 0 || a.x > this.canvas.getWidth() || a.y < 0 || a.y > this.canvas.getHeight();
      }
    }
  ), function() {
    e.PencilBrush = e.util.createClass(
      e.BaseBrush,
      /** @lends fabric.PencilBrush.prototype */
      {
        /**
         * Discard points that are less than `decimate` pixel distant from each other
         * @type Number
         * @default 0.4
         */
        decimate: 0.4,
        /**
         * Draws a straight line between last recorded point to current pointer
         * Used for `shift` functionality
         *
         * @type boolean
         * @default false
         */
        drawStraightLine: !1,
        /**
         * The event modifier key that makes the brush draw a straight line.
         * If `null` or 'none' or any other string that is not a modifier key the feature is disabled.
         * @type {'altKey' | 'shiftKey' | 'ctrlKey' | 'none' | undefined | null}
         */
        straightLineKey: "shiftKey",
        /**
         * Constructor
         * @param {fabric.Canvas} canvas
         * @return {fabric.PencilBrush} Instance of a pencil brush
         */
        initialize: function(a) {
          this.canvas = a, this._points = [];
        },
        needsFullRender: function() {
          return this.callSuper("needsFullRender") || this._hasStraightLine;
        },
        /**
         * Invoked inside on mouse down and mouse move
         * @param {Object} pointer
         */
        _drawSegment: function(a, s, c) {
          var f = s.midPointFrom(c);
          return a.quadraticCurveTo(s.x, s.y, f.x, f.y), f;
        },
        /**
         * Invoked on mouse down
         * @param {Object} pointer
         */
        onMouseDown: function(a, s) {
          this.canvas._isMainEvent(s.e) && (this.drawStraightLine = s.e[this.straightLineKey], this._prepareForDrawing(a), this._captureDrawingPath(a), this._render());
        },
        /**
         * Invoked on mouse move
         * @param {Object} pointer
         */
        onMouseMove: function(a, s) {
          if (this.canvas._isMainEvent(s.e) && (this.drawStraightLine = s.e[this.straightLineKey], !(this.limitedToCanvasSize === !0 && this._isOutSideCanvas(a)) && this._captureDrawingPath(a) && this._points.length > 1))
            if (this.needsFullRender())
              this.canvas.clearContext(this.canvas.contextTop), this._render();
            else {
              var c = this._points, f = c.length, o = this.canvas.contextTop;
              this._saveAndTransform(o), this.oldEnd && (o.beginPath(), o.moveTo(this.oldEnd.x, this.oldEnd.y)), this.oldEnd = this._drawSegment(o, c[f - 2], c[f - 1], !0), o.stroke(), o.restore();
            }
        },
        /**
         * Invoked on mouse up
         */
        onMouseUp: function(a) {
          return this.canvas._isMainEvent(a.e) ? (this.drawStraightLine = !1, this.oldEnd = void 0, this._finalizeAndAddPath(), !1) : !0;
        },
        /**
         * @private
         * @param {Object} pointer Actual mouse position related to the canvas.
         */
        _prepareForDrawing: function(a) {
          var s = new e.Point(a.x, a.y);
          this._reset(), this._addPoint(s), this.canvas.contextTop.moveTo(s.x, s.y);
        },
        /**
         * @private
         * @param {fabric.Point} point Point to be added to points array
         */
        _addPoint: function(a) {
          return this._points.length > 1 && a.eq(this._points[this._points.length - 1]) ? !1 : (this.drawStraightLine && this._points.length > 1 && (this._hasStraightLine = !0, this._points.pop()), this._points.push(a), !0);
        },
        /**
         * Clear points array and set contextTop canvas style.
         * @private
         */
        _reset: function() {
          this._points = [], this._setBrushStyles(this.canvas.contextTop), this._setShadow(), this._hasStraightLine = !1;
        },
        /**
         * @private
         * @param {Object} pointer Actual mouse position related to the canvas.
         */
        _captureDrawingPath: function(a) {
          var s = new e.Point(a.x, a.y);
          return this._addPoint(s);
        },
        /**
         * Draw a smooth path on the topCanvas using quadraticCurveTo
         * @private
         * @param {CanvasRenderingContext2D} [ctx]
         */
        _render: function(a) {
          var s, c, f = this._points[0], o = this._points[1];
          if (a = a || this.canvas.contextTop, this._saveAndTransform(a), a.beginPath(), this._points.length === 2 && f.x === o.x && f.y === o.y) {
            var h = this.width / 1e3;
            f = new e.Point(f.x, f.y), o = new e.Point(o.x, o.y), f.x -= h, o.x += h;
          }
          for (a.moveTo(f.x, f.y), s = 1, c = this._points.length; s < c; s++)
            this._drawSegment(a, f, o), f = this._points[s], o = this._points[s + 1];
          a.lineTo(f.x, f.y), a.stroke(), a.restore();
        },
        /**
         * Converts points to SVG path
         * @param {Array} points Array of points
         * @return {(string|number)[][]} SVG path commands
         */
        convertPointsToSVGPath: function(a) {
          var s = this.width / 1e3;
          return e.util.getSmoothPathFromPoints(a, s);
        },
        /**
         * @private
         * @param {(string|number)[][]} pathData SVG path commands
         * @returns {boolean}
         */
        _isEmptySVGPath: function(a) {
          var s = e.util.joinPath(a);
          return s === "M 0 0 Q 0 0 0 0 L 0 0";
        },
        /**
         * Creates fabric.Path object to add on canvas
         * @param {(string|number)[][]} pathData Path data
         * @return {fabric.Path} Path to add on canvas
         */
        createPath: function(a) {
          var s = new e.Path(a, {
            fill: null,
            stroke: this.color,
            strokeWidth: this.width,
            strokeLineCap: this.strokeLineCap,
            strokeMiterLimit: this.strokeMiterLimit,
            strokeLineJoin: this.strokeLineJoin,
            strokeDashArray: this.strokeDashArray
          });
          return this.shadow && (this.shadow.affectStroke = !0, s.shadow = new e.Shadow(this.shadow)), s;
        },
        /**
         * Decimate points array with the decimate value
         */
        decimatePoints: function(a, s) {
          if (a.length <= 2)
            return a;
          var c = this.canvas.getZoom(), f = Math.pow(s / c, 2), o, h = a.length - 1, u = a[0], d = [u], m;
          for (o = 1; o < h - 1; o++)
            m = Math.pow(u.x - a[o].x, 2) + Math.pow(u.y - a[o].y, 2), m >= f && (u = a[o], d.push(u));
          return d.push(a[h]), d;
        },
        /**
         * On mouseup after drawing the path on contextTop canvas
         * we use the points captured to create an new fabric path object
         * and add it to the fabric canvas.
         */
        _finalizeAndAddPath: function() {
          var a = this.canvas.contextTop;
          a.closePath(), this.decimate && (this._points = this.decimatePoints(this._points, this.decimate));
          var s = this.convertPointsToSVGPath(this._points);
          if (this._isEmptySVGPath(s)) {
            this.canvas.requestRenderAll();
            return;
          }
          var c = this.createPath(s);
          this.canvas.clearContext(this.canvas.contextTop), this.canvas.fire("before:path:created", { path: c }), this.canvas.add(c), this.canvas.requestRenderAll(), c.setCoords(), this._resetShadow(), this.canvas.fire("path:created", { path: c });
        }
      }
    );
  }(), e.CircleBrush = e.util.createClass(
    e.BaseBrush,
    /** @lends fabric.CircleBrush.prototype */
    {
      /**
       * Width of a brush
       * @type Number
       * @default
       */
      width: 10,
      /**
       * Constructor
       * @param {fabric.Canvas} canvas
       * @return {fabric.CircleBrush} Instance of a circle brush
       */
      initialize: function(a) {
        this.canvas = a, this.points = [];
      },
      /**
       * Invoked inside on mouse down and mouse move
       * @param {Object} pointer
       */
      drawDot: function(a) {
        var s = this.addPoint(a), c = this.canvas.contextTop;
        this._saveAndTransform(c), this.dot(c, s), c.restore();
      },
      dot: function(a, s) {
        a.fillStyle = s.fill, a.beginPath(), a.arc(s.x, s.y, s.radius, 0, Math.PI * 2, !1), a.closePath(), a.fill();
      },
      /**
       * Invoked on mouse down
       */
      onMouseDown: function(a) {
        this.points.length = 0, this.canvas.clearContext(this.canvas.contextTop), this._setShadow(), this.drawDot(a);
      },
      /**
       * Render the full state of the brush
       * @private
       */
      _render: function() {
        var a = this.canvas.contextTop, s, c, f = this.points;
        for (this._saveAndTransform(a), s = 0, c = f.length; s < c; s++)
          this.dot(a, f[s]);
        a.restore();
      },
      /**
       * Invoked on mouse move
       * @param {Object} pointer
       */
      onMouseMove: function(a) {
        this.limitedToCanvasSize === !0 && this._isOutSideCanvas(a) || (this.needsFullRender() ? (this.canvas.clearContext(this.canvas.contextTop), this.addPoint(a), this._render()) : this.drawDot(a));
      },
      /**
       * Invoked on mouse up
       */
      onMouseUp: function() {
        var a = this.canvas.renderOnAddRemove, s, c;
        this.canvas.renderOnAddRemove = !1;
        var f = [];
        for (s = 0, c = this.points.length; s < c; s++) {
          var o = this.points[s], h = new e.Circle({
            radius: o.radius,
            left: o.x,
            top: o.y,
            originX: "center",
            originY: "center",
            fill: o.fill
          });
          this.shadow && (h.shadow = new e.Shadow(this.shadow)), f.push(h);
        }
        var u = new e.Group(f);
        u.canvas = this.canvas, this.canvas.fire("before:path:created", { path: u }), this.canvas.add(u), this.canvas.fire("path:created", { path: u }), this.canvas.clearContext(this.canvas.contextTop), this._resetShadow(), this.canvas.renderOnAddRemove = a, this.canvas.requestRenderAll();
      },
      /**
       * @param {Object} pointer
       * @return {fabric.Point} Just added pointer point
       */
      addPoint: function(a) {
        var s = new e.Point(a.x, a.y), c = e.util.getRandomInt(
          Math.max(0, this.width - 20),
          this.width + 20
        ) / 2, f = new e.Color(this.color).setAlpha(e.util.getRandomInt(0, 100) / 100).toRgba();
        return s.radius = c, s.fill = f, this.points.push(s), s;
      }
    }
  ), e.SprayBrush = e.util.createClass(
    e.BaseBrush,
    /** @lends fabric.SprayBrush.prototype */
    {
      /**
       * Width of a spray
       * @type Number
       * @default
       */
      width: 10,
      /**
       * Density of a spray (number of dots per chunk)
       * @type Number
       * @default
       */
      density: 20,
      /**
       * Width of spray dots
       * @type Number
       * @default
       */
      dotWidth: 1,
      /**
       * Width variance of spray dots
       * @type Number
       * @default
       */
      dotWidthVariance: 1,
      /**
       * Whether opacity of a dot should be random
       * @type Boolean
       * @default
       */
      randomOpacity: !1,
      /**
       * Whether overlapping dots (rectangles) should be removed (for performance reasons)
       * @type Boolean
       * @default
       */
      optimizeOverlapping: !0,
      /**
       * Constructor
       * @param {fabric.Canvas} canvas
       * @return {fabric.SprayBrush} Instance of a spray brush
       */
      initialize: function(a) {
        this.canvas = a, this.sprayChunks = [];
      },
      /**
       * Invoked on mouse down
       * @param {Object} pointer
       */
      onMouseDown: function(a) {
        this.sprayChunks.length = 0, this.canvas.clearContext(this.canvas.contextTop), this._setShadow(), this.addSprayChunk(a), this.render(this.sprayChunkPoints);
      },
      /**
       * Invoked on mouse move
       * @param {Object} pointer
       */
      onMouseMove: function(a) {
        this.limitedToCanvasSize === !0 && this._isOutSideCanvas(a) || (this.addSprayChunk(a), this.render(this.sprayChunkPoints));
      },
      /**
       * Invoked on mouse up
       */
      onMouseUp: function() {
        var a = this.canvas.renderOnAddRemove;
        this.canvas.renderOnAddRemove = !1;
        for (var s = [], c = 0, f = this.sprayChunks.length; c < f; c++)
          for (var o = this.sprayChunks[c], h = 0, u = o.length; h < u; h++) {
            var d = new e.Rect({
              width: o[h].width,
              height: o[h].width,
              left: o[h].x + 1,
              top: o[h].y + 1,
              originX: "center",
              originY: "center",
              fill: this.color
            });
            s.push(d);
          }
        this.optimizeOverlapping && (s = this._getOptimizedRects(s));
        var m = new e.Group(s);
        this.shadow && m.set("shadow", new e.Shadow(this.shadow)), this.canvas.fire("before:path:created", { path: m }), this.canvas.add(m), this.canvas.fire("path:created", { path: m }), this.canvas.clearContext(this.canvas.contextTop), this._resetShadow(), this.canvas.renderOnAddRemove = a, this.canvas.requestRenderAll();
      },
      /**
       * @private
       * @param {Array} rects
       */
      _getOptimizedRects: function(a) {
        var s = {}, c, f, o;
        for (f = 0, o = a.length; f < o; f++)
          c = a[f].left + "" + a[f].top, s[c] || (s[c] = a[f]);
        var h = [];
        for (c in s)
          h.push(s[c]);
        return h;
      },
      /**
       * Render new chunk of spray brush
       */
      render: function(a) {
        var s = this.canvas.contextTop, c, f;
        for (s.fillStyle = this.color, this._saveAndTransform(s), c = 0, f = a.length; c < f; c++) {
          var o = a[c];
          typeof o.opacity < "u" && (s.globalAlpha = o.opacity), s.fillRect(o.x, o.y, o.width, o.width);
        }
        s.restore();
      },
      /**
       * Render all spray chunks
       */
      _render: function() {
        var a = this.canvas.contextTop, s, c;
        for (a.fillStyle = this.color, this._saveAndTransform(a), s = 0, c = this.sprayChunks.length; s < c; s++)
          this.render(this.sprayChunks[s]);
        a.restore();
      },
      /**
       * @param {Object} pointer
       */
      addSprayChunk: function(a) {
        this.sprayChunkPoints = [];
        var s, c, f, o = this.width / 2, h;
        for (h = 0; h < this.density; h++) {
          s = e.util.getRandomInt(a.x - o, a.x + o), c = e.util.getRandomInt(a.y - o, a.y + o), this.dotWidthVariance ? f = e.util.getRandomInt(
            // bottom clamp width to 1
            Math.max(1, this.dotWidth - this.dotWidthVariance),
            this.dotWidth + this.dotWidthVariance
          ) : f = this.dotWidth;
          var u = new e.Point(s, c);
          u.width = f, this.randomOpacity && (u.opacity = e.util.getRandomInt(0, 100) / 100), this.sprayChunkPoints.push(u);
        }
        this.sprayChunks.push(this.sprayChunkPoints);
      }
    }
  ), e.PatternBrush = e.util.createClass(
    e.PencilBrush,
    /** @lends fabric.PatternBrush.prototype */
    {
      getPatternSrc: function() {
        var a = 20, s = 5, c = e.util.createCanvasElement(), f = c.getContext("2d");
        return c.width = c.height = a + s, f.fillStyle = this.color, f.beginPath(), f.arc(a / 2, a / 2, a / 2, 0, Math.PI * 2, !1), f.closePath(), f.fill(), c;
      },
      getPatternSrcFunction: function() {
        return String(this.getPatternSrc).replace("this.color", '"' + this.color + '"');
      },
      /**
       * Creates "pattern" instance property
       * @param {CanvasRenderingContext2D} ctx
       */
      getPattern: function(a) {
        return a.createPattern(this.source || this.getPatternSrc(), "repeat");
      },
      /**
       * Sets brush styles
       * @param {CanvasRenderingContext2D} ctx
       */
      _setBrushStyles: function(a) {
        this.callSuper("_setBrushStyles", a), a.strokeStyle = this.getPattern(a);
      },
      /**
       * Creates path
       */
      createPath: function(a) {
        var s = this.callSuper("createPath", a), c = s._getLeftTopCoords().scalarAdd(s.strokeWidth / 2);
        return s.stroke = new e.Pattern({
          source: this.source || this.getPatternSrcFunction(),
          offsetX: -c.x,
          offsetY: -c.y
        }), s;
      }
    }
  ), function() {
    var a = e.util.getPointer, s = e.util.degreesToRadians, c = e.util.isTouchEvent;
    e.Canvas = e.util.createClass(
      e.StaticCanvas,
      /** @lends fabric.Canvas.prototype */
      {
        /**
         * Constructor
         * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on
         * @param {Object} [options] Options object
         * @return {Object} thisArg
         */
        initialize: function(o, h) {
          h || (h = {}), this.renderAndResetBound = this.renderAndReset.bind(this), this.requestRenderAllBound = this.requestRenderAll.bind(this), this._initStatic(o, h), this._initInteractive(), this._createCacheCanvas();
        },
        /**
         * When true, objects can be transformed by one side (unproportionally)
         * when dragged on the corners that normally would not do that.
         * @type Boolean
         * @default
         * @since fabric 4.0 // changed name and default value
         */
        uniformScaling: !0,
        /**
         * Indicates which key switches uniform scaling.
         * values: 'altKey', 'shiftKey', 'ctrlKey'.
         * If `null` or 'none' or any other string that is not a modifier key
         * feature is disabled.
         * totally wrong named. this sounds like `uniform scaling`
         * if Canvas.uniformScaling is true, pressing this will set it to false
         * and viceversa.
         * @since 1.6.2
         * @type String
         * @default
         */
        uniScaleKey: "shiftKey",
        /**
         * When true, objects use center point as the origin of scale transformation.
         * <b>Backwards incompatibility note:</b> This property replaces "centerTransform" (Boolean).
         * @since 1.3.4
         * @type Boolean
         * @default
         */
        centeredScaling: !1,
        /**
         * When true, objects use center point as the origin of rotate transformation.
         * <b>Backwards incompatibility note:</b> This property replaces "centerTransform" (Boolean).
         * @since 1.3.4
         * @type Boolean
         * @default
         */
        centeredRotation: !1,
        /**
         * Indicates which key enable centered Transform
         * values: 'altKey', 'shiftKey', 'ctrlKey'.
         * If `null` or 'none' or any other string that is not a modifier key
         * feature is disabled feature disabled.
         * @since 1.6.2
         * @type String
         * @default
         */
        centeredKey: "altKey",
        /**
         * Indicates which key enable alternate action on corner
         * values: 'altKey', 'shiftKey', 'ctrlKey'.
         * If `null` or 'none' or any other string that is not a modifier key
         * feature is disabled feature disabled.
         * @since 1.6.2
         * @type String
         * @default
         */
        altActionKey: "shiftKey",
        /**
         * Indicates that canvas is interactive. This property should not be changed.
         * @type Boolean
         * @default
         */
        interactive: !0,
        /**
         * Indicates whether group selection should be enabled
         * @type Boolean
         * @default
         */
        selection: !0,
        /**
         * Indicates which key or keys enable multiple click selection
         * Pass value as a string or array of strings
         * values: 'altKey', 'shiftKey', 'ctrlKey'.
         * If `null` or empty or containing any other string that is not a modifier key
         * feature is disabled.
         * @since 1.6.2
         * @type String|Array
         * @default
         */
        selectionKey: "shiftKey",
        /**
         * Indicates which key enable alternative selection
         * in case of target overlapping with active object
         * values: 'altKey', 'shiftKey', 'ctrlKey'.
         * For a series of reason that come from the general expectations on how
         * things should work, this feature works only for preserveObjectStacking true.
         * If `null` or 'none' or any other string that is not a modifier key
         * feature is disabled.
         * @since 1.6.5
         * @type null|String
         * @default
         */
        altSelectionKey: null,
        /**
         * Color of selection
         * @type String
         * @default
         */
        selectionColor: "rgba(100, 100, 255, 0.3)",
        // blue
        /**
         * Default dash array pattern
         * If not empty the selection border is dashed
         * @type Array
         */
        selectionDashArray: [],
        /**
         * Color of the border of selection (usually slightly darker than color of selection itself)
         * @type String
         * @default
         */
        selectionBorderColor: "rgba(255, 255, 255, 0.3)",
        /**
         * Width of a line used in object/group selection
         * @type Number
         * @default
         */
        selectionLineWidth: 1,
        /**
         * Select only shapes that are fully contained in the dragged selection rectangle.
         * @type Boolean
         * @default
         */
        selectionFullyContained: !1,
        /**
         * Default cursor value used when hovering over an object on canvas
         * @type String
         * @default
         */
        hoverCursor: "move",
        /**
         * Default cursor value used when moving an object on canvas
         * @type String
         * @default
         */
        moveCursor: "move",
        /**
         * Default cursor value used for the entire canvas
         * @type String
         * @default
         */
        defaultCursor: "default",
        /**
         * Cursor value used during free drawing
         * @type String
         * @default
         */
        freeDrawingCursor: "crosshair",
        /**
         * Cursor value used for disabled elements ( corners with disabled action )
         * @type String
         * @since 2.0.0
         * @default
         */
        notAllowedCursor: "not-allowed",
        /**
         * Default element class that's given to wrapper (div) element of canvas
         * @type String
         * @default
         */
        containerClass: "canvas-container",
        /**
         * When true, object detection happens on per-pixel basis rather than on per-bounding-box
         * @type Boolean
         * @default
         */
        perPixelTargetFind: !1,
        /**
         * Number of pixels around target pixel to tolerate (consider active) during object detection
         * @type Number
         * @default
         */
        targetFindTolerance: 0,
        /**
         * When true, target detection is skipped. Target detection will return always undefined.
         * click selection won't work anymore, events will fire with no targets.
         * if something is selected before setting it to true, it will be deselected at the first click.
         * area selection will still work. check the `selection` property too.
         * if you deactivate both, you should look into staticCanvas.
         * @type Boolean
         * @default
         */
        skipTargetFind: !1,
        /**
         * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.
         * After mousedown, mousemove creates a shape,
         * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.
         * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}
         * @type Boolean
         * @default
         */
        isDrawingMode: !1,
        /**
         * Indicates whether objects should remain in current stack position when selected.
         * When false objects are brought to top and rendered as part of the selection group
         * @type Boolean
         * @default
         */
        preserveObjectStacking: !1,
        /**
         * Indicates the angle that an object will lock to while rotating.
         * @type Number
         * @since 1.6.7
         * @default
         */
        snapAngle: 0,
        /**
         * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.
         * When `null`, the snapThreshold will default to the snapAngle.
         * @type null|Number
         * @since 1.6.7
         * @default
         */
        snapThreshold: null,
        /**
         * Indicates if the right click on canvas can output the context menu or not
         * @type Boolean
         * @since 1.6.5
         * @default
         */
        stopContextMenu: !1,
        /**
         * Indicates if the canvas can fire right click events
         * @type Boolean
         * @since 1.6.5
         * @default
         */
        fireRightClick: !1,
        /**
         * Indicates if the canvas can fire middle click events
         * @type Boolean
         * @since 1.7.8
         * @default
         */
        fireMiddleClick: !1,
        /**
         * Keep track of the subTargets for Mouse Events
         * @type fabric.Object[]
         */
        targets: [],
        /**
         * When the option is enabled, PointerEvent is used instead of MouseEvent.
         * @type Boolean
         * @default
         */
        enablePointerEvents: !1,
        /**
         * Keep track of the hovered target
         * @type fabric.Object
         * @private
         */
        _hoveredTarget: null,
        /**
         * hold the list of nested targets hovered
         * @type fabric.Object[]
         * @private
         */
        _hoveredTargets: [],
        /**
         * @private
         */
        _initInteractive: function() {
          this._currentTransform = null, this._groupSelector = null, this._initWrapperElement(), this._createUpperCanvas(), this._initEventListeners(), this._initRetinaScaling(), this.freeDrawingBrush = e.PencilBrush && new e.PencilBrush(this), this.calcOffset();
        },
        /**
         * Divides objects in two groups, one to render immediately
         * and one to render as activeGroup.
         * @return {Array} objects to render immediately and pushes the other in the activeGroup.
         */
        _chooseObjectsToRender: function() {
          var o = this.getActiveObjects(), h, u, d;
          if (o.length > 0 && !this.preserveObjectStacking) {
            u = [], d = [];
            for (var m = 0, p = this._objects.length; m < p; m++)
              h = this._objects[m], o.indexOf(h) === -1 ? u.push(h) : d.push(h);
            o.length > 1 && (this._activeObject._objects = d), u.push.apply(u, d);
          } else
            u = this._objects;
          return u;
        },
        /**
         * Renders both the top canvas and the secondary container canvas.
         * @return {fabric.Canvas} instance
         * @chainable
         */
        renderAll: function() {
          this.contextTopDirty && !this._groupSelector && !this.isDrawingMode && (this.clearContext(this.contextTop), this.contextTopDirty = !1), this.hasLostContext && (this.renderTopLayer(this.contextTop), this.hasLostContext = !1);
          var o = this.contextContainer;
          return this.renderCanvas(o, this._chooseObjectsToRender()), this;
        },
        renderTopLayer: function(o) {
          o.save(), this.isDrawingMode && this._isCurrentlyDrawing && (this.freeDrawingBrush && this.freeDrawingBrush._render(), this.contextTopDirty = !0), this.selection && this._groupSelector && (this._drawSelection(o), this.contextTopDirty = !0), o.restore();
        },
        /**
         * Method to render only the top canvas.
         * Also used to render the group selection box.
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        renderTop: function() {
          var o = this.contextTop;
          return this.clearContext(o), this.renderTopLayer(o), this.fire("after:render"), this;
        },
        /**
         * @private
         */
        _normalizePointer: function(o, h) {
          var u = o.calcTransformMatrix(), d = e.util.invertTransform(u), m = this.restorePointerVpt(h);
          return e.util.transformPoint(m, d);
        },
        /**
         * Returns true if object is transparent at a certain location
         * @param {fabric.Object} target Object to check
         * @param {Number} x Left coordinate
         * @param {Number} y Top coordinate
         * @return {Boolean}
         */
        isTargetTransparent: function(o, h, u) {
          if (o.shouldCache() && o._cacheCanvas && o !== this._activeObject) {
            var d = this._normalizePointer(o, { x: h, y: u }), m = Math.max(o.cacheTranslationX + d.x * o.zoomX, 0), p = Math.max(o.cacheTranslationY + d.y * o.zoomY, 0), w = e.util.isTransparent(
              o._cacheContext,
              Math.round(m),
              Math.round(p),
              this.targetFindTolerance
            );
            return w;
          }
          var v = this.contextCache, b = o.selectionBackgroundColor, y = this.viewportTransform;
          o.selectionBackgroundColor = "", this.clearContext(v), v.save(), v.transform(y[0], y[1], y[2], y[3], y[4], y[5]), o.render(v), v.restore(), o.selectionBackgroundColor = b;
          var w = e.util.isTransparent(
            v,
            h,
            u,
            this.targetFindTolerance
          );
          return w;
        },
        /**
         * takes an event and determines if selection key has been pressed
         * @private
         * @param {Event} e Event object
         */
        _isSelectionKeyPressed: function(o) {
          var h = !1;
          return Array.isArray(this.selectionKey) ? h = !!this.selectionKey.find(function(u) {
            return o[u] === !0;
          }) : h = o[this.selectionKey], h;
        },
        /**
         * @private
         * @param {Event} e Event object
         * @param {fabric.Object} target
         */
        _shouldClearSelection: function(o, h) {
          var u = this.getActiveObjects(), d = this._activeObject;
          return !h || h && d && u.length > 1 && u.indexOf(h) === -1 && d !== h && !this._isSelectionKeyPressed(o) || h && !h.evented || h && !h.selectable && d && d !== h;
        },
        /**
         * centeredScaling from object can't override centeredScaling from canvas.
         * this should be fixed, since object setting should take precedence over canvas.
         * also this should be something that will be migrated in the control properties.
         * as ability to define the origin of the transformation that the control provide.
         * @private
         * @param {fabric.Object} target
         * @param {String} action
         * @param {Boolean} altKey
         */
        _shouldCenterTransform: function(o, h, u) {
          if (o) {
            var d;
            return h === "scale" || h === "scaleX" || h === "scaleY" || h === "resizing" ? d = this.centeredScaling || o.centeredScaling : h === "rotate" && (d = this.centeredRotation || o.centeredRotation), d ? !u : u;
          }
        },
        /**
         * should disappear before release 4.0
         * @private
         */
        _getOriginFromCorner: function(o, h) {
          var u = {
            x: o.originX,
            y: o.originY
          };
          return h === "ml" || h === "tl" || h === "bl" ? u.x = "right" : (h === "mr" || h === "tr" || h === "br") && (u.x = "left"), h === "tl" || h === "mt" || h === "tr" ? u.y = "bottom" : (h === "bl" || h === "mb" || h === "br") && (u.y = "top"), u;
        },
        /**
         * @private
         * @param {Boolean} alreadySelected true if target is already selected
         * @param {String} corner a string representing the corner ml, mr, tl ...
         * @param {Event} e Event object
         * @param {fabric.Object} [target] inserted back to help overriding. Unused
         */
        _getActionFromCorner: function(o, h, u, d) {
          if (!h || !o)
            return "drag";
          var m = d.controls[h];
          return m.getActionName(u, m, d);
        },
        /**
         * @private
         * @param {Event} e Event object
         * @param {fabric.Object} target
         */
        _setupCurrentTransform: function(o, h, u) {
          if (h) {
            var d = this.getPointer(o), m = h.__corner, p = h.controls[m], v = u && m ? p.getActionHandler(o, h, p) : e.controlsUtils.dragHandler, b = this._getActionFromCorner(u, m, o, h), y = this._getOriginFromCorner(h, m), w = o[this.centeredKey], x = {
              target: h,
              action: b,
              actionHandler: v,
              corner: m,
              scaleX: h.scaleX,
              scaleY: h.scaleY,
              skewX: h.skewX,
              skewY: h.skewY,
              // used by transation
              offsetX: d.x - h.left,
              offsetY: d.y - h.top,
              originX: y.x,
              originY: y.y,
              ex: d.x,
              ey: d.y,
              lastX: d.x,
              lastY: d.y,
              // unsure they are useful anymore.
              // left: target.left,
              // top: target.top,
              theta: s(h.angle),
              // end of unsure
              width: h.width * h.scaleX,
              shiftKey: o.shiftKey,
              altKey: w,
              original: e.util.saveObjectTransform(h)
            };
            this._shouldCenterTransform(h, b, w) && (x.originX = "center", x.originY = "center"), x.original.originX = y.x, x.original.originY = y.y, this._currentTransform = x, this._beforeTransform(o);
          }
        },
        /**
         * Set the cursor type of the canvas element
         * @param {String} value Cursor type of the canvas element.
         * @see http://www.w3.org/TR/css3-ui/#cursor
         */
        setCursor: function(o) {
          this.upperCanvasEl.style.cursor = o;
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx to draw the selection on
         */
        _drawSelection: function(o) {
          var h = this._groupSelector, u = new e.Point(h.ex, h.ey), d = e.util.transformPoint(u, this.viewportTransform), m = new e.Point(h.ex + h.left, h.ey + h.top), p = e.util.transformPoint(m, this.viewportTransform), v = Math.min(d.x, p.x), b = Math.min(d.y, p.y), y = Math.max(d.x, p.x), w = Math.max(d.y, p.y), x = this.selectionLineWidth / 2;
          this.selectionColor && (o.fillStyle = this.selectionColor, o.fillRect(v, b, y - v, w - b)), !(!this.selectionLineWidth || !this.selectionBorderColor) && (o.lineWidth = this.selectionLineWidth, o.strokeStyle = this.selectionBorderColor, v += x, b += x, y -= x, w -= x, e.Object.prototype._setLineDash.call(this, o, this.selectionDashArray), o.strokeRect(v, b, y - v, w - b));
        },
        /**
         * Method that determines what object we are clicking on
         * the skipGroup parameter is for internal use, is needed for shift+click action
         * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target
         * or the outside part of the corner.
         * @param {Event} e mouse event
         * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through
         * @return {fabric.Object} the target found
         */
        findTarget: function(o, h) {
          if (!this.skipTargetFind) {
            var u = !0, d = this.getPointer(o, u), m = this._activeObject, p = this.getActiveObjects(), v, b, y = c(o), w = p.length > 1 && !h || p.length === 1;
            if (this.targets = [], w && m._findTargetCorner(d, y) || p.length > 1 && !h && m === this._searchPossibleTargets([m], d))
              return m;
            if (p.length === 1 && m === this._searchPossibleTargets([m], d))
              if (this.preserveObjectStacking)
                v = m, b = this.targets, this.targets = [];
              else
                return m;
            var x = this._searchPossibleTargets(this._objects, d);
            return o[this.altSelectionKey] && x && v && x !== v && (x = v, this.targets = b), x;
          }
        },
        /**
         * Checks point is inside the object.
         * @param {Object} [pointer] x,y object of point coordinates we want to check.
         * @param {fabric.Object} obj Object to test against
         * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.
         * @return {Boolean} true if point is contained within an area of given object
         * @private
         */
        _checkTarget: function(o, h, u) {
          if (h && h.visible && h.evented && // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html
          // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html
          h.containsPoint(o))
            if ((this.perPixelTargetFind || h.perPixelTargetFind) && !h.isEditing) {
              var d = this.isTargetTransparent(h, u.x, u.y);
              if (!d)
                return !0;
            } else
              return !0;
        },
        /**
         * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted
         * @param {Array} [objects] objects array to look into
         * @param {Object} [pointer] x,y object of point coordinates we want to check.
         * @return {fabric.Object} object that contains pointer
         * @private
         */
        _searchPossibleTargets: function(o, h) {
          for (var u, d = o.length, m; d--; ) {
            var p = o[d], v = p.group ? this._normalizePointer(p.group, h) : h;
            if (this._checkTarget(v, p, h)) {
              u = o[d], u.subTargetCheck && u instanceof e.Group && (m = this._searchPossibleTargets(u._objects, h), m && this.targets.push(m));
              break;
            }
          }
          return u;
        },
        /**
         * Returns pointer coordinates without the effect of the viewport
         * @param {Object} pointer with "x" and "y" number values
         * @return {Object} object with "x" and "y" number values
         */
        restorePointerVpt: function(o) {
          return e.util.transformPoint(
            o,
            e.util.invertTransform(this.viewportTransform)
          );
        },
        /**
         * Returns pointer coordinates relative to canvas.
         * Can return coordinates with or without viewportTransform.
         * ignoreZoom false gives back coordinates that represent
         * the point clicked on canvas element.
         * ignoreZoom true gives back coordinates after being processed
         * by the viewportTransform ( sort of coordinates of what is displayed
         * on the canvas where you are clicking.
         * ignoreZoom true = HTMLElement coordinates relative to top,left
         * ignoreZoom false, default = fabric space coordinates, the same used for shape position
         * To interact with your shapes top and left you want to use ignoreZoom true
         * most of the time, while ignoreZoom false will give you coordinates
         * compatible with the object.oCoords system.
         * of the time.
         * @param {Event} e
         * @param {Boolean} ignoreZoom
         * @return {Object} object with "x" and "y" number values
         */
        getPointer: function(o, h) {
          if (this._absolutePointer && !h)
            return this._absolutePointer;
          if (this._pointer && h)
            return this._pointer;
          var u = a(o), d = this.upperCanvasEl, m = d.getBoundingClientRect(), p = m.width || 0, v = m.height || 0, b;
          (!p || !v) && ("top" in m && "bottom" in m && (v = Math.abs(m.top - m.bottom)), "right" in m && "left" in m && (p = Math.abs(m.right - m.left))), this.calcOffset(), u.x = u.x - this._offset.left, u.y = u.y - this._offset.top, h || (u = this.restorePointerVpt(u));
          var y = this.getRetinaScaling();
          return y !== 1 && (u.x /= y, u.y /= y), p === 0 || v === 0 ? b = { width: 1, height: 1 } : b = {
            width: d.width / p,
            height: d.height / v
          }, {
            x: u.x * b.width,
            y: u.y * b.height
          };
        },
        /**
         * @private
         * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized
         */
        _createUpperCanvas: function() {
          var o = this.lowerCanvasEl.className.replace(/\s*lower-canvas\s*/, ""), h = this.lowerCanvasEl, u = this.upperCanvasEl;
          u ? u.className = "" : (u = this._createCanvasElement(), this.upperCanvasEl = u), e.util.addClass(u, "upper-canvas " + o), this.wrapperEl.appendChild(u), this._copyCanvasStyle(h, u), this._applyCanvasStyle(u), this.contextTop = u.getContext("2d");
        },
        /**
         * Returns context of top canvas where interactions are drawn
         * @returns {CanvasRenderingContext2D}
         */
        getTopContext: function() {
          return this.contextTop;
        },
        /**
         * @private
         */
        _createCacheCanvas: function() {
          this.cacheCanvasEl = this._createCanvasElement(), this.cacheCanvasEl.setAttribute("width", this.width), this.cacheCanvasEl.setAttribute("height", this.height), this.contextCache = this.cacheCanvasEl.getContext("2d");
        },
        /**
         * @private
         */
        _initWrapperElement: function() {
          this.wrapperEl = e.util.wrapElement(this.lowerCanvasEl, "div", {
            class: this.containerClass
          }), e.util.setStyle(this.wrapperEl, {
            width: this.width + "px",
            height: this.height + "px",
            position: "relative"
          }), e.util.makeElementUnselectable(this.wrapperEl);
        },
        /**
         * @private
         * @param {HTMLElement} element canvas element to apply styles on
         */
        _applyCanvasStyle: function(o) {
          var h = this.width || o.width, u = this.height || o.height;
          e.util.setStyle(o, {
            position: "absolute",
            width: h + "px",
            height: u + "px",
            left: 0,
            top: 0,
            "touch-action": this.allowTouchScrolling ? "manipulation" : "none",
            "-ms-touch-action": this.allowTouchScrolling ? "manipulation" : "none"
          }), o.width = h, o.height = u, e.util.makeElementUnselectable(o);
        },
        /**
         * Copy the entire inline style from one element (fromEl) to another (toEl)
         * @private
         * @param {Element} fromEl Element style is copied from
         * @param {Element} toEl Element copied style is applied to
         */
        _copyCanvasStyle: function(o, h) {
          h.style.cssText = o.style.cssText;
        },
        /**
         * Returns context of canvas where object selection is drawn
         * @return {CanvasRenderingContext2D}
         */
        getSelectionContext: function() {
          return this.contextTop;
        },
        /**
         * Returns &lt;canvas> element on which object selection is drawn
         * @return {HTMLCanvasElement}
         */
        getSelectionElement: function() {
          return this.upperCanvasEl;
        },
        /**
         * Returns currently active object
         * @return {fabric.Object} active object
         */
        getActiveObject: function() {
          return this._activeObject;
        },
        /**
         * Returns an array with the current selected objects
         * @return {fabric.Object} active object
         */
        getActiveObjects: function() {
          var o = this._activeObject;
          return o ? o.type === "activeSelection" && o._objects ? o._objects.slice(0) : [o] : [];
        },
        /**
         * @private
         * @param {fabric.Object} obj Object that was removed
         */
        _onObjectRemoved: function(o) {
          o === this._activeObject && (this.fire("before:selection:cleared", { target: o }), this._discardActiveObject(), this.fire("selection:cleared", { target: o }), o.fire("deselected")), o === this._hoveredTarget && (this._hoveredTarget = null, this._hoveredTargets = []), this.callSuper("_onObjectRemoved", o);
        },
        /**
         * @private
         * Compares the old activeObject with the current one and fires correct events
         * @param {fabric.Object} obj old activeObject
         */
        _fireSelectionEvents: function(o, h) {
          var u = !1, d = this.getActiveObjects(), m = [], p = [];
          o.forEach(function(v) {
            d.indexOf(v) === -1 && (u = !0, v.fire("deselected", {
              e: h,
              target: v
            }), p.push(v));
          }), d.forEach(function(v) {
            o.indexOf(v) === -1 && (u = !0, v.fire("selected", {
              e: h,
              target: v
            }), m.push(v));
          }), o.length > 0 && d.length > 0 ? u && this.fire("selection:updated", {
            e: h,
            selected: m,
            deselected: p
          }) : d.length > 0 ? this.fire("selection:created", {
            e: h,
            selected: m
          }) : o.length > 0 && this.fire("selection:cleared", {
            e: h,
            deselected: p
          });
        },
        /**
         * Sets given object as the only active object on canvas
         * @param {fabric.Object} object Object to set as an active one
         * @param {Event} [e] Event (passed along when firing "object:selected")
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        setActiveObject: function(o, h) {
          var u = this.getActiveObjects();
          return this._setActiveObject(o, h), this._fireSelectionEvents(u, h), this;
        },
        /**
         * This is a private method for now.
         * This is supposed to be equivalent to setActiveObject but without firing
         * any event. There is commitment to have this stay this way.
         * This is the functional part of setActiveObject.
         * @private
         * @param {Object} object to set as active
         * @param {Event} [e] Event (passed along when firing "object:selected")
         * @return {Boolean} true if the selection happened
         */
        _setActiveObject: function(o, h) {
          return this._activeObject === o || !this._discardActiveObject(h, o) || o.onSelect({ e: h }) ? !1 : (this._activeObject = o, !0);
        },
        /**
         * This is a private method for now.
         * This is supposed to be equivalent to discardActiveObject but without firing
         * any events. There is commitment to have this stay this way.
         * This is the functional part of discardActiveObject.
         * @param {Event} [e] Event (passed along when firing "object:deselected")
         * @param {Object} object to set as active
         * @return {Boolean} true if the selection happened
         * @private
         */
        _discardActiveObject: function(o, h) {
          var u = this._activeObject;
          if (u) {
            if (u.onDeselect({ e: o, object: h }))
              return !1;
            this._activeObject = null;
          }
          return !0;
        },
        /**
         * Discards currently active object and fire events. If the function is called by fabric
         * as a consequence of a mouse event, the event is passed as a parameter and
         * sent to the fire function for the custom events. When used as a method the
         * e param does not have any application.
         * @param {event} e
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        discardActiveObject: function(o) {
          var h = this.getActiveObjects(), u = this.getActiveObject();
          return h.length && this.fire("before:selection:cleared", { target: u, e: o }), this._discardActiveObject(o), this._fireSelectionEvents(h, o), this;
        },
        /**
         * Clears a canvas element and removes all event listeners
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        dispose: function() {
          var o = this.wrapperEl;
          return this.removeListeners(), o.removeChild(this.upperCanvasEl), o.removeChild(this.lowerCanvasEl), this.contextCache = null, this.contextTop = null, ["upperCanvasEl", "cacheCanvasEl"].forEach((function(h) {
            e.util.cleanUpJsdomNode(this[h]), this[h] = void 0;
          }).bind(this)), o.parentNode && o.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl), delete this.wrapperEl, e.StaticCanvas.prototype.dispose.call(this), this;
        },
        /**
         * Clears all contexts (background, main, top) of an instance
         * @return {fabric.Canvas} thisArg
         * @chainable
         */
        clear: function() {
          return this.discardActiveObject(), this.clearContext(this.contextTop), this.callSuper("clear");
        },
        /**
         * Draws objects' controls (borders/controls)
         * @param {CanvasRenderingContext2D} ctx Context to render controls on
         */
        drawControls: function(o) {
          var h = this._activeObject;
          h && h._renderControls(o);
        },
        /**
         * @private
         */
        _toObject: function(o, h, u) {
          var d = this._realizeGroupTransformOnObject(o), m = this.callSuper("_toObject", o, h, u);
          return this._unwindGroupTransformOnObject(o, d), m;
        },
        /**
         * Realises an object's group transformation on it
         * @private
         * @param {fabric.Object} [instance] the object to transform (gets mutated)
         * @returns the original values of instance which were changed
         */
        _realizeGroupTransformOnObject: function(o) {
          if (o.group && o.group.type === "activeSelection" && this._activeObject === o.group) {
            var h = ["angle", "flipX", "flipY", "left", "scaleX", "scaleY", "skewX", "skewY", "top"], u = {};
            return h.forEach(function(d) {
              u[d] = o[d];
            }), e.util.addTransformToObject(o, this._activeObject.calcOwnMatrix()), u;
          } else
            return null;
        },
        /**
         * Restores the changed properties of instance
         * @private
         * @param {fabric.Object} [instance] the object to un-transform (gets mutated)
         * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject
         */
        _unwindGroupTransformOnObject: function(o, h) {
          h && o.set(h);
        },
        /**
         * @private
         */
        _setSVGObject: function(o, h, u) {
          var d = this._realizeGroupTransformOnObject(h);
          this.callSuper("_setSVGObject", o, h, u), this._unwindGroupTransformOnObject(h, d);
        },
        setViewportTransform: function(o) {
          this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing && this._activeObject.clearContextTop(), e.StaticCanvas.prototype.setViewportTransform.call(this, o);
        }
      }
    );
    for (var f in e.StaticCanvas)
      f !== "prototype" && (e.Canvas[f] = e.StaticCanvas[f]);
  }(), function() {
    var a = e.util.addListener, s = e.util.removeListener, c = 3, f = 2, o = 1, h = { passive: !1 };
    function u(d, m) {
      return d.button && d.button === m - 1;
    }
    e.util.object.extend(
      e.Canvas.prototype,
      /** @lends fabric.Canvas.prototype */
      {
        /**
         * Contains the id of the touch event that owns the fabric transform
         * @type Number
         * @private
         */
        mainTouchId: null,
        /**
         * Adds mouse listeners to canvas
         * @private
         */
        _initEventListeners: function() {
          this.removeListeners(), this._bindEvents(), this.addOrRemove(a, "add");
        },
        /**
         * return an event prefix pointer or mouse.
         * @private
         */
        _getEventPrefix: function() {
          return this.enablePointerEvents ? "pointer" : "mouse";
        },
        addOrRemove: function(d, m) {
          var p = this.upperCanvasEl, v = this._getEventPrefix();
          d(e.window, "resize", this._onResize), d(p, v + "down", this._onMouseDown), d(p, v + "move", this._onMouseMove, h), d(p, v + "out", this._onMouseOut), d(p, v + "enter", this._onMouseEnter), d(p, "wheel", this._onMouseWheel), d(p, "contextmenu", this._onContextMenu), d(p, "dblclick", this._onDoubleClick), d(p, "dragover", this._onDragOver), d(p, "dragenter", this._onDragEnter), d(p, "dragleave", this._onDragLeave), d(p, "drop", this._onDrop), this.enablePointerEvents || d(p, "touchstart", this._onTouchStart, h), typeof eventjs < "u" && m in eventjs && (eventjs[m](p, "gesture", this._onGesture), eventjs[m](p, "drag", this._onDrag), eventjs[m](p, "orientation", this._onOrientationChange), eventjs[m](p, "shake", this._onShake), eventjs[m](p, "longpress", this._onLongPress));
        },
        /**
         * Removes all event listeners
         */
        removeListeners: function() {
          this.addOrRemove(s, "remove");
          var d = this._getEventPrefix();
          s(e.document, d + "up", this._onMouseUp), s(e.document, "touchend", this._onTouchEnd, h), s(e.document, d + "move", this._onMouseMove, h), s(e.document, "touchmove", this._onMouseMove, h);
        },
        /**
         * @private
         */
        _bindEvents: function() {
          this.eventsBound || (this._onMouseDown = this._onMouseDown.bind(this), this._onTouchStart = this._onTouchStart.bind(this), this._onMouseMove = this._onMouseMove.bind(this), this._onMouseUp = this._onMouseUp.bind(this), this._onTouchEnd = this._onTouchEnd.bind(this), this._onResize = this._onResize.bind(this), this._onGesture = this._onGesture.bind(this), this._onDrag = this._onDrag.bind(this), this._onShake = this._onShake.bind(this), this._onLongPress = this._onLongPress.bind(this), this._onOrientationChange = this._onOrientationChange.bind(this), this._onMouseWheel = this._onMouseWheel.bind(this), this._onMouseOut = this._onMouseOut.bind(this), this._onMouseEnter = this._onMouseEnter.bind(this), this._onContextMenu = this._onContextMenu.bind(this), this._onDoubleClick = this._onDoubleClick.bind(this), this._onDragOver = this._onDragOver.bind(this), this._onDragEnter = this._simpleEventHandler.bind(this, "dragenter"), this._onDragLeave = this._simpleEventHandler.bind(this, "dragleave"), this._onDrop = this._onDrop.bind(this), this.eventsBound = !0);
        },
        /**
         * @private
         * @param {Event} [e] Event object fired on Event.js gesture
         * @param {Event} [self] Inner Event object
         */
        _onGesture: function(d, m) {
          this.__onTransformGesture && this.__onTransformGesture(d, m);
        },
        /**
         * @private
         * @param {Event} [e] Event object fired on Event.js drag
         * @param {Event} [self] Inner Event object
         */
        _onDrag: function(d, m) {
          this.__onDrag && this.__onDrag(d, m);
        },
        /**
         * @private
         * @param {Event} [e] Event object fired on wheel event
         */
        _onMouseWheel: function(d) {
          this.__onMouseWheel(d);
        },
        /**
         * @private
         * @param {Event} e Event object fired on mousedown
         */
        _onMouseOut: function(d) {
          var m = this._hoveredTarget;
          this.fire("mouse:out", { target: m, e: d }), this._hoveredTarget = null, m && m.fire("mouseout", { e: d });
          var p = this;
          this._hoveredTargets.forEach(function(v) {
            p.fire("mouse:out", { target: m, e: d }), v && m.fire("mouseout", { e: d });
          }), this._hoveredTargets = [];
        },
        /**
         * @private
         * @param {Event} e Event object fired on mouseenter
         */
        _onMouseEnter: function(d) {
          !this._currentTransform && !this.findTarget(d) && (this.fire("mouse:over", { target: null, e: d }), this._hoveredTarget = null, this._hoveredTargets = []);
        },
        /**
         * @private
         * @param {Event} [e] Event object fired on Event.js orientation change
         * @param {Event} [self] Inner Event object
         */
        _onOrientationChange: function(d, m) {
          this.__onOrientationChange && this.__onOrientationChange(d, m);
        },
        /**
         * @private
         * @param {Event} [e] Event object fired on Event.js shake
         * @param {Event} [self] Inner Event object
         */
        _onShake: function(d, m) {
          this.__onShake && this.__onShake(d, m);
        },
        /**
         * @private
         * @param {Event} [e] Event object fired on Event.js shake
         * @param {Event} [self] Inner Event object
         */
        _onLongPress: function(d, m) {
          this.__onLongPress && this.__onLongPress(d, m);
        },
        /**
         * prevent default to allow drop event to be fired
         * @private
         * @param {Event} [e] Event object fired on Event.js shake
         */
        _onDragOver: function(d) {
          d.preventDefault();
          var m = this._simpleEventHandler("dragover", d);
          this._fireEnterLeaveEvents(m, d);
        },
        /**
         * `drop:before` is a an event that allow you to schedule logic
         * before the `drop` event. Prefer `drop` event always, but if you need
         * to run some drop-disabling logic on an event, since there is no way
         * to handle event handlers ordering, use `drop:before`
         * @param {Event} e
         */
        _onDrop: function(d) {
          return this._simpleEventHandler("drop:before", d), this._simpleEventHandler("drop", d);
        },
        /**
         * @private
         * @param {Event} e Event object fired on mousedown
         */
        _onContextMenu: function(d) {
          return this.stopContextMenu && (d.stopPropagation(), d.preventDefault()), !1;
        },
        /**
         * @private
         * @param {Event} e Event object fired on mousedown
         */
        _onDoubleClick: function(d) {
          this._cacheTransformEventData(d), this._handleEvent(d, "dblclick"), this._resetTransformEventData(d);
        },
        /**
         * Return a the id of an event.
         * returns either the pointerId or the identifier or 0 for the mouse event
         * @private
         * @param {Event} evt Event object
         */
        getPointerId: function(d) {
          var m = d.changedTouches;
          return m ? m[0] && m[0].identifier : this.enablePointerEvents ? d.pointerId : -1;
        },
        /**
         * Determines if an event has the id of the event that is considered main
         * @private
         * @param {evt} event Event object
         */
        _isMainEvent: function(d) {
          return d.isPrimary === !0 ? !0 : d.isPrimary === !1 ? !1 : d.type === "touchend" && d.touches.length === 0 ? !0 : d.changedTouches ? d.changedTouches[0].identifier === this.mainTouchId : !0;
        },
        /**
         * @private
         * @param {Event} e Event object fired on mousedown
         */
        _onTouchStart: function(d) {
          d.preventDefault(), this.mainTouchId === null && (this.mainTouchId = this.getPointerId(d)), this.__onMouseDown(d), this._resetTransformEventData();
          var m = this.upperCanvasEl, p = this._getEventPrefix();
          a(e.document, "touchend", this._onTouchEnd, h), a(e.document, "touchmove", this._onMouseMove, h), s(m, p + "down", this._onMouseDown);
        },
        /**
         * @private
         * @param {Event} e Event object fired on mousedown
         */
        _onMouseDown: function(d) {
          this.__onMouseDown(d), this._resetTransformEventData();
          var m = this.upperCanvasEl, p = this._getEventPrefix();
          s(m, p + "move", this._onMouseMove, h), a(e.document, p + "up", this._onMouseUp), a(e.document, p + "move", this._onMouseMove, h);
        },
        /**
         * @private
         * @param {Event} e Event object fired on mousedown
         */
        _onTouchEnd: function(d) {
          if (!(d.touches.length > 0)) {
            this.__onMouseUp(d), this._resetTransformEventData(), this.mainTouchId = null;
            var m = this._getEventPrefix();
            s(e.document, "touchend", this._onTouchEnd, h), s(e.document, "touchmove", this._onMouseMove, h);
            var p = this;
            this._willAddMouseDown && clearTimeout(this._willAddMouseDown), this._willAddMouseDown = setTimeout(function() {
              a(p.upperCanvasEl, m + "down", p._onMouseDown), p._willAddMouseDown = 0;
            }, 400);
          }
        },
        /**
         * @private
         * @param {Event} e Event object fired on mouseup
         */
        _onMouseUp: function(d) {
          this.__onMouseUp(d), this._resetTransformEventData();
          var m = this.upperCanvasEl, p = this._getEventPrefix();
          this._isMainEvent(d) && (s(e.document, p + "up", this._onMouseUp), s(e.document, p + "move", this._onMouseMove, h), a(m, p + "move", this._onMouseMove, h));
        },
        /**
         * @private
         * @param {Event} e Event object fired on mousemove
         */
        _onMouseMove: function(d) {
          !this.allowTouchScrolling && d.preventDefault && d.preventDefault(), this.__onMouseMove(d);
        },
        /**
         * @private
         */
        _onResize: function() {
          this.calcOffset();
        },
        /**
         * Decides whether the canvas should be redrawn in mouseup and mousedown events.
         * @private
         * @param {Object} target
         */
        _shouldRender: function(d) {
          var m = this._activeObject;
          return !!m != !!d || m && d && m !== d ? !0 : (m && m.isEditing, !1);
        },
        /**
         * Method that defines the actions when mouse is released on canvas.
         * The method resets the currentTransform parameters, store the image corner
         * position in the image object and render the canvas on top.
         * @private
         * @param {Event} e Event object fired on mouseup
         */
        __onMouseUp: function(d) {
          var m, p = this._currentTransform, v = this._groupSelector, b = !1, y = !v || v.left === 0 && v.top === 0;
          if (this._cacheTransformEventData(d), m = this._target, this._handleEvent(d, "up:before"), u(d, c)) {
            this.fireRightClick && this._handleEvent(d, "up", c, y);
            return;
          }
          if (u(d, f)) {
            this.fireMiddleClick && this._handleEvent(d, "up", f, y), this._resetTransformEventData();
            return;
          }
          if (this.isDrawingMode && this._isCurrentlyDrawing) {
            this._onMouseUpInDrawingMode(d);
            return;
          }
          if (this._isMainEvent(d)) {
            if (p && (this._finalizeCurrentTransform(d), b = p.actionPerformed), !y) {
              var w = m === this._activeObject;
              this._maybeGroupObjects(d), b || (b = this._shouldRender(m) || !w && m === this._activeObject);
            }
            var x, _;
            if (m) {
              if (x = m._findTargetCorner(
                this.getPointer(d, !0),
                e.util.isTouchEvent(d)
              ), m.selectable && m !== this._activeObject && m.activeOn === "up")
                this.setActiveObject(m, d), b = !0;
              else {
                var S = m.controls[x], k = S && S.getMouseUpHandler(d, m, S);
                k && (_ = this.getPointer(d), k(d, p, _.x, _.y));
              }
              m.isMoving = !1;
            }
            if (p && (p.target !== m || p.corner !== x)) {
              var F = p.target && p.target.controls[p.corner], L = F && F.getMouseUpHandler(d, m, S);
              _ = _ || this.getPointer(d), L && L(d, p, _.x, _.y);
            }
            this._setCursorFromEvent(d, m), this._handleEvent(d, "up", o, y), this._groupSelector = null, this._currentTransform = null, m && (m.__corner = 0), b ? this.requestRenderAll() : y || this.renderTop();
          }
        },
        /**
         * @private
         * Handle event firing for target and subtargets
         * @param {Event} e event from mouse
         * @param {String} eventType event to fire (up, down or move)
         * @return {Fabric.Object} target return the the target found, for internal reasons.
         */
        _simpleEventHandler: function(d, m) {
          var p = this.findTarget(m), v = this.targets, b = {
            e: m,
            target: p,
            subTargets: v
          };
          if (this.fire(d, b), p && p.fire(d, b), !v)
            return p;
          for (var y = 0; y < v.length; y++)
            v[y].fire(d, b);
          return p;
        },
        /**
         * @private
         * Handle event firing for target and subtargets
         * @param {Event} e event from mouse
         * @param {String} eventType event to fire (up, down or move)
         * @param {fabric.Object} targetObj receiving event
         * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right
         * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.
         */
        _handleEvent: function(d, m, p, v) {
          var b = this._target, y = this.targets || [], w = {
            e: d,
            target: b,
            subTargets: y,
            button: p || o,
            isClick: v || !1,
            pointer: this._pointer,
            absolutePointer: this._absolutePointer,
            transform: this._currentTransform
          };
          m === "up" && (w.currentTarget = this.findTarget(d), w.currentSubTargets = this.targets), this.fire("mouse:" + m, w), b && b.fire("mouse" + m, w);
          for (var x = 0; x < y.length; x++)
            y[x].fire("mouse" + m, w);
        },
        /**
         * @private
         * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event
         */
        _finalizeCurrentTransform: function(d) {
          var m = this._currentTransform, p = m.target, v = {
            e: d,
            target: p,
            transform: m,
            action: m.action
          };
          p._scaling && (p._scaling = !1), p.setCoords(), (m.actionPerformed || this.stateful && p.hasStateChanged()) && this._fire("modified", v);
        },
        /**
         * @private
         * @param {Event} e Event object fired on mousedown
         */
        _onMouseDownInDrawingMode: function(d) {
          this._isCurrentlyDrawing = !0, this.getActiveObject() && this.discardActiveObject(d).requestRenderAll();
          var m = this.getPointer(d);
          this.freeDrawingBrush.onMouseDown(m, { e: d, pointer: m }), this._handleEvent(d, "down");
        },
        /**
         * @private
         * @param {Event} e Event object fired on mousemove
         */
        _onMouseMoveInDrawingMode: function(d) {
          if (this._isCurrentlyDrawing) {
            var m = this.getPointer(d);
            this.freeDrawingBrush.onMouseMove(m, { e: d, pointer: m });
          }
          this.setCursor(this.freeDrawingCursor), this._handleEvent(d, "move");
        },
        /**
         * @private
         * @param {Event} e Event object fired on mouseup
         */
        _onMouseUpInDrawingMode: function(d) {
          var m = this.getPointer(d);
          this._isCurrentlyDrawing = this.freeDrawingBrush.onMouseUp({ e: d, pointer: m }), this._handleEvent(d, "up");
        },
        /**
         * Method that defines the actions when mouse is clicked on canvas.
         * The method inits the currentTransform parameters and renders all the
         * canvas so the current image can be placed on the top canvas and the rest
         * in on the container one.
         * @private
         * @param {Event} e Event object fired on mousedown
         */
        __onMouseDown: function(d) {
          this._cacheTransformEventData(d), this._handleEvent(d, "down:before");
          var m = this._target;
          if (u(d, c)) {
            this.fireRightClick && this._handleEvent(d, "down", c);
            return;
          }
          if (u(d, f)) {
            this.fireMiddleClick && this._handleEvent(d, "down", f);
            return;
          }
          if (this.isDrawingMode) {
            this._onMouseDownInDrawingMode(d);
            return;
          }
          if (this._isMainEvent(d) && !this._currentTransform) {
            var p = this._pointer;
            this._previousPointer = p;
            var v = this._shouldRender(m), b = this._shouldGroup(d, m);
            if (this._shouldClearSelection(d, m) ? this.discardActiveObject(d) : b && (this._handleGrouping(d, m), m = this._activeObject), this.selection && (!m || !m.selectable && !m.isEditing && m !== this._activeObject) && (this._groupSelector = {
              ex: this._absolutePointer.x,
              ey: this._absolutePointer.y,
              top: 0,
              left: 0
            }), m) {
              var y = m === this._activeObject;
              m.selectable && m.activeOn === "down" && this.setActiveObject(m, d);
              var w = m._findTargetCorner(
                this.getPointer(d, !0),
                e.util.isTouchEvent(d)
              );
              if (m.__corner = w, m === this._activeObject && (w || !b)) {
                this._setupCurrentTransform(d, m, y);
                var x = m.controls[w], p = this.getPointer(d), _ = x && x.getMouseDownHandler(d, m, x);
                _ && _(d, this._currentTransform, p.x, p.y);
              }
            }
            this._handleEvent(d, "down"), (v || b) && this.requestRenderAll();
          }
        },
        /**
         * reset cache form common information needed during event processing
         * @private
         */
        _resetTransformEventData: function() {
          this._target = null, this._pointer = null, this._absolutePointer = null;
        },
        /**
         * Cache common information needed during event processing
         * @private
         * @param {Event} e Event object fired on event
         */
        _cacheTransformEventData: function(d) {
          this._resetTransformEventData(), this._pointer = this.getPointer(d, !0), this._absolutePointer = this.restorePointerVpt(this._pointer), this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(d) || null;
        },
        /**
         * @private
         */
        _beforeTransform: function(d) {
          var m = this._currentTransform;
          this.stateful && m.target.saveState(), this.fire("before:transform", {
            e: d,
            transform: m
          });
        },
        /**
         * Method that defines the actions when mouse is hovering the canvas.
         * The currentTransform parameter will define whether the user is rotating/scaling/translating
         * an image or neither of them (only hovering). A group selection is also possible and would cancel
         * all any other type of action.
         * In case of an image transformation only the top canvas will be rendered.
         * @private
         * @param {Event} e Event object fired on mousemove
         */
        __onMouseMove: function(d) {
          this._handleEvent(d, "move:before"), this._cacheTransformEventData(d);
          var m, p;
          if (this.isDrawingMode) {
            this._onMouseMoveInDrawingMode(d);
            return;
          }
          if (this._isMainEvent(d)) {
            var v = this._groupSelector;
            v ? (p = this._absolutePointer, v.left = p.x - v.ex, v.top = p.y - v.ey, this.renderTop()) : this._currentTransform ? this._transformObject(d) : (m = this.findTarget(d) || null, this._setCursorFromEvent(d, m), this._fireOverOutEvents(m, d)), this._handleEvent(d, "move"), this._resetTransformEventData();
          }
        },
        /**
         * Manage the mouseout, mouseover events for the fabric object on the canvas
         * @param {Fabric.Object} target the target where the target from the mousemove event
         * @param {Event} e Event object fired on mousemove
         * @private
         */
        _fireOverOutEvents: function(d, m) {
          var p = this._hoveredTarget, v = this._hoveredTargets, b = this.targets, y = Math.max(v.length, b.length);
          this.fireSyntheticInOutEvents(d, m, {
            oldTarget: p,
            evtOut: "mouseout",
            canvasEvtOut: "mouse:out",
            evtIn: "mouseover",
            canvasEvtIn: "mouse:over"
          });
          for (var w = 0; w < y; w++)
            this.fireSyntheticInOutEvents(b[w], m, {
              oldTarget: v[w],
              evtOut: "mouseout",
              evtIn: "mouseover"
            });
          this._hoveredTarget = d, this._hoveredTargets = this.targets.concat();
        },
        /**
         * Manage the dragEnter, dragLeave events for the fabric objects on the canvas
         * @param {Fabric.Object} target the target where the target from the onDrag event
         * @param {Event} e Event object fired on ondrag
         * @private
         */
        _fireEnterLeaveEvents: function(d, m) {
          var p = this._draggedoverTarget, v = this._hoveredTargets, b = this.targets, y = Math.max(v.length, b.length);
          this.fireSyntheticInOutEvents(d, m, {
            oldTarget: p,
            evtOut: "dragleave",
            evtIn: "dragenter"
          });
          for (var w = 0; w < y; w++)
            this.fireSyntheticInOutEvents(b[w], m, {
              oldTarget: v[w],
              evtOut: "dragleave",
              evtIn: "dragenter"
            });
          this._draggedoverTarget = d;
        },
        /**
         * Manage the synthetic in/out events for the fabric objects on the canvas
         * @param {Fabric.Object} target the target where the target from the supported events
         * @param {Event} e Event object fired
         * @param {Object} config configuration for the function to work
         * @param {String} config.targetName property on the canvas where the old target is stored
         * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out
         * @param {String} config.evtOut name of the event to fire for out
         * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in
         * @param {String} config.evtIn name of the event to fire for in
         * @private
         */
        fireSyntheticInOutEvents: function(d, m, p) {
          var v, b, y = p.oldTarget, w, x, _ = y !== d, S = p.canvasEvtIn, k = p.canvasEvtOut;
          _ && (v = { e: m, target: d, previousTarget: y }, b = { e: m, target: y, nextTarget: d }), x = d && _, w = y && _, w && (k && this.fire(k, b), y.fire(p.evtOut, b)), x && (S && this.fire(S, v), d.fire(p.evtIn, v));
        },
        /**
         * Method that defines actions when an Event Mouse Wheel
         * @param {Event} e Event object fired on mouseup
         */
        __onMouseWheel: function(d) {
          this._cacheTransformEventData(d), this._handleEvent(d, "wheel"), this._resetTransformEventData();
        },
        /**
         * @private
         * @param {Event} e Event fired on mousemove
         */
        _transformObject: function(d) {
          var m = this.getPointer(d), p = this._currentTransform;
          p.reset = !1, p.shiftKey = d.shiftKey, p.altKey = d[this.centeredKey], this._performTransformAction(d, p, m), p.actionPerformed && this.requestRenderAll();
        },
        /**
         * @private
         */
        _performTransformAction: function(d, m, p) {
          var v = p.x, b = p.y, y = m.action, w = !1, x = m.actionHandler;
          x && (w = x(d, m, v, b)), y === "drag" && w && (m.target.isMoving = !0, this.setCursor(m.target.moveCursor || this.moveCursor)), m.actionPerformed = m.actionPerformed || w;
        },
        /**
         * @private
         */
        _fire: e.controlsUtils.fireEvent,
        /**
         * Sets the cursor depending on where the canvas is being hovered.
         * Note: very buggy in Opera
         * @param {Event} e Event object
         * @param {Object} target Object that the mouse is hovering, if so.
         */
        _setCursorFromEvent: function(d, m) {
          if (!m)
            return this.setCursor(this.defaultCursor), !1;
          var p = m.hoverCursor || this.hoverCursor, v = this._activeObject && this._activeObject.type === "activeSelection" ? this._activeObject : null, b = (!v || !v.contains(m)) && m._findTargetCorner(this.getPointer(d, !0));
          b ? this.setCursor(this.getCornerCursor(b, m, d)) : (m.subTargetCheck && this.targets.concat().reverse().map(function(y) {
            p = y.hoverCursor || p;
          }), this.setCursor(p));
        },
        /**
         * @private
         */
        getCornerCursor: function(d, m, p) {
          var v = m.controls[d];
          return v.cursorStyleHandler(p, v, m);
        }
      }
    );
  }(), function() {
    var a = Math.min, s = Math.max;
    e.util.object.extend(
      e.Canvas.prototype,
      /** @lends fabric.Canvas.prototype */
      {
        /**
         * @private
         * @param {Event} e Event object
         * @param {fabric.Object} target
         * @return {Boolean}
         */
        _shouldGroup: function(c, f) {
          var o = this._activeObject;
          return o && this._isSelectionKeyPressed(c) && f && f.selectable && this.selection && (o !== f || o.type === "activeSelection") && !f.onSelect({ e: c });
        },
        /**
         * @private
         * @param {Event} e Event object
         * @param {fabric.Object} target
         */
        _handleGrouping: function(c, f) {
          var o = this._activeObject;
          o.__corner || f === o && (f = this.findTarget(c, !0), !f || !f.selectable) || (o && o.type === "activeSelection" ? this._updateActiveSelection(f, c) : this._createActiveSelection(f, c));
        },
        /**
         * @private
         */
        _updateActiveSelection: function(c, f) {
          var o = this._activeObject, h = o._objects.slice(0);
          o.contains(c) ? (o.removeWithUpdate(c), this._hoveredTarget = c, this._hoveredTargets = this.targets.concat(), o.size() === 1 && this._setActiveObject(o.item(0), f)) : (o.addWithUpdate(c), this._hoveredTarget = o, this._hoveredTargets = this.targets.concat()), this._fireSelectionEvents(h, f);
        },
        /**
         * @private
         */
        _createActiveSelection: function(c, f) {
          var o = this.getActiveObjects(), h = this._createGroup(c);
          this._hoveredTarget = h, this._setActiveObject(h, f), this._fireSelectionEvents(o, f);
        },
        /**
         * @private
         * @param {Object} target
         */
        _createGroup: function(c) {
          var f = this._objects, o = f.indexOf(this._activeObject) < f.indexOf(c), h = o ? [this._activeObject, c] : [c, this._activeObject];
          return this._activeObject.isEditing && this._activeObject.exitEditing(), new e.ActiveSelection(h, {
            canvas: this
          });
        },
        /**
         * @private
         * @param {Event} e mouse event
         */
        _groupSelectedObjects: function(c) {
          var f = this._collectObjects(c), o;
          f.length === 1 ? this.setActiveObject(f[0], c) : f.length > 1 && (o = new e.ActiveSelection(f.reverse(), {
            canvas: this
          }), this.setActiveObject(o, c));
        },
        /**
         * @private
         */
        _collectObjects: function(c) {
          for (var f = [], o, h = this._groupSelector.ex, u = this._groupSelector.ey, d = h + this._groupSelector.left, m = u + this._groupSelector.top, p = new e.Point(a(h, d), a(u, m)), v = new e.Point(s(h, d), s(u, m)), b = !this.selectionFullyContained, y = h === d && u === m, w = this._objects.length; w-- && (o = this._objects[w], !(!(!o || !o.selectable || !o.visible) && (b && o.intersectsWithRect(p, v, !0) || o.isContainedWithinRect(p, v, !0) || b && o.containsPoint(p, null, !0) || b && o.containsPoint(v, null, !0)) && (f.push(o), y))); )
            ;
          return f.length > 1 && (f = f.filter(function(x) {
            return !x.onSelect({ e: c });
          })), f;
        },
        /**
         * @private
         */
        _maybeGroupObjects: function(c) {
          this.selection && this._groupSelector && this._groupSelectedObjects(c), this.setCursor(this.defaultCursor), this._groupSelector = null;
        }
      }
    );
  }(), function() {
    e.util.object.extend(
      e.StaticCanvas.prototype,
      /** @lends fabric.StaticCanvas.prototype */
      {
        /**
         * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately
         * @param {Object} [options] Options object
         * @param {String} [options.format=png] The format of the output image. Either "jpeg" or "png"
         * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.
         * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent
         * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14
         * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14
         * @param {Number} [options.width] Cropping width. Introduced in v1.2.14
         * @param {Number} [options.height] Cropping height. Introduced in v1.2.14
         * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0
         * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format
         * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}
         * @example <caption>Generate jpeg dataURL with lower quality</caption>
         * var dataURL = canvas.toDataURL({
         *   format: 'jpeg',
         *   quality: 0.8
         * });
         * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>
         * var dataURL = canvas.toDataURL({
         *   format: 'png',
         *   left: 100,
         *   top: 100,
         *   width: 200,
         *   height: 200
         * });
         * @example <caption>Generate double scaled png dataURL</caption>
         * var dataURL = canvas.toDataURL({
         *   format: 'png',
         *   multiplier: 2
         * });
         */
        toDataURL: function(a) {
          a || (a = {});
          var s = a.format || "png", c = a.quality || 1, f = (a.multiplier || 1) * (a.enableRetinaScaling ? this.getRetinaScaling() : 1), o = this.toCanvasElement(f, a);
          return e.util.toDataURL(o, s, c);
        },
        /**
         * Create a new HTMLCanvas element painted with the current canvas content.
         * No need to resize the actual one or repaint it.
         * Will transfer object ownership to a new canvas, paint it, and set everything back.
         * This is an intermediary step used to get to a dataUrl but also it is useful to
         * create quick image copies of a canvas without passing for the dataUrl string
         * @param {Number} [multiplier] a zoom factor.
         * @param {Object} [cropping] Cropping informations
         * @param {Number} [cropping.left] Cropping left offset.
         * @param {Number} [cropping.top] Cropping top offset.
         * @param {Number} [cropping.width] Cropping width.
         * @param {Number} [cropping.height] Cropping height.
         */
        toCanvasElement: function(a, s) {
          a = a || 1, s = s || {};
          var c = (s.width || this.width) * a, f = (s.height || this.height) * a, o = this.getZoom(), h = this.width, u = this.height, d = o * a, m = this.viewportTransform, p = (m[4] - (s.left || 0)) * a, v = (m[5] - (s.top || 0)) * a, b = this.interactive, y = [d, 0, 0, d, p, v], w = this.enableRetinaScaling, x = e.util.createCanvasElement(), _ = this.contextTop;
          return x.width = c, x.height = f, this.contextTop = null, this.enableRetinaScaling = !1, this.interactive = !1, this.viewportTransform = y, this.width = c, this.height = f, this.calcViewportBoundaries(), this.renderCanvas(x.getContext("2d"), this._objects), this.viewportTransform = m, this.width = h, this.height = u, this.calcViewportBoundaries(), this.interactive = b, this.enableRetinaScaling = w, this.contextTop = _, x;
        }
      }
    );
  }(), e.util.object.extend(
    e.StaticCanvas.prototype,
    /** @lends fabric.StaticCanvas.prototype */
    {
      /**
       * Populates canvas with data from the specified JSON.
       * JSON format must conform to the one of {@link fabric.Canvas#toJSON}
       * @param {String|Object} json JSON string or object
       * @param {Function} callback Callback, invoked when json is parsed
       *                            and corresponding objects (e.g: {@link fabric.Image})
       *                            are initialized
       * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.
       * @return {fabric.Canvas} instance
       * @chainable
       * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}
       * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}
       * @example <caption>loadFromJSON</caption>
       * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));
       * @example <caption>loadFromJSON with reviver</caption>
       * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {
       *   // `o` = json object
       *   // `object` = fabric.Object instance
       *   // ... do some stuff ...
       * });
       */
      loadFromJSON: function(a, s, c) {
        if (a) {
          var f = typeof a == "string" ? JSON.parse(a) : e.util.object.clone(a), o = this, h = f.clipPath, u = this.renderOnAddRemove;
          return this.renderOnAddRemove = !1, delete f.clipPath, this._enlivenObjects(f.objects, function(d) {
            o.clear(), o._setBgOverlay(f, function() {
              h ? o._enlivenObjects([h], function(m) {
                o.clipPath = m[0], o.__setupCanvas.call(o, f, d, u, s);
              }) : o.__setupCanvas.call(o, f, d, u, s);
            });
          }, c), this;
        }
      },
      /**
       * @private
       * @param {Object} serialized Object with background and overlay information
       * @param {Array} restored canvas objects
       * @param {Function} cached renderOnAddRemove callback
       * @param {Function} callback Invoked after all background and overlay images/patterns loaded
       */
      __setupCanvas: function(a, s, c, f) {
        var o = this;
        s.forEach(function(h, u) {
          o.insertAt(h, u);
        }), this.renderOnAddRemove = c, delete a.objects, delete a.backgroundImage, delete a.overlayImage, delete a.background, delete a.overlay, this._setOptions(a), this.renderAll(), f && f();
      },
      /**
       * @private
       * @param {Object} serialized Object with background and overlay information
       * @param {Function} callback Invoked after all background and overlay images/patterns loaded
       */
      _setBgOverlay: function(a, s) {
        var c = {
          backgroundColor: !1,
          overlayColor: !1,
          backgroundImage: !1,
          overlayImage: !1
        };
        if (!a.backgroundImage && !a.overlayImage && !a.background && !a.overlay) {
          s && s();
          return;
        }
        var f = function() {
          c.backgroundImage && c.overlayImage && c.backgroundColor && c.overlayColor && s && s();
        };
        this.__setBgOverlay("backgroundImage", a.backgroundImage, c, f), this.__setBgOverlay("overlayImage", a.overlayImage, c, f), this.__setBgOverlay("backgroundColor", a.background, c, f), this.__setBgOverlay("overlayColor", a.overlay, c, f);
      },
      /**
       * @private
       * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)
       * @param {(Object|String)} value Value to set
       * @param {Object} loaded Set loaded property to true if property is set
       * @param {Object} callback Callback function to invoke after property is set
       */
      __setBgOverlay: function(a, s, c, f) {
        var o = this;
        if (!s) {
          c[a] = !0, f && f();
          return;
        }
        a === "backgroundImage" || a === "overlayImage" ? e.util.enlivenObjects([s], function(h) {
          o[a] = h[0], c[a] = !0, f && f();
        }) : this["set" + e.util.string.capitalize(a, !0)](s, function() {
          c[a] = !0, f && f();
        });
      },
      /**
       * @private
       * @param {Array} objects
       * @param {Function} callback
       * @param {Function} [reviver]
       */
      _enlivenObjects: function(a, s, c) {
        if (!a || a.length === 0) {
          s && s([]);
          return;
        }
        e.util.enlivenObjects(a, function(f) {
          s && s(f);
        }, null, c);
      },
      /**
       * @private
       * @param {String} format
       * @param {Function} callback
       */
      _toDataURL: function(a, s) {
        this.clone(function(c) {
          s(c.toDataURL(a));
        });
      },
      /**
       * @private
       * @param {String} format
       * @param {Number} multiplier
       * @param {Function} callback
       */
      _toDataURLWithMultiplier: function(a, s, c) {
        this.clone(function(f) {
          c(f.toDataURLWithMultiplier(a, s));
        });
      },
      /**
       * Clones canvas instance
       * @param {Object} [callback] Receives cloned instance as a first argument
       * @param {Array} [properties] Array of properties to include in the cloned canvas and children
       */
      clone: function(a, s) {
        var c = JSON.stringify(this.toJSON(s));
        this.cloneWithoutData(function(f) {
          f.loadFromJSON(c, function() {
            a && a(f);
          });
        });
      },
      /**
       * Clones canvas instance without cloning existing data.
       * This essentially copies canvas dimensions, clipping properties, etc.
       * but leaves data empty (so that you can populate it with your own)
       * @param {Object} [callback] Receives cloned instance as a first argument
       */
      cloneWithoutData: function(a) {
        var s = e.util.createCanvasElement();
        s.width = this.width, s.height = this.height;
        var c = new e.Canvas(s);
        this.backgroundImage ? (c.setBackgroundImage(this.backgroundImage.src, function() {
          c.renderAll(), a && a(c);
        }), c.backgroundImageOpacity = this.backgroundImageOpacity, c.backgroundImageStretch = this.backgroundImageStretch) : a && a(c);
      }
    }
  ), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.util.object.extend, f = s.util.object.clone, o = s.util.toFixed, h = s.util.string.capitalize, u = s.util.degreesToRadians, d = !s.isLikelyNode, m = 2;
    s.Object || (s.Object = s.util.createClass(
      s.CommonMethods,
      /** @lends fabric.Object.prototype */
      {
        /**
         * Type of an object (rect, circle, path, etc.).
         * Note that this property is meant to be read-only and not meant to be modified.
         * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.
         * @type String
         * @default
         */
        type: "object",
        /**
         * Horizontal origin of transformation of an object (one of "left", "right", "center")
         * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups
         * @type String
         * @default
         */
        originX: "left",
        /**
         * Vertical origin of transformation of an object (one of "top", "bottom", "center")
         * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups
         * @type String
         * @default
         */
        originY: "top",
        /**
         * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}
         * @type Number
         * @default
         */
        top: 0,
        /**
         * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}
         * @type Number
         * @default
         */
        left: 0,
        /**
         * Object width
         * @type Number
         * @default
         */
        width: 0,
        /**
         * Object height
         * @type Number
         * @default
         */
        height: 0,
        /**
         * Object scale factor (horizontal)
         * @type Number
         * @default
         */
        scaleX: 1,
        /**
         * Object scale factor (vertical)
         * @type Number
         * @default
         */
        scaleY: 1,
        /**
         * When true, an object is rendered as flipped horizontally
         * @type Boolean
         * @default
         */
        flipX: !1,
        /**
         * When true, an object is rendered as flipped vertically
         * @type Boolean
         * @default
         */
        flipY: !1,
        /**
         * Opacity of an object
         * @type Number
         * @default
         */
        opacity: 1,
        /**
         * Angle of rotation of an object (in degrees)
         * @type Number
         * @default
         */
        angle: 0,
        /**
         * Angle of skew on x axes of an object (in degrees)
         * @type Number
         * @default
         */
        skewX: 0,
        /**
         * Angle of skew on y axes of an object (in degrees)
         * @type Number
         * @default
         */
        skewY: 0,
        /**
         * Size of object's controlling corners (in pixels)
         * @type Number
         * @default
         */
        cornerSize: 13,
        /**
         * Size of object's controlling corners when touch interaction is detected
         * @type Number
         * @default
         */
        touchCornerSize: 24,
        /**
         * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)
         * @type Boolean
         * @default
         */
        transparentCorners: !0,
        /**
         * Default cursor value used when hovering over this object on canvas
         * @type String
         * @default
         */
        hoverCursor: null,
        /**
         * Default cursor value used when moving this object on canvas
         * @type String
         * @default
         */
        moveCursor: null,
        /**
         * Padding between object and its controlling borders (in pixels)
         * @type Number
         * @default
         */
        padding: 0,
        /**
         * Color of controlling borders of an object (when it's active)
         * @type String
         * @default
         */
        borderColor: "rgb(178,204,255)",
        /**
         * Array specifying dash pattern of an object's borders (hasBorder must be true)
         * @since 1.6.2
         * @type Array
         */
        borderDashArray: null,
        /**
         * Color of controlling corners of an object (when it's active)
         * @type String
         * @default
         */
        cornerColor: "rgb(178,204,255)",
        /**
         * Color of controlling corners of an object (when it's active and transparentCorners false)
         * @since 1.6.2
         * @type String
         * @default
         */
        cornerStrokeColor: null,
        /**
         * Specify style of control, 'rect' or 'circle'
         * @since 1.6.2
         * @type String
         */
        cornerStyle: "rect",
        /**
         * Array specifying dash pattern of an object's control (hasBorder must be true)
         * @since 1.6.2
         * @type Array
         */
        cornerDashArray: null,
        /**
         * When true, this object will use center point as the origin of transformation
         * when being scaled via the controls.
         * <b>Backwards incompatibility note:</b> This property replaces "centerTransform" (Boolean).
         * @since 1.3.4
         * @type Boolean
         * @default
         */
        centeredScaling: !1,
        /**
         * When true, this object will use center point as the origin of transformation
         * when being rotated via the controls.
         * <b>Backwards incompatibility note:</b> This property replaces "centerTransform" (Boolean).
         * @since 1.3.4
         * @type Boolean
         * @default
         */
        centeredRotation: !0,
        /**
         * Color of object's fill
         * takes css colors https://www.w3.org/TR/css-color-3/
         * @type String
         * @default
         */
        fill: "rgb(0,0,0)",
        /**
         * Fill rule used to fill an object
         * accepted values are nonzero, evenodd
         * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)
         * @type String
         * @default
         */
        fillRule: "nonzero",
        /**
         * Composite rule used for canvas globalCompositeOperation
         * @type String
         * @default
         */
        globalCompositeOperation: "source-over",
        /**
         * Background color of an object.
         * takes css colors https://www.w3.org/TR/css-color-3/
         * @type String
         * @default
         */
        backgroundColor: "",
        /**
         * Selection Background color of an object. colored layer behind the object when it is active.
         * does not mix good with globalCompositeOperation methods.
         * @type String
         * @default
         */
        selectionBackgroundColor: "",
        /**
         * When defined, an object is rendered via stroke and this property specifies its color
         * takes css colors https://www.w3.org/TR/css-color-3/
         * @type String
         * @default
         */
        stroke: null,
        /**
         * Width of a stroke used to render this object
         * @type Number
         * @default
         */
        strokeWidth: 1,
        /**
         * Array specifying dash pattern of an object's stroke (stroke must be defined)
         * @type Array
         */
        strokeDashArray: null,
        /**
         * Line offset of an object's stroke
         * @type Number
         * @default
         */
        strokeDashOffset: 0,
        /**
         * Line endings style of an object's stroke (one of "butt", "round", "square")
         * @type String
         * @default
         */
        strokeLineCap: "butt",
        /**
         * Corner style of an object's stroke (one of "bevel", "round", "miter")
         * @type String
         * @default
         */
        strokeLineJoin: "miter",
        /**
         * Maximum miter length (used for strokeLineJoin = "miter") of an object's stroke
         * @type Number
         * @default
         */
        strokeMiterLimit: 4,
        /**
         * Shadow object representing shadow of this shape
         * @type fabric.Shadow
         * @default
         */
        shadow: null,
        /**
         * Opacity of object's controlling borders when object is active and moving
         * @type Number
         * @default
         */
        borderOpacityWhenMoving: 0.4,
        /**
         * Scale factor of object's controlling borders
         * bigger number will make a thicker border
         * border is 1, so this is basically a border thickness
         * since there is no way to change the border itself.
         * @type Number
         * @default
         */
        borderScaleFactor: 1,
        /**
         * Minimum allowed scale value of an object
         * @type Number
         * @default
         */
        minScaleLimit: 0,
        /**
         * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).
         * But events still fire on it.
         * @type Boolean
         * @default
         */
        selectable: !0,
        /**
         * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4
         * @type Boolean
         * @default
         */
        evented: !0,
        /**
         * When set to `false`, an object is not rendered on canvas
         * @type Boolean
         * @default
         */
        visible: !0,
        /**
         * When set to `false`, object's controls are not displayed and can not be used to manipulate object
         * @type Boolean
         * @default
         */
        hasControls: !0,
        /**
         * When set to `false`, object's controlling borders are not rendered
         * @type Boolean
         * @default
         */
        hasBorders: !0,
        /**
         * When set to `true`, objects are "found" on canvas on per-pixel basis rather than according to bounding box
         * @type Boolean
         * @default
         */
        perPixelTargetFind: !1,
        /**
         * When `false`, default object's values are not included in its serialization
         * @type Boolean
         * @default
         */
        includeDefaultValues: !0,
        /**
         * When `true`, object horizontal movement is locked
         * @type Boolean
         * @default
         */
        lockMovementX: !1,
        /**
         * When `true`, object vertical movement is locked
         * @type Boolean
         * @default
         */
        lockMovementY: !1,
        /**
         * When `true`, object rotation is locked
         * @type Boolean
         * @default
         */
        lockRotation: !1,
        /**
         * When `true`, object horizontal scaling is locked
         * @type Boolean
         * @default
         */
        lockScalingX: !1,
        /**
         * When `true`, object vertical scaling is locked
         * @type Boolean
         * @default
         */
        lockScalingY: !1,
        /**
         * When `true`, object horizontal skewing is locked
         * @type Boolean
         * @default
         */
        lockSkewingX: !1,
        /**
         * When `true`, object vertical skewing is locked
         * @type Boolean
         * @default
         */
        lockSkewingY: !1,
        /**
         * When `true`, object cannot be flipped by scaling into negative values
         * @type Boolean
         * @default
         */
        lockScalingFlip: !1,
        /**
         * When `true`, object is not exported in OBJECT/JSON
         * @since 1.6.3
         * @type Boolean
         * @default
         */
        excludeFromExport: !1,
        /**
         * When `true`, object is cached on an additional canvas.
         * When `false`, object is not cached unless necessary ( clipPath )
         * default to true
         * @since 1.7.0
         * @type Boolean
         * @default true
         */
        objectCaching: d,
        /**
         * When `true`, object properties are checked for cache invalidation. In some particular
         * situation you may want this to be disabled ( spray brush, very big, groups)
         * or if your application does not allow you to modify properties for groups child you want
         * to disable it for groups.
         * default to false
         * since 1.7.0
         * @type Boolean
         * @default false
         */
        statefullCache: !1,
        /**
         * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled
         * too much and will be redrawn with correct details at the end of scaling.
         * this setting is performance and application dependant.
         * default to true
         * since 1.7.0
         * @type Boolean
         * @default true
         */
        noScaleCache: !0,
        /**
         * When `false`, the stoke width will scale with the object.
         * When `true`, the stroke will always match the exact pixel size entered for stroke width.
         * this Property does not work on Text classes or drawing call that uses strokeText,fillText methods
         * default to false
         * @since 2.6.0
         * @type Boolean
         * @default false
         * @type Boolean
         * @default false
         */
        strokeUniform: !1,
        /**
         * When set to `true`, object's cache will be rerendered next render call.
         * since 1.7.0
         * @type Boolean
         * @default true
         */
        dirty: !0,
        /**
         * keeps the value of the last hovered corner during mouse move.
         * 0 is no corner, or 'mt', 'ml', 'mtr' etc..
         * It should be private, but there is no harm in using it as
         * a read-only property.
         * @type number|string|any
         * @default 0
         */
        __corner: 0,
        /**
         * Determines if the fill or the stroke is drawn first (one of "fill" or "stroke")
         * @type String
         * @default
         */
        paintFirst: "fill",
        /**
         * When 'down', object is set to active on mousedown/touchstart
         * When 'up', object is set to active on mouseup/touchend
         * Experimental. Let's see if this breaks anything before supporting officially
         * @private
         * since 4.4.0
         * @type String
         * @default 'down'
         */
        activeOn: "down",
        /**
         * List of properties to consider when checking if state
         * of an object is changed (fabric.Object#hasStateChanged)
         * as well as for history (undo/redo) purposes
         * @type Array
         */
        stateProperties: "top left width height scaleX scaleY flipX flipY originX originY transformMatrix stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit angle opacity fill globalCompositeOperation shadow visible backgroundColor skewX skewY fillRule paintFirst clipPath strokeUniform".split(" "),
        /**
         * List of properties to consider when checking if cache needs refresh
         * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single
         * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty
         * and refreshed at the next render
         * @type Array
         */
        cacheProperties: "fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath".split(" "),
        /**
         * List of properties to consider for animating colors.
         * @type Array
         */
        colorProperties: "fill stroke backgroundColor".split(" "),
        /**
         * a fabricObject that, without stroke define a clipping area with their shape. filled in black
         * the clipPath object gets used when the object has rendered, and the context is placed in the center
         * of the object cacheCanvas.
         * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'
         * @type fabric.Object
         */
        clipPath: void 0,
        /**
         * Meaningful ONLY when the object is used as clipPath.
         * if true, the clipPath will make the object clip to the outside of the clipPath
         * since 2.4.0
         * @type boolean
         * @default false
         */
        inverted: !1,
        /**
         * Meaningful ONLY when the object is used as clipPath.
         * if true, the clipPath will have its top and left relative to canvas, and will
         * not be influenced by the object transform. This will make the clipPath relative
         * to the canvas, but clipping just a particular object.
         * WARNING this is beta, this feature may change or be renamed.
         * since 2.4.0
         * @type boolean
         * @default false
         */
        absolutePositioned: !1,
        /**
         * Constructor
         * @param {Object} [options] Options object
         */
        initialize: function(p) {
          p && this.setOptions(p);
        },
        /**
         * Create a the canvas used to keep the cached copy of the object
         * @private
         */
        _createCacheCanvas: function() {
          this._cacheProperties = {}, this._cacheCanvas = s.util.createCanvasElement(), this._cacheContext = this._cacheCanvas.getContext("2d"), this._updateCacheCanvas(), this.dirty = !0;
        },
        /**
         * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal
         * and each side do not cross fabric.cacheSideLimit
         * those numbers are configurable so that you can get as much detail as you want
         * making bargain with performances.
         * @param {Object} dims
         * @param {Object} dims.width width of canvas
         * @param {Object} dims.height height of canvas
         * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache
         * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache
         * @return {Object}.width width of canvas
         * @return {Object}.height height of canvas
         * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache
         * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache
         */
        _limitCacheSize: function(p) {
          var v = s.perfLimitSizeTotal, b = p.width, y = p.height, w = s.maxCacheSideLimit, x = s.minCacheSideLimit;
          if (b <= w && y <= w && b * y <= v)
            return b < x && (p.width = x), y < x && (p.height = x), p;
          var _ = b / y, S = s.util.limitDimsByArea(_, v), k = s.util.capValue, F = k(x, S.x, w), L = k(x, S.y, w);
          return b > F && (p.zoomX /= b / F, p.width = F, p.capped = !0), y > L && (p.zoomY /= y / L, p.height = L, p.capped = !0), p;
        },
        /**
         * Return the dimension and the zoom level needed to create a cache canvas
         * big enough to host the object to be cached.
         * @private
         * @return {Object}.x width of object to be cached
         * @return {Object}.y height of object to be cached
         * @return {Object}.width width of canvas
         * @return {Object}.height height of canvas
         * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache
         * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache
         */
        _getCacheCanvasDimensions: function() {
          var p = this.getTotalObjectScaling(), v = this._getTransformedDimensions(0, 0), b = v.x * p.scaleX / this.scaleX, y = v.y * p.scaleY / this.scaleY;
          return {
            // for sure this ALIASING_LIMIT is slightly creating problem
            // in situation in which the cache canvas gets an upper limit
            // also objectScale contains already scaleX and scaleY
            width: b + m,
            height: y + m,
            zoomX: p.scaleX,
            zoomY: p.scaleY,
            x: b,
            y
          };
        },
        /**
         * Update width and height of the canvas for cache
         * returns true or false if canvas needed resize.
         * @private
         * @return {Boolean} true if the canvas has been resized
         */
        _updateCacheCanvas: function() {
          var p = this.canvas;
          if (this.noScaleCache && p && p._currentTransform) {
            var v = p._currentTransform.target, b = p._currentTransform.action;
            if (this === v && b.slice && b.slice(0, 5) === "scale")
              return !1;
          }
          var y = this._cacheCanvas, w = this._limitCacheSize(this._getCacheCanvasDimensions()), x = s.minCacheSideLimit, _ = w.width, S = w.height, k, F, L = w.zoomX, j = w.zoomY, G = _ !== this.cacheWidth || S !== this.cacheHeight, te = this.zoomX !== L || this.zoomY !== j, U = G || te, K = 0, re = 0, ne = !1;
          if (G) {
            var se = this._cacheCanvas.width, T = this._cacheCanvas.height, P = _ > se || S > T, D = (_ < se * 0.9 || S < T * 0.9) && se > x && T > x;
            ne = P || D, P && !w.capped && (_ > x || S > x) && (K = _ * 0.1, re = S * 0.1);
          }
          return this instanceof s.Text && this.path && (U = !0, ne = !0, K += this.getHeightOfLine(0) * this.zoomX, re += this.getHeightOfLine(0) * this.zoomY), U ? (ne ? (y.width = Math.ceil(_ + K), y.height = Math.ceil(S + re)) : (this._cacheContext.setTransform(1, 0, 0, 1, 0, 0), this._cacheContext.clearRect(0, 0, y.width, y.height)), k = w.x / 2, F = w.y / 2, this.cacheTranslationX = Math.round(y.width / 2 - k) + k, this.cacheTranslationY = Math.round(y.height / 2 - F) + F, this.cacheWidth = _, this.cacheHeight = S, this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY), this._cacheContext.scale(L, j), this.zoomX = L, this.zoomY = j, !0) : !1;
        },
        /**
         * Sets object's properties from options
         * @param {Object} [options] Options object
         */
        setOptions: function(p) {
          this._setOptions(p), this._initGradient(p.fill, "fill"), this._initGradient(p.stroke, "stroke"), this._initPattern(p.fill, "fill"), this._initPattern(p.stroke, "stroke");
        },
        /**
         * Transforms context when rendering an object
         * @param {CanvasRenderingContext2D} ctx Context
         */
        transform: function(p) {
          var v = this.group && !this.group._transformDone || this.group && this.canvas && p === this.canvas.contextTop, b = this.calcTransformMatrix(!v);
          p.transform(b[0], b[1], b[2], b[3], b[4], b[5]);
        },
        /**
         * Returns an object representation of an instance
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} Object representation of an instance
         */
        toObject: function(p) {
          var v = s.Object.NUM_FRACTION_DIGITS, b = {
            type: this.type,
            version: s.version,
            originX: this.originX,
            originY: this.originY,
            left: o(this.left, v),
            top: o(this.top, v),
            width: o(this.width, v),
            height: o(this.height, v),
            fill: this.fill && this.fill.toObject ? this.fill.toObject() : this.fill,
            stroke: this.stroke && this.stroke.toObject ? this.stroke.toObject() : this.stroke,
            strokeWidth: o(this.strokeWidth, v),
            strokeDashArray: this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,
            strokeLineCap: this.strokeLineCap,
            strokeDashOffset: this.strokeDashOffset,
            strokeLineJoin: this.strokeLineJoin,
            strokeUniform: this.strokeUniform,
            strokeMiterLimit: o(this.strokeMiterLimit, v),
            scaleX: o(this.scaleX, v),
            scaleY: o(this.scaleY, v),
            angle: o(this.angle, v),
            flipX: this.flipX,
            flipY: this.flipY,
            opacity: o(this.opacity, v),
            shadow: this.shadow && this.shadow.toObject ? this.shadow.toObject() : this.shadow,
            visible: this.visible,
            backgroundColor: this.backgroundColor,
            fillRule: this.fillRule,
            paintFirst: this.paintFirst,
            globalCompositeOperation: this.globalCompositeOperation,
            skewX: o(this.skewX, v),
            skewY: o(this.skewY, v)
          };
          return this.clipPath && !this.clipPath.excludeFromExport && (b.clipPath = this.clipPath.toObject(p), b.clipPath.inverted = this.clipPath.inverted, b.clipPath.absolutePositioned = this.clipPath.absolutePositioned), s.util.populateWithProperties(this, b, p), this.includeDefaultValues || (b = this._removeDefaultValues(b)), b;
        },
        /**
         * Returns (dataless) object representation of an instance
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} Object representation of an instance
         */
        toDatalessObject: function(p) {
          return this.toObject(p);
        },
        /**
         * @private
         * @param {Object} object
         */
        _removeDefaultValues: function(p) {
          var v = s.util.getKlass(p.type).prototype, b = v.stateProperties;
          return b.forEach(function(y) {
            y === "left" || y === "top" || (p[y] === v[y] && delete p[y], Array.isArray(p[y]) && Array.isArray(v[y]) && p[y].length === 0 && v[y].length === 0 && delete p[y]);
          }), p;
        },
        /**
         * Returns a string representation of an instance
         * @return {String}
         */
        toString: function() {
          return "#<fabric." + h(this.type) + ">";
        },
        /**
         * Return the object scale factor counting also the group scaling
         * @return {Object} object with scaleX and scaleY properties
         */
        getObjectScaling: function() {
          if (!this.group)
            return {
              scaleX: this.scaleX,
              scaleY: this.scaleY
            };
          var p = s.util.qrDecompose(this.calcTransformMatrix());
          return { scaleX: Math.abs(p.scaleX), scaleY: Math.abs(p.scaleY) };
        },
        /**
         * Return the object scale factor counting also the group scaling, zoom and retina
         * @return {Object} object with scaleX and scaleY properties
         */
        getTotalObjectScaling: function() {
          var p = this.getObjectScaling(), v = p.scaleX, b = p.scaleY;
          if (this.canvas) {
            var y = this.canvas.getZoom(), w = this.canvas.getRetinaScaling();
            v *= y * w, b *= y * w;
          }
          return { scaleX: v, scaleY: b };
        },
        /**
         * Return the object opacity counting also the group property
         * @return {Number}
         */
        getObjectOpacity: function() {
          var p = this.opacity;
          return this.group && (p *= this.group.getObjectOpacity()), p;
        },
        /**
         * @private
         * @param {String} key
         * @param {*} value
         * @return {fabric.Object} thisArg
         */
        _set: function(p, v) {
          var b = p === "scaleX" || p === "scaleY", y = this[p] !== v, w = !1;
          return b && (v = this._constrainScale(v)), p === "scaleX" && v < 0 ? (this.flipX = !this.flipX, v *= -1) : p === "scaleY" && v < 0 ? (this.flipY = !this.flipY, v *= -1) : p === "shadow" && v && !(v instanceof s.Shadow) ? v = new s.Shadow(v) : p === "dirty" && this.group && this.group.set("dirty", v), this[p] = v, y && (w = this.group && this.group.isOnACache(), this.cacheProperties.indexOf(p) > -1 ? (this.dirty = !0, w && this.group.set("dirty", !0)) : w && this.stateProperties.indexOf(p) > -1 && this.group.set("dirty", !0)), this;
        },
        /**
         * This callback function is called by the parent group of an object every
         * time a non-delegated property changes on the group. It is passed the key
         * and value as parameters. Not adding in this function's signature to avoid
         * Travis build error about unused variables.
         */
        setOnGroup: function() {
        },
        /**
         * Retrieves viewportTransform from Object's canvas if possible
         * @method getViewportTransform
         * @memberOf fabric.Object.prototype
         * @return {Array}
         */
        getViewportTransform: function() {
          return this.canvas && this.canvas.viewportTransform ? this.canvas.viewportTransform : s.iMatrix.concat();
        },
        /*
         * @private
         * return if the object would be visible in rendering
         * @memberOf fabric.Object.prototype
         * @return {Boolean}
         */
        isNotVisible: function() {
          return this.opacity === 0 || !this.width && !this.height && this.strokeWidth === 0 || !this.visible;
        },
        /**
         * Renders an object on a specified context
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        render: function(p) {
          this.isNotVisible() || this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen() || (p.save(), this._setupCompositeOperation(p), this.drawSelectionBackground(p), this.transform(p), this._setOpacity(p), this._setShadow(p, this), this.shouldCache() ? (this.renderCache(), this.drawCacheOnCanvas(p)) : (this._removeCacheCanvas(), this.dirty = !1, this.drawObject(p), this.objectCaching && this.statefullCache && this.saveState({ propertySet: "cacheProperties" })), p.restore());
        },
        renderCache: function(p) {
          p = p || {}, (!this._cacheCanvas || !this._cacheContext) && this._createCacheCanvas(), this.isCacheDirty() && (this.statefullCache && this.saveState({ propertySet: "cacheProperties" }), this.drawObject(this._cacheContext, p.forClipping), this.dirty = !1);
        },
        /**
         * Remove cacheCanvas and its dimensions from the objects
         */
        _removeCacheCanvas: function() {
          this._cacheCanvas = null, this._cacheContext = null, this.cacheWidth = 0, this.cacheHeight = 0;
        },
        /**
         * return true if the object will draw a stroke
         * Does not consider text styles. This is just a shortcut used at rendering time
         * We want it to be an approximation and be fast.
         * wrote to avoid extra caching, it has to return true when stroke happens,
         * can guess when it will not happen at 100% chance, does not matter if it misses
         * some use case where the stroke is invisible.
         * @since 3.0.0
         * @returns Boolean
         */
        hasStroke: function() {
          return this.stroke && this.stroke !== "transparent" && this.strokeWidth !== 0;
        },
        /**
         * return true if the object will draw a fill
         * Does not consider text styles. This is just a shortcut used at rendering time
         * We want it to be an approximation and be fast.
         * wrote to avoid extra caching, it has to return true when fill happens,
         * can guess when it will not happen at 100% chance, does not matter if it misses
         * some use case where the fill is invisible.
         * @since 3.0.0
         * @returns Boolean
         */
        hasFill: function() {
          return this.fill && this.fill !== "transparent";
        },
        /**
         * When set to `true`, force the object to have its own cache, even if it is inside a group
         * it may be needed when your object behave in a particular way on the cache and always needs
         * its own isolated canvas to render correctly.
         * Created to be overridden
         * since 1.7.12
         * @returns Boolean
         */
        needsItsOwnCache: function() {
          return !!(this.paintFirst === "stroke" && this.hasFill() && this.hasStroke() && typeof this.shadow == "object" || this.clipPath);
        },
        /**
         * Decide if the object should cache or not. Create its own cache level
         * objectCaching is a global flag, wins over everything
         * needsItsOwnCache should be used when the object drawing method requires
         * a cache step. None of the fabric classes requires it.
         * Generally you do not cache objects in groups because the group outside is cached.
         * Read as: cache if is needed, or if the feature is enabled but we are not already caching.
         * @return {Boolean}
         */
        shouldCache: function() {
          return this.ownCaching = this.needsItsOwnCache() || this.objectCaching && (!this.group || !this.group.isOnACache()), this.ownCaching;
        },
        /**
         * Check if this object or a child object will cast a shadow
         * used by Group.shouldCache to know if child has a shadow recursively
         * @return {Boolean}
         */
        willDrawShadow: function() {
          return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);
        },
        /**
         * Execute the drawing operation for an object clipPath
         * @param {CanvasRenderingContext2D} ctx Context to render on
         * @param {fabric.Object} clipPath
         */
        drawClipPathOnCache: function(p, v) {
          if (p.save(), v.inverted ? p.globalCompositeOperation = "destination-out" : p.globalCompositeOperation = "destination-in", v.absolutePositioned) {
            var b = s.util.invertTransform(this.calcTransformMatrix());
            p.transform(b[0], b[1], b[2], b[3], b[4], b[5]);
          }
          v.transform(p), p.scale(1 / v.zoomX, 1 / v.zoomY), p.drawImage(v._cacheCanvas, -v.cacheTranslationX, -v.cacheTranslationY), p.restore();
        },
        /**
         * Execute the drawing operation for an object on a specified context
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        drawObject: function(p, v) {
          var b = this.fill, y = this.stroke;
          v ? (this.fill = "black", this.stroke = "", this._setClippingProperties(p)) : this._renderBackground(p), this._render(p), this._drawClipPath(p, this.clipPath), this.fill = b, this.stroke = y;
        },
        /**
         * Prepare clipPath state and cache and draw it on instance's cache
         * @param {CanvasRenderingContext2D} ctx
         * @param {fabric.Object} clipPath
         */
        _drawClipPath: function(p, v) {
          v && (v.canvas = this.canvas, v.shouldCache(), v._transformDone = !0, v.renderCache({ forClipping: !0 }), this.drawClipPathOnCache(p, v));
        },
        /**
         * Paint the cached copy of the object on the target context.
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        drawCacheOnCanvas: function(p) {
          p.scale(1 / this.zoomX, 1 / this.zoomY), p.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);
        },
        /**
         * Check if cache is dirty
         * @param {Boolean} skipCanvas skip canvas checks because this object is painted
         * on parent canvas.
         */
        isCacheDirty: function(p) {
          if (this.isNotVisible())
            return !1;
          if (this._cacheCanvas && this._cacheContext && !p && this._updateCacheCanvas())
            return !0;
          if (this.dirty || this.clipPath && this.clipPath.absolutePositioned || this.statefullCache && this.hasStateChanged("cacheProperties")) {
            if (this._cacheCanvas && this._cacheContext && !p) {
              var v = this.cacheWidth / this.zoomX, b = this.cacheHeight / this.zoomY;
              this._cacheContext.clearRect(-v / 2, -b / 2, v, b);
            }
            return !0;
          }
          return !1;
        },
        /**
         * Draws a background for the object big as its untransformed dimensions
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _renderBackground: function(p) {
          if (this.backgroundColor) {
            var v = this._getNonTransformedDimensions();
            p.fillStyle = this.backgroundColor, p.fillRect(
              -v.x / 2,
              -v.y / 2,
              v.x,
              v.y
            ), this._removeShadow(p);
          }
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _setOpacity: function(p) {
          this.group && !this.group._transformDone ? p.globalAlpha = this.getObjectOpacity() : p.globalAlpha *= this.opacity;
        },
        _setStrokeStyles: function(p, v) {
          var b = v.stroke;
          b && (p.lineWidth = v.strokeWidth, p.lineCap = v.strokeLineCap, p.lineDashOffset = v.strokeDashOffset, p.lineJoin = v.strokeLineJoin, p.miterLimit = v.strokeMiterLimit, b.toLive ? b.gradientUnits === "percentage" || b.gradientTransform || b.patternTransform ? this._applyPatternForTransformedGradient(p, b) : (p.strokeStyle = b.toLive(p, this), this._applyPatternGradientTransform(p, b)) : p.strokeStyle = v.stroke);
        },
        _setFillStyles: function(p, v) {
          var b = v.fill;
          b && (b.toLive ? (p.fillStyle = b.toLive(p, this), this._applyPatternGradientTransform(p, v.fill)) : p.fillStyle = b);
        },
        _setClippingProperties: function(p) {
          p.globalAlpha = 1, p.strokeStyle = "transparent", p.fillStyle = "#000000";
        },
        /**
         * @private
         * Sets line dash
         * @param {CanvasRenderingContext2D} ctx Context to set the dash line on
         * @param {Array} dashArray array representing dashes
         */
        _setLineDash: function(p, v) {
          !v || v.length === 0 || (1 & v.length && v.push.apply(v, v), p.setLineDash(v));
        },
        /**
         * Renders controls and borders for the object
         * the context here is not transformed
         * @param {CanvasRenderingContext2D} ctx Context to render on
         * @param {Object} [styleOverride] properties to override the object style
         */
        _renderControls: function(p, v) {
          var b = this.getViewportTransform(), y = this.calcTransformMatrix(), w, x, _;
          v = v || {}, x = typeof v.hasBorders < "u" ? v.hasBorders : this.hasBorders, _ = typeof v.hasControls < "u" ? v.hasControls : this.hasControls, y = s.util.multiplyTransformMatrices(b, y), w = s.util.qrDecompose(y), p.save(), p.translate(w.translateX, w.translateY), p.lineWidth = 1 * this.borderScaleFactor, this.group || (p.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1), this.flipX && (w.angle -= 180), p.rotate(u(this.group ? w.angle : this.angle)), v.forActiveSelection || this.group ? x && this.drawBordersInGroup(p, w, v) : x && this.drawBorders(p, v), _ && this.drawControls(p, v), p.restore();
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _setShadow: function(p) {
          if (this.shadow) {
            var v = this.shadow, b = this.canvas, y, w = b && b.viewportTransform[0] || 1, x = b && b.viewportTransform[3] || 1;
            v.nonScaling ? y = { scaleX: 1, scaleY: 1 } : y = this.getObjectScaling(), b && b._isRetinaScaling() && (w *= s.devicePixelRatio, x *= s.devicePixelRatio), p.shadowColor = v.color, p.shadowBlur = v.blur * s.browserShadowBlurConstant * (w + x) * (y.scaleX + y.scaleY) / 4, p.shadowOffsetX = v.offsetX * w * y.scaleX, p.shadowOffsetY = v.offsetY * x * y.scaleY;
          }
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _removeShadow: function(p) {
          this.shadow && (p.shadowColor = "", p.shadowBlur = p.shadowOffsetX = p.shadowOffsetY = 0);
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         * @param {Object} filler fabric.Pattern or fabric.Gradient
         * @return {Object} offset.offsetX offset for text rendering
         * @return {Object} offset.offsetY offset for text rendering
         */
        _applyPatternGradientTransform: function(p, v) {
          if (!v || !v.toLive)
            return { offsetX: 0, offsetY: 0 };
          var b = v.gradientTransform || v.patternTransform, y = -this.width / 2 + v.offsetX || 0, w = -this.height / 2 + v.offsetY || 0;
          return v.gradientUnits === "percentage" ? p.transform(this.width, 0, 0, this.height, y, w) : p.transform(1, 0, 0, 1, y, w), b && p.transform(b[0], b[1], b[2], b[3], b[4], b[5]), { offsetX: y, offsetY: w };
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _renderPaintInOrder: function(p) {
          this.paintFirst === "stroke" ? (this._renderStroke(p), this._renderFill(p)) : (this._renderFill(p), this._renderStroke(p));
        },
        /**
         * @private
         * function that actually render something on the context.
         * empty here to allow Obects to work on tests to benchmark fabric functionalites
         * not related to rendering
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _render: function() {
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _renderFill: function(p) {
          this.fill && (p.save(), this._setFillStyles(p, this), this.fillRule === "evenodd" ? p.fill("evenodd") : p.fill(), p.restore());
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _renderStroke: function(p) {
          if (!(!this.stroke || this.strokeWidth === 0)) {
            if (this.shadow && !this.shadow.affectStroke && this._removeShadow(p), p.save(), this.strokeUniform && this.group) {
              var v = this.getObjectScaling();
              p.scale(1 / v.scaleX, 1 / v.scaleY);
            } else
              this.strokeUniform && p.scale(1 / this.scaleX, 1 / this.scaleY);
            this._setLineDash(p, this.strokeDashArray), this._setStrokeStyles(p, this), p.stroke(), p.restore();
          }
        },
        /**
         * This function try to patch the missing gradientTransform on canvas gradients.
         * transforming a context to transform the gradient, is going to transform the stroke too.
         * we want to transform the gradient but not the stroke operation, so we create
         * a transformed gradient on a pattern and then we use the pattern instead of the gradient.
         * this method has drwabacks: is slow, is in low resolution, needs a patch for when the size
         * is limited.
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         * @param {fabric.Gradient} filler a fabric gradient instance
         */
        _applyPatternForTransformedGradient: function(p, v) {
          var b = this._limitCacheSize(this._getCacheCanvasDimensions()), y = s.util.createCanvasElement(), w, x = this.canvas.getRetinaScaling(), _ = b.x / this.scaleX / x, S = b.y / this.scaleY / x;
          y.width = _, y.height = S, w = y.getContext("2d"), w.beginPath(), w.moveTo(0, 0), w.lineTo(_, 0), w.lineTo(_, S), w.lineTo(0, S), w.closePath(), w.translate(_ / 2, S / 2), w.scale(
            b.zoomX / this.scaleX / x,
            b.zoomY / this.scaleY / x
          ), this._applyPatternGradientTransform(w, v), w.fillStyle = v.toLive(p), w.fill(), p.translate(-this.width / 2 - this.strokeWidth / 2, -this.height / 2 - this.strokeWidth / 2), p.scale(
            x * this.scaleX / b.zoomX,
            x * this.scaleY / b.zoomY
          ), p.strokeStyle = w.createPattern(y, "no-repeat");
        },
        /**
         * This function is an helper for svg import. it returns the center of the object in the svg
         * untransformed coordinates
         * @private
         * @return {Object} center point from element coordinates
         */
        _findCenterFromElement: function() {
          return { x: this.left + this.width / 2, y: this.top + this.height / 2 };
        },
        /**
         * This function is an helper for svg import. it decompose the transformMatrix
         * and assign properties to object.
         * untransformed coordinates
         * @private
         * @chainable
         */
        _assignTransformMatrixProps: function() {
          if (this.transformMatrix) {
            var p = s.util.qrDecompose(this.transformMatrix);
            this.flipX = !1, this.flipY = !1, this.set("scaleX", p.scaleX), this.set("scaleY", p.scaleY), this.angle = p.angle, this.skewX = p.skewX, this.skewY = 0;
          }
        },
        /**
         * This function is an helper for svg import. it removes the transform matrix
         * and set to object properties that fabricjs can handle
         * @private
         * @param {Object} preserveAspectRatioOptions
         * @return {thisArg}
         */
        _removeTransformMatrix: function(p) {
          var v = this._findCenterFromElement();
          this.transformMatrix && (this._assignTransformMatrixProps(), v = s.util.transformPoint(v, this.transformMatrix)), this.transformMatrix = null, p && (this.scaleX *= p.scaleX, this.scaleY *= p.scaleY, this.cropX = p.cropX, this.cropY = p.cropY, v.x += p.offsetLeft, v.y += p.offsetTop, this.width = p.width, this.height = p.height), this.setPositionByOrigin(v, "center", "center");
        },
        /**
         * Clones an instance, using a callback method will work for every object.
         * @param {Function} callback Callback is invoked with a clone as a first argument
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         */
        clone: function(p, v) {
          var b = this.toObject(v);
          this.constructor.fromObject ? this.constructor.fromObject(b, p) : s.Object._fromObject("Object", b, p);
        },
        /**
         * Creates an instance of fabric.Image out of an object
         * makes use of toCanvasElement.
         * Once this method was based on toDataUrl and loadImage, so it also had a quality
         * and format option. toCanvasElement is faster and produce no loss of quality.
         * If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it.
         * toCanvasElement and then toBlob from the obtained canvas is also a good option.
         * This method is sync now, but still support the callback because we did not want to break.
         * When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.
         * @param {Function} callback callback, invoked with an instance as a first argument
         * @param {Object} [options] for clone as image, passed to toDataURL
         * @param {Number} [options.multiplier=1] Multiplier to scale by
         * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14
         * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14
         * @param {Number} [options.width] Cropping width. Introduced in v1.2.14
         * @param {Number} [options.height] Cropping height. Introduced in v1.2.14
         * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4
         * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4
         * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2
         * @return {fabric.Object} thisArg
         */
        cloneAsImage: function(p, v) {
          var b = this.toCanvasElement(v);
          return p && p(new s.Image(b)), this;
        },
        /**
         * Converts an object into a HTMLCanvas element
         * @param {Object} options Options object
         * @param {Number} [options.multiplier=1] Multiplier to scale by
         * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14
         * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14
         * @param {Number} [options.width] Cropping width. Introduced in v1.2.14
         * @param {Number} [options.height] Cropping height. Introduced in v1.2.14
         * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4
         * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4
         * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2
         * @return {HTMLCanvasElement} Returns DOM element <canvas> with the fabric.Object
         */
        toCanvasElement: function(p) {
          p || (p = {});
          var v = s.util, b = v.saveObjectTransform(this), y = this.group, w = this.shadow, x = Math.abs, _ = (p.multiplier || 1) * (p.enableRetinaScaling ? s.devicePixelRatio : 1);
          delete this.group, p.withoutTransform && v.resetObjectTransform(this), p.withoutShadow && (this.shadow = null);
          var S = s.util.createCanvasElement(), k = this.getBoundingRect(!0, !0), F = this.shadow, L, j = { x: 0, y: 0 }, G, te, U;
          F && (G = F.blur, F.nonScaling ? L = { scaleX: 1, scaleY: 1 } : L = this.getObjectScaling(), j.x = 2 * Math.round(x(F.offsetX) + G) * x(L.scaleX), j.y = 2 * Math.round(x(F.offsetY) + G) * x(L.scaleY)), te = k.width + j.x, U = k.height + j.y, S.width = Math.ceil(te), S.height = Math.ceil(U);
          var K = new s.StaticCanvas(S, {
            enableRetinaScaling: !1,
            renderOnAddRemove: !1,
            skipOffscreen: !1
          });
          p.format === "jpeg" && (K.backgroundColor = "#fff"), this.setPositionByOrigin(new s.Point(K.width / 2, K.height / 2), "center", "center");
          var re = this.canvas;
          K.add(this);
          var ne = K.toCanvasElement(_ || 1, p);
          return this.shadow = w, this.set("canvas", re), y && (this.group = y), this.set(b).setCoords(), K._objects = [], K.dispose(), K = null, ne;
        },
        /**
         * Converts an object into a data-url-like string
         * @param {Object} options Options object
         * @param {String} [options.format=png] The format of the output image. Either "jpeg" or "png"
         * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.
         * @param {Number} [options.multiplier=1] Multiplier to scale by
         * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14
         * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14
         * @param {Number} [options.width] Cropping width. Introduced in v1.2.14
         * @param {Number} [options.height] Cropping height. Introduced in v1.2.14
         * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4
         * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4
         * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2
         * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format
         */
        toDataURL: function(p) {
          return p || (p = {}), s.util.toDataURL(this.toCanvasElement(p), p.format || "png", p.quality || 1);
        },
        /**
         * Returns true if specified type is identical to the type of an instance
         * @param {String} type Type to check against
         * @return {Boolean}
         */
        isType: function(p) {
          return arguments.length > 1 ? Array.from(arguments).includes(this.type) : this.type === p;
        },
        /**
         * Returns complexity of an instance
         * @return {Number} complexity of this instance (is 1 unless subclassed)
         */
        complexity: function() {
          return 1;
        },
        /**
         * Returns a JSON representation of an instance
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} JSON
         */
        toJSON: function(p) {
          return this.toObject(p);
        },
        /**
         * Sets "angle" of an instance with centered rotation
         * @param {Number} angle Angle value (in degrees)
         * @return {fabric.Object} thisArg
         * @chainable
         */
        rotate: function(p) {
          var v = (this.originX !== "center" || this.originY !== "center") && this.centeredRotation;
          return v && this._setOriginToCenter(), this.set("angle", p), v && this._resetOrigin(), this;
        },
        /**
         * Centers object horizontally on canvas to which it was added last.
         * You might need to call `setCoords` on an object after centering, to update controls area.
         * @return {fabric.Object} thisArg
         * @chainable
         */
        centerH: function() {
          return this.canvas && this.canvas.centerObjectH(this), this;
        },
        /**
         * Centers object horizontally on current viewport of canvas to which it was added last.
         * You might need to call `setCoords` on an object after centering, to update controls area.
         * @return {fabric.Object} thisArg
         * @chainable
         */
        viewportCenterH: function() {
          return this.canvas && this.canvas.viewportCenterObjectH(this), this;
        },
        /**
         * Centers object vertically on canvas to which it was added last.
         * You might need to call `setCoords` on an object after centering, to update controls area.
         * @return {fabric.Object} thisArg
         * @chainable
         */
        centerV: function() {
          return this.canvas && this.canvas.centerObjectV(this), this;
        },
        /**
         * Centers object vertically on current viewport of canvas to which it was added last.
         * You might need to call `setCoords` on an object after centering, to update controls area.
         * @return {fabric.Object} thisArg
         * @chainable
         */
        viewportCenterV: function() {
          return this.canvas && this.canvas.viewportCenterObjectV(this), this;
        },
        /**
         * Centers object vertically and horizontally on canvas to which is was added last
         * You might need to call `setCoords` on an object after centering, to update controls area.
         * @return {fabric.Object} thisArg
         * @chainable
         */
        center: function() {
          return this.canvas && this.canvas.centerObject(this), this;
        },
        /**
         * Centers object on current viewport of canvas to which it was added last.
         * You might need to call `setCoords` on an object after centering, to update controls area.
         * @return {fabric.Object} thisArg
         * @chainable
         */
        viewportCenter: function() {
          return this.canvas && this.canvas.viewportCenterObject(this), this;
        },
        /**
         * Returns coordinates of a pointer relative to an object
         * @param {Event} e Event to operate upon
         * @param {Object} [pointer] Pointer to operate upon (instead of event)
         * @return {Object} Coordinates of a pointer (x, y)
         */
        getLocalPointer: function(p, v) {
          v = v || this.canvas.getPointer(p);
          var b = new s.Point(v.x, v.y), y = this._getLeftTopCoords();
          return this.angle && (b = s.util.rotatePoint(
            b,
            y,
            u(-this.angle)
          )), {
            x: b.x - y.x,
            y: b.y - y.y
          };
        },
        /**
         * Sets canvas globalCompositeOperation for specific object
         * custom composition operation for the particular object can be specified using globalCompositeOperation property
         * @param {CanvasRenderingContext2D} ctx Rendering canvas context
         */
        _setupCompositeOperation: function(p) {
          this.globalCompositeOperation && (p.globalCompositeOperation = this.globalCompositeOperation);
        },
        /**
         * cancel instance's running animations
         * override if necessary to dispose artifacts such as `clipPath`
         */
        dispose: function() {
          s.runningAnimations && s.runningAnimations.cancelByTarget(this);
        }
      }
    ), s.util.createAccessors && s.util.createAccessors(s.Object), c(s.Object.prototype, s.Observable), s.Object.NUM_FRACTION_DIGITS = 2, s.Object.ENLIVEN_PROPS = ["clipPath"], s.Object._fromObject = function(p, v, b, y) {
      var w = s[p];
      v = f(v, !0), s.util.enlivenPatterns([v.fill, v.stroke], function(x) {
        typeof x[0] < "u" && (v.fill = x[0]), typeof x[1] < "u" && (v.stroke = x[1]), s.util.enlivenObjectEnlivables(v, v, function() {
          var _ = y ? new w(v[y], v) : new w(v);
          b && b(_);
        });
      });
    }, s.Object.__uid = 0);
  }(t), function() {
    var a = e.util.degreesToRadians, s = {
      left: -0.5,
      center: 0,
      right: 0.5
    }, c = {
      top: -0.5,
      center: 0,
      bottom: 0.5
    };
    e.util.object.extend(
      e.Object.prototype,
      /** @lends fabric.Object.prototype */
      {
        /**
         * Translates the coordinates from a set of origin to another (based on the object's dimensions)
         * @param {fabric.Point} point The point which corresponds to the originX and originY params
         * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'
         * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'
         * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'
         * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'
         * @return {fabric.Point}
         */
        translateToGivenOrigin: function(f, o, h, u, d) {
          var m = f.x, p = f.y, v, b, y;
          return typeof o == "string" ? o = s[o] : o -= 0.5, typeof u == "string" ? u = s[u] : u -= 0.5, v = u - o, typeof h == "string" ? h = c[h] : h -= 0.5, typeof d == "string" ? d = c[d] : d -= 0.5, b = d - h, (v || b) && (y = this._getTransformedDimensions(), m = f.x + v * y.x, p = f.y + b * y.y), new e.Point(m, p);
        },
        /**
         * Translates the coordinates from origin to center coordinates (based on the object's dimensions)
         * @param {fabric.Point} point The point which corresponds to the originX and originY params
         * @param {String} originX Horizontal origin: 'left', 'center' or 'right'
         * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'
         * @return {fabric.Point}
         */
        translateToCenterPoint: function(f, o, h) {
          var u = this.translateToGivenOrigin(f, o, h, "center", "center");
          return this.angle ? e.util.rotatePoint(u, f, a(this.angle)) : u;
        },
        /**
         * Translates the coordinates from center to origin coordinates (based on the object's dimensions)
         * @param {fabric.Point} center The point which corresponds to center of the object
         * @param {String} originX Horizontal origin: 'left', 'center' or 'right'
         * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'
         * @return {fabric.Point}
         */
        translateToOriginPoint: function(f, o, h) {
          var u = this.translateToGivenOrigin(f, "center", "center", o, h);
          return this.angle ? e.util.rotatePoint(u, f, a(this.angle)) : u;
        },
        /**
         * Returns the real center coordinates of the object
         * @return {fabric.Point}
         */
        getCenterPoint: function() {
          var f = new e.Point(this.left, this.top);
          return this.translateToCenterPoint(f, this.originX, this.originY);
        },
        /**
         * Returns the coordinates of the object based on center coordinates
         * @param {fabric.Point} point The point which corresponds to the originX and originY params
         * @return {fabric.Point}
         */
        // getOriginPoint: function(center) {
        //   return this.translateToOriginPoint(center, this.originX, this.originY);
        // },
        /**
         * Returns the coordinates of the object as if it has a different origin
         * @param {String} originX Horizontal origin: 'left', 'center' or 'right'
         * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'
         * @return {fabric.Point}
         */
        getPointByOrigin: function(f, o) {
          var h = this.getCenterPoint();
          return this.translateToOriginPoint(h, f, o);
        },
        /**
         * Returns the point in local coordinates
         * @param {fabric.Point} point The point relative to the global coordinate system
         * @param {String} originX Horizontal origin: 'left', 'center' or 'right'
         * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'
         * @return {fabric.Point}
         */
        toLocalPoint: function(f, o, h) {
          var u = this.getCenterPoint(), d, m;
          return typeof o < "u" && typeof h < "u" ? d = this.translateToGivenOrigin(u, "center", "center", o, h) : d = new e.Point(this.left, this.top), m = new e.Point(f.x, f.y), this.angle && (m = e.util.rotatePoint(m, u, -a(this.angle))), m.subtractEquals(d);
        },
        /**
         * Returns the point in global coordinates
         * @param {fabric.Point} The point relative to the local coordinate system
         * @return {fabric.Point}
         */
        // toGlobalPoint: function(point) {
        //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));
        // },
        /**
         * Sets the position of the object taking into consideration the object's origin
         * @param {fabric.Point} pos The new position of the object
         * @param {String} originX Horizontal origin: 'left', 'center' or 'right'
         * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'
         * @return {void}
         */
        setPositionByOrigin: function(f, o, h) {
          var u = this.translateToCenterPoint(f, o, h), d = this.translateToOriginPoint(u, this.originX, this.originY);
          this.set("left", d.x), this.set("top", d.y);
        },
        /**
         * @param {String} to One of 'left', 'center', 'right'
         */
        adjustPosition: function(f) {
          var o = a(this.angle), h = this.getScaledWidth(), u = e.util.cos(o) * h, d = e.util.sin(o) * h, m, p;
          typeof this.originX == "string" ? m = s[this.originX] : m = this.originX - 0.5, typeof f == "string" ? p = s[f] : p = f - 0.5, this.left += u * (p - m), this.top += d * (p - m), this.setCoords(), this.originX = f;
        },
        /**
         * Sets the origin/position of the object to it's center point
         * @private
         * @return {void}
         */
        _setOriginToCenter: function() {
          this._originalOriginX = this.originX, this._originalOriginY = this.originY;
          var f = this.getCenterPoint();
          this.originX = "center", this.originY = "center", this.left = f.x, this.top = f.y;
        },
        /**
         * Resets the origin/position of the object to it's original origin
         * @private
         * @return {void}
         */
        _resetOrigin: function() {
          var f = this.translateToOriginPoint(
            this.getCenterPoint(),
            this._originalOriginX,
            this._originalOriginY
          );
          this.originX = this._originalOriginX, this.originY = this._originalOriginY, this.left = f.x, this.top = f.y, this._originalOriginX = null, this._originalOriginY = null;
        },
        /**
         * @private
         */
        _getLeftTopCoords: function() {
          return this.translateToOriginPoint(this.getCenterPoint(), "left", "top");
        }
      }
    );
  }(), function() {
    function a(h) {
      return [
        new e.Point(h.tl.x, h.tl.y),
        new e.Point(h.tr.x, h.tr.y),
        new e.Point(h.br.x, h.br.y),
        new e.Point(h.bl.x, h.bl.y)
      ];
    }
    var s = e.util, c = s.degreesToRadians, f = s.multiplyTransformMatrices, o = s.transformPoint;
    s.object.extend(
      e.Object.prototype,
      /** @lends fabric.Object.prototype */
      {
        /**
         * Describe object's corner position in canvas element coordinates.
         * properties are depending on control keys and padding the main controls.
         * each property is an object with x, y and corner.
         * The `corner` property contains in a similar manner the 4 points of the
         * interactive area of the corner.
         * The coordinates depends from the controls positionHandler and are used
         * to draw and locate controls
         * @memberOf fabric.Object.prototype
         */
        oCoords: null,
        /**
         * Describe object's corner position in canvas object absolute coordinates
         * properties are tl,tr,bl,br and describe the four main corner.
         * each property is an object with x, y, instance of Fabric.Point.
         * The coordinates depends from this properties: width, height, scaleX, scaleY
         * skewX, skewY, angle, strokeWidth, top, left.
         * Those coordinates are useful to understand where an object is. They get updated
         * with oCoords but they do not need to be updated when zoom or panning change.
         * The coordinates get updated with @method setCoords.
         * You can calculate them without updating with @method calcACoords();
         * @memberOf fabric.Object.prototype
         */
        aCoords: null,
        /**
         * Describe object's corner position in canvas element coordinates.
         * includes padding. Used of object detection.
         * set and refreshed with setCoords.
         * @memberOf fabric.Object.prototype
         */
        lineCoords: null,
        /**
         * storage for object transform matrix
         */
        ownMatrixCache: null,
        /**
         * storage for object full transform matrix
         */
        matrixCache: null,
        /**
         * custom controls interface
         * controls are added by default_controls.js
         */
        controls: {},
        /**
         * return correct set of coordinates for intersection
         * this will return either aCoords or lineCoords.
         * @param {Boolean} absolute will return aCoords if true or lineCoords
         * @return {Object} {tl, tr, br, bl} points
         */
        _getCoords: function(h, u) {
          return u ? h ? this.calcACoords() : this.calcLineCoords() : ((!this.aCoords || !this.lineCoords) && this.setCoords(!0), h ? this.aCoords : this.lineCoords);
        },
        /**
         * return correct set of coordinates for intersection
         * this will return either aCoords or lineCoords.
         * The coords are returned in an array.
         * @return {Array} [tl, tr, br, bl] of points
         */
        getCoords: function(h, u) {
          return a(this._getCoords(h, u));
        },
        /**
         * Checks if object intersects with an area formed by 2 points
         * @param {Object} pointTL top-left point of area
         * @param {Object} pointBR bottom-right point of area
         * @param {Boolean} [absolute] use coordinates without viewportTransform
         * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords
         * @return {Boolean} true if object intersects with an area formed by 2 points
         */
        intersectsWithRect: function(h, u, d, m) {
          var p = this.getCoords(d, m), v = e.Intersection.intersectPolygonRectangle(
            p,
            h,
            u
          );
          return v.status === "Intersection";
        },
        /**
         * Checks if object intersects with another object
         * @param {Object} other Object to test
         * @param {Boolean} [absolute] use coordinates without viewportTransform
         * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords
         * @return {Boolean} true if object intersects with another object
         */
        intersectsWithObject: function(h, u, d) {
          var m = e.Intersection.intersectPolygonPolygon(
            this.getCoords(u, d),
            h.getCoords(u, d)
          );
          return m.status === "Intersection" || h.isContainedWithinObject(this, u, d) || this.isContainedWithinObject(h, u, d);
        },
        /**
         * Checks if object is fully contained within area of another object
         * @param {Object} other Object to test
         * @param {Boolean} [absolute] use coordinates without viewportTransform
         * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords
         * @return {Boolean} true if object is fully contained within area of another object
         */
        isContainedWithinObject: function(h, u, d) {
          for (var m = this.getCoords(u, d), p = u ? h.aCoords : h.lineCoords, v = 0, b = h._getImageLines(p); v < 4; v++)
            if (!h.containsPoint(m[v], b))
              return !1;
          return !0;
        },
        /**
         * Checks if object is fully contained within area formed by 2 points
         * @param {Object} pointTL top-left point of area
         * @param {Object} pointBR bottom-right point of area
         * @param {Boolean} [absolute] use coordinates without viewportTransform
         * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords
         * @return {Boolean} true if object is fully contained within area formed by 2 points
         */
        isContainedWithinRect: function(h, u, d, m) {
          var p = this.getBoundingRect(d, m);
          return p.left >= h.x && p.left + p.width <= u.x && p.top >= h.y && p.top + p.height <= u.y;
        },
        /**
         * Checks if point is inside the object
         * @param {fabric.Point} point Point to check against
         * @param {Object} [lines] object returned from @method _getImageLines
         * @param {Boolean} [absolute] use coordinates without viewportTransform
         * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords
         * @return {Boolean} true if point is inside the object
         */
        containsPoint: function(h, v, d, m) {
          var p = this._getCoords(d, m), v = v || this._getImageLines(p), b = this._findCrossPoints(h, v);
          return b !== 0 && b % 2 === 1;
        },
        /**
         * Checks if object is contained within the canvas with current viewportTransform
         * the check is done stopping at first point that appears on screen
         * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords
         * @return {Boolean} true if object is fully or partially contained within canvas
         */
        isOnScreen: function(h) {
          if (!this.canvas)
            return !1;
          var u = this.canvas.vptCoords.tl, d = this.canvas.vptCoords.br, m = this.getCoords(!0, h);
          return m.some(function(p) {
            return p.x <= d.x && p.x >= u.x && p.y <= d.y && p.y >= u.y;
          }) || this.intersectsWithRect(u, d, !0, h) ? !0 : this._containsCenterOfCanvas(u, d, h);
        },
        /**
         * Checks if the object contains the midpoint between canvas extremities
         * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen
         * @private
         * @param {Fabric.Point} pointTL Top Left point
         * @param {Fabric.Point} pointBR Top Right point
         * @param {Boolean} calculate use coordinates of current position instead of .oCoords
         * @return {Boolean} true if the object contains the point
         */
        _containsCenterOfCanvas: function(h, u, d) {
          var m = { x: (h.x + u.x) / 2, y: (h.y + u.y) / 2 };
          return !!this.containsPoint(m, null, !0, d);
        },
        /**
         * Checks if object is partially contained within the canvas with current viewportTransform
         * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords
         * @return {Boolean} true if object is partially contained within canvas
         */
        isPartiallyOnScreen: function(h) {
          if (!this.canvas)
            return !1;
          var u = this.canvas.vptCoords.tl, d = this.canvas.vptCoords.br;
          if (this.intersectsWithRect(u, d, !0, h))
            return !0;
          var m = this.getCoords(!0, h).every(function(p) {
            return (p.x >= d.x || p.x <= u.x) && (p.y >= d.y || p.y <= u.y);
          });
          return m && this._containsCenterOfCanvas(u, d, h);
        },
        /**
         * Method that returns an object with the object edges in it, given the coordinates of the corners
         * @private
         * @param {Object} oCoords Coordinates of the object corners
         */
        _getImageLines: function(h) {
          var u = {
            topline: {
              o: h.tl,
              d: h.tr
            },
            rightline: {
              o: h.tr,
              d: h.br
            },
            bottomline: {
              o: h.br,
              d: h.bl
            },
            leftline: {
              o: h.bl,
              d: h.tl
            }
          };
          return u;
        },
        /**
         * Helper method to determine how many cross points are between the 4 object edges
         * and the horizontal line determined by a point on canvas
         * @private
         * @param {fabric.Point} point Point to check
         * @param {Object} lines Coordinates of the object being evaluated
         */
        // remove yi, not used but left code here just in case.
        _findCrossPoints: function(h, u) {
          var d, m, p, v, b, y = 0, w;
          for (var x in u)
            if (w = u[x], !(w.o.y < h.y && w.d.y < h.y) && !(w.o.y >= h.y && w.d.y >= h.y) && (w.o.x === w.d.x && w.o.x >= h.x ? b = w.o.x : (d = 0, m = (w.d.y - w.o.y) / (w.d.x - w.o.x), p = h.y - d * h.x, v = w.o.y - m * w.o.x, b = -(p - v) / (d - m)), b >= h.x && (y += 1), y === 2))
              break;
          return y;
        },
        /**
         * Returns coordinates of object's bounding rectangle (left, top, width, height)
         * the box is intended as aligned to axis of canvas.
         * @param {Boolean} [absolute] use coordinates without viewportTransform
         * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords
         * @return {Object} Object with left, top, width, height properties
         */
        getBoundingRect: function(h, u) {
          var d = this.getCoords(h, u);
          return s.makeBoundingBoxFromPoints(d);
        },
        /**
         * Returns width of an object's bounding box counting transformations
         * before 2.0 it was named getWidth();
         * @return {Number} width value
         */
        getScaledWidth: function() {
          return this._getTransformedDimensions().x;
        },
        /**
         * Returns height of an object bounding box counting transformations
         * before 2.0 it was named getHeight();
         * @return {Number} height value
         */
        getScaledHeight: function() {
          return this._getTransformedDimensions().y;
        },
        /**
         * Makes sure the scale is valid and modifies it if necessary
         * @private
         * @param {Number} value
         * @return {Number}
         */
        _constrainScale: function(h) {
          return Math.abs(h) < this.minScaleLimit ? h < 0 ? -this.minScaleLimit : this.minScaleLimit : h === 0 ? 1e-4 : h;
        },
        /**
         * Scales an object (equally by x and y)
         * @param {Number} value Scale factor
         * @return {fabric.Object} thisArg
         * @chainable
         */
        scale: function(h) {
          return this._set("scaleX", h), this._set("scaleY", h), this.setCoords();
        },
        /**
         * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)
         * @param {Number} value New width value
         * @param {Boolean} absolute ignore viewport
         * @return {fabric.Object} thisArg
         * @chainable
         */
        scaleToWidth: function(h, u) {
          var d = this.getBoundingRect(u).width / this.getScaledWidth();
          return this.scale(h / this.width / d);
        },
        /**
         * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)
         * @param {Number} value New height value
         * @param {Boolean} absolute ignore viewport
         * @return {fabric.Object} thisArg
         * @chainable
         */
        scaleToHeight: function(h, u) {
          var d = this.getBoundingRect(u).height / this.getScaledHeight();
          return this.scale(h / this.height / d);
        },
        calcLineCoords: function() {
          var h = this.getViewportTransform(), u = this.padding, d = c(this.angle), m = s.cos(d), p = s.sin(d), v = m * u, b = p * u, y = v + b, w = v - b, x = this.calcACoords(), _ = {
            tl: o(x.tl, h),
            tr: o(x.tr, h),
            bl: o(x.bl, h),
            br: o(x.br, h)
          };
          return u && (_.tl.x -= w, _.tl.y -= y, _.tr.x += y, _.tr.y -= w, _.bl.x -= y, _.bl.y += w, _.br.x += w, _.br.y += y), _;
        },
        calcOCoords: function() {
          var h = this._calcRotateMatrix(), u = this._calcTranslateMatrix(), d = this.getViewportTransform(), m = f(d, u), p = f(m, h), p = f(p, [1 / d[0], 0, 0, 1 / d[3], 0, 0]), v = this._calculateCurrentDimensions(), b = {};
          return this.forEachControl(function(y, w, x) {
            b[w] = y.positionHandler(v, p, x);
          }), b;
        },
        calcACoords: function() {
          var h = this._calcRotateMatrix(), u = this._calcTranslateMatrix(), d = f(u, h), m = this._getTransformedDimensions(), p = m.x / 2, v = m.y / 2;
          return {
            // corners
            tl: o({ x: -p, y: -v }, d),
            tr: o({ x: p, y: -v }, d),
            bl: o({ x: -p, y: v }, d),
            br: o({ x: p, y: v }, d)
          };
        },
        /**
         * Sets corner and controls position coordinates based on current angle, width and height, left and top.
         * oCoords are used to find the corners
         * aCoords are used to quickly find an object on the canvas
         * lineCoords are used to quickly find object during pointer events.
         * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}
         *
         * @param {Boolean} [skipCorners] skip calculation of oCoords.
         * @return {fabric.Object} thisArg
         * @chainable
         */
        setCoords: function(h) {
          return this.aCoords = this.calcACoords(), this.lineCoords = this.group ? this.aCoords : this.calcLineCoords(), h ? this : (this.oCoords = this.calcOCoords(), this._setCornerCoords && this._setCornerCoords(), this);
        },
        /**
         * calculate rotation matrix of an object
         * @return {Array} rotation matrix for the object
         */
        _calcRotateMatrix: function() {
          return s.calcRotateMatrix(this);
        },
        /**
         * calculate the translation matrix for an object transform
         * @return {Array} rotation matrix for the object
         */
        _calcTranslateMatrix: function() {
          var h = this.getCenterPoint();
          return [1, 0, 0, 1, h.x, h.y];
        },
        transformMatrixKey: function(h) {
          var u = "_", d = "";
          return !h && this.group && (d = this.group.transformMatrixKey(h) + u), d + this.top + u + this.left + u + this.scaleX + u + this.scaleY + u + this.skewX + u + this.skewY + u + this.angle + u + this.originX + u + this.originY + u + this.width + u + this.height + u + this.strokeWidth + this.flipX + this.flipY;
        },
        /**
         * calculate transform matrix that represents the current transformations from the
         * object's properties.
         * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations
         * There are some situation in which this is useful to avoid the fake rotation.
         * @return {Array} transform matrix for the object
         */
        calcTransformMatrix: function(h) {
          var u = this.calcOwnMatrix();
          if (h || !this.group)
            return u;
          var d = this.transformMatrixKey(h), m = this.matrixCache || (this.matrixCache = {});
          return m.key === d ? m.value : (this.group && (u = f(this.group.calcTransformMatrix(!1), u)), m.key = d, m.value = u, u);
        },
        /**
         * calculate transform matrix that represents the current transformations from the
         * object's properties, this matrix does not include the group transformation
         * @return {Array} transform matrix for the object
         */
        calcOwnMatrix: function() {
          var h = this.transformMatrixKey(!0), u = this.ownMatrixCache || (this.ownMatrixCache = {});
          if (u.key === h)
            return u.value;
          var d = this._calcTranslateMatrix(), m = {
            angle: this.angle,
            translateX: d[4],
            translateY: d[5],
            scaleX: this.scaleX,
            scaleY: this.scaleY,
            skewX: this.skewX,
            skewY: this.skewY,
            flipX: this.flipX,
            flipY: this.flipY
          };
          return u.key = h, u.value = s.composeMatrix(m), u.value;
        },
        /*
         * Calculate object dimensions from its properties
         * @private
         * @return {Object} .x width dimension
         * @return {Object} .y height dimension
         */
        _getNonTransformedDimensions: function() {
          var h = this.strokeWidth, u = this.width + h, d = this.height + h;
          return { x: u, y: d };
        },
        /*
         * Calculate object bounding box dimensions from its properties scale, skew.
         * @param {Number} skewX, a value to override current skewX
         * @param {Number} skewY, a value to override current skewY
         * @private
         * @return {Object} .x width dimension
         * @return {Object} .y height dimension
         */
        _getTransformedDimensions: function(h, u) {
          typeof h > "u" && (h = this.skewX), typeof u > "u" && (u = this.skewY);
          var d, m, p, v = h === 0 && u === 0;
          if (this.strokeUniform ? (m = this.width, p = this.height) : (d = this._getNonTransformedDimensions(), m = d.x, p = d.y), v)
            return this._finalizeDimensions(m * this.scaleX, p * this.scaleY);
          var b = s.sizeAfterTransform(m, p, {
            scaleX: this.scaleX,
            scaleY: this.scaleY,
            skewX: h,
            skewY: u
          });
          return this._finalizeDimensions(b.x, b.y);
        },
        /*
         * Calculate object bounding box dimensions from its properties scale, skew.
         * @param Number width width of the bbox
         * @param Number height height of the bbox
         * @private
         * @return {Object} .x finalized width dimension
         * @return {Object} .y finalized height dimension
         */
        _finalizeDimensions: function(h, u) {
          return this.strokeUniform ? { x: h + this.strokeWidth, y: u + this.strokeWidth } : { x: h, y: u };
        },
        /*
         * Calculate object dimensions for controls box, including padding and canvas zoom.
         * and active selection
         * private
         */
        _calculateCurrentDimensions: function() {
          var h = this.getViewportTransform(), u = this._getTransformedDimensions(), d = o(u, h, !0);
          return d.scalarAdd(2 * this.padding);
        }
      }
    );
  }(), e.util.object.extend(
    e.Object.prototype,
    /** @lends fabric.Object.prototype */
    {
      /**
       * Moves an object to the bottom of the stack of drawn objects
       * @return {fabric.Object} thisArg
       * @chainable
       */
      sendToBack: function() {
        return this.group ? e.StaticCanvas.prototype.sendToBack.call(this.group, this) : this.canvas && this.canvas.sendToBack(this), this;
      },
      /**
       * Moves an object to the top of the stack of drawn objects
       * @return {fabric.Object} thisArg
       * @chainable
       */
      bringToFront: function() {
        return this.group ? e.StaticCanvas.prototype.bringToFront.call(this.group, this) : this.canvas && this.canvas.bringToFront(this), this;
      },
      /**
       * Moves an object down in stack of drawn objects
       * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object
       * @return {fabric.Object} thisArg
       * @chainable
       */
      sendBackwards: function(a) {
        return this.group ? e.StaticCanvas.prototype.sendBackwards.call(this.group, this, a) : this.canvas && this.canvas.sendBackwards(this, a), this;
      },
      /**
       * Moves an object up in stack of drawn objects
       * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object
       * @return {fabric.Object} thisArg
       * @chainable
       */
      bringForward: function(a) {
        return this.group ? e.StaticCanvas.prototype.bringForward.call(this.group, this, a) : this.canvas && this.canvas.bringForward(this, a), this;
      },
      /**
       * Moves an object to specified level in stack of drawn objects
       * @param {Number} index New position of object
       * @return {fabric.Object} thisArg
       * @chainable
       */
      moveTo: function(a) {
        return this.group && this.group.type !== "activeSelection" ? e.StaticCanvas.prototype.moveTo.call(this.group, this, a) : this.canvas && this.canvas.moveTo(this, a), this;
      }
    }
  ), function() {
    function a(c, f) {
      if (f) {
        if (f.toLive)
          return c + ": url(#SVGID_" + f.id + "); ";
        var o = new e.Color(f), h = c + ": " + o.toRgb() + "; ", u = o.getAlpha();
        return u !== 1 && (h += c + "-opacity: " + u.toString() + "; "), h;
      } else
        return c + ": none; ";
    }
    var s = e.util.toFixed;
    e.util.object.extend(
      e.Object.prototype,
      /** @lends fabric.Object.prototype */
      {
        /**
         * Returns styles-string for svg-export
         * @param {Boolean} skipShadow a boolean to skip shadow filter output
         * @return {String}
         */
        getSvgStyles: function(c) {
          var f = this.fillRule ? this.fillRule : "nonzero", o = this.strokeWidth ? this.strokeWidth : "0", h = this.strokeDashArray ? this.strokeDashArray.join(" ") : "none", u = this.strokeDashOffset ? this.strokeDashOffset : "0", d = this.strokeLineCap ? this.strokeLineCap : "butt", m = this.strokeLineJoin ? this.strokeLineJoin : "miter", p = this.strokeMiterLimit ? this.strokeMiterLimit : "4", v = typeof this.opacity < "u" ? this.opacity : "1", b = this.visible ? "" : " visibility: hidden;", y = c ? "" : this.getSvgFilter(), w = a("fill", this.fill), x = a("stroke", this.stroke);
          return [
            x,
            "stroke-width: ",
            o,
            "; ",
            "stroke-dasharray: ",
            h,
            "; ",
            "stroke-linecap: ",
            d,
            "; ",
            "stroke-dashoffset: ",
            u,
            "; ",
            "stroke-linejoin: ",
            m,
            "; ",
            "stroke-miterlimit: ",
            p,
            "; ",
            w,
            "fill-rule: ",
            f,
            "; ",
            "opacity: ",
            v,
            ";",
            y,
            b
          ].join("");
        },
        /**
         * Returns styles-string for svg-export
         * @param {Object} style the object from which to retrieve style properties
         * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.
         * @return {String}
         */
        getSvgSpanStyles: function(c, f) {
          var o = "; ", u = c.fontFamily ? "font-family: " + (c.fontFamily.indexOf("'") === -1 && c.fontFamily.indexOf('"') === -1 ? "'" + c.fontFamily + "'" : c.fontFamily) + o : "", h = c.strokeWidth ? "stroke-width: " + c.strokeWidth + o : "", u = u, d = c.fontSize ? "font-size: " + c.fontSize + "px" + o : "", m = c.fontStyle ? "font-style: " + c.fontStyle + o : "", p = c.fontWeight ? "font-weight: " + c.fontWeight + o : "", v = c.fill ? a("fill", c.fill) : "", b = c.stroke ? a("stroke", c.stroke) : "", y = this.getSvgTextDecoration(c), w = c.deltaY ? "baseline-shift: " + -c.deltaY + "; " : "";
          return y && (y = "text-decoration: " + y + o), [
            b,
            h,
            u,
            d,
            m,
            p,
            y,
            v,
            w,
            f ? "white-space: pre; " : ""
          ].join("");
        },
        /**
         * Returns text-decoration property for svg-export
         * @param {Object} style the object from which to retrieve style properties
         * @return {String}
         */
        getSvgTextDecoration: function(c) {
          return ["overline", "underline", "line-through"].filter(function(f) {
            return c[f.replace("-", "")];
          }).join(" ");
        },
        /**
         * Returns filter for svg shadow
         * @return {String}
         */
        getSvgFilter: function() {
          return this.shadow ? "filter: url(#SVGID_" + this.shadow.id + ");" : "";
        },
        /**
         * Returns id attribute for svg output
         * @return {String}
         */
        getSvgCommons: function() {
          return [
            this.id ? 'id="' + this.id + '" ' : "",
            this.clipPath ? 'clip-path="url(#' + this.clipPath.clipPathId + ')" ' : ""
          ].join("");
        },
        /**
         * Returns transform-string for svg-export
         * @param {Boolean} use the full transform or the single object one.
         * @return {String}
         */
        getSvgTransform: function(c, f) {
          var o = c ? this.calcTransformMatrix() : this.calcOwnMatrix(), h = 'transform="' + e.util.matrixToSVG(o);
          return h + (f || "") + '" ';
        },
        _setSVGBg: function(c) {
          if (this.backgroundColor) {
            var f = e.Object.NUM_FRACTION_DIGITS;
            c.push(
              "		<rect ",
              this._getFillAttributes(this.backgroundColor),
              ' x="',
              s(-this.width / 2, f),
              '" y="',
              s(-this.height / 2, f),
              '" width="',
              s(this.width, f),
              '" height="',
              s(this.height, f),
              `"></rect>
`
            );
          }
        },
        /**
         * Returns svg representation of an instance
         * @param {Function} [reviver] Method for further parsing of svg representation.
         * @return {String} svg representation of an instance
         */
        toSVG: function(c) {
          return this._createBaseSVGMarkup(this._toSVG(c), { reviver: c });
        },
        /**
         * Returns svg clipPath representation of an instance
         * @param {Function} [reviver] Method for further parsing of svg representation.
         * @return {String} svg representation of an instance
         */
        toClipPathSVG: function(c) {
          return "	" + this._createBaseClipPathSVGMarkup(this._toSVG(c), { reviver: c });
        },
        /**
         * @private
         */
        _createBaseClipPathSVGMarkup: function(c, f) {
          f = f || {};
          var o = f.reviver, h = f.additionalTransform || "", u = [
            this.getSvgTransform(!0, h),
            this.getSvgCommons()
          ].join(""), d = c.indexOf("COMMON_PARTS");
          return c[d] = u, o ? o(c.join("")) : c.join("");
        },
        /**
         * @private
         */
        _createBaseSVGMarkup: function(c, f) {
          f = f || {};
          var o = f.noStyle, h = f.reviver, u = o ? "" : 'style="' + this.getSvgStyles() + '" ', d = f.withShadow ? 'style="' + this.getSvgFilter() + '" ' : "", m = this.clipPath, p = this.strokeUniform ? 'vector-effect="non-scaling-stroke" ' : "", v = m && m.absolutePositioned, b = this.stroke, y = this.fill, w = this.shadow, x, _ = [], S, k = c.indexOf("COMMON_PARTS"), F = f.additionalTransform;
          return m && (m.clipPathId = "CLIPPATH_" + e.Object.__uid++, S = '<clipPath id="' + m.clipPathId + `" >
` + m.toClipPathSVG(h) + `</clipPath>
`), v && _.push(
            "<g ",
            d,
            this.getSvgCommons(),
            ` >
`
          ), _.push(
            "<g ",
            this.getSvgTransform(!1),
            v ? "" : d + this.getSvgCommons(),
            ` >
`
          ), x = [
            u,
            p,
            o ? "" : this.addPaintOrder(),
            " ",
            F ? 'transform="' + F + '" ' : ""
          ].join(""), c[k] = x, y && y.toLive && _.push(y.toSVG(this)), b && b.toLive && _.push(b.toSVG(this)), w && _.push(w.toSVG(this)), m && _.push(S), _.push(c.join("")), _.push(`</g>
`), v && _.push(`</g>
`), h ? h(_.join("")) : _.join("");
        },
        addPaintOrder: function() {
          return this.paintFirst !== "fill" ? ' paint-order="' + this.paintFirst + '" ' : "";
        }
      }
    );
  }(), function() {
    var a = e.util.object.extend, s = "stateProperties";
    function c(o, h, u) {
      var d = {}, m = !0;
      u.forEach(function(p) {
        d[p] = o[p];
      }), a(o[h], d, m);
    }
    function f(o, h, u) {
      if (o === h)
        return !0;
      if (Array.isArray(o)) {
        if (!Array.isArray(h) || o.length !== h.length)
          return !1;
        for (var d = 0, m = o.length; d < m; d++)
          if (!f(o[d], h[d]))
            return !1;
        return !0;
      } else if (o && typeof o == "object") {
        var p = Object.keys(o), v;
        if (!h || typeof h != "object" || !u && p.length !== Object.keys(h).length)
          return !1;
        for (var d = 0, m = p.length; d < m; d++)
          if (v = p[d], !(v === "canvas" || v === "group") && !f(o[v], h[v]))
            return !1;
        return !0;
      }
    }
    e.util.object.extend(
      e.Object.prototype,
      /** @lends fabric.Object.prototype */
      {
        /**
         * Returns true if object state (one of its state properties) was changed
         * @param {String} [propertySet] optional name for the set of property we want to save
         * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called
         */
        hasStateChanged: function(o) {
          o = o || s;
          var h = "_" + o;
          return Object.keys(this[h]).length < this[o].length ? !0 : !f(this[h], this, !0);
        },
        /**
         * Saves state of an object
         * @param {Object} [options] Object with additional `stateProperties` array to include when saving state
         * @return {fabric.Object} thisArg
         */
        saveState: function(o) {
          var h = o && o.propertySet || s, u = "_" + h;
          return this[u] ? (c(this, u, this[h]), o && o.stateProperties && c(this, u, o.stateProperties), this) : this.setupState(o);
        },
        /**
         * Setups state of an object
         * @param {Object} [options] Object with additional `stateProperties` array to include when saving state
         * @return {fabric.Object} thisArg
         */
        setupState: function(o) {
          o = o || {};
          var h = o.propertySet || s;
          return o.propertySet = h, this["_" + h] = {}, this.saveState(o), this;
        }
      }
    );
  }(), function() {
    var a = e.util.degreesToRadians;
    e.util.object.extend(
      e.Object.prototype,
      /** @lends fabric.Object.prototype */
      {
        /**
         * Determines which corner has been clicked
         * @private
         * @param {Object} pointer The pointer indicating the mouse position
         * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found
         */
        _findTargetCorner: function(s, c) {
          if (!this.hasControls || this.group || !this.canvas || this.canvas._activeObject !== this)
            return !1;
          var f = s.x, o = s.y, h, u, d = Object.keys(this.oCoords), m = d.length - 1, p;
          for (this.__corner = 0; m >= 0; m--)
            if (p = d[m], !!this.isControlVisible(p) && (u = this._getImageLines(c ? this.oCoords[p].touchCorner : this.oCoords[p].corner), h = this._findCrossPoints({ x: f, y: o }, u), h !== 0 && h % 2 === 1))
              return this.__corner = p, p;
          return !1;
        },
        /**
         * Calls a function for each control. The function gets called,
         * with the control, the object that is calling the iterator and the control's key
         * @param {Function} fn function to iterate over the controls over
         */
        forEachControl: function(s) {
          for (var c in this.controls)
            s(this.controls[c], c, this);
        },
        /**
         * Sets the coordinates of the draggable boxes in the corners of
         * the image used to scale/rotate it.
         * note: if we would switch to ROUND corner area, all of this would disappear.
         * everything would resolve to a single point and a pythagorean theorem for the distance
         * @private
         */
        _setCornerCoords: function() {
          var s = this.oCoords;
          for (var c in s) {
            var f = this.controls[c];
            s[c].corner = f.calcCornerCoords(
              this.angle,
              this.cornerSize,
              s[c].x,
              s[c].y,
              !1
            ), s[c].touchCorner = f.calcCornerCoords(
              this.angle,
              this.touchCornerSize,
              s[c].x,
              s[c].y,
              !0
            );
          }
        },
        /**
         * Draws a colored layer behind the object, inside its selection borders.
         * Requires public options: padding, selectionBackgroundColor
         * this function is called when the context is transformed
         * has checks to be skipped when the object is on a staticCanvas
         * @param {CanvasRenderingContext2D} ctx Context to draw on
         * @return {fabric.Object} thisArg
         * @chainable
         */
        drawSelectionBackground: function(s) {
          if (!this.selectionBackgroundColor || this.canvas && !this.canvas.interactive || this.canvas && this.canvas._activeObject !== this)
            return this;
          s.save();
          var c = this.getCenterPoint(), f = this._calculateCurrentDimensions(), o = this.canvas.viewportTransform;
          return s.translate(c.x, c.y), s.scale(1 / o[0], 1 / o[3]), s.rotate(a(this.angle)), s.fillStyle = this.selectionBackgroundColor, s.fillRect(-f.x / 2, -f.y / 2, f.x, f.y), s.restore(), this;
        },
        /**
         * Draws borders of an object's bounding box.
         * Requires public properties: width, height
         * Requires public options: padding, borderColor
         * @param {CanvasRenderingContext2D} ctx Context to draw on
         * @param {Object} styleOverride object to override the object style
         * @return {fabric.Object} thisArg
         * @chainable
         */
        drawBorders: function(s, c) {
          c = c || {};
          var f = this._calculateCurrentDimensions(), o = this.borderScaleFactor, h = f.x + o, u = f.y + o, d = typeof c.hasControls < "u" ? c.hasControls : this.hasControls, m = !1;
          return s.save(), s.strokeStyle = c.borderColor || this.borderColor, this._setLineDash(s, c.borderDashArray || this.borderDashArray), s.strokeRect(
            -h / 2,
            -u / 2,
            h,
            u
          ), d && (s.beginPath(), this.forEachControl(function(p, v, b) {
            p.withConnection && p.getVisibility(b, v) && (m = !0, s.moveTo(p.x * h, p.y * u), s.lineTo(
              p.x * h + p.offsetX,
              p.y * u + p.offsetY
            ));
          }), m && s.stroke()), s.restore(), this;
        },
        /**
         * Draws borders of an object's bounding box when it is inside a group.
         * Requires public properties: width, height
         * Requires public options: padding, borderColor
         * @param {CanvasRenderingContext2D} ctx Context to draw on
         * @param {object} options object representing current object parameters
         * @param {Object} styleOverride object to override the object style
         * @return {fabric.Object} thisArg
         * @chainable
         */
        drawBordersInGroup: function(s, c, f) {
          f = f || {};
          var o = e.util.sizeAfterTransform(this.width, this.height, c), h = this.strokeWidth, u = this.strokeUniform, d = this.borderScaleFactor, m = o.x + h * (u ? this.canvas.getZoom() : c.scaleX) + d, p = o.y + h * (u ? this.canvas.getZoom() : c.scaleY) + d;
          return s.save(), this._setLineDash(s, f.borderDashArray || this.borderDashArray), s.strokeStyle = f.borderColor || this.borderColor, s.strokeRect(
            -m / 2,
            -p / 2,
            m,
            p
          ), s.restore(), this;
        },
        /**
         * Draws corners of an object's bounding box.
         * Requires public properties: width, height
         * Requires public options: cornerSize, padding
         * @param {CanvasRenderingContext2D} ctx Context to draw on
         * @param {Object} styleOverride object to override the object style
         * @return {fabric.Object} thisArg
         * @chainable
         */
        drawControls: function(s, c) {
          c = c || {}, s.save();
          var f = this.canvas.getRetinaScaling(), o, h;
          return s.setTransform(f, 0, 0, f, 0, 0), s.strokeStyle = s.fillStyle = c.cornerColor || this.cornerColor, this.transparentCorners || (s.strokeStyle = c.cornerStrokeColor || this.cornerStrokeColor), this._setLineDash(s, c.cornerDashArray || this.cornerDashArray), this.setCoords(), this.group && (o = this.group.calcTransformMatrix()), this.forEachControl(function(u, d, m) {
            h = m.oCoords[d], u.getVisibility(m, d) && (o && (h = e.util.transformPoint(h, o)), u.render(s, h.x, h.y, c, m));
          }), s.restore(), this;
        },
        /**
         * Returns true if the specified control is visible, false otherwise.
         * @param {String} controlKey The key of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.
         * @returns {Boolean} true if the specified control is visible, false otherwise
         */
        isControlVisible: function(s) {
          return this.controls[s] && this.controls[s].getVisibility(this, s);
        },
        /**
         * Sets the visibility of the specified control.
         * @param {String} controlKey The key of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.
         * @param {Boolean} visible true to set the specified control visible, false otherwise
         * @return {fabric.Object} thisArg
         * @chainable
         */
        setControlVisible: function(s, c) {
          return this._controlsVisibility || (this._controlsVisibility = {}), this._controlsVisibility[s] = c, this;
        },
        /**
         * Sets the visibility state of object controls.
         * @param {Object} [options] Options object
         * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it
         * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it
         * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it
         * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it
         * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it
         * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it
         * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it
         * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it
         * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it
         * @return {fabric.Object} thisArg
         * @chainable
         */
        setControlsVisibility: function(s) {
          s || (s = {});
          for (var c in s)
            this.setControlVisible(c, s[c]);
          return this;
        },
        /**
         * This callback function is called every time _discardActiveObject or _setActiveObject
         * try to to deselect this object. If the function returns true, the process is cancelled
         * @param {Object} [options] options sent from the upper functions
         * @param {Event} [options.e] event if the process is generated by an event
         */
        onDeselect: function() {
        },
        /**
         * This callback function is called every time _discardActiveObject or _setActiveObject
         * try to to select this object. If the function returns true, the process is cancelled
         * @param {Object} [options] options sent from the upper functions
         * @param {Event} [options.e] event if the process is generated by an event
         */
        onSelect: function() {
        }
      }
    );
  }(), e.util.object.extend(
    e.StaticCanvas.prototype,
    /** @lends fabric.StaticCanvas.prototype */
    {
      /**
       * Animation duration (in ms) for fx* methods
       * @type Number
       * @default
       */
      FX_DURATION: 500,
      /**
       * Centers object horizontally with animation.
       * @param {fabric.Object} object Object to center
       * @param {Object} [callbacks] Callbacks object with optional "onComplete" and/or "onChange" properties
       * @param {Function} [callbacks.onComplete] Invoked on completion
       * @param {Function} [callbacks.onChange] Invoked on every step of animation
       * @return {fabric.AnimationContext} context
       */
      fxCenterObjectH: function(a, s) {
        s = s || {};
        var c = function() {
        }, f = s.onComplete || c, o = s.onChange || c, h = this;
        return e.util.animate({
          target: this,
          startValue: a.left,
          endValue: this.getCenterPoint().x,
          duration: this.FX_DURATION,
          onChange: function(u) {
            a.set("left", u), h.requestRenderAll(), o();
          },
          onComplete: function() {
            a.setCoords(), f();
          }
        });
      },
      /**
       * Centers object vertically with animation.
       * @param {fabric.Object} object Object to center
       * @param {Object} [callbacks] Callbacks object with optional "onComplete" and/or "onChange" properties
       * @param {Function} [callbacks.onComplete] Invoked on completion
       * @param {Function} [callbacks.onChange] Invoked on every step of animation
       * @return {fabric.AnimationContext} context
       */
      fxCenterObjectV: function(a, s) {
        s = s || {};
        var c = function() {
        }, f = s.onComplete || c, o = s.onChange || c, h = this;
        return e.util.animate({
          target: this,
          startValue: a.top,
          endValue: this.getCenterPoint().y,
          duration: this.FX_DURATION,
          onChange: function(u) {
            a.set("top", u), h.requestRenderAll(), o();
          },
          onComplete: function() {
            a.setCoords(), f();
          }
        });
      },
      /**
       * Same as `fabric.Canvas#remove` but animated
       * @param {fabric.Object} object Object to remove
       * @param {Object} [callbacks] Callbacks object with optional "onComplete" and/or "onChange" properties
       * @param {Function} [callbacks.onComplete] Invoked on completion
       * @param {Function} [callbacks.onChange] Invoked on every step of animation
       * @return {fabric.AnimationContext} context
       */
      fxRemove: function(a, s) {
        s = s || {};
        var c = function() {
        }, f = s.onComplete || c, o = s.onChange || c, h = this;
        return e.util.animate({
          target: this,
          startValue: a.opacity,
          endValue: 0,
          duration: this.FX_DURATION,
          onChange: function(u) {
            a.set("opacity", u), h.requestRenderAll(), o();
          },
          onComplete: function() {
            h.remove(a), f();
          }
        });
      }
    }
  ), e.util.object.extend(
    e.Object.prototype,
    /** @lends fabric.Object.prototype */
    {
      /**
       * Animates object's properties
       * @param {String|Object} property Property to animate (if string) or properties to animate (if object)
       * @param {Number|Object} value Value to animate property to (if string was given first) or options object
       * @return {fabric.Object} thisArg
       * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}
       * @return {fabric.AnimationContext | fabric.AnimationContext[]} animation context (or an array if passed multiple properties)
       *
       * As object — multiple properties
       *
       * object.animate({ left: ..., top: ... });
       * object.animate({ left: ..., top: ... }, { duration: ... });
       *
       * As string — one property
       *
       * object.animate('left', ...);
       * object.animate('left', { duration: ... });
       *
       */
      animate: function() {
        if (arguments[0] && typeof arguments[0] == "object") {
          var a = [], s, c, f = [];
          for (s in arguments[0])
            a.push(s);
          for (var o = 0, h = a.length; o < h; o++)
            s = a[o], c = o !== h - 1, f.push(this._animate(s, arguments[0][s], arguments[1], c));
          return f;
        } else
          return this._animate.apply(this, arguments);
      },
      /**
       * @private
       * @param {String} property Property to animate
       * @param {String} to Value to animate to
       * @param {Object} [options] Options object
       * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked
       */
      _animate: function(a, s, c, f) {
        var o = this, h;
        s = s.toString(), c ? c = e.util.object.clone(c) : c = {}, ~a.indexOf(".") && (h = a.split("."));
        var u = o.colorProperties.indexOf(a) > -1 || h && o.colorProperties.indexOf(h[1]) > -1, d = h ? this.get(h[0])[h[1]] : this.get(a);
        "from" in c || (c.from = d), u || (~s.indexOf("=") ? s = d + parseFloat(s.replace("=", "")) : s = parseFloat(s));
        var m = {
          target: this,
          startValue: c.from,
          endValue: s,
          byValue: c.by,
          easing: c.easing,
          duration: c.duration,
          abort: c.abort && function(p, v, b) {
            return c.abort.call(o, p, v, b);
          },
          onChange: function(p, v, b) {
            h ? o[h[0]][h[1]] = p : o.set(a, p), !f && c.onChange && c.onChange(p, v, b);
          },
          onComplete: function(p, v, b) {
            f || (o.setCoords(), c.onComplete && c.onComplete(p, v, b));
          }
        };
        return u ? e.util.animateColor(m.startValue, m.endValue, m.duration, m) : e.util.animate(m);
      }
    }
  ), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.util.object.extend, f = s.util.object.clone, o = { x1: 1, x2: 1, y1: 1, y2: 1 };
    if (s.Line) {
      s.warn("fabric.Line is already defined");
      return;
    }
    s.Line = s.util.createClass(
      s.Object,
      /** @lends fabric.Line.prototype */
      {
        /**
         * Type of an object
         * @type String
         * @default
         */
        type: "line",
        /**
         * x value or first line edge
         * @type Number
         * @default
         */
        x1: 0,
        /**
         * y value or first line edge
         * @type Number
         * @default
         */
        y1: 0,
        /**
         * x value or second line edge
         * @type Number
         * @default
         */
        x2: 0,
        /**
         * y value or second line edge
         * @type Number
         * @default
         */
        y2: 0,
        cacheProperties: s.Object.prototype.cacheProperties.concat("x1", "x2", "y1", "y2"),
        /**
         * Constructor
         * @param {Array} [points] Array of points
         * @param {Object} [options] Options object
         * @return {fabric.Line} thisArg
         */
        initialize: function(u, d) {
          u || (u = [0, 0, 0, 0]), this.callSuper("initialize", d), this.set("x1", u[0]), this.set("y1", u[1]), this.set("x2", u[2]), this.set("y2", u[3]), this._setWidthHeight(d);
        },
        /**
         * @private
         * @param {Object} [options] Options
         */
        _setWidthHeight: function(u) {
          u || (u = {}), this.width = Math.abs(this.x2 - this.x1), this.height = Math.abs(this.y2 - this.y1), this.left = "left" in u ? u.left : this._getLeftToOriginX(), this.top = "top" in u ? u.top : this._getTopToOriginY();
        },
        /**
         * @private
         * @param {String} key
         * @param {*} value
         */
        _set: function(u, d) {
          return this.callSuper("_set", u, d), typeof o[u] < "u" && this._setWidthHeight(), this;
        },
        /**
         * @private
         * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.
         */
        _getLeftToOriginX: h(
          {
            // property names
            origin: "originX",
            axis1: "x1",
            axis2: "x2",
            dimension: "width"
          },
          {
            // possible values of origin
            nearest: "left",
            center: "center",
            farthest: "right"
          }
        ),
        /**
         * @private
         * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.
         */
        _getTopToOriginY: h(
          {
            // property names
            origin: "originY",
            axis1: "y1",
            axis2: "y2",
            dimension: "height"
          },
          {
            // possible values of origin
            nearest: "top",
            center: "center",
            farthest: "bottom"
          }
        ),
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _render: function(u) {
          u.beginPath();
          var d = this.calcLinePoints();
          u.moveTo(d.x1, d.y1), u.lineTo(d.x2, d.y2), u.lineWidth = this.strokeWidth;
          var m = u.strokeStyle;
          u.strokeStyle = this.stroke || u.fillStyle, this.stroke && this._renderStroke(u), u.strokeStyle = m;
        },
        /**
         * This function is an helper for svg import. it returns the center of the object in the svg
         * untransformed coordinates
         * @private
         * @return {Object} center point from element coordinates
         */
        _findCenterFromElement: function() {
          return {
            x: (this.x1 + this.x2) / 2,
            y: (this.y1 + this.y2) / 2
          };
        },
        /**
         * Returns object representation of an instance
         * @method toObject
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} object representation of an instance
         */
        toObject: function(u) {
          return c(this.callSuper("toObject", u), this.calcLinePoints());
        },
        /*
         * Calculate object dimensions from its properties
         * @private
         */
        _getNonTransformedDimensions: function() {
          var u = this.callSuper("_getNonTransformedDimensions");
          return this.strokeLineCap === "butt" && (this.width === 0 && (u.y -= this.strokeWidth), this.height === 0 && (u.x -= this.strokeWidth)), u;
        },
        /**
         * Recalculates line points given width and height
         * @private
         */
        calcLinePoints: function() {
          var u = this.x1 <= this.x2 ? -1 : 1, d = this.y1 <= this.y2 ? -1 : 1, m = u * this.width * 0.5, p = d * this.height * 0.5, v = u * this.width * -0.5, b = d * this.height * -0.5;
          return {
            x1: m,
            x2: v,
            y1: p,
            y2: b
          };
        },
        /* _TO_SVG_START_ */
        /**
         * Returns svg representation of an instance
         * @return {Array} an array of strings with the specific svg representation
         * of the instance
         */
        _toSVG: function() {
          var u = this.calcLinePoints();
          return [
            "<line ",
            "COMMON_PARTS",
            'x1="',
            u.x1,
            '" y1="',
            u.y1,
            '" x2="',
            u.x2,
            '" y2="',
            u.y2,
            `" />
`
          ];
        }
        /* _TO_SVG_END_ */
      }
    ), s.Line.ATTRIBUTE_NAMES = s.SHARED_ATTRIBUTES.concat("x1 y1 x2 y2".split(" ")), s.Line.fromElement = function(u, d, m) {
      m = m || {};
      var p = s.parseAttributes(u, s.Line.ATTRIBUTE_NAMES), v = [
        p.x1 || 0,
        p.y1 || 0,
        p.x2 || 0,
        p.y2 || 0
      ];
      d(new s.Line(v, c(p, m)));
    }, s.Line.fromObject = function(u, d) {
      function m(v) {
        delete v.points, d && d(v);
      }
      var p = f(u, !0);
      p.points = [u.x1, u.y1, u.x2, u.y2], s.Object._fromObject("Line", p, m, "points");
    };
    function h(u, d) {
      var m = u.origin, p = u.axis1, v = u.axis2, b = u.dimension, y = d.nearest, w = d.center, x = d.farthest;
      return function() {
        switch (this.get(m)) {
          case y:
            return Math.min(this.get(p), this.get(v));
          case w:
            return Math.min(this.get(p), this.get(v)) + 0.5 * this.get(b);
          case x:
            return Math.max(this.get(p), this.get(v));
        }
      };
    }
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.util.degreesToRadians;
    if (s.Circle) {
      s.warn("fabric.Circle is already defined.");
      return;
    }
    s.Circle = s.util.createClass(
      s.Object,
      /** @lends fabric.Circle.prototype */
      {
        /**
         * Type of an object
         * @type String
         * @default
         */
        type: "circle",
        /**
         * Radius of this circle
         * @type Number
         * @default
         */
        radius: 0,
        /**
         * degrees of start of the circle.
         * probably will change to degrees in next major version
         * @type Number 0 - 359
         * @default 0
         */
        startAngle: 0,
        /**
         * End angle of the circle
         * probably will change to degrees in next major version
         * @type Number 1 - 360
         * @default 360
         */
        endAngle: 360,
        cacheProperties: s.Object.prototype.cacheProperties.concat("radius", "startAngle", "endAngle"),
        /**
         * @private
         * @param {String} key
         * @param {*} value
         * @return {fabric.Circle} thisArg
         */
        _set: function(o, h) {
          return this.callSuper("_set", o, h), o === "radius" && this.setRadius(h), this;
        },
        /**
         * Returns object representation of an instance
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} object representation of an instance
         */
        toObject: function(o) {
          return this.callSuper("toObject", ["radius", "startAngle", "endAngle"].concat(o));
        },
        /* _TO_SVG_START_ */
        /**
         * Returns svg representation of an instance
         * @return {Array} an array of strings with the specific svg representation
         * of the instance
         */
        _toSVG: function() {
          var o, h = 0, u = 0, d = (this.endAngle - this.startAngle) % 360;
          if (d === 0)
            o = [
              "<circle ",
              "COMMON_PARTS",
              'cx="' + h + '" cy="' + u + '" ',
              'r="',
              this.radius,
              `" />
`
            ];
          else {
            var m = c(this.startAngle), p = c(this.endAngle), v = this.radius, b = s.util.cos(m) * v, y = s.util.sin(m) * v, w = s.util.cos(p) * v, x = s.util.sin(p) * v, _ = d > 180 ? "1" : "0";
            o = [
              '<path d="M ' + b + " " + y,
              " A " + v + " " + v,
              " 0 ",
              +_ + " 1",
              " " + w + " " + x,
              '" ',
              "COMMON_PARTS",
              ` />
`
            ];
          }
          return o;
        },
        /* _TO_SVG_END_ */
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx context to render on
         */
        _render: function(o) {
          o.beginPath(), o.arc(
            0,
            0,
            this.radius,
            c(this.startAngle),
            c(this.endAngle),
            !1
          ), this._renderPaintInOrder(o);
        },
        /**
         * Returns horizontal radius of an object (according to how an object is scaled)
         * @return {Number}
         */
        getRadiusX: function() {
          return this.get("radius") * this.get("scaleX");
        },
        /**
         * Returns vertical radius of an object (according to how an object is scaled)
         * @return {Number}
         */
        getRadiusY: function() {
          return this.get("radius") * this.get("scaleY");
        },
        /**
         * Sets radius of an object (and updates width accordingly)
         * @return {fabric.Circle} thisArg
         */
        setRadius: function(o) {
          return this.radius = o, this.set("width", o * 2).set("height", o * 2);
        }
      }
    ), s.Circle.ATTRIBUTE_NAMES = s.SHARED_ATTRIBUTES.concat("cx cy r".split(" ")), s.Circle.fromElement = function(o, h) {
      var u = s.parseAttributes(o, s.Circle.ATTRIBUTE_NAMES);
      if (!f(u))
        throw new Error("value of `r` attribute is required and can not be negative");
      u.left = (u.left || 0) - u.radius, u.top = (u.top || 0) - u.radius, h(new s.Circle(u));
    };
    function f(o) {
      return "radius" in o && o.radius >= 0;
    }
    s.Circle.fromObject = function(o, h) {
      s.Object._fromObject("Circle", o, h);
    };
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {});
    if (s.Triangle) {
      s.warn("fabric.Triangle is already defined");
      return;
    }
    s.Triangle = s.util.createClass(
      s.Object,
      /** @lends fabric.Triangle.prototype */
      {
        /**
         * Type of an object
         * @type String
         * @default
         */
        type: "triangle",
        /**
         * Width is set to 100 to compensate the old initialize code that was setting it to 100
         * @type Number
         * @default
         */
        width: 100,
        /**
         * Height is set to 100 to compensate the old initialize code that was setting it to 100
         * @type Number
         * @default
         */
        height: 100,
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _render: function(c) {
          var f = this.width / 2, o = this.height / 2;
          c.beginPath(), c.moveTo(-f, o), c.lineTo(0, -o), c.lineTo(f, o), c.closePath(), this._renderPaintInOrder(c);
        },
        /* _TO_SVG_START_ */
        /**
         * Returns svg representation of an instance
         * @return {Array} an array of strings with the specific svg representation
         * of the instance
         */
        _toSVG: function() {
          var c = this.width / 2, f = this.height / 2, o = [
            -c + " " + f,
            "0 " + -f,
            c + " " + f
          ].join(",");
          return [
            "<polygon ",
            "COMMON_PARTS",
            'points="',
            o,
            '" />'
          ];
        }
        /* _TO_SVG_END_ */
      }
    ), s.Triangle.fromObject = function(c, f) {
      return s.Object._fromObject("Triangle", c, f);
    };
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = Math.PI * 2;
    if (s.Ellipse) {
      s.warn("fabric.Ellipse is already defined.");
      return;
    }
    s.Ellipse = s.util.createClass(
      s.Object,
      /** @lends fabric.Ellipse.prototype */
      {
        /**
         * Type of an object
         * @type String
         * @default
         */
        type: "ellipse",
        /**
         * Horizontal radius
         * @type Number
         * @default
         */
        rx: 0,
        /**
         * Vertical radius
         * @type Number
         * @default
         */
        ry: 0,
        cacheProperties: s.Object.prototype.cacheProperties.concat("rx", "ry"),
        /**
         * Constructor
         * @param {Object} [options] Options object
         * @return {fabric.Ellipse} thisArg
         */
        initialize: function(f) {
          this.callSuper("initialize", f), this.set("rx", f && f.rx || 0), this.set("ry", f && f.ry || 0);
        },
        /**
         * @private
         * @param {String} key
         * @param {*} value
         * @return {fabric.Ellipse} thisArg
         */
        _set: function(f, o) {
          switch (this.callSuper("_set", f, o), f) {
            case "rx":
              this.rx = o, this.set("width", o * 2);
              break;
            case "ry":
              this.ry = o, this.set("height", o * 2);
              break;
          }
          return this;
        },
        /**
         * Returns horizontal radius of an object (according to how an object is scaled)
         * @return {Number}
         */
        getRx: function() {
          return this.get("rx") * this.get("scaleX");
        },
        /**
         * Returns Vertical radius of an object (according to how an object is scaled)
         * @return {Number}
         */
        getRy: function() {
          return this.get("ry") * this.get("scaleY");
        },
        /**
         * Returns object representation of an instance
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} object representation of an instance
         */
        toObject: function(f) {
          return this.callSuper("toObject", ["rx", "ry"].concat(f));
        },
        /* _TO_SVG_START_ */
        /**
         * Returns svg representation of an instance
         * @return {Array} an array of strings with the specific svg representation
         * of the instance
         */
        _toSVG: function() {
          return [
            "<ellipse ",
            "COMMON_PARTS",
            'cx="0" cy="0" ',
            'rx="',
            this.rx,
            '" ry="',
            this.ry,
            `" />
`
          ];
        },
        /* _TO_SVG_END_ */
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx context to render on
         */
        _render: function(f) {
          f.beginPath(), f.save(), f.transform(1, 0, 0, this.ry / this.rx, 0, 0), f.arc(
            0,
            0,
            this.rx,
            0,
            c,
            !1
          ), f.restore(), this._renderPaintInOrder(f);
        }
      }
    ), s.Ellipse.ATTRIBUTE_NAMES = s.SHARED_ATTRIBUTES.concat("cx cy rx ry".split(" ")), s.Ellipse.fromElement = function(f, o) {
      var h = s.parseAttributes(f, s.Ellipse.ATTRIBUTE_NAMES);
      h.left = (h.left || 0) - h.rx, h.top = (h.top || 0) - h.ry, o(new s.Ellipse(h));
    }, s.Ellipse.fromObject = function(f, o) {
      s.Object._fromObject("Ellipse", f, o);
    };
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.util.object.extend;
    if (s.Rect) {
      s.warn("fabric.Rect is already defined");
      return;
    }
    s.Rect = s.util.createClass(
      s.Object,
      /** @lends fabric.Rect.prototype */
      {
        /**
         * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})
         * as well as for history (undo/redo) purposes
         * @type Array
         */
        stateProperties: s.Object.prototype.stateProperties.concat("rx", "ry"),
        /**
         * Type of an object
         * @type String
         * @default
         */
        type: "rect",
        /**
         * Horizontal border radius
         * @type Number
         * @default
         */
        rx: 0,
        /**
         * Vertical border radius
         * @type Number
         * @default
         */
        ry: 0,
        cacheProperties: s.Object.prototype.cacheProperties.concat("rx", "ry"),
        /**
         * Constructor
         * @param {Object} [options] Options object
         * @return {Object} thisArg
         */
        initialize: function(f) {
          this.callSuper("initialize", f), this._initRxRy();
        },
        /**
         * Initializes rx/ry attributes
         * @private
         */
        _initRxRy: function() {
          this.rx && !this.ry ? this.ry = this.rx : this.ry && !this.rx && (this.rx = this.ry);
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _render: function(f) {
          var o = this.rx ? Math.min(this.rx, this.width / 2) : 0, h = this.ry ? Math.min(this.ry, this.height / 2) : 0, u = this.width, d = this.height, m = -this.width / 2, p = -this.height / 2, v = o !== 0 || h !== 0, b = 1 - 0.5522847498;
          f.beginPath(), f.moveTo(m + o, p), f.lineTo(m + u - o, p), v && f.bezierCurveTo(m + u - b * o, p, m + u, p + b * h, m + u, p + h), f.lineTo(m + u, p + d - h), v && f.bezierCurveTo(m + u, p + d - b * h, m + u - b * o, p + d, m + u - o, p + d), f.lineTo(m + o, p + d), v && f.bezierCurveTo(m + b * o, p + d, m, p + d - b * h, m, p + d - h), f.lineTo(m, p + h), v && f.bezierCurveTo(m, p + b * h, m + b * o, p, m + o, p), f.closePath(), this._renderPaintInOrder(f);
        },
        /**
         * Returns object representation of an instance
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} object representation of an instance
         */
        toObject: function(f) {
          return this.callSuper("toObject", ["rx", "ry"].concat(f));
        },
        /* _TO_SVG_START_ */
        /**
         * Returns svg representation of an instance
         * @return {Array} an array of strings with the specific svg representation
         * of the instance
         */
        _toSVG: function() {
          var f = -this.width / 2, o = -this.height / 2;
          return [
            "<rect ",
            "COMMON_PARTS",
            'x="',
            f,
            '" y="',
            o,
            '" rx="',
            this.rx,
            '" ry="',
            this.ry,
            '" width="',
            this.width,
            '" height="',
            this.height,
            `" />
`
          ];
        }
        /* _TO_SVG_END_ */
      }
    ), s.Rect.ATTRIBUTE_NAMES = s.SHARED_ATTRIBUTES.concat("x y rx ry width height".split(" ")), s.Rect.fromElement = function(f, o, h) {
      if (!f)
        return o(null);
      h = h || {};
      var u = s.parseAttributes(f, s.Rect.ATTRIBUTE_NAMES);
      u.left = u.left || 0, u.top = u.top || 0, u.height = u.height || 0, u.width = u.width || 0;
      var d = new s.Rect(c(h ? s.util.object.clone(h) : {}, u));
      d.visible = d.visible && d.width > 0 && d.height > 0, o(d);
    }, s.Rect.fromObject = function(f, o) {
      return s.Object._fromObject("Rect", f, o);
    };
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.util.object.extend, f = s.util.array.min, o = s.util.array.max, h = s.util.toFixed, u = s.util.projectStrokeOnPoints;
    if (s.Polyline) {
      s.warn("fabric.Polyline is already defined");
      return;
    }
    s.Polyline = s.util.createClass(
      s.Object,
      /** @lends fabric.Polyline.prototype */
      {
        /**
         * Type of an object
         * @type String
         * @default
         */
        type: "polyline",
        /**
         * Points array
         * @type Array
         * @default
         */
        points: null,
        /**
         * WARNING: Feature in progress
         * Calculate the exact bounding box taking in account strokeWidth on acute angles
         * this will be turned to true by default on fabric 6.0
         * maybe will be left in as an optimization since calculations may be slow
         * @deprecated
         * @type Boolean
         * @default false
         */
        exactBoundingBox: !1,
        cacheProperties: s.Object.prototype.cacheProperties.concat("points"),
        /**
         * Constructor
         * @param {Array} points Array of points (where each point is an object with x and y)
         * @param {Object} [options] Options object
         * @return {fabric.Polyline} thisArg
         * @example
         * var poly = new fabric.Polyline([
         *     { x: 10, y: 10 },
         *     { x: 50, y: 30 },
         *     { x: 40, y: 70 },
         *     { x: 60, y: 50 },
         *     { x: 100, y: 150 },
         *     { x: 40, y: 100 }
         *   ], {
         *   stroke: 'red',
         *   left: 100,
         *   top: 100
         * });
         */
        initialize: function(d, m) {
          m = m || {}, this.points = d || [], this.callSuper("initialize", m), this._setPositionDimensions(m);
        },
        /**
         * @private
         */
        _projectStrokeOnPoints: function() {
          return u(this.points, this, !0);
        },
        _setPositionDimensions: function(d) {
          var m = this._calcDimensions(d), p, v = this.exactBoundingBox ? this.strokeWidth : 0;
          this.width = m.width - v, this.height = m.height - v, d.fromSVG || (p = this.translateToGivenOrigin(
            {
              // this looks bad, but is one way to keep it optional for now.
              x: m.left - this.strokeWidth / 2 + v / 2,
              y: m.top - this.strokeWidth / 2 + v / 2
            },
            "left",
            "top",
            this.originX,
            this.originY
          )), typeof d.left > "u" && (this.left = d.fromSVG ? m.left : p.x), typeof d.top > "u" && (this.top = d.fromSVG ? m.top : p.y), this.pathOffset = {
            x: m.left + this.width / 2 + v / 2,
            y: m.top + this.height / 2 + v / 2
          };
        },
        /**
         * Calculate the polygon min and max point from points array,
         * returning an object with left, top, width, height to measure the
         * polygon size
         * @return {Object} object.left X coordinate of the polygon leftmost point
         * @return {Object} object.top Y coordinate of the polygon topmost point
         * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point
         * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point
         * @private
         */
        _calcDimensions: function() {
          var d = this.exactBoundingBox ? this._projectStrokeOnPoints() : this.points, m = f(d, "x") || 0, p = f(d, "y") || 0, v = o(d, "x") || 0, b = o(d, "y") || 0, y = v - m, w = b - p;
          return {
            left: m,
            top: p,
            width: y,
            height: w
          };
        },
        /**
         * Returns object representation of an instance
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} Object representation of an instance
         */
        toObject: function(d) {
          return c(this.callSuper("toObject", d), {
            points: this.points.concat()
          });
        },
        /* _TO_SVG_START_ */
        /**
         * Returns svg representation of an instance
         * @return {Array} an array of strings with the specific svg representation
         * of the instance
         */
        _toSVG: function() {
          for (var d = [], m = this.pathOffset.x, p = this.pathOffset.y, v = s.Object.NUM_FRACTION_DIGITS, b = 0, y = this.points.length; b < y; b++)
            d.push(
              h(this.points[b].x - m, v),
              ",",
              h(this.points[b].y - p, v),
              " "
            );
          return [
            "<" + this.type + " ",
            "COMMON_PARTS",
            'points="',
            d.join(""),
            `" />
`
          ];
        },
        /* _TO_SVG_END_ */
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        commonRender: function(d) {
          var m, p = this.points.length, v = this.pathOffset.x, b = this.pathOffset.y;
          if (!p || isNaN(this.points[p - 1].y))
            return !1;
          d.beginPath(), d.moveTo(this.points[0].x - v, this.points[0].y - b);
          for (var y = 0; y < p; y++)
            m = this.points[y], d.lineTo(m.x - v, m.y - b);
          return !0;
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _render: function(d) {
          this.commonRender(d) && this._renderPaintInOrder(d);
        },
        /**
         * Returns complexity of an instance
         * @return {Number} complexity of this instance
         */
        complexity: function() {
          return this.get("points").length;
        }
      }
    ), s.Polyline.ATTRIBUTE_NAMES = s.SHARED_ATTRIBUTES.concat(), s.Polyline.fromElementGenerator = function(d) {
      return function(m, p, v) {
        if (!m)
          return p(null);
        v || (v = {});
        var b = s.parsePointsAttribute(m.getAttribute("points")), y = s.parseAttributes(m, s[d].ATTRIBUTE_NAMES);
        y.fromSVG = !0, p(new s[d](b, c(y, v)));
      };
    }, s.Polyline.fromElement = s.Polyline.fromElementGenerator("Polyline"), s.Polyline.fromObject = function(d, m) {
      return s.Object._fromObject("Polyline", d, m, "points");
    };
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.util.projectStrokeOnPoints;
    if (s.Polygon) {
      s.warn("fabric.Polygon is already defined");
      return;
    }
    s.Polygon = s.util.createClass(
      s.Polyline,
      /** @lends fabric.Polygon.prototype */
      {
        /**
         * Type of an object
         * @type String
         * @default
         */
        type: "polygon",
        /**
         * @private
         */
        _projectStrokeOnPoints: function() {
          return c(this.points, this);
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _render: function(f) {
          this.commonRender(f) && (f.closePath(), this._renderPaintInOrder(f));
        }
      }
    ), s.Polygon.ATTRIBUTE_NAMES = s.SHARED_ATTRIBUTES.concat(), s.Polygon.fromElement = s.Polyline.fromElementGenerator("Polygon"), s.Polygon.fromObject = function(f, o) {
      s.Object._fromObject("Polygon", f, o, "points");
    };
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.util.array.min, f = s.util.array.max, o = s.util.object.extend, h = s.util.object.clone, u = s.util.toFixed;
    if (s.Path) {
      s.warn("fabric.Path is already defined");
      return;
    }
    s.Path = s.util.createClass(
      s.Object,
      /** @lends fabric.Path.prototype */
      {
        /**
         * Type of an object
         * @type String
         * @default
         */
        type: "path",
        /**
         * Array of path points
         * @type Array
         * @default
         */
        path: null,
        cacheProperties: s.Object.prototype.cacheProperties.concat("path", "fillRule"),
        stateProperties: s.Object.prototype.stateProperties.concat("path"),
        /**
         * Constructor
         * @param {Array|String} path Path data (sequence of coordinates and corresponding "command" tokens)
         * @param {Object} [options] Options object
         * @return {fabric.Path} thisArg
         */
        initialize: function(d, m) {
          m = h(m || {}), delete m.path, this.callSuper("initialize", m), this._setPath(d || [], m);
        },
        /**
        * @private
        * @param {Array|String} path Path data (sequence of coordinates and corresponding "command" tokens)
        * @param {Object} [options] Options object
        */
        _setPath: function(d, m) {
          this.path = s.util.makePathSimpler(
            Array.isArray(d) ? d : s.util.parsePath(d)
          ), s.Polyline.prototype._setPositionDimensions.call(this, m || {});
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx context to render path on
         */
        _renderPathCommands: function(d) {
          var m, p = 0, v = 0, b = 0, y = 0, w = 0, x = 0, _ = -this.pathOffset.x, S = -this.pathOffset.y;
          d.beginPath();
          for (var k = 0, F = this.path.length; k < F; ++k)
            switch (m = this.path[k], m[0]) {
              case "L":
                b = m[1], y = m[2], d.lineTo(b + _, y + S);
                break;
              case "M":
                b = m[1], y = m[2], p = b, v = y, d.moveTo(b + _, y + S);
                break;
              case "C":
                b = m[5], y = m[6], w = m[3], x = m[4], d.bezierCurveTo(
                  m[1] + _,
                  m[2] + S,
                  w + _,
                  x + S,
                  b + _,
                  y + S
                );
                break;
              case "Q":
                d.quadraticCurveTo(
                  m[1] + _,
                  m[2] + S,
                  m[3] + _,
                  m[4] + S
                ), b = m[3], y = m[4], w = m[1], x = m[2];
                break;
              case "z":
              case "Z":
                b = p, y = v, d.closePath();
                break;
            }
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx context to render path on
         */
        _render: function(d) {
          this._renderPathCommands(d), this._renderPaintInOrder(d);
        },
        /**
         * Returns string representation of an instance
         * @return {String} string representation of an instance
         */
        toString: function() {
          return "#<fabric.Path (" + this.complexity() + '): { "top": ' + this.top + ', "left": ' + this.left + " }>";
        },
        /**
         * Returns object representation of an instance
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} object representation of an instance
         */
        toObject: function(d) {
          return o(this.callSuper("toObject", d), {
            path: this.path.map(function(m) {
              return m.slice();
            })
          });
        },
        /**
         * Returns dataless object representation of an instance
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} object representation of an instance
         */
        toDatalessObject: function(d) {
          var m = this.toObject(["sourcePath"].concat(d));
          return m.sourcePath && delete m.path, m;
        },
        /* _TO_SVG_START_ */
        /**
         * Returns svg representation of an instance
         * @return {Array} an array of strings with the specific svg representation
         * of the instance
         */
        _toSVG: function() {
          var d = s.util.joinPath(this.path);
          return [
            "<path ",
            "COMMON_PARTS",
            'd="',
            d,
            '" stroke-linecap="round" ',
            `/>
`
          ];
        },
        _getOffsetTransform: function() {
          var d = s.Object.NUM_FRACTION_DIGITS;
          return " translate(" + u(-this.pathOffset.x, d) + ", " + u(-this.pathOffset.y, d) + ")";
        },
        /**
         * Returns svg clipPath representation of an instance
         * @param {Function} [reviver] Method for further parsing of svg representation.
         * @return {String} svg representation of an instance
         */
        toClipPathSVG: function(d) {
          var m = this._getOffsetTransform();
          return "	" + this._createBaseClipPathSVGMarkup(
            this._toSVG(),
            { reviver: d, additionalTransform: m }
          );
        },
        /**
         * Returns svg representation of an instance
         * @param {Function} [reviver] Method for further parsing of svg representation.
         * @return {String} svg representation of an instance
         */
        toSVG: function(d) {
          var m = this._getOffsetTransform();
          return this._createBaseSVGMarkup(this._toSVG(), { reviver: d, additionalTransform: m });
        },
        /* _TO_SVG_END_ */
        /**
         * Returns number representation of an instance complexity
         * @return {Number} complexity of this instance
         */
        complexity: function() {
          return this.path.length;
        },
        /**
         * @private
         */
        _calcDimensions: function() {
          for (var d = [], m = [], p, v = 0, b = 0, y = 0, w = 0, x, _ = 0, S = this.path.length; _ < S; ++_) {
            switch (p = this.path[_], p[0]) {
              case "L":
                y = p[1], w = p[2], x = [];
                break;
              case "M":
                y = p[1], w = p[2], v = y, b = w, x = [];
                break;
              case "C":
                x = s.util.getBoundsOfCurve(
                  y,
                  w,
                  p[1],
                  p[2],
                  p[3],
                  p[4],
                  p[5],
                  p[6]
                ), y = p[5], w = p[6];
                break;
              case "Q":
                x = s.util.getBoundsOfCurve(
                  y,
                  w,
                  p[1],
                  p[2],
                  p[1],
                  p[2],
                  p[3],
                  p[4]
                ), y = p[3], w = p[4];
                break;
              case "z":
              case "Z":
                y = v, w = b;
                break;
            }
            x.forEach(function(U) {
              d.push(U.x), m.push(U.y);
            }), d.push(y), m.push(w);
          }
          var k = c(d) || 0, F = c(m) || 0, L = f(d) || 0, j = f(m) || 0, G = L - k, te = j - F;
          return {
            left: k,
            top: F,
            width: G,
            height: te
          };
        }
      }
    ), s.Path.fromObject = function(d, m) {
      if (typeof d.sourcePath == "string") {
        var p = d.sourcePath;
        s.loadSVGFromURL(p, function(v) {
          var b = v[0];
          b.setOptions(d), d.clipPath ? s.util.enlivenObjects([d.clipPath], function(y) {
            b.clipPath = y[0], m && m(b);
          }) : m && m(b);
        });
      } else
        s.Object._fromObject("Path", d, m, "path");
    }, s.Path.ATTRIBUTE_NAMES = s.SHARED_ATTRIBUTES.concat(["d"]), s.Path.fromElement = function(d, m, p) {
      var v = s.parseAttributes(d, s.Path.ATTRIBUTE_NAMES);
      v.fromSVG = !0, m(new s.Path(v.d, o(v, p)));
    };
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.util.array.min, f = s.util.array.max;
    s.Group || (s.Group = s.util.createClass(
      s.Object,
      s.Collection,
      /** @lends fabric.Group.prototype */
      {
        /**
         * Type of an object
         * @type String
         * @default
         */
        type: "group",
        /**
         * Width of stroke
         * @type Number
         * @default
         */
        strokeWidth: 0,
        /**
         * Indicates if click, mouseover, mouseout events & hoverCursor should also check for subtargets
         * @type Boolean
         * @default
         */
        subTargetCheck: !1,
        /**
         * Groups are container, do not render anything on theyr own, ence no cache properties
         * @type Array
         * @default
         */
        cacheProperties: [],
        /**
         * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still
         * available setting this boolean to true.
         * @type Boolean
         * @since 2.0.0
         * @default
         */
        useSetOnGroup: !1,
        /**
         * Constructor
         * @param {Object} objects Group objects
         * @param {Object} [options] Options object
         * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.
         * @return {Object} thisArg
         */
        initialize: function(o, h, u) {
          h = h || {}, this._objects = [], u && this.callSuper("initialize", h), this._objects = o || [];
          for (var d = this._objects.length; d--; )
            this._objects[d].group = this;
          if (u)
            this._updateObjectsACoords();
          else {
            var m = h && h.centerPoint;
            h.originX !== void 0 && (this.originX = h.originX), h.originY !== void 0 && (this.originY = h.originY), m || this._calcBounds(), this._updateObjectsCoords(m), delete h.centerPoint, this.callSuper("initialize", h);
          }
          this.setCoords();
        },
        /**
         * @private
         */
        _updateObjectsACoords: function() {
          for (var o = !0, h = this._objects.length; h--; )
            this._objects[h].setCoords(o);
        },
        /**
         * @private
         * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change
         */
        _updateObjectsCoords: function(h) {
          for (var h = h || this.getCenterPoint(), u = this._objects.length; u--; )
            this._updateObjectCoords(this._objects[u], h);
        },
        /**
         * @private
         * @param {Object} object
         * @param {fabric.Point} center, current center of group.
         */
        _updateObjectCoords: function(o, h) {
          var u = o.left, d = o.top, m = !0;
          o.set({
            left: u - h.x,
            top: d - h.y
          }), o.group = this, o.setCoords(m);
        },
        /**
         * Returns string represenation of a group
         * @return {String}
         */
        toString: function() {
          return "#<fabric.Group: (" + this.complexity() + ")>";
        },
        /**
         * Adds an object to a group; Then recalculates group's dimension, position.
         * @param {Object} object
         * @return {fabric.Group} thisArg
         * @chainable
         */
        addWithUpdate: function(o) {
          var h = !!this.group;
          return this._restoreObjectsState(), s.util.resetObjectTransform(this), o && (h && s.util.removeTransformFromObject(o, this.group.calcTransformMatrix()), this._objects.push(o), o.group = this, o._set("canvas", this.canvas)), this._calcBounds(), this._updateObjectsCoords(), this.dirty = !0, h ? this.group.addWithUpdate() : this.setCoords(), this;
        },
        /**
         * Removes an object from a group; Then recalculates group's dimension, position.
         * @param {Object} object
         * @return {fabric.Group} thisArg
         * @chainable
         */
        removeWithUpdate: function(o) {
          return this._restoreObjectsState(), s.util.resetObjectTransform(this), this.remove(o), this._calcBounds(), this._updateObjectsCoords(), this.setCoords(), this.dirty = !0, this;
        },
        /**
         * @private
         */
        _onObjectAdded: function(o) {
          this.dirty = !0, o.group = this, o._set("canvas", this.canvas);
        },
        /**
         * @private
         */
        _onObjectRemoved: function(o) {
          this.dirty = !0, delete o.group;
        },
        /**
         * @private
         */
        _set: function(o, h) {
          var u = this._objects.length;
          if (this.useSetOnGroup)
            for (; u--; )
              this._objects[u].setOnGroup(o, h);
          if (o === "canvas")
            for (; u--; )
              this._objects[u]._set(o, h);
          s.Object.prototype._set.call(this, o, h);
        },
        /**
         * Returns object representation of an instance
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} object representation of an instance
         */
        toObject: function(o) {
          var h = this.includeDefaultValues, u = this._objects.filter(function(m) {
            return !m.excludeFromExport;
          }).map(function(m) {
            var p = m.includeDefaultValues;
            m.includeDefaultValues = h;
            var v = m.toObject(o);
            return m.includeDefaultValues = p, v;
          }), d = s.Object.prototype.toObject.call(this, o);
          return d.objects = u, d;
        },
        /**
         * Returns object representation of an instance, in dataless mode.
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} object representation of an instance
         */
        toDatalessObject: function(o) {
          var h, u = this.sourcePath;
          if (u)
            h = u;
          else {
            var d = this.includeDefaultValues;
            h = this._objects.map(function(p) {
              var v = p.includeDefaultValues;
              p.includeDefaultValues = d;
              var b = p.toDatalessObject(o);
              return p.includeDefaultValues = v, b;
            });
          }
          var m = s.Object.prototype.toDatalessObject.call(this, o);
          return m.objects = h, m;
        },
        /**
         * Renders instance on a given context
         * @param {CanvasRenderingContext2D} ctx context to render instance on
         */
        render: function(o) {
          this._transformDone = !0, this.callSuper("render", o), this._transformDone = !1;
        },
        /**
         * Decide if the object should cache or not. Create its own cache level
         * needsItsOwnCache should be used when the object drawing method requires
         * a cache step. None of the fabric classes requires it.
         * Generally you do not cache objects in groups because the group is already cached.
         * @return {Boolean}
         */
        shouldCache: function() {
          var o = s.Object.prototype.shouldCache.call(this);
          if (o) {
            for (var h = 0, u = this._objects.length; h < u; h++)
              if (this._objects[h].willDrawShadow())
                return this.ownCaching = !1, !1;
          }
          return o;
        },
        /**
         * Check if this object or a child object will cast a shadow
         * @return {Boolean}
         */
        willDrawShadow: function() {
          if (s.Object.prototype.willDrawShadow.call(this))
            return !0;
          for (var o = 0, h = this._objects.length; o < h; o++)
            if (this._objects[o].willDrawShadow())
              return !0;
          return !1;
        },
        /**
         * Check if this group or its parent group are caching, recursively up
         * @return {Boolean}
         */
        isOnACache: function() {
          return this.ownCaching || this.group && this.group.isOnACache();
        },
        /**
         * Execute the drawing operation for an object on a specified context
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        drawObject: function(o) {
          for (var h = 0, u = this._objects.length; h < u; h++)
            this._objects[h].render(o);
          this._drawClipPath(o, this.clipPath);
        },
        /**
         * Check if cache is dirty
         */
        isCacheDirty: function(o) {
          if (this.callSuper("isCacheDirty", o))
            return !0;
          if (!this.statefullCache)
            return !1;
          for (var h = 0, u = this._objects.length; h < u; h++)
            if (this._objects[h].isCacheDirty(!0)) {
              if (this._cacheCanvas) {
                var d = this.cacheWidth / this.zoomX, m = this.cacheHeight / this.zoomY;
                this._cacheContext.clearRect(-d / 2, -m / 2, d, m);
              }
              return !0;
            }
          return !1;
        },
        /**
         * Restores original state of each of group objects (original state is that which was before group was created).
         * if the nested boolean is true, the original state will be restored just for the
         * first group and not for all the group chain
         * @private
         * @param {Boolean} nested tell the function to restore object state up to the parent group and not more
         * @return {fabric.Group} thisArg
         * @chainable
         */
        _restoreObjectsState: function() {
          var o = this.calcOwnMatrix();
          return this._objects.forEach(function(h) {
            s.util.addTransformToObject(h, o), delete h.group, h.setCoords();
          }), this;
        },
        /**
         * Destroys a group (restoring state of its objects)
         * @return {fabric.Group} thisArg
         * @chainable
         */
        destroy: function() {
          return this._objects.forEach(function(o) {
            o.set("dirty", !0);
          }), this._restoreObjectsState();
        },
        dispose: function() {
          this.callSuper("dispose"), this.forEachObject(function(o) {
            o.dispose && o.dispose();
          }), this._objects = [];
        },
        /**
         * make a group an active selection, remove the group from canvas
         * the group has to be on canvas for this to work.
         * @return {fabric.ActiveSelection} thisArg
         * @chainable
         */
        toActiveSelection: function() {
          if (this.canvas) {
            var o = this._objects, h = this.canvas;
            this._objects = [];
            var u = this.toObject();
            delete u.objects;
            var d = new s.ActiveSelection([]);
            return d.set(u), d.type = "activeSelection", h.remove(this), o.forEach(function(m) {
              m.group = d, m.dirty = !0, h.add(m);
            }), d.canvas = h, d._objects = o, h._activeObject = d, d.setCoords(), d;
          }
        },
        /**
         * Destroys a group (restoring state of its objects)
         * @return {fabric.Group} thisArg
         * @chainable
         */
        ungroupOnCanvas: function() {
          return this._restoreObjectsState();
        },
        /**
         * Sets coordinates of all objects inside group
         * @return {fabric.Group} thisArg
         * @chainable
         */
        setObjectsCoords: function() {
          var o = !0;
          return this.forEachObject(function(h) {
            h.setCoords(o);
          }), this;
        },
        /**
         * @private
         */
        _calcBounds: function(o) {
          for (var h = [], u = [], d, m, p, v = ["tr", "br", "bl", "tl"], b = 0, y = this._objects.length, w, x = v.length; b < y; ++b) {
            for (d = this._objects[b], p = d.calcACoords(), w = 0; w < x; w++)
              m = v[w], h.push(p[m].x), u.push(p[m].y);
            d.aCoords = p;
          }
          this._getBounds(h, u, o);
        },
        /**
         * @private
         */
        _getBounds: function(o, h, u) {
          var d = new s.Point(c(o), c(h)), m = new s.Point(f(o), f(h)), p = d.y || 0, v = d.x || 0, b = m.x - d.x || 0, y = m.y - d.y || 0;
          this.width = b, this.height = y, u || this.setPositionByOrigin({ x: v, y: p }, "left", "top");
        },
        /* _TO_SVG_START_ */
        /**
         * Returns svg representation of an instance
         * @param {Function} [reviver] Method for further parsing of svg representation.
         * @return {String} svg representation of an instance
         */
        _toSVG: function(o) {
          for (var h = ["<g ", "COMMON_PARTS", ` >
`], u = 0, d = this._objects.length; u < d; u++)
            h.push("		", this._objects[u].toSVG(o));
          return h.push(`</g>
`), h;
        },
        /**
         * Returns styles-string for svg-export, specific version for group
         * @return {String}
         */
        getSvgStyles: function() {
          var o = typeof this.opacity < "u" && this.opacity !== 1 ? "opacity: " + this.opacity + ";" : "", h = this.visible ? "" : " visibility: hidden;";
          return [
            o,
            this.getSvgFilter(),
            h
          ].join("");
        },
        /**
         * Returns svg clipPath representation of an instance
         * @param {Function} [reviver] Method for further parsing of svg representation.
         * @return {String} svg representation of an instance
         */
        toClipPathSVG: function(o) {
          for (var h = [], u = 0, d = this._objects.length; u < d; u++)
            h.push("	", this._objects[u].toClipPathSVG(o));
          return this._createBaseClipPathSVGMarkup(h, { reviver: o });
        }
        /* _TO_SVG_END_ */
      }
    ), s.Group.fromObject = function(o, h) {
      var u = o.objects, d = s.util.object.clone(o, !0);
      if (delete d.objects, typeof u == "string") {
        s.loadSVGFromURL(u, function(m) {
          var p = s.util.groupSVGElements(m, o, u), v = d.clipPath;
          delete d.clipPath, p.set(d), v ? s.util.enlivenObjects([v], function(b) {
            p.clipPath = b[0], h && h(p);
          }) : h && h(p);
        });
        return;
      }
      s.util.enlivenObjects(u, function(m) {
        s.util.enlivenObjectEnlivables(o, d, function() {
          h && h(new s.Group(m, d, !0));
        });
      });
    });
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {});
    s.ActiveSelection || (s.ActiveSelection = s.util.createClass(
      s.Group,
      /** @lends fabric.ActiveSelection.prototype */
      {
        /**
         * Type of an object
         * @type String
         * @default
         */
        type: "activeSelection",
        /**
         * Constructor
         * @param {Object} objects ActiveSelection objects
         * @param {Object} [options] Options object
         * @return {Object} thisArg
         */
        initialize: function(c, f) {
          f = f || {}, this._objects = c || [];
          for (var o = this._objects.length; o--; )
            this._objects[o].group = this;
          f.originX && (this.originX = f.originX), f.originY && (this.originY = f.originY), this._calcBounds(), this._updateObjectsCoords(), s.Object.prototype.initialize.call(this, f), this.setCoords();
        },
        /**
         * Change te activeSelection to a normal group,
         * High level function that automatically adds it to canvas as
         * active object. no events fired.
         * @since 2.0.0
         * @return {fabric.Group}
         */
        toGroup: function() {
          var c = this._objects.concat();
          this._objects = [];
          var f = s.Object.prototype.toObject.call(this), o = new s.Group([]);
          if (delete f.type, o.set(f), c.forEach(function(u) {
            u.canvas.remove(u), u.group = o;
          }), o._objects = c, !this.canvas)
            return o;
          var h = this.canvas;
          return h.add(o), h._activeObject = o, o.setCoords(), o;
        },
        /**
         * If returns true, deselection is cancelled.
         * @since 2.0.0
         * @return {Boolean} [cancel]
         */
        onDeselect: function() {
          return this.destroy(), !1;
        },
        /**
         * Returns string representation of a group
         * @return {String}
         */
        toString: function() {
          return "#<fabric.ActiveSelection: (" + this.complexity() + ")>";
        },
        /**
         * Decide if the object should cache or not. Create its own cache level
         * objectCaching is a global flag, wins over everything
         * needsItsOwnCache should be used when the object drawing method requires
         * a cache step. None of the fabric classes requires it.
         * Generally you do not cache objects in groups because the group outside is cached.
         * @return {Boolean}
         */
        shouldCache: function() {
          return !1;
        },
        /**
         * Check if this group or its parent group are caching, recursively up
         * @return {Boolean}
         */
        isOnACache: function() {
          return !1;
        },
        /**
         * Renders controls and borders for the object
         * @param {CanvasRenderingContext2D} ctx Context to render on
         * @param {Object} [styleOverride] properties to override the object style
         * @param {Object} [childrenOverride] properties to override the children overrides
         */
        _renderControls: function(c, f, o) {
          c.save(), c.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1, this.callSuper("_renderControls", c, f), o = o || {}, typeof o.hasControls > "u" && (o.hasControls = !1), o.forActiveSelection = !0;
          for (var h = 0, u = this._objects.length; h < u; h++)
            this._objects[h]._renderControls(c, o);
          c.restore();
        }
      }
    ), s.ActiveSelection.fromObject = function(c, f) {
      s.util.enlivenObjects(c.objects, function(o) {
        delete c.objects, f && f(new s.ActiveSelection(o, c, !0));
      });
    });
  }(t), function(a) {
    var s = e.util.object.extend;
    if (a.fabric || (a.fabric = {}), a.fabric.Image) {
      e.warn("fabric.Image is already defined.");
      return;
    }
    e.Image = e.util.createClass(
      e.Object,
      /** @lends fabric.Image.prototype */
      {
        /**
         * Type of an object
         * @type String
         * @default
         */
        type: "image",
        /**
         * Width of a stroke.
         * For image quality a stroke multiple of 2 gives better results.
         * @type Number
         * @default
         */
        strokeWidth: 0,
        /**
         * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.
         * This allows for relative urls as image src.
         * @since 2.7.0
         * @type Boolean
         * @default
         */
        srcFromAttribute: !1,
        /**
         * private
         * contains last value of scaleX to detect
         * if the Image got resized after the last Render
         * @type Number
         */
        _lastScaleX: 1,
        /**
         * private
         * contains last value of scaleY to detect
         * if the Image got resized after the last Render
         * @type Number
         */
        _lastScaleY: 1,
        /**
         * private
         * contains last value of scaling applied by the apply filter chain
         * @type Number
         */
        _filterScalingX: 1,
        /**
         * private
         * contains last value of scaling applied by the apply filter chain
         * @type Number
         */
        _filterScalingY: 1,
        /**
         * minimum scale factor under which any resizeFilter is triggered to resize the image
         * 0 will disable the automatic resize. 1 will trigger automatically always.
         * number bigger than 1 are not implemented yet.
         * @type Number
         */
        minimumScaleTrigger: 0.5,
        /**
         * List of properties to consider when checking if
         * state of an object is changed ({@link fabric.Object#hasStateChanged})
         * as well as for history (undo/redo) purposes
         * @type Array
         */
        stateProperties: e.Object.prototype.stateProperties.concat("cropX", "cropY"),
        /**
         * List of properties to consider when checking if cache needs refresh
         * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single
         * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty
         * and refreshed at the next render
         * @type Array
         */
        cacheProperties: e.Object.prototype.cacheProperties.concat("cropX", "cropY"),
        /**
         * key used to retrieve the texture representing this image
         * @since 2.0.0
         * @type String
         * @default
         */
        cacheKey: "",
        /**
         * Image crop in pixels from original image size.
         * @since 2.0.0
         * @type Number
         * @default
         */
        cropX: 0,
        /**
         * Image crop in pixels from original image size.
         * @since 2.0.0
         * @type Number
         * @default
         */
        cropY: 0,
        /**
         * Indicates whether this canvas will use image smoothing when painting this image.
         * Also influence if the cacheCanvas for this image uses imageSmoothing
         * @since 4.0.0-beta.11
         * @type Boolean
         * @default
         */
        imageSmoothing: !0,
        /**
         * Constructor
         * Image can be initialized with any canvas drawable or a string.
         * The string should be a url and will be loaded as an image.
         * Canvas and Image element work out of the box, while videos require extra code to work.
         * Please check video element events for seeking.
         * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | String} element Image element
         * @param {Object} [options] Options object
         * @param {function} [callback] callback function to call after eventual filters applied.
         * @return {fabric.Image} thisArg
         */
        initialize: function(c, f) {
          f || (f = {}), this.filters = [], this.cacheKey = "texture" + e.Object.__uid++, this.callSuper("initialize", f), this._initElement(c, f);
        },
        /**
         * Returns image element which this instance if based on
         * @return {HTMLImageElement} Image element
         */
        getElement: function() {
          return this._element || {};
        },
        /**
         * Sets image element for this instance to a specified one.
         * If filters defined they are applied to new image.
         * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.
         * @param {HTMLImageElement} element
         * @param {Object} [options] Options object
         * @return {fabric.Image} thisArg
         * @chainable
         */
        setElement: function(c, f) {
          return this.removeTexture(this.cacheKey), this.removeTexture(this.cacheKey + "_filtered"), this._element = c, this._originalElement = c, this._initConfig(f), this.filters.length !== 0 && this.applyFilters(), this.resizeFilter && this.applyResizeFilters(), this;
        },
        /**
         * Delete a single texture if in webgl mode
         */
        removeTexture: function(c) {
          var f = e.filterBackend;
          f && f.evictCachesForKey && f.evictCachesForKey(c);
        },
        /**
         * Delete textures, reference to elements and eventually JSDOM cleanup
         */
        dispose: function() {
          this.callSuper("dispose"), this.removeTexture(this.cacheKey), this.removeTexture(this.cacheKey + "_filtered"), this._cacheContext = void 0, ["_originalElement", "_element", "_filteredEl", "_cacheCanvas"].forEach((function(c) {
            e.util.cleanUpJsdomNode(this[c]), this[c] = void 0;
          }).bind(this));
        },
        /**
         * Get the crossOrigin value (of the corresponding image element)
         */
        getCrossOrigin: function() {
          return this._originalElement && (this._originalElement.crossOrigin || null);
        },
        /**
         * Returns original size of an image
         * @return {Object} Object with "width" and "height" properties
         */
        getOriginalSize: function() {
          var c = this.getElement();
          return {
            width: c.naturalWidth || c.width,
            height: c.naturalHeight || c.height
          };
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _stroke: function(c) {
          if (!(!this.stroke || this.strokeWidth === 0)) {
            var f = this.width / 2, o = this.height / 2;
            c.beginPath(), c.moveTo(-f, -o), c.lineTo(f, -o), c.lineTo(f, o), c.lineTo(-f, o), c.lineTo(-f, -o), c.closePath();
          }
        },
        /**
         * Returns object representation of an instance
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} Object representation of an instance
         */
        toObject: function(c) {
          var f = [];
          this.filters.forEach(function(h) {
            h && f.push(h.toObject());
          });
          var o = s(
            this.callSuper(
              "toObject",
              ["cropX", "cropY"].concat(c)
            ),
            {
              src: this.getSrc(),
              crossOrigin: this.getCrossOrigin(),
              filters: f
            }
          );
          return this.resizeFilter && (o.resizeFilter = this.resizeFilter.toObject()), o;
        },
        /**
         * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,height.
         * @return {Boolean}
         */
        hasCrop: function() {
          return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;
        },
        /* _TO_SVG_START_ */
        /**
         * Returns svg representation of an instance
         * @return {Array} an array of strings with the specific svg representation
         * of the instance
         */
        _toSVG: function() {
          var c = [], f = [], o, h = this._element, u = -this.width / 2, d = -this.height / 2, m = "", p = "";
          if (!h)
            return [];
          if (this.hasCrop()) {
            var v = e.Object.__uid++;
            c.push(
              '<clipPath id="imageCrop_' + v + `">
`,
              '	<rect x="' + u + '" y="' + d + '" width="' + this.width + '" height="' + this.height + `" />
`,
              `</clipPath>
`
            ), m = ' clip-path="url(#imageCrop_' + v + ')" ';
          }
          if (this.imageSmoothing || (p = '" image-rendering="optimizeSpeed'), f.push(
            "	<image ",
            "COMMON_PARTS",
            'xlink:href="',
            this.getSvgSrc(!0),
            '" x="',
            u - this.cropX,
            '" y="',
            d - this.cropY,
            // we're essentially moving origin of transformation from top/left corner to the center of the shape
            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left
            // so that object's center aligns with container's left/top
            '" width="',
            h.width || h.naturalWidth,
            '" height="',
            h.height || h.height,
            p,
            '"',
            m,
            `></image>
`
          ), this.stroke || this.strokeDashArray) {
            var b = this.fill;
            this.fill = null, o = [
              "	<rect ",
              'x="',
              u,
              '" y="',
              d,
              '" width="',
              this.width,
              '" height="',
              this.height,
              '" style="',
              this.getSvgStyles(),
              `"/>
`
            ], this.fill = b;
          }
          return this.paintFirst !== "fill" ? c = c.concat(o, f) : c = c.concat(f, o), c;
        },
        /* _TO_SVG_END_ */
        /**
         * Returns source of an image
         * @param {Boolean} filtered indicates if the src is needed for svg
         * @return {String} Source of an image
         */
        getSrc: function(c) {
          var f = c ? this._element : this._originalElement;
          return f ? f.toDataURL ? f.toDataURL() : this.srcFromAttribute ? f.getAttribute("src") : f.src : this.src || "";
        },
        /**
         * Sets source of an image
         * @param {String} src Source string (URL)
         * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)
         * @param {Object} [options] Options object
         * @param {String} [options.crossOrigin] crossOrigin value (one of "", "anonymous", "use-credentials")
         * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes
         * @return {fabric.Image} thisArg
         * @chainable
         */
        setSrc: function(c, f, o) {
          return e.util.loadImage(c, function(h, u) {
            this.setElement(h, o), this._setWidthHeight(), f && f(this, u);
          }, this, o && o.crossOrigin), this;
        },
        /**
         * Returns string representation of an instance
         * @return {String} String representation of an instance
         */
        toString: function() {
          return '#<fabric.Image: { src: "' + this.getSrc() + '" }>';
        },
        applyResizeFilters: function() {
          var c = this.resizeFilter, f = this.minimumScaleTrigger, o = this.getTotalObjectScaling(), h = o.scaleX, u = o.scaleY, d = this._filteredEl || this._originalElement;
          if (this.group && this.set("dirty", !0), !c || h > f && u > f) {
            this._element = d, this._filterScalingX = 1, this._filterScalingY = 1, this._lastScaleX = h, this._lastScaleY = u;
            return;
          }
          e.filterBackend || (e.filterBackend = e.initFilterBackend());
          var m = e.util.createCanvasElement(), p = this._filteredEl ? this.cacheKey + "_filtered" : this.cacheKey, v = d.width, b = d.height;
          m.width = v, m.height = b, this._element = m, this._lastScaleX = c.scaleX = h, this._lastScaleY = c.scaleY = u, e.filterBackend.applyFilters(
            [c],
            d,
            v,
            b,
            this._element,
            p
          ), this._filterScalingX = m.width / this._originalElement.width, this._filterScalingY = m.height / this._originalElement.height;
        },
        /**
         * Applies filters assigned to this image (from "filters" array) or from filter param
         * @method applyFilters
         * @param {Array} filters to be applied
         * @param {Boolean} forResizing specify if the filter operation is a resize operation
         * @return {thisArg} return the fabric.Image object
         * @chainable
         */
        applyFilters: function(c) {
          if (c = c || this.filters || [], c = c.filter(function(d) {
            return d && !d.isNeutralState();
          }), this.set("dirty", !0), this.removeTexture(this.cacheKey + "_filtered"), c.length === 0)
            return this._element = this._originalElement, this._filteredEl = null, this._filterScalingX = 1, this._filterScalingY = 1, this;
          var f = this._originalElement, o = f.naturalWidth || f.width, h = f.naturalHeight || f.height;
          if (this._element === this._originalElement) {
            var u = e.util.createCanvasElement();
            u.width = o, u.height = h, this._element = u, this._filteredEl = u;
          } else
            this._element = this._filteredEl, this._filteredEl.getContext("2d").clearRect(0, 0, o, h), this._lastScaleX = 1, this._lastScaleY = 1;
          return e.filterBackend || (e.filterBackend = e.initFilterBackend()), e.filterBackend.applyFilters(
            c,
            this._originalElement,
            o,
            h,
            this._element,
            this.cacheKey
          ), (this._originalElement.width !== this._element.width || this._originalElement.height !== this._element.height) && (this._filterScalingX = this._element.width / this._originalElement.width, this._filterScalingY = this._element.height / this._originalElement.height), this;
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _render: function(c) {
          e.util.setImageSmoothing(c, this.imageSmoothing), this.isMoving !== !0 && this.resizeFilter && this._needsResize() && this.applyResizeFilters(), this._stroke(c), this._renderPaintInOrder(c);
        },
        /**
         * Paint the cached copy of the object on the target context.
         * it will set the imageSmoothing for the draw operation
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        drawCacheOnCanvas: function(c) {
          e.util.setImageSmoothing(c, this.imageSmoothing), e.Object.prototype.drawCacheOnCanvas.call(this, c);
        },
        /**
         * Decide if the object should cache or not. Create its own cache level
         * needsItsOwnCache should be used when the object drawing method requires
         * a cache step. None of the fabric classes requires it.
         * Generally you do not cache objects in groups because the group outside is cached.
         * This is the special image version where we would like to avoid caching where possible.
         * Essentially images do not benefit from caching. They may require caching, and in that
         * case we do it. Also caching an image usually ends in a loss of details.
         * A full performance audit should be done.
         * @return {Boolean}
         */
        shouldCache: function() {
          return this.needsItsOwnCache();
        },
        _renderFill: function(c) {
          var f = this._element;
          if (f) {
            var o = this._filterScalingX, h = this._filterScalingY, u = this.width, d = this.height, m = Math.min, p = Math.max, v = p(this.cropX, 0), b = p(this.cropY, 0), y = f.naturalWidth || f.width, w = f.naturalHeight || f.height, x = v * o, _ = b * h, S = m(u * o, y - x), k = m(d * h, w - _), F = -u / 2, L = -d / 2, j = m(u, y / o - v), G = m(d, w / h - b);
            f && c.drawImage(f, x, _, S, k, F, L, j, G);
          }
        },
        /**
         * needed to check if image needs resize
         * @private
         */
        _needsResize: function() {
          var c = this.getTotalObjectScaling();
          return c.scaleX !== this._lastScaleX || c.scaleY !== this._lastScaleY;
        },
        /**
         * @private
         */
        _resetWidthHeight: function() {
          this.set(this.getOriginalSize());
        },
        /**
         * The Image class's initialization method. This method is automatically
         * called by the constructor.
         * @private
         * @param {HTMLImageElement|String} element The element representing the image
         * @param {Object} [options] Options object
         */
        _initElement: function(c, f) {
          this.setElement(e.util.getById(c), f), e.util.addClass(this.getElement(), e.Image.CSS_CANVAS);
        },
        /**
         * @private
         * @param {Object} [options] Options object
         */
        _initConfig: function(c) {
          c || (c = {}), this.setOptions(c), this._setWidthHeight(c);
        },
        /**
         * @private
         * @param {Array} filters to be initialized
         * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created
         */
        _initFilters: function(c, f) {
          c && c.length ? e.util.enlivenObjects(c, function(o) {
            f && f(o);
          }, "fabric.Image.filters") : f && f();
        },
        /**
         * @private
         * Set the width and the height of the image object, using the element or the
         * options.
         * @param {Object} [options] Object with width/height properties
         */
        _setWidthHeight: function(c) {
          c || (c = {});
          var f = this.getElement();
          this.width = c.width || f.naturalWidth || f.width || 0, this.height = c.height || f.naturalHeight || f.height || 0;
        },
        /**
         * Calculate offset for center and scale factor for the image in order to respect
         * the preserveAspectRatio attribute
         * @private
         * @return {Object}
         */
        parsePreserveAspectRatioAttribute: function() {
          var c = e.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ""), f = this._element.width, o = this._element.height, h = 1, u = 1, d = 0, m = 0, p = 0, v = 0, b, y = this.width, w = this.height, x = { width: y, height: w };
          return c && (c.alignX !== "none" || c.alignY !== "none") ? (c.meetOrSlice === "meet" && (h = u = e.util.findScaleToFit(this._element, x), b = (y - f * h) / 2, c.alignX === "Min" && (d = -b), c.alignX === "Max" && (d = b), b = (w - o * u) / 2, c.alignY === "Min" && (m = -b), c.alignY === "Max" && (m = b)), c.meetOrSlice === "slice" && (h = u = e.util.findScaleToCover(this._element, x), b = f - y / h, c.alignX === "Mid" && (p = b / 2), c.alignX === "Max" && (p = b), b = o - w / u, c.alignY === "Mid" && (v = b / 2), c.alignY === "Max" && (v = b), f = y / h, o = w / u)) : (h = y / f, u = w / o), {
            width: f,
            height: o,
            scaleX: h,
            scaleY: u,
            offsetLeft: d,
            offsetTop: m,
            cropX: p,
            cropY: v
          };
        }
      }
    ), e.Image.CSS_CANVAS = "canvas-img", e.Image.prototype.getSvgSrc = e.Image.prototype.getSrc, e.Image.fromObject = function(c, f) {
      var o = e.util.object.clone(c);
      e.util.loadImage(o.src, function(h, u) {
        if (u) {
          f && f(null, !0);
          return;
        }
        e.Image.prototype._initFilters.call(o, o.filters, function(d) {
          o.filters = d || [], e.Image.prototype._initFilters.call(o, [o.resizeFilter], function(m) {
            o.resizeFilter = m[0], e.util.enlivenObjectEnlivables(o, o, function() {
              var p = new e.Image(h, o);
              f(p, !1);
            });
          });
        });
      }, null, o.crossOrigin);
    }, e.Image.fromURL = function(c, f, o) {
      e.util.loadImage(c, function(h, u) {
        f && f(new e.Image(h, o), u);
      }, null, o && o.crossOrigin);
    }, e.Image.ATTRIBUTE_NAMES = e.SHARED_ATTRIBUTES.concat(
      "x y width height preserveAspectRatio xlink:href crossOrigin image-rendering".split(" ")
    ), e.Image.fromElement = function(c, f, o) {
      var h = e.parseAttributes(c, e.Image.ATTRIBUTE_NAMES);
      e.Image.fromURL(
        h["xlink:href"],
        f,
        s(o ? e.util.object.clone(o) : {}, h)
      );
    };
  }(t), e.util.object.extend(
    e.Object.prototype,
    /** @lends fabric.Object.prototype */
    {
      /**
       * @private
       * @return {Number} angle value
       */
      _getAngleValueForStraighten: function() {
        var a = this.angle % 360;
        return a > 0 ? Math.round((a - 1) / 90) * 90 : Math.round(a / 90) * 90;
      },
      /**
       * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)
       * @return {fabric.Object} thisArg
       * @chainable
       */
      straighten: function() {
        return this.rotate(this._getAngleValueForStraighten());
      },
      /**
       * Same as {@link fabric.Object.prototype.straighten} but with animation
       * @param {Object} callbacks Object with callback functions
       * @param {Function} [callbacks.onComplete] Invoked on completion
       * @param {Function} [callbacks.onChange] Invoked on every step of animation
       * @return {fabric.Object} thisArg
       */
      fxStraighten: function(a) {
        a = a || {};
        var s = function() {
        }, c = a.onComplete || s, f = a.onChange || s, o = this;
        return e.util.animate({
          target: this,
          startValue: this.get("angle"),
          endValue: this._getAngleValueForStraighten(),
          duration: this.FX_DURATION,
          onChange: function(h) {
            o.rotate(h), f();
          },
          onComplete: function() {
            o.setCoords(), c();
          }
        });
      }
    }
  ), e.util.object.extend(
    e.StaticCanvas.prototype,
    /** @lends fabric.StaticCanvas.prototype */
    {
      /**
       * Straightens object, then rerenders canvas
       * @param {fabric.Object} object Object to straighten
       * @return {fabric.Canvas} thisArg
       * @chainable
       */
      straightenObject: function(a) {
        return a.straighten(), this.requestRenderAll(), this;
      },
      /**
       * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated
       * @param {fabric.Object} object Object to straighten
       * @return {fabric.Canvas} thisArg
       */
      fxStraightenObject: function(a) {
        return a.fxStraighten({
          onChange: this.requestRenderAllBound
        });
      }
    }
  ), function() {
    function a(c, f) {
      var o = "precision " + f + ` float;
void main(){}`, h = c.createShader(c.FRAGMENT_SHADER);
      return c.shaderSource(h, o), c.compileShader(h), !!c.getShaderParameter(h, c.COMPILE_STATUS);
    }
    e.isWebglSupported = function(c) {
      if (e.isLikelyNode)
        return !1;
      c = c || e.WebglFilterBackend.prototype.tileSize;
      var f = document.createElement("canvas"), o = f.getContext("webgl") || f.getContext("experimental-webgl"), h = !1;
      if (o) {
        e.maxTextureSize = o.getParameter(o.MAX_TEXTURE_SIZE), h = e.maxTextureSize >= c;
        for (var u = ["highp", "mediump", "lowp"], d = 0; d < 3; d++)
          if (a(o, u[d])) {
            e.webGlPrecision = u[d];
            break;
          }
      }
      return this.isSupported = h, h;
    }, e.WebglFilterBackend = s;
    function s(c) {
      c && c.tileSize && (this.tileSize = c.tileSize), this.setupGLContext(this.tileSize, this.tileSize), this.captureGPUInfo();
    }
    s.prototype = /** @lends fabric.WebglFilterBackend.prototype */
    {
      tileSize: 2048,
      /**
       * Experimental. This object is a sort of repository of help layers used to avoid
       * of recreating them during frequent filtering. If you are previewing a filter with
       * a slider you probably do not want to create help layers every filter step.
       * in this object there will be appended some canvases, created once, resized sometimes
       * cleared never. Clearing is left to the developer.
       **/
      resources: {},
      /**
       * Setup a WebGL context suitable for filtering, and bind any needed event handlers.
       */
      setupGLContext: function(c, f) {
        this.dispose(), this.createWebGLCanvas(c, f), this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]), this.chooseFastestCopyGLTo2DMethod(c, f);
      },
      /**
       * Pick a method to copy data from GL context to 2d canvas.  In some browsers using
       * putImageData is faster than drawImage for that specific operation.
       */
      chooseFastestCopyGLTo2DMethod: function(c, f) {
        var o = typeof window.performance < "u", h;
        try {
          new ImageData(1, 1), h = !0;
        } catch {
          h = !1;
        }
        var u = typeof ArrayBuffer < "u", d = typeof Uint8ClampedArray < "u";
        if (o && h && u && d) {
          var m = e.util.createCanvasElement(), p = new ArrayBuffer(c * f * 4);
          if (e.forceGLPutImageData) {
            this.imageBuffer = p, this.copyGLTo2D = g;
            return;
          }
          var v = {
            imageBuffer: p,
            destinationWidth: c,
            destinationHeight: f,
            targetCanvas: m
          }, b, y, w;
          m.width = c, m.height = f, b = window.performance.now(), l.call(v, this.gl, v), y = window.performance.now() - b, b = window.performance.now(), g.call(v, this.gl, v), w = window.performance.now() - b, y > w ? (this.imageBuffer = p, this.copyGLTo2D = g) : this.copyGLTo2D = l;
        }
      },
      /**
       * Create a canvas element and associated WebGL context and attaches them as
       * class properties to the GLFilterBackend class.
       */
      createWebGLCanvas: function(c, f) {
        var o = e.util.createCanvasElement();
        o.width = c, o.height = f;
        var h = {
          alpha: !0,
          premultipliedAlpha: !1,
          depth: !1,
          stencil: !1,
          antialias: !1
        }, u = o.getContext("webgl", h);
        u || (u = o.getContext("experimental-webgl", h)), u && (u.clearColor(0, 0, 0, 0), this.canvas = o, this.gl = u);
      },
      /**
       * Attempts to apply the requested filters to the source provided, drawing the filtered output
       * to the provided target canvas.
       *
       * @param {Array} filters The filters to apply.
       * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.
       * @param {Number} width The width of the source input.
       * @param {Number} height The height of the source input.
       * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.
       * @param {String|undefined} cacheKey A key used to cache resources related to the source. If
       * omitted, caching will be skipped.
       */
      applyFilters: function(c, f, o, h, u, d) {
        var m = this.gl, p;
        d && (p = this.getCachedTexture(d, f));
        var v = {
          originalWidth: f.width || f.originalWidth,
          originalHeight: f.height || f.originalHeight,
          sourceWidth: o,
          sourceHeight: h,
          destinationWidth: o,
          destinationHeight: h,
          context: m,
          sourceTexture: this.createTexture(m, o, h, !p && f),
          targetTexture: this.createTexture(m, o, h),
          originalTexture: p || this.createTexture(m, o, h, !p && f),
          passes: c.length,
          webgl: !0,
          aPosition: this.aPosition,
          programCache: this.programCache,
          pass: 0,
          filterBackend: this,
          targetCanvas: u
        }, b = m.createFramebuffer();
        return m.bindFramebuffer(m.FRAMEBUFFER, b), c.forEach(function(y) {
          y && y.applyTo(v);
        }), i(v), this.copyGLTo2D(m, v), m.bindTexture(m.TEXTURE_2D, null), m.deleteTexture(v.sourceTexture), m.deleteTexture(v.targetTexture), m.deleteFramebuffer(b), u.getContext("2d").setTransform(1, 0, 0, 1, 0, 0), v;
      },
      /**
       * Detach event listeners, remove references, and clean up caches.
       */
      dispose: function() {
        this.canvas && (this.canvas = null, this.gl = null), this.clearWebGLCaches();
      },
      /**
       * Wipe out WebGL-related caches.
       */
      clearWebGLCaches: function() {
        this.programCache = {}, this.textureCache = {};
      },
      /**
       * Create a WebGL texture object.
       *
       * Accepts specific dimensions to initialize the texture to or a source image.
       *
       * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.
       * @param {Number} width The width to initialize the texture at.
       * @param {Number} height The height to initialize the texture.
       * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.
       * @param {Number} filterType gl.NEAREST or gl.LINEAR usually, webgl numeri constants
       * @returns {WebGLTexture}
       */
      createTexture: function(c, f, o, h, u) {
        var d = c.createTexture();
        return c.bindTexture(c.TEXTURE_2D, d), c.texParameteri(c.TEXTURE_2D, c.TEXTURE_MAG_FILTER, u || c.NEAREST), c.texParameteri(c.TEXTURE_2D, c.TEXTURE_MIN_FILTER, u || c.NEAREST), c.texParameteri(c.TEXTURE_2D, c.TEXTURE_WRAP_S, c.CLAMP_TO_EDGE), c.texParameteri(c.TEXTURE_2D, c.TEXTURE_WRAP_T, c.CLAMP_TO_EDGE), h ? c.texImage2D(c.TEXTURE_2D, 0, c.RGBA, c.RGBA, c.UNSIGNED_BYTE, h) : c.texImage2D(c.TEXTURE_2D, 0, c.RGBA, f, o, 0, c.RGBA, c.UNSIGNED_BYTE, null), d;
      },
      /**
       * Can be optionally used to get a texture from the cache array
       *
       * If an existing texture is not found, a new texture is created and cached.
       *
       * @param {String} uniqueId A cache key to use to find an existing texture.
       * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the
       * texture cache entry if one does not already exist.
       */
      getCachedTexture: function(c, f) {
        if (this.textureCache[c])
          return this.textureCache[c];
        var o = this.createTexture(
          this.gl,
          f.width,
          f.height,
          f
        );
        return this.textureCache[c] = o, o;
      },
      /**
       * Clear out cached resources related to a source image that has been
       * filtered previously.
       *
       * @param {String} cacheKey The cache key provided when the source image was filtered.
       */
      evictCachesForKey: function(c) {
        this.textureCache[c] && (this.gl.deleteTexture(this.textureCache[c]), delete this.textureCache[c]);
      },
      copyGLTo2D: l,
      /**
       * Attempt to extract GPU information strings from a WebGL context.
       *
       * Useful information when debugging or blacklisting specific GPUs.
       *
       * @returns {Object} A GPU info object with renderer and vendor strings.
       */
      captureGPUInfo: function() {
        if (this.gpuInfo)
          return this.gpuInfo;
        var c = this.gl, f = { renderer: "", vendor: "" };
        if (!c)
          return f;
        var o = c.getExtension("WEBGL_debug_renderer_info");
        if (o) {
          var h = c.getParameter(o.UNMASKED_RENDERER_WEBGL), u = c.getParameter(o.UNMASKED_VENDOR_WEBGL);
          h && (f.renderer = h.toLowerCase()), u && (f.vendor = u.toLowerCase());
        }
        return this.gpuInfo = f, f;
      }
    };
  }();
  function i(a) {
    var s = a.targetCanvas, c = s.width, f = s.height, o = a.destinationWidth, h = a.destinationHeight;
    (c !== o || f !== h) && (s.width = o, s.height = h);
  }
  function l(a, s) {
    var c = a.canvas, f = s.targetCanvas, o = f.getContext("2d");
    o.translate(0, f.height), o.scale(1, -1);
    var h = c.height - f.height;
    o.drawImage(
      c,
      0,
      h,
      f.width,
      f.height,
      0,
      0,
      f.width,
      f.height
    );
  }
  function g(a, s) {
    var c = s.targetCanvas, f = c.getContext("2d"), o = s.destinationWidth, h = s.destinationHeight, u = o * h * 4, d = new Uint8Array(this.imageBuffer, 0, u), m = new Uint8ClampedArray(this.imageBuffer, 0, u);
    a.readPixels(0, 0, o, h, a.RGBA, a.UNSIGNED_BYTE, d);
    var p = new ImageData(m, o, h);
    f.putImageData(p, 0, 0);
  }
  (function() {
    var a = function() {
    };
    e.Canvas2dFilterBackend = s;
    function s() {
    }
    s.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */
    {
      evictCachesForKey: a,
      dispose: a,
      clearWebGLCaches: a,
      /**
       * Experimental. This object is a sort of repository of help layers used to avoid
       * of recreating them during frequent filtering. If you are previewing a filter with
       * a slider you probably do not want to create help layers every filter step.
       * in this object there will be appended some canvases, created once, resized sometimes
       * cleared never. Clearing is left to the developer.
       **/
      resources: {},
      /**
       * Apply a set of filters against a source image and draw the filtered output
       * to the provided destination canvas.
       *
       * @param {EnhancedFilter} filters The filter to apply.
       * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.
       * @param {Number} sourceWidth The width of the source input.
       * @param {Number} sourceHeight The height of the source input.
       * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.
       */
      applyFilters: function(c, f, o, h, u) {
        var d = u.getContext("2d");
        d.drawImage(f, 0, 0, o, h);
        var m = d.getImageData(0, 0, o, h), p = d.getImageData(0, 0, o, h), v = {
          sourceWidth: o,
          sourceHeight: h,
          imageData: m,
          originalEl: f,
          originalImageData: p,
          canvasEl: u,
          ctx: d,
          filterBackend: this
        };
        return c.forEach(function(b) {
          b.applyTo(v);
        }), (v.imageData.width !== o || v.imageData.height !== h) && (u.width = v.imageData.width, u.height = v.imageData.height), d.putImageData(v.imageData, 0, 0), v;
      }
    };
  })(), e.Image = e.Image || {}, e.Image.filters = e.Image.filters || {}, e.Image.filters.BaseFilter = e.util.createClass(
    /** @lends fabric.Image.filters.BaseFilter.prototype */
    {
      /**
       * Filter type
       * @param {String} type
       * @default
       */
      type: "BaseFilter",
      /**
       * Array of attributes to send with buffers. do not modify
       * @private
       */
      vertexSource: `attribute vec2 aPosition;
varying vec2 vTexCoord;
void main() {
vTexCoord = aPosition;
gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);
}`,
      fragmentSource: `precision highp float;
varying vec2 vTexCoord;
uniform sampler2D uTexture;
void main() {
gl_FragColor = texture2D(uTexture, vTexCoord);
}`,
      /**
       * Constructor
       * @param {Object} [options] Options object
       */
      initialize: function(a) {
        a && this.setOptions(a);
      },
      /**
       * Sets filter's properties from options
       * @param {Object} [options] Options object
       */
      setOptions: function(a) {
        for (var s in a)
          this[s] = a[s];
      },
      /**
       * Compile this filter's shader program.
       *
       * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.
       * @param {String} fragmentSource fragmentShader source for compilation
       * @param {String} vertexSource vertexShader source for compilation
       */
      createProgram: function(a, s, c) {
        s = s || this.fragmentSource, c = c || this.vertexSource, e.webGlPrecision !== "highp" && (s = s.replace(
          /precision highp float/g,
          "precision " + e.webGlPrecision + " float"
        ));
        var f = a.createShader(a.VERTEX_SHADER);
        if (a.shaderSource(f, c), a.compileShader(f), !a.getShaderParameter(f, a.COMPILE_STATUS))
          throw new Error(
            // eslint-disable-next-line prefer-template
            "Vertex shader compile error for " + this.type + ": " + a.getShaderInfoLog(f)
          );
        var o = a.createShader(a.FRAGMENT_SHADER);
        if (a.shaderSource(o, s), a.compileShader(o), !a.getShaderParameter(o, a.COMPILE_STATUS))
          throw new Error(
            // eslint-disable-next-line prefer-template
            "Fragment shader compile error for " + this.type + ": " + a.getShaderInfoLog(o)
          );
        var h = a.createProgram();
        if (a.attachShader(h, f), a.attachShader(h, o), a.linkProgram(h), !a.getProgramParameter(h, a.LINK_STATUS))
          throw new Error(
            // eslint-disable-next-line prefer-template
            'Shader link error for "${this.type}" ' + a.getProgramInfoLog(h)
          );
        var u = this.getAttributeLocations(a, h), d = this.getUniformLocations(a, h) || {};
        return d.uStepW = a.getUniformLocation(h, "uStepW"), d.uStepH = a.getUniformLocation(h, "uStepH"), {
          program: h,
          attributeLocations: u,
          uniformLocations: d
        };
      },
      /**
       * Return a map of attribute names to WebGLAttributeLocation objects.
       *
       * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.
       * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.
       * @returns {Object} A map of attribute names to attribute locations.
       */
      getAttributeLocations: function(a, s) {
        return {
          aPosition: a.getAttribLocation(s, "aPosition")
        };
      },
      /**
       * Return a map of uniform names to WebGLUniformLocation objects.
       *
       * Intended to be overridden by subclasses.
       *
       * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.
       * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.
       * @returns {Object} A map of uniform names to uniform locations.
       */
      getUniformLocations: function() {
        return {};
      },
      /**
       * Send attribute data from this filter to its shader program on the GPU.
       *
       * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.
       * @param {Object} attributeLocations A map of shader attribute names to their locations.
       */
      sendAttributeData: function(a, s, c) {
        var f = s.aPosition, o = a.createBuffer();
        a.bindBuffer(a.ARRAY_BUFFER, o), a.enableVertexAttribArray(f), a.vertexAttribPointer(f, 2, a.FLOAT, !1, 0, 0), a.bufferData(a.ARRAY_BUFFER, c, a.STATIC_DRAW);
      },
      _setupFrameBuffer: function(a) {
        var s = a.context, c, f;
        a.passes > 1 ? (c = a.destinationWidth, f = a.destinationHeight, (a.sourceWidth !== c || a.sourceHeight !== f) && (s.deleteTexture(a.targetTexture), a.targetTexture = a.filterBackend.createTexture(s, c, f)), s.framebufferTexture2D(
          s.FRAMEBUFFER,
          s.COLOR_ATTACHMENT0,
          s.TEXTURE_2D,
          a.targetTexture,
          0
        )) : (s.bindFramebuffer(s.FRAMEBUFFER, null), s.finish());
      },
      _swapTextures: function(a) {
        a.passes--, a.pass++;
        var s = a.targetTexture;
        a.targetTexture = a.sourceTexture, a.sourceTexture = s;
      },
      /**
       * Generic isNeutral implementation for one parameter based filters.
       * Used only in image applyFilters to discard filters that will not have an effect
       * on the image
       * Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )
       * @param {Object} options
       **/
      isNeutralState: function() {
        var a = this.mainParameter, s = e.Image.filters[this.type].prototype;
        if (a)
          if (Array.isArray(s[a])) {
            for (var c = s[a].length; c--; )
              if (this[a][c] !== s[a][c])
                return !1;
            return !0;
          } else
            return s[a] === this[a];
        else
          return !1;
      },
      /**
       * Apply this filter to the input image data provided.
       *
       * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.
       *
       * @param {Object} options
       * @param {Number} options.passes The number of filters remaining to be executed
       * @param {Boolean} options.webgl Whether to use webgl to render the filter.
       * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.
       * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.
       * @param {WebGLRenderingContext} options.context The GL context used for rendering.
       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
       */
      applyTo: function(a) {
        a.webgl ? (this._setupFrameBuffer(a), this.applyToWebGL(a), this._swapTextures(a)) : this.applyTo2d(a);
      },
      /**
       * Retrieves the cached shader.
       * @param {Object} options
       * @param {WebGLRenderingContext} options.context The GL context used for rendering.
       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
       */
      retrieveShader: function(a) {
        return a.programCache.hasOwnProperty(this.type) || (a.programCache[this.type] = this.createProgram(a.context)), a.programCache[this.type];
      },
      /**
       * Apply this filter using webgl.
       *
       * @param {Object} options
       * @param {Number} options.passes The number of filters remaining to be executed
       * @param {Boolean} options.webgl Whether to use webgl to render the filter.
       * @param {WebGLTexture} options.originalTexture The texture of the original input image.
       * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.
       * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.
       * @param {WebGLRenderingContext} options.context The GL context used for rendering.
       * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
       */
      applyToWebGL: function(a) {
        var s = a.context, c = this.retrieveShader(a);
        a.pass === 0 && a.originalTexture ? s.bindTexture(s.TEXTURE_2D, a.originalTexture) : s.bindTexture(s.TEXTURE_2D, a.sourceTexture), s.useProgram(c.program), this.sendAttributeData(s, c.attributeLocations, a.aPosition), s.uniform1f(c.uniformLocations.uStepW, 1 / a.sourceWidth), s.uniform1f(c.uniformLocations.uStepH, 1 / a.sourceHeight), this.sendUniformData(s, c.uniformLocations), s.viewport(0, 0, a.destinationWidth, a.destinationHeight), s.drawArrays(s.TRIANGLE_STRIP, 0, 4);
      },
      bindAdditionalTexture: function(a, s, c) {
        a.activeTexture(c), a.bindTexture(a.TEXTURE_2D, s), a.activeTexture(a.TEXTURE0);
      },
      unbindAdditionalTexture: function(a, s) {
        a.activeTexture(s), a.bindTexture(a.TEXTURE_2D, null), a.activeTexture(a.TEXTURE0);
      },
      getMainParameter: function() {
        return this[this.mainParameter];
      },
      setMainParameter: function(a) {
        this[this.mainParameter] = a;
      },
      /**
       * Send uniform data from this filter to its shader program on the GPU.
       *
       * Intended to be overridden by subclasses.
       *
       * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.
       * @param {Object} uniformLocations A map of shader uniform names to their locations.
       */
      sendUniformData: function() {
      },
      /**
       * If needed by a 2d filter, this functions can create an helper canvas to be used
       * remember that options.targetCanvas is available for use till end of chain.
       */
      createHelpLayer: function(a) {
        if (!a.helpLayer) {
          var s = document.createElement("canvas");
          s.width = a.sourceWidth, s.height = a.sourceHeight, a.helpLayer = s;
        }
      },
      /**
       * Returns object representation of an instance
       * @return {Object} Object representation of an instance
       */
      toObject: function() {
        var a = { type: this.type }, s = this.mainParameter;
        return s && (a[s] = this[s]), a;
      },
      /**
       * Returns a JSON representation of an instance
       * @return {Object} JSON
       */
      toJSON: function() {
        return this.toObject();
      }
    }
  ), e.Image.filters.BaseFilter.fromObject = function(a, s) {
    var c = new e.Image.filters[a.type](a);
    return s && s(c), c;
  }, function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.Image.filters, f = s.util.createClass;
    c.ColorMatrix = f(
      c.BaseFilter,
      /** @lends fabric.Image.filters.ColorMatrix.prototype */
      {
        /**
         * Filter type
         * @param {String} type
         * @default
         */
        type: "ColorMatrix",
        fragmentSource: `precision highp float;
uniform sampler2D uTexture;
varying vec2 vTexCoord;
uniform mat4 uColorMatrix;
uniform vec4 uConstants;
void main() {
vec4 color = texture2D(uTexture, vTexCoord);
color *= uColorMatrix;
color += uConstants;
gl_FragColor = color;
}`,
        /**
         * Colormatrix for pixels.
         * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning
         * outside the -1, 1 range.
         * 0.0039215686 is the part of 1 that get translated to 1 in 2d
         * @param {Array} matrix array of 20 numbers.
         * @default
         */
        matrix: [
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        mainParameter: "matrix",
        /**
         * Lock the colormatrix on the color part, skipping alpha, mainly for non webgl scenario
         * to save some calculation
         * @type Boolean
         * @default true
         */
        colorsOnly: !0,
        /**
         * Constructor
         * @param {Object} [options] Options object
         */
        initialize: function(o) {
          this.callSuper("initialize", o), this.matrix = this.matrix.slice(0);
        },
        /**
         * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.
         *
         * @param {Object} options
         * @param {ImageData} options.imageData The Uint8Array to be filtered.
         */
        applyTo2d: function(o) {
          var h = o.imageData, u = h.data, d = u.length, m = this.matrix, p, v, b, y, w, x = this.colorsOnly;
          for (w = 0; w < d; w += 4)
            p = u[w], v = u[w + 1], b = u[w + 2], x ? (u[w] = p * m[0] + v * m[1] + b * m[2] + m[4] * 255, u[w + 1] = p * m[5] + v * m[6] + b * m[7] + m[9] * 255, u[w + 2] = p * m[10] + v * m[11] + b * m[12] + m[14] * 255) : (y = u[w + 3], u[w] = p * m[0] + v * m[1] + b * m[2] + y * m[3] + m[4] * 255, u[w + 1] = p * m[5] + v * m[6] + b * m[7] + y * m[8] + m[9] * 255, u[w + 2] = p * m[10] + v * m[11] + b * m[12] + y * m[13] + m[14] * 255, u[w + 3] = p * m[15] + v * m[16] + b * m[17] + y * m[18] + m[19] * 255);
        },
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(o, h) {
          return {
            uColorMatrix: o.getUniformLocation(h, "uColorMatrix"),
            uConstants: o.getUniformLocation(h, "uConstants")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(o, h) {
          var u = this.matrix, d = [
            u[0],
            u[1],
            u[2],
            u[3],
            u[5],
            u[6],
            u[7],
            u[8],
            u[10],
            u[11],
            u[12],
            u[13],
            u[15],
            u[16],
            u[17],
            u[18]
          ], m = [u[4], u[9], u[14], u[19]];
          o.uniformMatrix4fv(h.uColorMatrix, !1, d), o.uniform4fv(h.uConstants, m);
        }
      }
    ), s.Image.filters.ColorMatrix.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.Image.filters, f = s.util.createClass;
    c.Brightness = f(
      c.BaseFilter,
      /** @lends fabric.Image.filters.Brightness.prototype */
      {
        /**
         * Filter type
         * @param {String} type
         * @default
         */
        type: "Brightness",
        /**
         * Fragment source for the brightness program
         */
        fragmentSource: `precision highp float;
uniform sampler2D uTexture;
uniform float uBrightness;
varying vec2 vTexCoord;
void main() {
vec4 color = texture2D(uTexture, vTexCoord);
color.rgb += uBrightness;
gl_FragColor = color;
}`,
        /**
         * Brightness value, from -1 to 1.
         * translated to -255 to 255 for 2d
         * 0.0039215686 is the part of 1 that get translated to 1 in 2d
         * @param {Number} brightness
         * @default
         */
        brightness: 0,
        /**
         * Describe the property that is the filter parameter
         * @param {String} m
         * @default
         */
        mainParameter: "brightness",
        /**
        * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.
        *
        * @param {Object} options
        * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.
        */
        applyTo2d: function(o) {
          if (this.brightness !== 0) {
            var h = o.imageData, u = h.data, d, m = u.length, p = Math.round(this.brightness * 255);
            for (d = 0; d < m; d += 4)
              u[d] = u[d] + p, u[d + 1] = u[d + 1] + p, u[d + 2] = u[d + 2] + p;
          }
        },
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(o, h) {
          return {
            uBrightness: o.getUniformLocation(h, "uBrightness")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(o, h) {
          o.uniform1f(h.uBrightness, this.brightness);
        }
      }
    ), s.Image.filters.Brightness.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.util.object.extend, f = s.Image.filters, o = s.util.createClass;
    f.Convolute = o(
      f.BaseFilter,
      /** @lends fabric.Image.filters.Convolute.prototype */
      {
        /**
         * Filter type
         * @param {String} type
         * @default
         */
        type: "Convolute",
        /*
         * Opaque value (true/false)
         */
        opaque: !1,
        /*
         * matrix for the filter, max 9x9
         */
        matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],
        /**
         * Fragment source for the brightness program
         */
        fragmentSource: {
          Convolute_3_1: `precision highp float;
uniform sampler2D uTexture;
uniform float uMatrix[9];
uniform float uStepW;
uniform float uStepH;
varying vec2 vTexCoord;
void main() {
vec4 color = vec4(0, 0, 0, 0);
for (float h = 0.0; h < 3.0; h+=1.0) {
for (float w = 0.0; w < 3.0; w+=1.0) {
vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));
color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];
}
}
gl_FragColor = color;
}`,
          Convolute_3_0: `precision highp float;
uniform sampler2D uTexture;
uniform float uMatrix[9];
uniform float uStepW;
uniform float uStepH;
varying vec2 vTexCoord;
void main() {
vec4 color = vec4(0, 0, 0, 1);
for (float h = 0.0; h < 3.0; h+=1.0) {
for (float w = 0.0; w < 3.0; w+=1.0) {
vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));
color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];
}
}
float alpha = texture2D(uTexture, vTexCoord).a;
gl_FragColor = color;
gl_FragColor.a = alpha;
}`,
          Convolute_5_1: `precision highp float;
uniform sampler2D uTexture;
uniform float uMatrix[25];
uniform float uStepW;
uniform float uStepH;
varying vec2 vTexCoord;
void main() {
vec4 color = vec4(0, 0, 0, 0);
for (float h = 0.0; h < 5.0; h+=1.0) {
for (float w = 0.0; w < 5.0; w+=1.0) {
vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));
color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];
}
}
gl_FragColor = color;
}`,
          Convolute_5_0: `precision highp float;
uniform sampler2D uTexture;
uniform float uMatrix[25];
uniform float uStepW;
uniform float uStepH;
varying vec2 vTexCoord;
void main() {
vec4 color = vec4(0, 0, 0, 1);
for (float h = 0.0; h < 5.0; h+=1.0) {
for (float w = 0.0; w < 5.0; w+=1.0) {
vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));
color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];
}
}
float alpha = texture2D(uTexture, vTexCoord).a;
gl_FragColor = color;
gl_FragColor.a = alpha;
}`,
          Convolute_7_1: `precision highp float;
uniform sampler2D uTexture;
uniform float uMatrix[49];
uniform float uStepW;
uniform float uStepH;
varying vec2 vTexCoord;
void main() {
vec4 color = vec4(0, 0, 0, 0);
for (float h = 0.0; h < 7.0; h+=1.0) {
for (float w = 0.0; w < 7.0; w+=1.0) {
vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));
color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];
}
}
gl_FragColor = color;
}`,
          Convolute_7_0: `precision highp float;
uniform sampler2D uTexture;
uniform float uMatrix[49];
uniform float uStepW;
uniform float uStepH;
varying vec2 vTexCoord;
void main() {
vec4 color = vec4(0, 0, 0, 1);
for (float h = 0.0; h < 7.0; h+=1.0) {
for (float w = 0.0; w < 7.0; w+=1.0) {
vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));
color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];
}
}
float alpha = texture2D(uTexture, vTexCoord).a;
gl_FragColor = color;
gl_FragColor.a = alpha;
}`,
          Convolute_9_1: `precision highp float;
uniform sampler2D uTexture;
uniform float uMatrix[81];
uniform float uStepW;
uniform float uStepH;
varying vec2 vTexCoord;
void main() {
vec4 color = vec4(0, 0, 0, 0);
for (float h = 0.0; h < 9.0; h+=1.0) {
for (float w = 0.0; w < 9.0; w+=1.0) {
vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));
color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];
}
}
gl_FragColor = color;
}`,
          Convolute_9_0: `precision highp float;
uniform sampler2D uTexture;
uniform float uMatrix[81];
uniform float uStepW;
uniform float uStepH;
varying vec2 vTexCoord;
void main() {
vec4 color = vec4(0, 0, 0, 1);
for (float h = 0.0; h < 9.0; h+=1.0) {
for (float w = 0.0; w < 9.0; w+=1.0) {
vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));
color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];
}
}
float alpha = texture2D(uTexture, vTexCoord).a;
gl_FragColor = color;
gl_FragColor.a = alpha;
}`
        },
        /**
         * Constructor
         * @memberOf fabric.Image.filters.Convolute.prototype
         * @param {Object} [options] Options object
         * @param {Boolean} [options.opaque=false] Opaque value (true/false)
         * @param {Array} [options.matrix] Filter matrix
         */
        /**
        * Retrieves the cached shader.
        * @param {Object} options
        * @param {WebGLRenderingContext} options.context The GL context used for rendering.
        * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
        */
        retrieveShader: function(h) {
          var u = Math.sqrt(this.matrix.length), d = this.type + "_" + u + "_" + (this.opaque ? 1 : 0), m = this.fragmentSource[d];
          return h.programCache.hasOwnProperty(d) || (h.programCache[d] = this.createProgram(h.context, m)), h.programCache[d];
        },
        /**
         * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.
         *
         * @param {Object} options
         * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.
         */
        applyTo2d: function(h) {
          var u = h.imageData, d = u.data, m = this.matrix, p = Math.round(Math.sqrt(m.length)), v = Math.floor(p / 2), b = u.width, y = u.height, w = h.ctx.createImageData(b, y), x = w.data, _ = this.opaque ? 1 : 0, S, k, F, L, j, G, te, U, K, re, ne, se, T;
          for (ne = 0; ne < y; ne++)
            for (re = 0; re < b; re++) {
              for (j = (ne * b + re) * 4, S = 0, k = 0, F = 0, L = 0, T = 0; T < p; T++)
                for (se = 0; se < p; se++)
                  te = ne + T - v, G = re + se - v, !(te < 0 || te >= y || G < 0 || G >= b) && (U = (te * b + G) * 4, K = m[T * p + se], S += d[U] * K, k += d[U + 1] * K, F += d[U + 2] * K, _ || (L += d[U + 3] * K));
              x[j] = S, x[j + 1] = k, x[j + 2] = F, _ ? x[j + 3] = d[j + 3] : x[j + 3] = L;
            }
          h.imageData = w;
        },
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(h, u) {
          return {
            uMatrix: h.getUniformLocation(u, "uMatrix"),
            uOpaque: h.getUniformLocation(u, "uOpaque"),
            uHalfSize: h.getUniformLocation(u, "uHalfSize"),
            uSize: h.getUniformLocation(u, "uSize")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(h, u) {
          h.uniform1fv(u.uMatrix, this.matrix);
        },
        /**
         * Returns object representation of an instance
         * @return {Object} Object representation of an instance
         */
        toObject: function() {
          return c(this.callSuper("toObject"), {
            opaque: this.opaque,
            matrix: this.matrix
          });
        }
      }
    ), s.Image.filters.Convolute.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.Image.filters, f = s.util.createClass;
    c.Grayscale = f(
      c.BaseFilter,
      /** @lends fabric.Image.filters.Grayscale.prototype */
      {
        /**
         * Filter type
         * @param {String} type
         * @default
         */
        type: "Grayscale",
        fragmentSource: {
          average: `precision highp float;
uniform sampler2D uTexture;
varying vec2 vTexCoord;
void main() {
vec4 color = texture2D(uTexture, vTexCoord);
float average = (color.r + color.b + color.g) / 3.0;
gl_FragColor = vec4(average, average, average, color.a);
}`,
          lightness: `precision highp float;
uniform sampler2D uTexture;
uniform int uMode;
varying vec2 vTexCoord;
void main() {
vec4 col = texture2D(uTexture, vTexCoord);
float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;
gl_FragColor = vec4(average, average, average, col.a);
}`,
          luminosity: `precision highp float;
uniform sampler2D uTexture;
uniform int uMode;
varying vec2 vTexCoord;
void main() {
vec4 col = texture2D(uTexture, vTexCoord);
float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;
gl_FragColor = vec4(average, average, average, col.a);
}`
        },
        /**
         * Grayscale mode, between 'average', 'lightness', 'luminosity'
         * @param {String} type
         * @default
         */
        mode: "average",
        mainParameter: "mode",
        /**
         * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.
         *
         * @param {Object} options
         * @param {ImageData} options.imageData The Uint8Array to be filtered.
         */
        applyTo2d: function(o) {
          var h = o.imageData, u = h.data, d, m = u.length, p, v = this.mode;
          for (d = 0; d < m; d += 4)
            v === "average" ? p = (u[d] + u[d + 1] + u[d + 2]) / 3 : v === "lightness" ? p = (Math.min(u[d], u[d + 1], u[d + 2]) + Math.max(u[d], u[d + 1], u[d + 2])) / 2 : v === "luminosity" && (p = 0.21 * u[d] + 0.72 * u[d + 1] + 0.07 * u[d + 2]), u[d] = p, u[d + 1] = p, u[d + 2] = p;
        },
        /**
         * Retrieves the cached shader.
         * @param {Object} options
         * @param {WebGLRenderingContext} options.context The GL context used for rendering.
         * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
         */
        retrieveShader: function(o) {
          var h = this.type + "_" + this.mode;
          if (!o.programCache.hasOwnProperty(h)) {
            var u = this.fragmentSource[this.mode];
            o.programCache[h] = this.createProgram(o.context, u);
          }
          return o.programCache[h];
        },
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(o, h) {
          return {
            uMode: o.getUniformLocation(h, "uMode")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(o, h) {
          var u = 1;
          o.uniform1i(h.uMode, u);
        },
        /**
         * Grayscale filter isNeutralState implementation
         * The filter is never neutral
         * on the image
         **/
        isNeutralState: function() {
          return !1;
        }
      }
    ), s.Image.filters.Grayscale.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.Image.filters, f = s.util.createClass;
    c.Invert = f(
      c.BaseFilter,
      /** @lends fabric.Image.filters.Invert.prototype */
      {
        /**
         * Filter type
         * @param {String} type
         * @default
         */
        type: "Invert",
        fragmentSource: `precision highp float;
uniform sampler2D uTexture;
uniform int uInvert;
varying vec2 vTexCoord;
void main() {
vec4 color = texture2D(uTexture, vTexCoord);
if (uInvert == 1) {
gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);
} else {
gl_FragColor = color;
}
}`,
        /**
         * Filter invert. if false, does nothing
         * @param {Boolean} invert
         * @default
         */
        invert: !0,
        mainParameter: "invert",
        /**
         * Apply the Invert operation to a Uint8Array representing the pixels of an image.
         *
         * @param {Object} options
         * @param {ImageData} options.imageData The Uint8Array to be filtered.
         */
        applyTo2d: function(o) {
          var h = o.imageData, u = h.data, d, m = u.length;
          for (d = 0; d < m; d += 4)
            u[d] = 255 - u[d], u[d + 1] = 255 - u[d + 1], u[d + 2] = 255 - u[d + 2];
        },
        /**
         * Invert filter isNeutralState implementation
         * Used only in image applyFilters to discard filters that will not have an effect
         * on the image
         * @param {Object} options
         **/
        isNeutralState: function() {
          return !this.invert;
        },
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(o, h) {
          return {
            uInvert: o.getUniformLocation(h, "uInvert")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(o, h) {
          o.uniform1i(h.uInvert, this.invert);
        }
      }
    ), s.Image.filters.Invert.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.util.object.extend, f = s.Image.filters, o = s.util.createClass;
    f.Noise = o(
      f.BaseFilter,
      /** @lends fabric.Image.filters.Noise.prototype */
      {
        /**
         * Filter type
         * @param {String} type
         * @default
         */
        type: "Noise",
        /**
         * Fragment source for the noise program
         */
        fragmentSource: `precision highp float;
uniform sampler2D uTexture;
uniform float uStepH;
uniform float uNoise;
uniform float uSeed;
varying vec2 vTexCoord;
float rand(vec2 co, float seed, float vScale) {
return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);
}
void main() {
vec4 color = texture2D(uTexture, vTexCoord);
color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;
gl_FragColor = color;
}`,
        /**
         * Describe the property that is the filter parameter
         * @param {String} m
         * @default
         */
        mainParameter: "noise",
        /**
         * Noise value, from
         * @param {Number} noise
         * @default
         */
        noise: 0,
        /**
         * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.
         *
         * @param {Object} options
         * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.
         */
        applyTo2d: function(h) {
          if (this.noise !== 0) {
            var u = h.imageData, d = u.data, m, p = d.length, v = this.noise, b;
            for (m = 0, p = d.length; m < p; m += 4)
              b = (0.5 - Math.random()) * v, d[m] += b, d[m + 1] += b, d[m + 2] += b;
          }
        },
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(h, u) {
          return {
            uNoise: h.getUniformLocation(u, "uNoise"),
            uSeed: h.getUniformLocation(u, "uSeed")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(h, u) {
          h.uniform1f(u.uNoise, this.noise / 255), h.uniform1f(u.uSeed, Math.random());
        },
        /**
         * Returns object representation of an instance
         * @return {Object} Object representation of an instance
         */
        toObject: function() {
          return c(this.callSuper("toObject"), {
            noise: this.noise
          });
        }
      }
    ), s.Image.filters.Noise.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.Image.filters, f = s.util.createClass;
    c.Pixelate = f(
      c.BaseFilter,
      /** @lends fabric.Image.filters.Pixelate.prototype */
      {
        /**
         * Filter type
         * @param {String} type
         * @default
         */
        type: "Pixelate",
        blocksize: 4,
        mainParameter: "blocksize",
        /**
         * Fragment source for the Pixelate program
         */
        fragmentSource: `precision highp float;
uniform sampler2D uTexture;
uniform float uBlocksize;
uniform float uStepW;
uniform float uStepH;
varying vec2 vTexCoord;
void main() {
float blockW = uBlocksize * uStepW;
float blockH = uBlocksize * uStepW;
int posX = int(vTexCoord.x / blockW);
int posY = int(vTexCoord.y / blockH);
float fposX = float(posX);
float fposY = float(posY);
vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);
vec4 color = texture2D(uTexture, squareCoords);
gl_FragColor = color;
}`,
        /**
         * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.
         *
         * @param {Object} options
         * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.
         */
        applyTo2d: function(o) {
          var h = o.imageData, u = h.data, d = h.height, m = h.width, p, v, b, y, w, x, _, S, k, F, L;
          for (v = 0; v < d; v += this.blocksize)
            for (b = 0; b < m; b += this.blocksize)
              for (p = v * 4 * m + b * 4, y = u[p], w = u[p + 1], x = u[p + 2], _ = u[p + 3], F = Math.min(v + this.blocksize, d), L = Math.min(b + this.blocksize, m), S = v; S < F; S++)
                for (k = b; k < L; k++)
                  p = S * 4 * m + k * 4, u[p] = y, u[p + 1] = w, u[p + 2] = x, u[p + 3] = _;
        },
        /**
         * Indicate when the filter is not gonna apply changes to the image
         **/
        isNeutralState: function() {
          return this.blocksize === 1;
        },
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(o, h) {
          return {
            uBlocksize: o.getUniformLocation(h, "uBlocksize"),
            uStepW: o.getUniformLocation(h, "uStepW"),
            uStepH: o.getUniformLocation(h, "uStepH")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(o, h) {
          o.uniform1f(h.uBlocksize, this.blocksize);
        }
      }
    ), s.Image.filters.Pixelate.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.util.object.extend, f = s.Image.filters, o = s.util.createClass;
    f.RemoveColor = o(
      f.BaseFilter,
      /** @lends fabric.Image.filters.RemoveColor.prototype */
      {
        /**
         * Filter type
         * @param {String} type
         * @default
         */
        type: "RemoveColor",
        /**
         * Color to remove, in any format understood by fabric.Color.
         * @param {String} type
         * @default
         */
        color: "#FFFFFF",
        /**
         * Fragment source for the brightness program
         */
        fragmentSource: `precision highp float;
uniform sampler2D uTexture;
uniform vec4 uLow;
uniform vec4 uHigh;
varying vec2 vTexCoord;
void main() {
gl_FragColor = texture2D(uTexture, vTexCoord);
if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {
gl_FragColor.a = 0.0;
}
}`,
        /**
         * distance to actual color, as value up or down from each r,g,b
         * between 0 and 1
         **/
        distance: 0.02,
        /**
         * For color to remove inside distance, use alpha channel for a smoother deletion
         * NOT IMPLEMENTED YET
         **/
        useAlpha: !1,
        /**
         * Constructor
         * @memberOf fabric.Image.filters.RemoveWhite.prototype
         * @param {Object} [options] Options object
         * @param {Number} [options.color=#RRGGBB] Threshold value
         * @param {Number} [options.distance=10] Distance value
         */
        /**
         * Applies filter to canvas element
         * @param {Object} canvasEl Canvas element to apply filter to
         */
        applyTo2d: function(h) {
          var u = h.imageData, d = u.data, m, p = this.distance * 255, v, b, y, w = new s.Color(this.color).getSource(), x = [
            w[0] - p,
            w[1] - p,
            w[2] - p
          ], _ = [
            w[0] + p,
            w[1] + p,
            w[2] + p
          ];
          for (m = 0; m < d.length; m += 4)
            v = d[m], b = d[m + 1], y = d[m + 2], v > x[0] && b > x[1] && y > x[2] && v < _[0] && b < _[1] && y < _[2] && (d[m + 3] = 0);
        },
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(h, u) {
          return {
            uLow: h.getUniformLocation(u, "uLow"),
            uHigh: h.getUniformLocation(u, "uHigh")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(h, u) {
          var d = new s.Color(this.color).getSource(), m = parseFloat(this.distance), p = [
            0 + d[0] / 255 - m,
            0 + d[1] / 255 - m,
            0 + d[2] / 255 - m,
            1
          ], v = [
            d[0] / 255 + m,
            d[1] / 255 + m,
            d[2] / 255 + m,
            1
          ];
          h.uniform4fv(u.uLow, p), h.uniform4fv(u.uHigh, v);
        },
        /**
         * Returns object representation of an instance
         * @return {Object} Object representation of an instance
         */
        toObject: function() {
          return c(this.callSuper("toObject"), {
            color: this.color,
            distance: this.distance
          });
        }
      }
    ), s.Image.filters.RemoveColor.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.Image.filters, f = s.util.createClass, o = {
      Brownie: [
        0.5997,
        0.34553,
        -0.27082,
        0,
        0.186,
        -0.0377,
        0.86095,
        0.15059,
        0,
        -0.1449,
        0.24113,
        -0.07441,
        0.44972,
        0,
        -0.02965,
        0,
        0,
        0,
        1,
        0
      ],
      Vintage: [
        0.62793,
        0.32021,
        -0.03965,
        0,
        0.03784,
        0.02578,
        0.64411,
        0.03259,
        0,
        0.02926,
        0.0466,
        -0.08512,
        0.52416,
        0,
        0.02023,
        0,
        0,
        0,
        1,
        0
      ],
      Kodachrome: [
        1.12855,
        -0.39673,
        -0.03992,
        0,
        0.24991,
        -0.16404,
        1.08352,
        -0.05498,
        0,
        0.09698,
        -0.16786,
        -0.56034,
        1.60148,
        0,
        0.13972,
        0,
        0,
        0,
        1,
        0
      ],
      Technicolor: [
        1.91252,
        -0.85453,
        -0.09155,
        0,
        0.04624,
        -0.30878,
        1.76589,
        -0.10601,
        0,
        -0.27589,
        -0.2311,
        -0.75018,
        1.84759,
        0,
        0.12137,
        0,
        0,
        0,
        1,
        0
      ],
      Polaroid: [
        1.438,
        -0.062,
        -0.062,
        0,
        0,
        -0.122,
        1.378,
        -0.122,
        0,
        0,
        -0.016,
        -0.016,
        1.483,
        0,
        0,
        0,
        0,
        0,
        1,
        0
      ],
      Sepia: [
        0.393,
        0.769,
        0.189,
        0,
        0,
        0.349,
        0.686,
        0.168,
        0,
        0,
        0.272,
        0.534,
        0.131,
        0,
        0,
        0,
        0,
        0,
        1,
        0
      ],
      BlackWhite: [
        1.5,
        1.5,
        1.5,
        0,
        -1,
        1.5,
        1.5,
        1.5,
        0,
        -1,
        1.5,
        1.5,
        1.5,
        0,
        -1,
        0,
        0,
        0,
        1,
        0
      ]
    };
    for (var h in o)
      c[h] = f(
        c.ColorMatrix,
        /** @lends fabric.Image.filters.Sepia.prototype */
        {
          /**
           * Filter type
           * @param {String} type
           * @default
           */
          type: h,
          /**
           * Colormatrix for the effect
           * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning
           * outside the -1, 1 range.
           * @param {Array} matrix array of 20 numbers.
           * @default
           */
          matrix: o[h],
          /**
           * Lock the matrix export for this kind of static, parameter less filters.
           */
          mainParameter: !1,
          /**
           * Lock the colormatrix on the color part, skipping alpha
           */
          colorsOnly: !0
        }
      ), s.Image.filters[h].fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric, c = s.Image.filters, f = s.util.createClass;
    c.BlendColor = f(
      c.BaseFilter,
      /** @lends fabric.Image.filters.Blend.prototype */
      {
        type: "BlendColor",
        /**
         * Color to make the blend operation with. default to a reddish color since black or white
         * gives always strong result.
         * @type String
         * @default
         **/
        color: "#F95C63",
        /**
         * Blend mode for the filter: one of multiply, add, diff, screen, subtract,
         * darken, lighten, overlay, exclusion, tint.
         * @type String
         * @default
         **/
        mode: "multiply",
        /**
         * alpha value. represent the strength of the blend color operation.
         * @type Number
         * @default
         **/
        alpha: 1,
        /**
         * Fragment source for the Multiply program
         */
        fragmentSource: {
          multiply: `gl_FragColor.rgb *= uColor.rgb;
`,
          screen: `gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);
`,
          add: `gl_FragColor.rgb += uColor.rgb;
`,
          diff: `gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);
`,
          subtract: `gl_FragColor.rgb -= uColor.rgb;
`,
          lighten: `gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);
`,
          darken: `gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);
`,
          exclusion: `gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);
`,
          overlay: `if (uColor.r < 0.5) {
gl_FragColor.r *= 2.0 * uColor.r;
} else {
gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);
}
if (uColor.g < 0.5) {
gl_FragColor.g *= 2.0 * uColor.g;
} else {
gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);
}
if (uColor.b < 0.5) {
gl_FragColor.b *= 2.0 * uColor.b;
} else {
gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);
}
`,
          tint: `gl_FragColor.rgb *= (1.0 - uColor.a);
gl_FragColor.rgb += uColor.rgb;
`
        },
        /**
         * build the fragment source for the filters, joining the common part with
         * the specific one.
         * @param {String} mode the mode of the filter, a key of this.fragmentSource
         * @return {String} the source to be compiled
         * @private
         */
        buildSource: function(o) {
          return `precision highp float;
uniform sampler2D uTexture;
uniform vec4 uColor;
varying vec2 vTexCoord;
void main() {
vec4 color = texture2D(uTexture, vTexCoord);
gl_FragColor = color;
if (color.a > 0.0) {
` + this.fragmentSource[o] + `}
}`;
        },
        /**
         * Retrieves the cached shader.
         * @param {Object} options
         * @param {WebGLRenderingContext} options.context The GL context used for rendering.
         * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
         */
        retrieveShader: function(o) {
          var h = this.type + "_" + this.mode, u;
          return o.programCache.hasOwnProperty(h) || (u = this.buildSource(this.mode), o.programCache[h] = this.createProgram(o.context, u)), o.programCache[h];
        },
        /**
         * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.
         *
         * @param {Object} options
         * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.
         */
        applyTo2d: function(o) {
          var h = o.imageData, u = h.data, d = u.length, m, p, v, b, y, w, x, _ = 1 - this.alpha;
          x = new s.Color(this.color).getSource(), m = x[0] * this.alpha, p = x[1] * this.alpha, v = x[2] * this.alpha;
          for (var S = 0; S < d; S += 4)
            switch (b = u[S], y = u[S + 1], w = u[S + 2], this.mode) {
              case "multiply":
                u[S] = b * m / 255, u[S + 1] = y * p / 255, u[S + 2] = w * v / 255;
                break;
              case "screen":
                u[S] = 255 - (255 - b) * (255 - m) / 255, u[S + 1] = 255 - (255 - y) * (255 - p) / 255, u[S + 2] = 255 - (255 - w) * (255 - v) / 255;
                break;
              case "add":
                u[S] = b + m, u[S + 1] = y + p, u[S + 2] = w + v;
                break;
              case "diff":
              case "difference":
                u[S] = Math.abs(b - m), u[S + 1] = Math.abs(y - p), u[S + 2] = Math.abs(w - v);
                break;
              case "subtract":
                u[S] = b - m, u[S + 1] = y - p, u[S + 2] = w - v;
                break;
              case "darken":
                u[S] = Math.min(b, m), u[S + 1] = Math.min(y, p), u[S + 2] = Math.min(w, v);
                break;
              case "lighten":
                u[S] = Math.max(b, m), u[S + 1] = Math.max(y, p), u[S + 2] = Math.max(w, v);
                break;
              case "overlay":
                u[S] = m < 128 ? 2 * b * m / 255 : 255 - 2 * (255 - b) * (255 - m) / 255, u[S + 1] = p < 128 ? 2 * y * p / 255 : 255 - 2 * (255 - y) * (255 - p) / 255, u[S + 2] = v < 128 ? 2 * w * v / 255 : 255 - 2 * (255 - w) * (255 - v) / 255;
                break;
              case "exclusion":
                u[S] = m + b - 2 * m * b / 255, u[S + 1] = p + y - 2 * p * y / 255, u[S + 2] = v + w - 2 * v * w / 255;
                break;
              case "tint":
                u[S] = m + b * _, u[S + 1] = p + y * _, u[S + 2] = v + w * _;
            }
        },
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(o, h) {
          return {
            uColor: o.getUniformLocation(h, "uColor")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(o, h) {
          var u = new s.Color(this.color).getSource();
          u[0] = this.alpha * u[0] / 255, u[1] = this.alpha * u[1] / 255, u[2] = this.alpha * u[2] / 255, u[3] = this.alpha, o.uniform4fv(h.uColor, u);
        },
        /**
         * Returns object representation of an instance
         * @return {Object} Object representation of an instance
         */
        toObject: function() {
          return {
            type: this.type,
            color: this.color,
            mode: this.mode,
            alpha: this.alpha
          };
        }
      }
    ), s.Image.filters.BlendColor.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric, c = s.Image.filters, f = s.util.createClass;
    c.BlendImage = f(
      c.BaseFilter,
      /** @lends fabric.Image.filters.BlendImage.prototype */
      {
        type: "BlendImage",
        /**
         * Color to make the blend operation with. default to a reddish color since black or white
         * gives always strong result.
         **/
        image: null,
        /**
         * Blend mode for the filter (one of "multiply", "mask")
         * @type String
         * @default
         **/
        mode: "multiply",
        /**
         * alpha value. represent the strength of the blend image operation.
         * not implemented.
         **/
        alpha: 1,
        vertexSource: `attribute vec2 aPosition;
varying vec2 vTexCoord;
varying vec2 vTexCoord2;
uniform mat3 uTransformMatrix;
void main() {
vTexCoord = aPosition;
vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;
gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);
}`,
        /**
         * Fragment source for the Multiply program
         */
        fragmentSource: {
          multiply: `precision highp float;
uniform sampler2D uTexture;
uniform sampler2D uImage;
uniform vec4 uColor;
varying vec2 vTexCoord;
varying vec2 vTexCoord2;
void main() {
vec4 color = texture2D(uTexture, vTexCoord);
vec4 color2 = texture2D(uImage, vTexCoord2);
color.rgba *= color2.rgba;
gl_FragColor = color;
}`,
          mask: `precision highp float;
uniform sampler2D uTexture;
uniform sampler2D uImage;
uniform vec4 uColor;
varying vec2 vTexCoord;
varying vec2 vTexCoord2;
void main() {
vec4 color = texture2D(uTexture, vTexCoord);
vec4 color2 = texture2D(uImage, vTexCoord2);
color.a = color2.a;
gl_FragColor = color;
}`
        },
        /**
         * Retrieves the cached shader.
         * @param {Object} options
         * @param {WebGLRenderingContext} options.context The GL context used for rendering.
         * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
         */
        retrieveShader: function(o) {
          var h = this.type + "_" + this.mode, u = this.fragmentSource[this.mode];
          return o.programCache.hasOwnProperty(h) || (o.programCache[h] = this.createProgram(o.context, u)), o.programCache[h];
        },
        applyToWebGL: function(o) {
          var h = o.context, u = this.createTexture(o.filterBackend, this.image);
          this.bindAdditionalTexture(h, u, h.TEXTURE1), this.callSuper("applyToWebGL", o), this.unbindAdditionalTexture(h, h.TEXTURE1);
        },
        createTexture: function(o, h) {
          return o.getCachedTexture(h.cacheKey, h._element);
        },
        /**
         * Calculate a transformMatrix to adapt the image to blend over
         * @param {Object} options
         * @param {WebGLRenderingContext} options.context The GL context used for rendering.
         * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
         */
        calculateMatrix: function() {
          var o = this.image, h = o._element.width, u = o._element.height;
          return [
            1 / o.scaleX,
            0,
            0,
            0,
            1 / o.scaleY,
            0,
            -o.left / h,
            -o.top / u,
            1
          ];
        },
        /**
         * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.
         *
         * @param {Object} options
         * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.
         */
        applyTo2d: function(o) {
          var h = o.imageData, u = o.filterBackend.resources, d = h.data, m = d.length, p = h.width, v = h.height, b, y, w, x, _, S, k, F, L, j, G = this.image, te;
          u.blendImage || (u.blendImage = s.util.createCanvasElement()), L = u.blendImage, j = L.getContext("2d"), L.width !== p || L.height !== v ? (L.width = p, L.height = v) : j.clearRect(0, 0, p, v), j.setTransform(G.scaleX, 0, 0, G.scaleY, G.left, G.top), j.drawImage(G._element, 0, 0, p, v), te = j.getImageData(0, 0, p, v).data;
          for (var U = 0; U < m; U += 4)
            switch (_ = d[U], S = d[U + 1], k = d[U + 2], F = d[U + 3], b = te[U], y = te[U + 1], w = te[U + 2], x = te[U + 3], this.mode) {
              case "multiply":
                d[U] = _ * b / 255, d[U + 1] = S * y / 255, d[U + 2] = k * w / 255, d[U + 3] = F * x / 255;
                break;
              case "mask":
                d[U + 3] = x;
                break;
            }
        },
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(o, h) {
          return {
            uTransformMatrix: o.getUniformLocation(h, "uTransformMatrix"),
            uImage: o.getUniformLocation(h, "uImage")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(o, h) {
          var u = this.calculateMatrix();
          o.uniform1i(h.uImage, 1), o.uniformMatrix3fv(h.uTransformMatrix, !1, u);
        },
        /**
         * Returns object representation of an instance
         * @return {Object} Object representation of an instance
         */
        toObject: function() {
          return {
            type: this.type,
            image: this.image && this.image.toObject(),
            mode: this.mode,
            alpha: this.alpha
          };
        }
      }
    ), s.Image.filters.BlendImage.fromObject = function(o, h) {
      s.Image.fromObject(o.image, function(u) {
        var d = s.util.object.clone(o);
        d.image = u, h(new s.Image.filters.BlendImage(d));
      });
    };
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = Math.pow, f = Math.floor, o = Math.sqrt, h = Math.abs, u = Math.round, d = Math.sin, m = Math.ceil, p = s.Image.filters, v = s.util.createClass;
    p.Resize = v(
      p.BaseFilter,
      /** @lends fabric.Image.filters.Resize.prototype */
      {
        /**
         * Filter type
         * @param {String} type
         * @default
         */
        type: "Resize",
        /**
         * Resize type
         * for webgl resizeType is just lanczos, for canvas2d can be:
         * bilinear, hermite, sliceHack, lanczos.
         * @param {String} resizeType
         * @default
         */
        resizeType: "hermite",
        /**
         * Scale factor for resizing, x axis
         * @param {Number} scaleX
         * @default
         */
        scaleX: 1,
        /**
         * Scale factor for resizing, y axis
         * @param {Number} scaleY
         * @default
         */
        scaleY: 1,
        /**
         * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos
         * @param {Number} lanczosLobes
         * @default
         */
        lanczosLobes: 3,
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(b, y) {
          return {
            uDelta: b.getUniformLocation(y, "uDelta"),
            uTaps: b.getUniformLocation(y, "uTaps")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(b, y) {
          b.uniform2fv(y.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]), b.uniform1fv(y.uTaps, this.taps);
        },
        /**
         * Retrieves the cached shader.
         * @param {Object} options
         * @param {WebGLRenderingContext} options.context The GL context used for rendering.
         * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
         */
        retrieveShader: function(b) {
          var y = this.getFilterWindow(), w = this.type + "_" + y;
          if (!b.programCache.hasOwnProperty(w)) {
            var x = this.generateShader(y);
            b.programCache[w] = this.createProgram(b.context, x);
          }
          return b.programCache[w];
        },
        getFilterWindow: function() {
          var b = this.tempScale;
          return Math.ceil(this.lanczosLobes / b);
        },
        getTaps: function() {
          for (var b = this.lanczosCreate(this.lanczosLobes), y = this.tempScale, w = this.getFilterWindow(), x = new Array(w), _ = 1; _ <= w; _++)
            x[_ - 1] = b(_ * y);
          return x;
        },
        /**
         * Generate vertex and shader sources from the necessary steps numbers
         * @param {Number} filterWindow
         */
        generateShader: function(x) {
          for (var y = new Array(x), w = this.fragmentSourceTOP, x, _ = 1; _ <= x; _++)
            y[_ - 1] = _ + ".0 * uDelta";
          return w += "uniform float uTaps[" + x + `];
`, w += `void main() {
`, w += `  vec4 color = texture2D(uTexture, vTexCoord);
`, w += `  float sum = 1.0;
`, y.forEach(function(S, k) {
            w += "  color += texture2D(uTexture, vTexCoord + " + S + ") * uTaps[" + k + `];
`, w += "  color += texture2D(uTexture, vTexCoord - " + S + ") * uTaps[" + k + `];
`, w += "  sum += 2.0 * uTaps[" + k + `];
`;
          }), w += `  gl_FragColor = color / sum;
`, w += "}", w;
        },
        fragmentSourceTOP: `precision highp float;
uniform sampler2D uTexture;
uniform vec2 uDelta;
varying vec2 vTexCoord;
`,
        /**
         * Apply the resize filter to the image
         * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.
         *
         * @param {Object} options
         * @param {Number} options.passes The number of filters remaining to be executed
         * @param {Boolean} options.webgl Whether to use webgl to render the filter.
         * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.
         * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.
         * @param {WebGLRenderingContext} options.context The GL context used for rendering.
         * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
         */
        applyTo: function(b) {
          b.webgl ? (b.passes++, this.width = b.sourceWidth, this.horizontal = !0, this.dW = Math.round(this.width * this.scaleX), this.dH = b.sourceHeight, this.tempScale = this.dW / this.width, this.taps = this.getTaps(), b.destinationWidth = this.dW, this._setupFrameBuffer(b), this.applyToWebGL(b), this._swapTextures(b), b.sourceWidth = b.destinationWidth, this.height = b.sourceHeight, this.horizontal = !1, this.dH = Math.round(this.height * this.scaleY), this.tempScale = this.dH / this.height, this.taps = this.getTaps(), b.destinationHeight = this.dH, this._setupFrameBuffer(b), this.applyToWebGL(b), this._swapTextures(b), b.sourceHeight = b.destinationHeight) : this.applyTo2d(b);
        },
        isNeutralState: function() {
          return this.scaleX === 1 && this.scaleY === 1;
        },
        lanczosCreate: function(b) {
          return function(y) {
            if (y >= b || y <= -b)
              return 0;
            if (y < 11920929e-14 && y > -11920929e-14)
              return 1;
            y *= Math.PI;
            var w = y / b;
            return d(y) / y * d(w) / w;
          };
        },
        /**
         * Applies filter to canvas element
         * @memberOf fabric.Image.filters.Resize.prototype
         * @param {Object} canvasEl Canvas element to apply filter to
         * @param {Number} scaleX
         * @param {Number} scaleY
         */
        applyTo2d: function(b) {
          var y = b.imageData, w = this.scaleX, x = this.scaleY;
          this.rcpScaleX = 1 / w, this.rcpScaleY = 1 / x;
          var _ = y.width, S = y.height, k = u(_ * w), F = u(S * x), L;
          this.resizeType === "sliceHack" ? L = this.sliceByTwo(b, _, S, k, F) : this.resizeType === "hermite" ? L = this.hermiteFastResize(b, _, S, k, F) : this.resizeType === "bilinear" ? L = this.bilinearFiltering(b, _, S, k, F) : this.resizeType === "lanczos" && (L = this.lanczosResize(b, _, S, k, F)), b.imageData = L;
        },
        /**
         * Filter sliceByTwo
         * @param {Object} canvasEl Canvas element to apply filter to
         * @param {Number} oW Original Width
         * @param {Number} oH Original Height
         * @param {Number} dW Destination Width
         * @param {Number} dH Destination Height
         * @returns {ImageData}
         */
        sliceByTwo: function(b, y, w, x, _) {
          var S = b.imageData, k = 0.5, F = !1, L = !1, j = y * k, G = w * k, te = s.filterBackend.resources, U, K, re = 0, ne = 0, se = y, T = 0;
          for (te.sliceByTwo || (te.sliceByTwo = document.createElement("canvas")), U = te.sliceByTwo, (U.width < y * 1.5 || U.height < w) && (U.width = y * 1.5, U.height = w), K = U.getContext("2d"), K.clearRect(0, 0, y * 1.5, w), K.putImageData(S, 0, 0), x = f(x), _ = f(_); !F || !L; )
            y = j, w = G, x < f(j * k) ? j = f(j * k) : (j = x, F = !0), _ < f(G * k) ? G = f(G * k) : (G = _, L = !0), K.drawImage(U, re, ne, y, w, se, T, j, G), re = se, ne = T, T += G;
          return K.getImageData(re, ne, x, _);
        },
        /**
         * Filter lanczosResize
         * @param {Object} canvasEl Canvas element to apply filter to
         * @param {Number} oW Original Width
         * @param {Number} oH Original Height
         * @param {Number} dW Destination Width
         * @param {Number} dH Destination Height
         * @returns {ImageData}
         */
        lanczosResize: function(b, y, w, x, _) {
          function S(D) {
            var M, $, A, E, R, N, H, V, Z, ee, ue;
            for (T.x = (D + 0.5) * G, P.x = f(T.x), M = 0; M < _; M++) {
              for (T.y = (M + 0.5) * te, P.y = f(T.y), R = 0, N = 0, H = 0, V = 0, Z = 0, $ = P.x - re; $ <= P.x + re; $++)
                if (!($ < 0 || $ >= y)) {
                  ee = f(1e3 * h($ - T.x)), se[ee] || (se[ee] = {});
                  for (var W = P.y - ne; W <= P.y + ne; W++)
                    W < 0 || W >= w || (ue = f(1e3 * h(W - T.y)), se[ee][ue] || (se[ee][ue] = j(o(c(ee * U, 2) + c(ue * K, 2)) / 1e3)), A = se[ee][ue], A > 0 && (E = (W * y + $) * 4, R += A, N += A * k[E], H += A * k[E + 1], V += A * k[E + 2], Z += A * k[E + 3]));
                }
              E = (M * x + D) * 4, L[E] = N / R, L[E + 1] = H / R, L[E + 2] = V / R, L[E + 3] = Z / R;
            }
            return ++D < x ? S(D) : F;
          }
          var k = b.imageData.data, F = b.ctx.createImageData(x, _), L = F.data, j = this.lanczosCreate(this.lanczosLobes), G = this.rcpScaleX, te = this.rcpScaleY, U = 2 / this.rcpScaleX, K = 2 / this.rcpScaleY, re = m(G * this.lanczosLobes / 2), ne = m(te * this.lanczosLobes / 2), se = {}, T = {}, P = {};
          return S(0);
        },
        /**
         * bilinearFiltering
         * @param {Object} canvasEl Canvas element to apply filter to
         * @param {Number} oW Original Width
         * @param {Number} oH Original Height
         * @param {Number} dW Destination Width
         * @param {Number} dH Destination Height
         * @returns {ImageData}
         */
        bilinearFiltering: function(b, y, w, x, _) {
          var S, k, F, L, j, G, te, U, K, re, ne, se, T = 0, P, D = this.rcpScaleX, M = this.rcpScaleY, $ = 4 * (y - 1), A = b.imageData, E = A.data, R = b.ctx.createImageData(x, _), N = R.data;
          for (te = 0; te < _; te++)
            for (U = 0; U < x; U++)
              for (j = f(D * U), G = f(M * te), K = D * U - j, re = M * te - G, P = 4 * (G * y + j), ne = 0; ne < 4; ne++)
                S = E[P + ne], k = E[P + 4 + ne], F = E[P + $ + ne], L = E[P + $ + 4 + ne], se = S * (1 - K) * (1 - re) + k * K * (1 - re) + F * re * (1 - K) + L * K * re, N[T++] = se;
          return R;
        },
        /**
         * hermiteFastResize
         * @param {Object} canvasEl Canvas element to apply filter to
         * @param {Number} oW Original Width
         * @param {Number} oH Original Height
         * @param {Number} dW Destination Width
         * @param {Number} dH Destination Height
         * @returns {ImageData}
         */
        hermiteFastResize: function(b, y, w, x, _) {
          for (var S = this.rcpScaleX, k = this.rcpScaleY, F = m(S / 2), L = m(k / 2), j = b.imageData, G = j.data, te = b.ctx.createImageData(x, _), U = te.data, K = 0; K < _; K++)
            for (var re = 0; re < x; re++) {
              for (var ne = (re + K * x) * 4, se = 0, T = 0, P = 0, D = 0, M = 0, $ = 0, A = 0, E = (K + 0.5) * k, R = f(K * k); R < (K + 1) * k; R++)
                for (var N = h(E - (R + 0.5)) / L, H = (re + 0.5) * S, V = N * N, Z = f(re * S); Z < (re + 1) * S; Z++) {
                  var ee = h(H - (Z + 0.5)) / F, ue = o(V + ee * ee);
                  ue > 1 && ue < -1 || (se = 2 * ue * ue * ue - 3 * ue * ue + 1, se > 0 && (ee = 4 * (Z + R * y), A += se * G[ee + 3], P += se, G[ee + 3] < 255 && (se = se * G[ee + 3] / 250), D += se * G[ee], M += se * G[ee + 1], $ += se * G[ee + 2], T += se));
                }
              U[ne] = D / T, U[ne + 1] = M / T, U[ne + 2] = $ / T, U[ne + 3] = A / P;
            }
          return te;
        },
        /**
         * Returns object representation of an instance
         * @return {Object} Object representation of an instance
         */
        toObject: function() {
          return {
            type: this.type,
            scaleX: this.scaleX,
            scaleY: this.scaleY,
            resizeType: this.resizeType,
            lanczosLobes: this.lanczosLobes
          };
        }
      }
    ), s.Image.filters.Resize.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.Image.filters, f = s.util.createClass;
    c.Contrast = f(
      c.BaseFilter,
      /** @lends fabric.Image.filters.Contrast.prototype */
      {
        /**
         * Filter type
         * @param {String} type
         * @default
         */
        type: "Contrast",
        fragmentSource: `precision highp float;
uniform sampler2D uTexture;
uniform float uContrast;
varying vec2 vTexCoord;
void main() {
vec4 color = texture2D(uTexture, vTexCoord);
float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));
color.rgb = contrastF * (color.rgb - 0.5) + 0.5;
gl_FragColor = color;
}`,
        /**
         * contrast value, range from -1 to 1.
         * @param {Number} contrast
         * @default 0
         */
        contrast: 0,
        mainParameter: "contrast",
        /**
         * Constructor
         * @memberOf fabric.Image.filters.Contrast.prototype
         * @param {Object} [options] Options object
         * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)
         */
        /**
          * Apply the Contrast operation to a Uint8Array representing the pixels of an image.
          *
          * @param {Object} options
          * @param {ImageData} options.imageData The Uint8Array to be filtered.
          */
        applyTo2d: function(o) {
          if (this.contrast !== 0) {
            var h = o.imageData, u, m, d = h.data, m = d.length, p = Math.floor(this.contrast * 255), v = 259 * (p + 255) / (255 * (259 - p));
            for (u = 0; u < m; u += 4)
              d[u] = v * (d[u] - 128) + 128, d[u + 1] = v * (d[u + 1] - 128) + 128, d[u + 2] = v * (d[u + 2] - 128) + 128;
          }
        },
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(o, h) {
          return {
            uContrast: o.getUniformLocation(h, "uContrast")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(o, h) {
          o.uniform1f(h.uContrast, this.contrast);
        }
      }
    ), s.Image.filters.Contrast.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.Image.filters, f = s.util.createClass;
    c.Saturation = f(
      c.BaseFilter,
      /** @lends fabric.Image.filters.Saturation.prototype */
      {
        /**
         * Filter type
         * @param {String} type
         * @default
         */
        type: "Saturation",
        fragmentSource: `precision highp float;
uniform sampler2D uTexture;
uniform float uSaturation;
varying vec2 vTexCoord;
void main() {
vec4 color = texture2D(uTexture, vTexCoord);
float rgMax = max(color.r, color.g);
float rgbMax = max(rgMax, color.b);
color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;
color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;
color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;
gl_FragColor = color;
}`,
        /**
         * Saturation value, from -1 to 1.
         * Increases/decreases the color saturation.
         * A value of 0 has no effect.
         * 
         * @param {Number} saturation
         * @default
         */
        saturation: 0,
        mainParameter: "saturation",
        /**
         * Constructor
         * @memberOf fabric.Image.filters.Saturate.prototype
         * @param {Object} [options] Options object
         * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)
         */
        /**
         * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.
         *
         * @param {Object} options
         * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.
         */
        applyTo2d: function(o) {
          if (this.saturation !== 0) {
            var h = o.imageData, u = h.data, d = u.length, m = -this.saturation, p, v;
            for (p = 0; p < d; p += 4)
              v = Math.max(u[p], u[p + 1], u[p + 2]), u[p] += v !== u[p] ? (v - u[p]) * m : 0, u[p + 1] += v !== u[p + 1] ? (v - u[p + 1]) * m : 0, u[p + 2] += v !== u[p + 2] ? (v - u[p + 2]) * m : 0;
          }
        },
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(o, h) {
          return {
            uSaturation: o.getUniformLocation(h, "uSaturation")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(o, h) {
          o.uniform1f(h.uSaturation, -this.saturation);
        }
      }
    ), s.Image.filters.Saturation.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.Image.filters, f = s.util.createClass;
    c.Vibrance = f(
      c.BaseFilter,
      /** @lends fabric.Image.filters.Vibrance.prototype */
      {
        /**
         * Filter type
         * @param {String} type
         * @default
         */
        type: "Vibrance",
        fragmentSource: `precision highp float;
uniform sampler2D uTexture;
uniform float uVibrance;
varying vec2 vTexCoord;
void main() {
vec4 color = texture2D(uTexture, vTexCoord);
float max = max(color.r, max(color.g, color.b));
float avg = (color.r + color.g + color.b) / 3.0;
float amt = (abs(max - avg) * 2.0) * uVibrance;
color.r += max != color.r ? (max - color.r) * amt : 0.00;
color.g += max != color.g ? (max - color.g) * amt : 0.00;
color.b += max != color.b ? (max - color.b) * amt : 0.00;
gl_FragColor = color;
}`,
        /**
         * Vibrance value, from -1 to 1.
         * Increases/decreases the saturation of more muted colors with less effect on saturated colors.
         * A value of 0 has no effect.
         * 
         * @param {Number} vibrance
         * @default
         */
        vibrance: 0,
        mainParameter: "vibrance",
        /**
         * Constructor
         * @memberOf fabric.Image.filters.Vibrance.prototype
         * @param {Object} [options] Options object
         * @param {Number} [options.vibrance=0] Vibrance value for the image (between -1 and 1)
         */
        /**
         * Apply the Vibrance operation to a Uint8ClampedArray representing the pixels of an image.
         *
         * @param {Object} options
         * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.
         */
        applyTo2d: function(o) {
          if (this.vibrance !== 0) {
            var h = o.imageData, u = h.data, d = u.length, m = -this.vibrance, p, v, b, y;
            for (p = 0; p < d; p += 4)
              v = Math.max(u[p], u[p + 1], u[p + 2]), b = (u[p] + u[p + 1] + u[p + 2]) / 3, y = Math.abs(v - b) * 2 / 255 * m, u[p] += v !== u[p] ? (v - u[p]) * y : 0, u[p + 1] += v !== u[p + 1] ? (v - u[p + 1]) * y : 0, u[p + 2] += v !== u[p + 2] ? (v - u[p + 2]) * y : 0;
          }
        },
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(o, h) {
          return {
            uVibrance: o.getUniformLocation(h, "uVibrance")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(o, h) {
          o.uniform1f(h.uVibrance, -this.vibrance);
        }
      }
    ), s.Image.filters.Vibrance.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.Image.filters, f = s.util.createClass;
    c.Blur = f(
      c.BaseFilter,
      /** @lends fabric.Image.filters.Blur.prototype */
      {
        type: "Blur",
        /*
        'gl_FragColor = vec4(0.0);',
        'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',
        'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',
        'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',
        'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',
        'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',
        'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',
        'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',
        'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',
        'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',
        'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',
        'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',
        'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',
        'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',
        'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',
        'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',
        */
        /* eslint-disable max-len */
        fragmentSource: `precision highp float;
uniform sampler2D uTexture;
uniform vec2 uDelta;
varying vec2 vTexCoord;
const float nSamples = 15.0;
vec3 v3offset = vec3(12.9898, 78.233, 151.7182);
float random(vec3 scale) {
return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);
}
void main() {
vec4 color = vec4(0.0);
float total = 0.0;
float offset = random(v3offset);
for (float t = -nSamples; t <= nSamples; t++) {
float percent = (t + offset - 0.5) / nSamples;
float weight = 1.0 - abs(percent);
color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;
total += weight;
}
gl_FragColor = color / total;
}`,
        /* eslint-enable max-len */
        /**
         * blur value, in percentage of image dimensions.
         * specific to keep the image blur constant at different resolutions
         * range between 0 and 1.
         * @type Number
         * @default
         */
        blur: 0,
        mainParameter: "blur",
        applyTo: function(o) {
          o.webgl ? (this.aspectRatio = o.sourceWidth / o.sourceHeight, o.passes++, this._setupFrameBuffer(o), this.horizontal = !0, this.applyToWebGL(o), this._swapTextures(o), this._setupFrameBuffer(o), this.horizontal = !1, this.applyToWebGL(o), this._swapTextures(o)) : this.applyTo2d(o);
        },
        applyTo2d: function(o) {
          o.imageData = this.simpleBlur(o);
        },
        simpleBlur: function(o) {
          var h = o.filterBackend.resources, u, d, m = o.imageData.width, p = o.imageData.height;
          h.blurLayer1 || (h.blurLayer1 = s.util.createCanvasElement(), h.blurLayer2 = s.util.createCanvasElement()), u = h.blurLayer1, d = h.blurLayer2, (u.width !== m || u.height !== p) && (d.width = u.width = m, d.height = u.height = p);
          var v = u.getContext("2d"), b = d.getContext("2d"), y = 15, w, x, _, S, k = this.blur * 0.06 * 0.5;
          for (v.putImageData(o.imageData, 0, 0), b.clearRect(0, 0, m, p), S = -y; S <= y; S++)
            w = (Math.random() - 0.5) / 4, x = S / y, _ = k * x * m + w, b.globalAlpha = 1 - Math.abs(x), b.drawImage(u, _, w), v.drawImage(d, 0, 0), b.globalAlpha = 1, b.clearRect(0, 0, d.width, d.height);
          for (S = -y; S <= y; S++)
            w = (Math.random() - 0.5) / 4, x = S / y, _ = k * x * p + w, b.globalAlpha = 1 - Math.abs(x), b.drawImage(u, w, _), v.drawImage(d, 0, 0), b.globalAlpha = 1, b.clearRect(0, 0, d.width, d.height);
          o.ctx.drawImage(u, 0, 0);
          var F = o.ctx.getImageData(0, 0, u.width, u.height);
          return v.globalAlpha = 1, v.clearRect(0, 0, u.width, u.height), F;
        },
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(o, h) {
          return {
            delta: o.getUniformLocation(h, "uDelta")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(o, h) {
          var u = this.chooseRightDelta();
          o.uniform2fv(h.delta, u);
        },
        /**
         * choose right value of image percentage to blur with
         * @returns {Array} a numeric array with delta values
         */
        chooseRightDelta: function() {
          var o = 1, h = [0, 0], u;
          return this.horizontal ? this.aspectRatio > 1 && (o = 1 / this.aspectRatio) : this.aspectRatio < 1 && (o = this.aspectRatio), u = o * this.blur * 0.12, this.horizontal ? h[0] = u : h[1] = u, h;
        }
      }
    ), c.Blur.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.Image.filters, f = s.util.createClass;
    c.Gamma = f(
      c.BaseFilter,
      /** @lends fabric.Image.filters.Gamma.prototype */
      {
        /**
         * Filter type
         * @param {String} type
         * @default
         */
        type: "Gamma",
        fragmentSource: `precision highp float;
uniform sampler2D uTexture;
uniform vec3 uGamma;
varying vec2 vTexCoord;
void main() {
vec4 color = texture2D(uTexture, vTexCoord);
vec3 correction = (1.0 / uGamma);
color.r = pow(color.r, correction.r);
color.g = pow(color.g, correction.g);
color.b = pow(color.b, correction.b);
gl_FragColor = color;
gl_FragColor.rgb *= color.a;
}`,
        /**
         * Gamma array value, from 0.01 to 2.2.
         * @param {Array} gamma
         * @default
         */
        gamma: [1, 1, 1],
        /**
         * Describe the property that is the filter parameter
         * @param {String} m
         * @default
         */
        mainParameter: "gamma",
        /**
         * Constructor
         * @param {Object} [options] Options object
         */
        initialize: function(o) {
          this.gamma = [1, 1, 1], c.BaseFilter.prototype.initialize.call(this, o);
        },
        /**
         * Apply the Gamma operation to a Uint8Array representing the pixels of an image.
         *
         * @param {Object} options
         * @param {ImageData} options.imageData The Uint8Array to be filtered.
         */
        applyTo2d: function(o) {
          var h = o.imageData, u = h.data, d = this.gamma, m = u.length, p = 1 / d[0], v = 1 / d[1], b = 1 / d[2], y;
          for (this.rVals || (this.rVals = new Uint8Array(256), this.gVals = new Uint8Array(256), this.bVals = new Uint8Array(256)), y = 0, m = 256; y < m; y++)
            this.rVals[y] = Math.pow(y / 255, p) * 255, this.gVals[y] = Math.pow(y / 255, v) * 255, this.bVals[y] = Math.pow(y / 255, b) * 255;
          for (y = 0, m = u.length; y < m; y += 4)
            u[y] = this.rVals[u[y]], u[y + 1] = this.gVals[u[y + 1]], u[y + 2] = this.bVals[u[y + 2]];
        },
        /**
         * Return WebGL uniform locations for this filter's shader.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {WebGLShaderProgram} program This filter's compiled shader program.
         */
        getUniformLocations: function(o, h) {
          return {
            uGamma: o.getUniformLocation(h, "uGamma")
          };
        },
        /**
         * Send data from this filter to its shader program's uniforms.
         *
         * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
         * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
         */
        sendUniformData: function(o, h) {
          o.uniform3fv(h.uGamma, this.gamma);
        }
      }
    ), s.Image.filters.Gamma.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.Image.filters, f = s.util.createClass;
    c.Composed = f(
      c.BaseFilter,
      /** @lends fabric.Image.filters.Composed.prototype */
      {
        type: "Composed",
        /**
         * A non sparse array of filters to apply
         */
        subFilters: [],
        /**
         * Constructor
         * @param {Object} [options] Options object
         */
        initialize: function(o) {
          this.callSuper("initialize", o), this.subFilters = this.subFilters.slice(0);
        },
        /**
         * Apply this container's filters to the input image provided.
         *
         * @param {Object} options
         * @param {Number} options.passes The number of filters remaining to be applied.
         */
        applyTo: function(o) {
          o.passes += this.subFilters.length - 1, this.subFilters.forEach(function(h) {
            h.applyTo(o);
          });
        },
        /**
         * Serialize this filter into JSON.
         *
         * @returns {Object} A JSON representation of this filter.
         */
        toObject: function() {
          return s.util.object.extend(this.callSuper("toObject"), {
            subFilters: this.subFilters.map(function(o) {
              return o.toObject();
            })
          });
        },
        isNeutralState: function() {
          return !this.subFilters.some(function(o) {
            return !o.isNeutralState();
          });
        }
      }
    ), s.Image.filters.Composed.fromObject = function(o, h) {
      var u = o.subFilters || [], d = u.map(function(p) {
        return new s.Image.filters[p.type](p);
      }), m = new s.Image.filters.Composed({ subFilters: d });
      return h && h(m), m;
    };
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.Image.filters, f = s.util.createClass;
    c.HueRotation = f(
      c.ColorMatrix,
      /** @lends fabric.Image.filters.HueRotation.prototype */
      {
        /**
         * Filter type
         * @param {String} type
         * @default
         */
        type: "HueRotation",
        /**
         * HueRotation value, from -1 to 1.
         * the unit is radians
         * @param {Number} myParameter
         * @default
         */
        rotation: 0,
        /**
         * Describe the property that is the filter parameter
         * @param {String} m
         * @default
         */
        mainParameter: "rotation",
        calculateMatrix: function() {
          var o = this.rotation * Math.PI, h = s.util.cos(o), u = s.util.sin(o), d = 1 / 3, m = Math.sqrt(d) * u, p = 1 - h;
          this.matrix = [
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0
          ], this.matrix[0] = h + p / 3, this.matrix[1] = d * p - m, this.matrix[2] = d * p + m, this.matrix[5] = d * p + m, this.matrix[6] = h + d * p, this.matrix[7] = d * p - m, this.matrix[10] = d * p - m, this.matrix[11] = d * p + m, this.matrix[12] = h + d * p;
        },
        /**
         * HueRotation isNeutralState implementation
         * Used only in image applyFilters to discard filters that will not have an effect
         * on the image
         * @param {Object} options
         **/
        isNeutralState: function(o) {
          return this.calculateMatrix(), c.BaseFilter.prototype.isNeutralState.call(this, o);
        },
        /**
         * Apply this filter to the input image data provided.
         *
         * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.
         *
         * @param {Object} options
         * @param {Number} options.passes The number of filters remaining to be executed
         * @param {Boolean} options.webgl Whether to use webgl to render the filter.
         * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.
         * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.
         * @param {WebGLRenderingContext} options.context The GL context used for rendering.
         * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
         */
        applyTo: function(o) {
          this.calculateMatrix(), c.BaseFilter.prototype.applyTo.call(this, o);
        }
      }
    ), s.Image.filters.HueRotation.fromObject = s.Image.filters.BaseFilter.fromObject;
  }(t), function(a) {
    var s = a.fabric || (a.fabric = {}), c = s.util.object.clone;
    if (s.Text) {
      s.warn("fabric.Text is already defined");
      return;
    }
    var f = "fontFamily fontWeight fontSize text underline overline linethrough textAlign fontStyle lineHeight textBackgroundColor charSpacing styles direction path pathStartOffset pathSide pathAlign".split(" ");
    s.Text = s.util.createClass(
      s.Object,
      /** @lends fabric.Text.prototype */
      {
        /**
         * Properties which when set cause object to change dimensions
         * @type Array
         * @private
         */
        _dimensionAffectingProps: [
          "fontSize",
          "fontWeight",
          "fontFamily",
          "fontStyle",
          "lineHeight",
          "text",
          "charSpacing",
          "textAlign",
          "styles",
          "path",
          "pathStartOffset",
          "pathSide",
          "pathAlign"
        ],
        /**
         * @private
         */
        _reNewline: /\r?\n/,
        /**
         * Use this regular expression to filter for whitespaces that is not a new line.
         * Mostly used when text is 'justify' aligned.
         * @private
         */
        _reSpacesAndTabs: /[ \t\r]/g,
        /**
         * Use this regular expression to filter for whitespace that is not a new line.
         * Mostly used when text is 'justify' aligned.
         * @private
         */
        _reSpaceAndTab: /[ \t\r]/,
        /**
         * Use this regular expression to filter consecutive groups of non spaces.
         * Mostly used when text is 'justify' aligned.
         * @private
         */
        _reWords: /\S+/g,
        /**
         * Type of an object
         * @type String
         * @default
         */
        type: "text",
        /**
         * Font size (in pixels)
         * @type Number
         * @default
         */
        fontSize: 40,
        /**
         * Font weight (e.g. bold, normal, 400, 600, 800)
         * @type {(Number|String)}
         * @default
         */
        fontWeight: "normal",
        /**
         * Font family
         * @type String
         * @default
         */
        fontFamily: "Times New Roman",
        /**
         * Text decoration underline.
         * @type Boolean
         * @default
         */
        underline: !1,
        /**
         * Text decoration overline.
         * @type Boolean
         * @default
         */
        overline: !1,
        /**
         * Text decoration linethrough.
         * @type Boolean
         * @default
         */
        linethrough: !1,
        /**
         * Text alignment. Possible values: "left", "center", "right", "justify",
         * "justify-left", "justify-center" or "justify-right".
         * @type String
         * @default
         */
        textAlign: "left",
        /**
         * Font style . Possible values: "", "normal", "italic" or "oblique".
         * @type String
         * @default
         */
        fontStyle: "normal",
        /**
         * Line height
         * @type Number
         * @default
         */
        lineHeight: 1.16,
        /**
         * Superscript schema object (minimum overlap)
         * @type {Object}
         * @default
         */
        superscript: {
          size: 0.6,
          // fontSize factor
          baseline: -0.35
          // baseline-shift factor (upwards)
        },
        /**
         * Subscript schema object (minimum overlap)
         * @type {Object}
         * @default
         */
        subscript: {
          size: 0.6,
          // fontSize factor
          baseline: 0.11
          // baseline-shift factor (downwards)
        },
        /**
         * Background color of text lines
         * @type String
         * @default
         */
        textBackgroundColor: "",
        /**
         * List of properties to consider when checking if
         * state of an object is changed ({@link fabric.Object#hasStateChanged})
         * as well as for history (undo/redo) purposes
         * @type Array
         */
        stateProperties: s.Object.prototype.stateProperties.concat(f),
        /**
         * List of properties to consider when checking if cache needs refresh
         * @type Array
         */
        cacheProperties: s.Object.prototype.cacheProperties.concat(f),
        /**
         * When defined, an object is rendered via stroke and this property specifies its color.
         * <b>Backwards incompatibility note:</b> This property was named "strokeStyle" until v1.1.6
         * @type String
         * @default
         */
        stroke: null,
        /**
         * Shadow object representing shadow of this shape.
         * <b>Backwards incompatibility note:</b> This property was named "textShadow" (String) until v1.2.11
         * @type fabric.Shadow
         * @default
         */
        shadow: null,
        /**
         * fabric.Path that the text should follow.
         * since 4.6.0 the path will be drawn automatically.
         * if you want to make the path visible, give it a stroke and strokeWidth or fill value
         * if you want it to be hidden, assign visible = false to the path.
         * This feature is in BETA, and SVG import/export is not yet supported.
         * @type fabric.Path
         * @example
         * var textPath = new fabric.Text('Text on a path', {
         *     top: 150,
         *     left: 150,
         *     textAlign: 'center',
         *     charSpacing: -50,
         *     path: new fabric.Path('M 0 0 C 50 -100 150 -100 200 0', {
         *         strokeWidth: 1,
         *         visible: false
         *     }),
         *     pathSide: 'left',
         *     pathStartOffset: 0
         * });
         * @default
         */
        path: null,
        /**
         * Offset amount for text path starting position
         * Only used when text has a path
         * @type Number
         * @default
         */
        pathStartOffset: 0,
        /**
         * Which side of the path the text should be drawn on.
         * Only used when text has a path
         * @type {String} 'left|right'
         * @default
         */
        pathSide: "left",
        /**
         * How text is aligned to the path. This property determines
         * the perpendicular position of each character relative to the path.
         * (one of "baseline", "center", "ascender", "descender")
         * This feature is in BETA, and its behavior may change
         * @type String
         * @default
         */
        pathAlign: "baseline",
        /**
         * @private
         */
        _fontSizeFraction: 0.222,
        /**
         * @private
         */
        offsets: {
          underline: 0.1,
          linethrough: -0.315,
          overline: -0.88
        },
        /**
         * Text Line proportion to font Size (in pixels)
         * @type Number
         * @default
         */
        _fontSizeMult: 1.13,
        /**
         * additional space between characters
         * expressed in thousands of em unit
         * @type Number
         * @default
         */
        charSpacing: 0,
        /**
         * Object containing character styles - top-level properties -> line numbers,
         * 2nd-level properties - character numbers
         * @type Object
         * @default
         */
        styles: null,
        /**
         * Reference to a context to measure text char or couple of chars
         * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas
         * once created it will be referenced on fabric._measuringContext to avoid creating a canvas for every
         * text object created.
         * @type {CanvasRenderingContext2D}
         * @default
         */
        _measuringContext: null,
        /**
         * Baseline shift, styles only, keep at 0 for the main text object
         * @type {Number}
         * @default
         */
        deltaY: 0,
        /**
         * WARNING: EXPERIMENTAL. NOT SUPPORTED YET
         * determine the direction of the text.
         * This has to be set manually together with textAlign and originX for proper
         * experience.
         * some interesting link for the future
         * https://www.w3.org/International/questions/qa-bidi-unicode-controls
         * @since 4.5.0
         * @type {String} 'ltr|rtl'
         * @default
         */
        direction: "ltr",
        /**
         * Array of properties that define a style unit (of 'styles').
         * @type {Array}
         * @default
         */
        _styleProperties: [
          "stroke",
          "strokeWidth",
          "fill",
          "fontFamily",
          "fontSize",
          "fontWeight",
          "fontStyle",
          "underline",
          "overline",
          "linethrough",
          "deltaY",
          "textBackgroundColor"
        ],
        /**
         * contains characters bounding boxes
         */
        __charBounds: [],
        /**
         * use this size when measuring text. To avoid IE11 rounding errors
         * @type {Number}
         * @default
         * @readonly
         * @private
         */
        CACHE_FONT_SIZE: 400,
        /**
         * contains the min text width to avoid getting 0
         * @type {Number}
         * @default
         */
        MIN_TEXT_WIDTH: 2,
        /**
         * Constructor
         * @param {String} text Text string
         * @param {Object} [options] Options object
         * @return {fabric.Text} thisArg
         */
        initialize: function(o, h) {
          this.styles = h ? h.styles || {} : {}, this.text = o, this.__skipDimension = !0, this.callSuper("initialize", h), this.path && this.setPathInfo(), this.__skipDimension = !1, this.initDimensions(), this.setCoords(), this.setupState({ propertySet: "_dimensionAffectingProps" });
        },
        /**
         * If text has a path, it will add the extra information needed
         * for path and text calculations
         * @return {fabric.Text} thisArg
         */
        setPathInfo: function() {
          var o = this.path;
          o && (o.segmentsInfo = s.util.getPathSegmentsInfo(o.path));
        },
        /**
         * Return a context for measurement of text string.
         * if created it gets stored for reuse
         * this is for internal use, please do not use it
         * @private
         * @param {String} text Text string
         * @param {Object} [options] Options object
         * @return {fabric.Text} thisArg
         */
        getMeasuringContext: function() {
          return s._measuringContext || (s._measuringContext = this.canvas && this.canvas.contextCache || s.util.createCanvasElement().getContext("2d")), s._measuringContext;
        },
        /**
         * @private
         * Divides text into lines of text and lines of graphemes.
         */
        _splitText: function() {
          var o = this._splitTextIntoLines(this.text);
          return this.textLines = o.lines, this._textLines = o.graphemeLines, this._unwrappedTextLines = o._unwrappedLines, this._text = o.graphemeText, o;
        },
        /**
         * Initialize or update text dimensions.
         * Updates this.width and this.height with the proper values.
         * Does not return dimensions.
         */
        initDimensions: function() {
          this.__skipDimension || (this._splitText(), this._clearCache(), this.path ? (this.width = this.path.width, this.height = this.path.height) : (this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH, this.height = this.calcTextHeight()), this.textAlign.indexOf("justify") !== -1 && this.enlargeSpaces(), this.saveState({ propertySet: "_dimensionAffectingProps" }));
        },
        /**
         * Enlarge space boxes and shift the others
         */
        enlargeSpaces: function() {
          for (var o, h, u, d, m, p, v, b = 0, y = this._textLines.length; b < y; b++)
            if (!(this.textAlign !== "justify" && (b === y - 1 || this.isEndOfWrapping(b))) && (d = 0, m = this._textLines[b], h = this.getLineWidth(b), h < this.width && (v = this.textLines[b].match(this._reSpacesAndTabs)))) {
              u = v.length, o = (this.width - h) / u;
              for (var w = 0, x = m.length; w <= x; w++)
                p = this.__charBounds[b][w], this._reSpaceAndTab.test(m[w]) ? (p.width += o, p.kernedWidth += o, p.left += d, d += o) : p.left += d;
            }
        },
        /**
         * Detect if the text line is ended with an hard break
         * text and itext do not have wrapping, return false
         * @return {Boolean}
         */
        isEndOfWrapping: function(o) {
          return o === this._textLines.length - 1;
        },
        /**
         * Detect if a line has a linebreak and so we need to account for it when moving
         * and counting style.
         * It return always for text and Itext.
         * @return Number
         */
        missingNewlineOffset: function() {
          return 1;
        },
        /**
         * Returns string representation of an instance
         * @return {String} String representation of text object
         */
        toString: function() {
          return "#<fabric.Text (" + this.complexity() + '): { "text": "' + this.text + '", "fontFamily": "' + this.fontFamily + '" }>';
        },
        /**
         * Return the dimension and the zoom level needed to create a cache canvas
         * big enough to host the object to be cached.
         * @private
         * @param {Object} dim.x width of object to be cached
         * @param {Object} dim.y height of object to be cached
         * @return {Object}.width width of canvas
         * @return {Object}.height height of canvas
         * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache
         * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache
         */
        _getCacheCanvasDimensions: function() {
          var o = this.callSuper("_getCacheCanvasDimensions"), h = this.fontSize;
          return o.width += h * o.zoomX, o.height += h * o.zoomY, o;
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _render: function(o) {
          var h = this.path;
          h && !h.isNotVisible() && h._render(o), this._setTextStyles(o), this._renderTextLinesBackground(o), this._renderTextDecoration(o, "underline"), this._renderText(o), this._renderTextDecoration(o, "overline"), this._renderTextDecoration(o, "linethrough");
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _renderText: function(o) {
          this.paintFirst === "stroke" ? (this._renderTextStroke(o), this._renderTextFill(o)) : (this._renderTextFill(o), this._renderTextStroke(o));
        },
        /**
         * Set the font parameter of the context with the object properties or with charStyle
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         * @param {Object} [charStyle] object with font style properties
         * @param {String} [charStyle.fontFamily] Font Family
         * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )
         * @param {String} [charStyle.fontWeight] Font weight
         * @param {String} [charStyle.fontStyle] Font style (italic|normal)
         */
        _setTextStyles: function(o, h, u) {
          if (o.textBaseline = "alphabetical", this.path)
            switch (this.pathAlign) {
              case "center":
                o.textBaseline = "middle";
                break;
              case "ascender":
                o.textBaseline = "top";
                break;
              case "descender":
                o.textBaseline = "bottom";
                break;
            }
          o.font = this._getFontDeclaration(h, u);
        },
        /**
         * calculate and return the text Width measuring each line.
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         * @return {Number} Maximum width of fabric.Text object
         */
        calcTextWidth: function() {
          for (var o = this.getLineWidth(0), h = 1, u = this._textLines.length; h < u; h++) {
            var d = this.getLineWidth(h);
            d > o && (o = d);
          }
          return o;
        },
        /**
         * @private
         * @param {String} method Method name ("fillText" or "strokeText")
         * @param {CanvasRenderingContext2D} ctx Context to render on
         * @param {String} line Text to render
         * @param {Number} left Left position of text
         * @param {Number} top Top position of text
         * @param {Number} lineIndex Index of a line in a text
         */
        _renderTextLine: function(o, h, u, d, m, p) {
          this._renderChars(o, h, u, d, m, p);
        },
        /**
         * Renders the text background for lines, taking care of style
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _renderTextLinesBackground: function(o) {
          if (!(!this.textBackgroundColor && !this.styleHas("textBackgroundColor"))) {
            for (var h, u, d = o.fillStyle, m, p, v = this._getLeftOffset(), b = this._getTopOffset(), y = 0, w = 0, x, _, S = this.path, k, F = 0, L = this._textLines.length; F < L; F++) {
              if (h = this.getHeightOfLine(F), !this.textBackgroundColor && !this.styleHas("textBackgroundColor", F)) {
                b += h;
                continue;
              }
              m = this._textLines[F], u = this._getLineLeftOffset(F), w = 0, y = 0, p = this.getValueOfPropertyAt(F, 0, "textBackgroundColor");
              for (var j = 0, G = m.length; j < G; j++)
                x = this.__charBounds[F][j], _ = this.getValueOfPropertyAt(F, j, "textBackgroundColor"), S ? (o.save(), o.translate(x.renderLeft, x.renderTop), o.rotate(x.angle), o.fillStyle = _, _ && o.fillRect(
                  -x.width / 2,
                  -h / this.lineHeight * (1 - this._fontSizeFraction),
                  x.width,
                  h / this.lineHeight
                ), o.restore()) : _ !== p ? (k = v + u + y, this.direction === "rtl" && (k = this.width - k - w), o.fillStyle = p, p && o.fillRect(
                  k,
                  b,
                  w,
                  h / this.lineHeight
                ), y = x.left, w = x.width, p = _) : w += x.kernedWidth;
              _ && !S && (k = v + u + y, this.direction === "rtl" && (k = this.width - k - w), o.fillStyle = _, o.fillRect(
                k,
                b,
                w,
                h / this.lineHeight
              )), b += h;
            }
            o.fillStyle = d, this._removeShadow(o);
          }
        },
        /**
         * @private
         * @param {Object} decl style declaration for cache
         * @param {String} decl.fontFamily fontFamily
         * @param {String} decl.fontStyle fontStyle
         * @param {String} decl.fontWeight fontWeight
         * @return {Object} reference to cache
         */
        getFontCache: function(o) {
          var h = o.fontFamily.toLowerCase();
          s.charWidthsCache[h] || (s.charWidthsCache[h] = {});
          var u = s.charWidthsCache[h], d = o.fontStyle.toLowerCase() + "_" + (o.fontWeight + "").toLowerCase();
          return u[d] || (u[d] = {}), u[d];
        },
        /**
         * measure and return the width of a single character.
         * possibly overridden to accommodate different measure logic or
         * to hook some external lib for character measurement
         * @private
         * @param {String} _char, char to be measured
         * @param {Object} charStyle style of char to be measured
         * @param {String} [previousChar] previous char
         * @param {Object} [prevCharStyle] style of previous char
         */
        _measureChar: function(o, h, u, d) {
          var m = this.getFontCache(h), p = this._getFontDeclaration(h), v = this._getFontDeclaration(d), b = u + o, y = p === v, w, x, _, S = h.fontSize / this.CACHE_FONT_SIZE, k;
          if (u && m[u] !== void 0 && (_ = m[u]), m[o] !== void 0 && (k = w = m[o]), y && m[b] !== void 0 && (x = m[b], k = x - _), w === void 0 || _ === void 0 || x === void 0) {
            var F = this.getMeasuringContext();
            this._setTextStyles(F, h, !0);
          }
          return w === void 0 && (k = w = F.measureText(o).width, m[o] = w), _ === void 0 && y && u && (_ = F.measureText(u).width, m[u] = _), y && x === void 0 && (x = F.measureText(b).width, m[b] = x, k = x - _), { width: w * S, kernedWidth: k * S };
        },
        /**
         * Computes height of character at given position
         * @param {Number} line the line index number
         * @param {Number} _char the character index number
         * @return {Number} fontSize of the character
         */
        getHeightOfChar: function(o, h) {
          return this.getValueOfPropertyAt(o, h, "fontSize");
        },
        /**
         * measure a text line measuring all characters.
         * @param {Number} lineIndex line number
         * @return {Number} Line width
         */
        measureLine: function(o) {
          var h = this._measureLine(o);
          return this.charSpacing !== 0 && (h.width -= this._getWidthOfCharSpacing()), h.width < 0 && (h.width = 0), h;
        },
        /**
         * measure every grapheme of a line, populating __charBounds
         * @param {Number} lineIndex
         * @return {Object} object.width total width of characters
         * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs
         */
        _measureLine: function(o) {
          var h = 0, u, d, m = this._textLines[o], p, v, b = 0, y = new Array(m.length), w = 0, x, _, S = this.path, k = this.pathSide === "right";
          for (this.__charBounds[o] = y, u = 0; u < m.length; u++)
            d = m[u], v = this._getGraphemeBox(d, o, u, p), y[u] = v, h += v.kernedWidth, p = d;
          if (y[u] = {
            left: v ? v.left + v.width : 0,
            width: 0,
            kernedWidth: 0,
            height: this.fontSize
          }, S) {
            switch (_ = S.segmentsInfo[S.segmentsInfo.length - 1].length, x = s.util.getPointOnPath(S.path, 0, S.segmentsInfo), x.x += S.pathOffset.x, x.y += S.pathOffset.y, this.textAlign) {
              case "left":
                w = k ? _ - h : 0;
                break;
              case "center":
                w = (_ - h) / 2;
                break;
              case "right":
                w = k ? 0 : _ - h;
                break;
            }
            for (w += this.pathStartOffset * (k ? -1 : 1), u = k ? m.length - 1 : 0; k ? u >= 0 : u < m.length; k ? u-- : u++)
              v = y[u], w > _ ? w %= _ : w < 0 && (w += _), this._setGraphemeOnPath(w, v, x), w += v.kernedWidth;
          }
          return { width: h, numOfSpaces: b };
        },
        /**
         * Calculate the angle  and the left,top position of the char that follow a path.
         * It appends it to graphemeInfo to be reused later at rendering
         * @private
         * @param {Number} positionInPath to be measured
         * @param {Object} graphemeInfo current grapheme box information
         * @param {Object} startingPoint position of the point
         */
        _setGraphemeOnPath: function(o, h, u) {
          var d = o + h.kernedWidth / 2, m = this.path, p = s.util.getPointOnPath(m.path, d, m.segmentsInfo);
          h.renderLeft = p.x - u.x, h.renderTop = p.y - u.y, h.angle = p.angle + (this.pathSide === "right" ? Math.PI : 0);
        },
        /**
         * Measure and return the info of a single grapheme.
         * needs the the info of previous graphemes already filled
         * @private
         * @param {String} grapheme to be measured
         * @param {Number} lineIndex index of the line where the char is
         * @param {Number} charIndex position in the line
         * @param {String} [prevGrapheme] character preceding the one to be measured
         */
        _getGraphemeBox: function(o, h, u, d, m) {
          var p = this.getCompleteStyleDeclaration(h, u), v = d ? this.getCompleteStyleDeclaration(h, u - 1) : {}, b = this._measureChar(o, p, d, v), y = b.kernedWidth, w = b.width, x;
          this.charSpacing !== 0 && (x = this._getWidthOfCharSpacing(), w += x, y += x);
          var _ = {
            width: w,
            left: 0,
            height: p.fontSize,
            kernedWidth: y,
            deltaY: p.deltaY
          };
          if (u > 0 && !m) {
            var S = this.__charBounds[h][u - 1];
            _.left = S.left + S.width + b.kernedWidth - b.width;
          }
          return _;
        },
        /**
         * Calculate height of line at 'lineIndex'
         * @param {Number} lineIndex index of line to calculate
         * @return {Number}
         */
        getHeightOfLine: function(o) {
          if (this.__lineHeights[o])
            return this.__lineHeights[o];
          for (var h = this._textLines[o], u = this.getHeightOfChar(o, 0), d = 1, m = h.length; d < m; d++)
            u = Math.max(this.getHeightOfChar(o, d), u);
          return this.__lineHeights[o] = u * this.lineHeight * this._fontSizeMult;
        },
        /**
         * Calculate text box height
         */
        calcTextHeight: function() {
          for (var o, h = 0, u = 0, d = this._textLines.length; u < d; u++)
            o = this.getHeightOfLine(u), h += u === d - 1 ? o / this.lineHeight : o;
          return h;
        },
        /**
         * @private
         * @return {Number} Left offset
         */
        _getLeftOffset: function() {
          return this.direction === "ltr" ? -this.width / 2 : this.width / 2;
        },
        /**
         * @private
         * @return {Number} Top offset
         */
        _getTopOffset: function() {
          return -this.height / 2;
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         * @param {String} method Method name ("fillText" or "strokeText")
         */
        _renderTextCommon: function(o, h) {
          o.save();
          for (var u = 0, d = this._getLeftOffset(), m = this._getTopOffset(), p = 0, v = this._textLines.length; p < v; p++) {
            var b = this.getHeightOfLine(p), y = b / this.lineHeight, w = this._getLineLeftOffset(p);
            this._renderTextLine(
              h,
              o,
              this._textLines[p],
              d + w,
              m + u + y,
              p
            ), u += b;
          }
          o.restore();
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _renderTextFill: function(o) {
          !this.fill && !this.styleHas("fill") || this._renderTextCommon(o, "fillText");
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _renderTextStroke: function(o) {
          (!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles() || (this.shadow && !this.shadow.affectStroke && this._removeShadow(o), o.save(), this._setLineDash(o, this.strokeDashArray), o.beginPath(), this._renderTextCommon(o, "strokeText"), o.closePath(), o.restore());
        },
        /**
         * @private
         * @param {String} method fillText or strokeText.
         * @param {CanvasRenderingContext2D} ctx Context to render on
         * @param {Array} line Content of the line, splitted in an array by grapheme
         * @param {Number} left
         * @param {Number} top
         * @param {Number} lineIndex
         */
        _renderChars: function(o, h, u, d, m, p) {
          var v = this.getHeightOfLine(p), b = this.textAlign.indexOf("justify") !== -1, y, w, x = "", _, S = 0, k, F = this.path, L = !b && this.charSpacing === 0 && this.isEmptyStyles(p) && !F, j = this.direction === "ltr", G = this.direction === "ltr" ? 1 : -1, te, U = h.canvas.getAttribute("dir");
          if (h.save(), U !== this.direction && (h.canvas.setAttribute("dir", j ? "ltr" : "rtl"), h.direction = j ? "ltr" : "rtl", h.textAlign = j ? "left" : "right"), m -= v * this._fontSizeFraction / this.lineHeight, L) {
            this._renderChar(o, h, p, 0, u.join(""), d, m, v), h.restore();
            return;
          }
          for (var K = 0, re = u.length - 1; K <= re; K++)
            k = K === re || this.charSpacing || F, x += u[K], _ = this.__charBounds[p][K], S === 0 ? (d += G * (_.kernedWidth - _.width), S += _.width) : S += _.kernedWidth, b && !k && this._reSpaceAndTab.test(u[K]) && (k = !0), k || (y = y || this.getCompleteStyleDeclaration(p, K), w = this.getCompleteStyleDeclaration(p, K + 1), k = s.util.hasStyleChanged(y, w, !1)), k && (F ? (h.save(), h.translate(_.renderLeft, _.renderTop), h.rotate(_.angle), this._renderChar(o, h, p, K, x, -S / 2, 0, v), h.restore()) : (te = d, this._renderChar(o, h, p, K, x, te, m, v)), x = "", y = w, d += G * S, S = 0);
          h.restore();
        },
        /**
         * This function try to patch the missing gradientTransform on canvas gradients.
         * transforming a context to transform the gradient, is going to transform the stroke too.
         * we want to transform the gradient but not the stroke operation, so we create
         * a transformed gradient on a pattern and then we use the pattern instead of the gradient.
         * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size
         * is limited.
         * @private
         * @param {fabric.Gradient} filler a fabric gradient instance
         * @return {CanvasPattern} a pattern to use as fill/stroke style
         */
        _applyPatternGradientTransformText: function(o) {
          var h = s.util.createCanvasElement(), u, d = this.width + this.strokeWidth, m = this.height + this.strokeWidth;
          return h.width = d, h.height = m, u = h.getContext("2d"), u.beginPath(), u.moveTo(0, 0), u.lineTo(d, 0), u.lineTo(d, m), u.lineTo(0, m), u.closePath(), u.translate(d / 2, m / 2), u.fillStyle = o.toLive(u), this._applyPatternGradientTransform(u, o), u.fill(), u.createPattern(h, "no-repeat");
        },
        handleFiller: function(o, h, u) {
          var d, m;
          return u.toLive ? u.gradientUnits === "percentage" || u.gradientTransform || u.patternTransform ? (d = -this.width / 2, m = -this.height / 2, o.translate(d, m), o[h] = this._applyPatternGradientTransformText(u), { offsetX: d, offsetY: m }) : (o[h] = u.toLive(o, this), this._applyPatternGradientTransform(o, u)) : (o[h] = u, { offsetX: 0, offsetY: 0 });
        },
        _setStrokeStyles: function(o, h) {
          return o.lineWidth = h.strokeWidth, o.lineCap = this.strokeLineCap, o.lineDashOffset = this.strokeDashOffset, o.lineJoin = this.strokeLineJoin, o.miterLimit = this.strokeMiterLimit, this.handleFiller(o, "strokeStyle", h.stroke);
        },
        _setFillStyles: function(o, h) {
          return this.handleFiller(o, "fillStyle", h.fill);
        },
        /**
         * @private
         * @param {String} method
         * @param {CanvasRenderingContext2D} ctx Context to render on
         * @param {Number} lineIndex
         * @param {Number} charIndex
         * @param {String} _char
         * @param {Number} left Left coordinate
         * @param {Number} top Top coordinate
         * @param {Number} lineHeight Height of the line
         */
        _renderChar: function(o, h, u, d, m, p, v) {
          var b = this._getStyleDeclaration(u, d), y = this.getCompleteStyleDeclaration(u, d), w = o === "fillText" && y.fill, x = o === "strokeText" && y.stroke && y.strokeWidth, _, S;
          !x && !w || (h.save(), w && (_ = this._setFillStyles(h, y)), x && (S = this._setStrokeStyles(h, y)), h.font = this._getFontDeclaration(y), b && b.textBackgroundColor && this._removeShadow(h), b && b.deltaY && (v += b.deltaY), w && h.fillText(m, p - _.offsetX, v - _.offsetY), x && h.strokeText(m, p - S.offsetX, v - S.offsetY), h.restore());
        },
        /**
         * Turns the character into a 'superior figure' (i.e. 'superscript')
         * @param {Number} start selection start
         * @param {Number} end selection end
         * @returns {fabric.Text} thisArg
         * @chainable
         */
        setSuperscript: function(o, h) {
          return this._setScript(o, h, this.superscript);
        },
        /**
         * Turns the character into an 'inferior figure' (i.e. 'subscript')
         * @param {Number} start selection start
         * @param {Number} end selection end
         * @returns {fabric.Text} thisArg
         * @chainable
         */
        setSubscript: function(o, h) {
          return this._setScript(o, h, this.subscript);
        },
        /**
         * Applies 'schema' at given position
         * @private
         * @param {Number} start selection start
         * @param {Number} end selection end
         * @param {Number} schema
         * @returns {fabric.Text} thisArg
         * @chainable
         */
        _setScript: function(o, h, u) {
          var d = this.get2DCursorLocation(o, !0), m = this.getValueOfPropertyAt(d.lineIndex, d.charIndex, "fontSize"), p = this.getValueOfPropertyAt(d.lineIndex, d.charIndex, "deltaY"), v = { fontSize: m * u.size, deltaY: p + m * u.baseline };
          return this.setSelectionStyles(v, o, h), this;
        },
        /**
         * @private
         * @param {Number} lineIndex index text line
         * @return {Number} Line left offset
         */
        _getLineLeftOffset: function(o) {
          var h = this.getLineWidth(o), u = this.width - h, d = this.textAlign, m = this.direction, v, p = 0, v = this.isEndOfWrapping(o);
          return d === "justify" || d === "justify-center" && !v || d === "justify-right" && !v || d === "justify-left" && !v ? 0 : (d === "center" && (p = u / 2), d === "right" && (p = u), d === "justify-center" && (p = u / 2), d === "justify-right" && (p = u), m === "rtl" && (p -= u), p);
        },
        /**
         * @private
         */
        _clearCache: function() {
          this.__lineWidths = [], this.__lineHeights = [], this.__charBounds = [];
        },
        /**
         * @private
         */
        _shouldClearDimensionCache: function() {
          var o = this._forceClearCache;
          return o || (o = this.hasStateChanged("_dimensionAffectingProps")), o && (this.dirty = !0, this._forceClearCache = !1), o;
        },
        /**
         * Measure a single line given its index. Used to calculate the initial
         * text bounding box. The values are calculated and stored in __lineWidths cache.
         * @private
         * @param {Number} lineIndex line number
         * @return {Number} Line width
         */
        getLineWidth: function(o) {
          if (this.__lineWidths[o] !== void 0)
            return this.__lineWidths[o];
          var h = this.measureLine(o), u = h.width;
          return this.__lineWidths[o] = u, u;
        },
        _getWidthOfCharSpacing: function() {
          return this.charSpacing !== 0 ? this.fontSize * this.charSpacing / 1e3 : 0;
        },
        /**
         * Retrieves the value of property at given character position
         * @param {Number} lineIndex the line number
         * @param {Number} charIndex the character number
         * @param {String} property the property name
         * @returns the value of 'property'
         */
        getValueOfPropertyAt: function(o, h, u) {
          var d = this._getStyleDeclaration(o, h);
          return d && typeof d[u] < "u" ? d[u] : this[u];
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _renderTextDecoration: function(o, h) {
          if (!(!this[h] && !this.styleHas(h))) {
            for (var u, d, m, p, v, b, y, w, x = this._getLeftOffset(), _ = this._getTopOffset(), S, k, F, L, j, G, te, U, K = this.path, re = this._getWidthOfCharSpacing(), ne = this.offsets[h], se = 0, T = this._textLines.length; se < T; se++) {
              if (u = this.getHeightOfLine(se), !this[h] && !this.styleHas(h, se)) {
                _ += u;
                continue;
              }
              y = this._textLines[se], G = u / this.lineHeight, p = this._getLineLeftOffset(se), k = 0, F = 0, w = this.getValueOfPropertyAt(se, 0, h), U = this.getValueOfPropertyAt(se, 0, "fill"), S = _ + G * (1 - this._fontSizeFraction), d = this.getHeightOfChar(se, 0), v = this.getValueOfPropertyAt(se, 0, "deltaY");
              for (var P = 0, D = y.length; P < D; P++)
                if (L = this.__charBounds[se][P], j = this.getValueOfPropertyAt(se, P, h), te = this.getValueOfPropertyAt(se, P, "fill"), m = this.getHeightOfChar(se, P), b = this.getValueOfPropertyAt(se, P, "deltaY"), K && j && te)
                  o.save(), o.fillStyle = U, o.translate(L.renderLeft, L.renderTop), o.rotate(L.angle), o.fillRect(
                    -L.kernedWidth / 2,
                    ne * m + b,
                    L.kernedWidth,
                    this.fontSize / 15
                  ), o.restore();
                else if ((j !== w || te !== U || m !== d || b !== v) && F > 0) {
                  var M = x + p + k;
                  this.direction === "rtl" && (M = this.width - M - F), w && U && (o.fillStyle = U, o.fillRect(
                    M,
                    S + ne * d + v,
                    F,
                    this.fontSize / 15
                  )), k = L.left, F = L.width, w = j, U = te, d = m, v = b;
                } else
                  F += L.kernedWidth;
              var M = x + p + k;
              this.direction === "rtl" && (M = this.width - M - F), o.fillStyle = te, j && te && o.fillRect(
                M,
                S + ne * d + v,
                F - re,
                this.fontSize / 15
              ), _ += u;
            }
            this._removeShadow(o);
          }
        },
        /**
         * return font declaration string for canvas context
         * @param {Object} [styleObject] object
         * @returns {String} font declaration formatted for canvas context.
         */
        _getFontDeclaration: function(o, h) {
          var u = o || this, d = this.fontFamily, m = s.Text.genericFonts.indexOf(d.toLowerCase()) > -1, p = d === void 0 || d.indexOf("'") > -1 || d.indexOf(",") > -1 || d.indexOf('"') > -1 || m ? u.fontFamily : '"' + u.fontFamily + '"';
          return [
            // node-canvas needs "weight style", while browsers need "style weight"
            // verify if this can be fixed in JSDOM
            s.isLikelyNode ? u.fontWeight : u.fontStyle,
            s.isLikelyNode ? u.fontStyle : u.fontWeight,
            h ? this.CACHE_FONT_SIZE + "px" : u.fontSize + "px",
            p
          ].join(" ");
        },
        /**
         * Renders text instance on a specified context
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        render: function(o) {
          this.visible && (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen() || (this._shouldClearDimensionCache() && this.initDimensions(), this.callSuper("render", o)));
        },
        /**
         * Returns the text as an array of lines.
         * @param {String} text text to split
         * @returns {Array} Lines in the text
         */
        _splitTextIntoLines: function(o) {
          for (var h = o.split(this._reNewline), u = new Array(h.length), d = [`
`], m = [], p = 0; p < h.length; p++)
            u[p] = s.util.string.graphemeSplit(h[p]), m = m.concat(u[p], d);
          return m.pop(), { _unwrappedLines: u, lines: h, graphemeText: m, graphemeLines: u };
        },
        /**
         * Returns object representation of an instance
         * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
         * @return {Object} Object representation of an instance
         */
        toObject: function(o) {
          var h = f.concat(o), u = this.callSuper("toObject", h);
          return u.styles = s.util.stylesToArray(this.styles, this.text), u.path && (u.path = this.path.toObject()), u;
        },
        /**
         * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.
         * @param {String|Object} key Property name or object (if object, iterate over the object properties)
         * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)
         * @return {fabric.Object} thisArg
         * @chainable
         */
        set: function(o, h) {
          this.callSuper("set", o, h);
          var u = !1, d = !1;
          if (typeof o == "object")
            for (var m in o)
              m === "path" && this.setPathInfo(), u = u || this._dimensionAffectingProps.indexOf(m) !== -1, d = d || m === "path";
          else
            u = this._dimensionAffectingProps.indexOf(o) !== -1, d = o === "path";
          return d && this.setPathInfo(), u && (this.initDimensions(), this.setCoords()), this;
        },
        /**
         * Returns complexity of an instance
         * @return {Number} complexity
         */
        complexity: function() {
          return 1;
        }
      }
    ), s.Text.ATTRIBUTE_NAMES = s.SHARED_ATTRIBUTES.concat(
      "x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor".split(" ")
    ), s.Text.DEFAULT_SVG_FONT_SIZE = 16, s.Text.fromElement = function(o, h, u) {
      if (!o)
        return h(null);
      var d = s.parseAttributes(o, s.Text.ATTRIBUTE_NAMES), m = d.textAnchor || "left";
      if (u = s.util.object.extend(u ? c(u) : {}, d), u.top = u.top || 0, u.left = u.left || 0, d.textDecoration) {
        var p = d.textDecoration;
        p.indexOf("underline") !== -1 && (u.underline = !0), p.indexOf("overline") !== -1 && (u.overline = !0), p.indexOf("line-through") !== -1 && (u.linethrough = !0), delete u.textDecoration;
      }
      "dx" in d && (u.left += d.dx), "dy" in d && (u.top += d.dy), "fontSize" in u || (u.fontSize = s.Text.DEFAULT_SVG_FONT_SIZE);
      var v = "";
      "textContent" in o ? v = o.textContent : "firstChild" in o && o.firstChild !== null && "data" in o.firstChild && o.firstChild.data !== null && (v = o.firstChild.data), v = v.replace(/^\s+|\s+$|\n+/g, "").replace(/\s+/g, " ");
      var b = u.strokeWidth;
      u.strokeWidth = 0;
      var y = new s.Text(v, u), w = y.getScaledHeight() / y.height, x = (y.height + y.strokeWidth) * y.lineHeight - y.height, _ = x * w, S = y.getScaledHeight() + _, k = 0;
      m === "center" && (k = y.getScaledWidth() / 2), m === "right" && (k = y.getScaledWidth()), y.set({
        left: y.left - k,
        top: y.top - (S - y.fontSize * (0.07 + y._fontSizeFraction)) / y.lineHeight,
        strokeWidth: typeof b < "u" ? b : 1
      }), h(y);
    }, s.Text.fromObject = function(o, h) {
      var u = c(o), d = o.path;
      return delete u.path, s.Object._fromObject("Text", u, function(m) {
        m.styles = s.util.stylesFromArray(o.styles, o.text), d ? s.Object._fromObject("Path", d, function(p) {
          m.set("path", p), h(m);
        }, "path") : h(m);
      }, "text");
    }, s.Text.genericFonts = ["sans-serif", "serif", "cursive", "fantasy", "monospace"], s.util.createAccessors && s.util.createAccessors(s.Text);
  }(t), function() {
    e.util.object.extend(
      e.Text.prototype,
      /** @lends fabric.Text.prototype */
      {
        /**
         * Returns true if object has no styling or no styling in a line
         * @param {Number} lineIndex , lineIndex is on wrapped lines.
         * @return {Boolean}
         */
        isEmptyStyles: function(a) {
          if (!this.styles || typeof a < "u" && !this.styles[a])
            return !0;
          var s = typeof a > "u" ? this.styles : { line: this.styles[a] };
          for (var c in s)
            for (var f in s[c])
              for (var o in s[c][f])
                return !1;
          return !0;
        },
        /**
         * Returns true if object has a style property or has it ina specified line
         * This function is used to detect if a text will use a particular property or not.
         * @param {String} property to check for
         * @param {Number} lineIndex to check the style on
         * @return {Boolean}
         */
        styleHas: function(a, s) {
          if (!this.styles || !a || a === "" || typeof s < "u" && !this.styles[s])
            return !1;
          var c = typeof s > "u" ? this.styles : { 0: this.styles[s] };
          for (var f in c)
            for (var o in c[f])
              if (typeof c[f][o][a] < "u")
                return !0;
          return !1;
        },
        /**
         * Check if characters in a text have a value for a property
         * whose value matches the textbox's value for that property.  If so,
         * the character-level property is deleted.  If the character
         * has no other properties, then it is also deleted.  Finally,
         * if the line containing that character has no other characters
         * then it also is deleted.
         *
         * @param {string} property The property to compare between characters and text.
         */
        cleanStyle: function(a) {
          if (!this.styles || !a || a === "")
            return !1;
          var s = this.styles, c = 0, f, o, h = !0, u = 0, d;
          for (var m in s) {
            f = 0;
            for (var p in s[m]) {
              var d = s[m][p], v = d.hasOwnProperty(a);
              c++, v ? (o ? d[a] !== o && (h = !1) : o = d[a], d[a] === this[a] && delete d[a]) : h = !1, Object.keys(d).length !== 0 ? f++ : delete s[m][p];
            }
            f === 0 && delete s[m];
          }
          for (var b = 0; b < this._textLines.length; b++)
            u += this._textLines[b].length;
          h && c === u && (this[a] = o, this.removeStyle(a));
        },
        /**
         * Remove a style property or properties from all individual character styles
         * in a text object.  Deletes the character style object if it contains no other style
         * props.  Deletes a line style object if it contains no other character styles.
         *
         * @param {String} props The property to remove from character styles.
         */
        removeStyle: function(a) {
          if (!(!this.styles || !a || a === "")) {
            var s = this.styles, c, f, o;
            for (f in s) {
              c = s[f];
              for (o in c)
                delete c[o][a], Object.keys(c[o]).length === 0 && delete c[o];
              Object.keys(c).length === 0 && delete s[f];
            }
          }
        },
        /**
         * @private
         */
        _extendStyles: function(a, s) {
          var c = this.get2DCursorLocation(a);
          this._getLineStyle(c.lineIndex) || this._setLineStyle(c.lineIndex), this._getStyleDeclaration(c.lineIndex, c.charIndex) || this._setStyleDeclaration(c.lineIndex, c.charIndex, {}), e.util.object.extend(this._getStyleDeclaration(c.lineIndex, c.charIndex), s);
        },
        /**
         * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)
         * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.
         * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.
         */
        get2DCursorLocation: function(a, s) {
          typeof a > "u" && (a = this.selectionStart);
          for (var c = s ? this._unwrappedTextLines : this._textLines, f = c.length, o = 0; o < f; o++) {
            if (a <= c[o].length)
              return {
                lineIndex: o,
                charIndex: a
              };
            a -= c[o].length + this.missingNewlineOffset(o);
          }
          return {
            lineIndex: o - 1,
            charIndex: c[o - 1].length < a ? c[o - 1].length : a
          };
        },
        /**
         * Gets style of a current selection/cursor (at the start position)
         * if startIndex or endIndex are not provided, selectionStart or selectionEnd will be used.
         * @param {Number} [startIndex] Start index to get styles at
         * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1
         * @param {Boolean} [complete] get full style or not
         * @return {Array} styles an array with one, zero or more Style objects
         */
        getSelectionStyles: function(a, s, c) {
          typeof a > "u" && (a = this.selectionStart || 0), typeof s > "u" && (s = this.selectionEnd || a);
          for (var f = [], o = a; o < s; o++)
            f.push(this.getStyleAtPosition(o, c));
          return f;
        },
        /**
         * Gets style of a current selection/cursor position
         * @param {Number} position  to get styles at
         * @param {Boolean} [complete] full style if true
         * @return {Object} style Style object at a specified index
         * @private
         */
        getStyleAtPosition: function(a, s) {
          var c = this.get2DCursorLocation(a), f = s ? this.getCompleteStyleDeclaration(c.lineIndex, c.charIndex) : this._getStyleDeclaration(c.lineIndex, c.charIndex);
          return f || {};
        },
        /**
         * Sets style of a current selection, if no selection exist, do not set anything.
         * @param {Object} [styles] Styles object
         * @param {Number} [startIndex] Start index to get styles at
         * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1
         * @return {fabric.IText} thisArg
         * @chainable
         */
        setSelectionStyles: function(a, s, c) {
          typeof s > "u" && (s = this.selectionStart || 0), typeof c > "u" && (c = this.selectionEnd || s);
          for (var f = s; f < c; f++)
            this._extendStyles(f, a);
          return this._forceClearCache = !0, this;
        },
        /**
         * get the reference, not a clone, of the style object for a given character
         * @param {Number} lineIndex
         * @param {Number} charIndex
         * @return {Object} style object
         */
        _getStyleDeclaration: function(a, s) {
          var c = this.styles && this.styles[a];
          return c ? c[s] : null;
        },
        /**
         * return a new object that contains all the style property for a character
         * the object returned is newly created
         * @param {Number} lineIndex of the line where the character is
         * @param {Number} charIndex position of the character on the line
         * @return {Object} style object
         */
        getCompleteStyleDeclaration: function(a, s) {
          for (var c = this._getStyleDeclaration(a, s) || {}, f = {}, o, h = 0; h < this._styleProperties.length; h++)
            o = this._styleProperties[h], f[o] = typeof c[o] > "u" ? this[o] : c[o];
          return f;
        },
        /**
         * @param {Number} lineIndex
         * @param {Number} charIndex
         * @param {Object} style
         * @private
         */
        _setStyleDeclaration: function(a, s, c) {
          this.styles[a][s] = c;
        },
        /**
         *
         * @param {Number} lineIndex
         * @param {Number} charIndex
         * @private
         */
        _deleteStyleDeclaration: function(a, s) {
          delete this.styles[a][s];
        },
        /**
         * @param {Number} lineIndex
         * @return {Boolean} if the line exists or not
         * @private
         */
        _getLineStyle: function(a) {
          return !!this.styles[a];
        },
        /**
         * Set the line style to an empty object so that is initialized
         * @param {Number} lineIndex
         * @private
         */
        _setLineStyle: function(a) {
          this.styles[a] = {};
        },
        /**
         * @param {Number} lineIndex
         * @private
         */
        _deleteLineStyle: function(a) {
          delete this.styles[a];
        }
      }
    );
  }(), function() {
    function a(s) {
      s.textDecoration && (s.textDecoration.indexOf("underline") > -1 && (s.underline = !0), s.textDecoration.indexOf("line-through") > -1 && (s.linethrough = !0), s.textDecoration.indexOf("overline") > -1 && (s.overline = !0), delete s.textDecoration);
    }
    e.IText = e.util.createClass(
      e.Text,
      e.Observable,
      /** @lends fabric.IText.prototype */
      {
        /**
         * Type of an object
         * @type String
         * @default
         */
        type: "i-text",
        /**
         * Index where text selection starts (or where cursor is when there is no selection)
         * @type Number
         * @default
         */
        selectionStart: 0,
        /**
         * Index where text selection ends
         * @type Number
         * @default
         */
        selectionEnd: 0,
        /**
         * Color of text selection
         * @type String
         * @default
         */
        selectionColor: "rgba(17,119,255,0.3)",
        /**
         * Indicates whether text is in editing mode
         * @type Boolean
         * @default
         */
        isEditing: !1,
        /**
         * Indicates whether a text can be edited
         * @type Boolean
         * @default
         */
        editable: !0,
        /**
         * Border color of text object while it's in editing mode
         * @type String
         * @default
         */
        editingBorderColor: "rgba(102,153,255,0.25)",
        /**
         * Width of cursor (in px)
         * @type Number
         * @default
         */
        cursorWidth: 2,
        /**
         * Color of text cursor color in editing mode.
         * if not set (default) will take color from the text.
         * if set to a color value that fabric can understand, it will
         * be used instead of the color of the text at the current position.
         * @type String
         * @default
         */
        cursorColor: "",
        /**
         * Delay between cursor blink (in ms)
         * @type Number
         * @default
         */
        cursorDelay: 1e3,
        /**
         * Duration of cursor fadein (in ms)
         * @type Number
         * @default
         */
        cursorDuration: 600,
        /**
         * Indicates whether internal text char widths can be cached
         * @type Boolean
         * @default
         */
        caching: !0,
        /**
         * DOM container to append the hiddenTextarea.
         * An alternative to attaching to the document.body.
         * Useful to reduce laggish redraw of the full document.body tree and
         * also with modals event capturing that won't let the textarea take focus.
         * @type HTMLElement
         * @default
         */
        hiddenTextareaContainer: null,
        /**
         * @private
         */
        _reSpace: /\s|\n/,
        /**
         * @private
         */
        _currentCursorOpacity: 0,
        /**
         * @private
         */
        _selectionDirection: null,
        /**
         * @private
         */
        _abortCursorAnimation: !1,
        /**
         * @private
         */
        __widthOfSpace: [],
        /**
         * Helps determining when the text is in composition, so that the cursor
         * rendering is altered.
         */
        inCompositionMode: !1,
        /**
         * Constructor
         * @param {String} text Text string
         * @param {Object} [options] Options object
         * @return {fabric.IText} thisArg
         */
        initialize: function(s, c) {
          this.callSuper("initialize", s, c), this.initBehavior();
        },
        /**
         * Sets selection start (left boundary of a selection)
         * @param {Number} index Index to set selection start to
         */
        setSelectionStart: function(s) {
          s = Math.max(s, 0), this._updateAndFire("selectionStart", s);
        },
        /**
         * Sets selection end (right boundary of a selection)
         * @param {Number} index Index to set selection end to
         */
        setSelectionEnd: function(s) {
          s = Math.min(s, this.text.length), this._updateAndFire("selectionEnd", s);
        },
        /**
         * @private
         * @param {String} property 'selectionStart' or 'selectionEnd'
         * @param {Number} index new position of property
         */
        _updateAndFire: function(s, c) {
          this[s] !== c && (this._fireSelectionChanged(), this[s] = c), this._updateTextarea();
        },
        /**
         * Fires the even of selection changed
         * @private
         */
        _fireSelectionChanged: function() {
          this.fire("selection:changed"), this.canvas && this.canvas.fire("text:selection:changed", { target: this });
        },
        /**
         * Initialize text dimensions. Render all text on given context
         * or on a offscreen canvas to get the text width with measureText.
         * Updates this.width and this.height with the proper values.
         * Does not return dimensions.
         * @private
         */
        initDimensions: function() {
          this.isEditing && this.initDelayedCursor(), this.clearContextTop(), this.callSuper("initDimensions");
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        render: function(s) {
          this.clearContextTop(), this.callSuper("render", s), this.cursorOffsetCache = {}, this.renderCursorOrSelection();
        },
        /**
         * @private
         * @param {CanvasRenderingContext2D} ctx Context to render on
         */
        _render: function(s) {
          this.callSuper("_render", s);
        },
        /**
         * Prepare and clean the contextTop
         */
        clearContextTop: function(s) {
          if (!(!this.isEditing || !this.canvas || !this.canvas.contextTop)) {
            var c = this.canvas.contextTop, f = this.canvas.viewportTransform;
            c.save(), c.transform(f[0], f[1], f[2], f[3], f[4], f[5]), this.transform(c), this._clearTextArea(c), s || c.restore();
          }
        },
        /**
         * Renders cursor or selection (depending on what exists)
         * it does on the contextTop. If contextTop is not available, do nothing.
         */
        renderCursorOrSelection: function() {
          if (!(!this.isEditing || !this.canvas || !this.canvas.contextTop)) {
            var s = this._getCursorBoundaries(), c = this.canvas.contextTop;
            this.clearContextTop(!0), this.selectionStart === this.selectionEnd ? this.renderCursor(s, c) : this.renderSelection(s, c), c.restore();
          }
        },
        _clearTextArea: function(s) {
          var c = this.width + 4, f = this.height + 4;
          s.clearRect(-c / 2, -f / 2, c, f);
        },
        /**
         * Returns cursor boundaries (left, top, leftOffset, topOffset)
         * @private
         * @param {Array} chars Array of characters
         * @param {String} typeOfBoundaries
         */
        _getCursorBoundaries: function(s) {
          typeof s > "u" && (s = this.selectionStart);
          var c = this._getLeftOffset(), f = this._getTopOffset(), o = this._getCursorBoundariesOffsets(s);
          return {
            left: c,
            top: f,
            leftOffset: o.left,
            topOffset: o.top
          };
        },
        /**
         * @private
         */
        _getCursorBoundariesOffsets: function(s) {
          if (this.cursorOffsetCache && "top" in this.cursorOffsetCache)
            return this.cursorOffsetCache;
          var c, f, o, h = 0, u = 0, d, m = this.get2DCursorLocation(s);
          o = m.charIndex, f = m.lineIndex;
          for (var p = 0; p < f; p++)
            h += this.getHeightOfLine(p);
          c = this._getLineLeftOffset(f);
          var v = this.__charBounds[f][o];
          return v && (u = v.left), this.charSpacing !== 0 && o === this._textLines[f].length && (u -= this._getWidthOfCharSpacing()), d = {
            top: h,
            left: c + (u > 0 ? u : 0)
          }, this.direction === "rtl" && (d.left *= -1), this.cursorOffsetCache = d, this.cursorOffsetCache;
        },
        /**
         * Renders cursor
         * @param {Object} boundaries
         * @param {CanvasRenderingContext2D} ctx transformed context to draw on
         */
        renderCursor: function(s, c) {
          var f = this.get2DCursorLocation(), o = f.lineIndex, h = f.charIndex > 0 ? f.charIndex - 1 : 0, u = this.getValueOfPropertyAt(o, h, "fontSize"), d = this.scaleX * this.canvas.getZoom(), m = this.cursorWidth / d, p = s.topOffset, v = this.getValueOfPropertyAt(o, h, "deltaY");
          p += (1 - this._fontSizeFraction) * this.getHeightOfLine(o) / this.lineHeight - u * (1 - this._fontSizeFraction), this.inCompositionMode && this.renderSelection(s, c), c.fillStyle = this.cursorColor || this.getValueOfPropertyAt(o, h, "fill"), c.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity, c.fillRect(
            s.left + s.leftOffset - m / 2,
            p + s.top + v,
            m,
            u
          );
        },
        /**
         * Renders text selection
         * @param {Object} boundaries Object with left/top/leftOffset/topOffset
         * @param {CanvasRenderingContext2D} ctx transformed context to draw on
         */
        renderSelection: function(s, c) {
          for (var f = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart, o = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd, h = this.textAlign.indexOf("justify") !== -1, u = this.get2DCursorLocation(f), d = this.get2DCursorLocation(o), m = u.lineIndex, p = d.lineIndex, v = u.charIndex < 0 ? 0 : u.charIndex, b = d.charIndex < 0 ? 0 : d.charIndex, y = m; y <= p; y++) {
            var w = this._getLineLeftOffset(y) || 0, x = this.getHeightOfLine(y), _ = 0, S = 0, k = 0;
            if (y === m && (S = this.__charBounds[m][v].left), y >= m && y < p)
              k = h && !this.isEndOfWrapping(y) ? this.width : this.getLineWidth(y) || 5;
            else if (y === p)
              if (b === 0)
                k = this.__charBounds[p][b].left;
              else {
                var F = this._getWidthOfCharSpacing();
                k = this.__charBounds[p][b - 1].left + this.__charBounds[p][b - 1].width - F;
              }
            _ = x, (this.lineHeight < 1 || y === p && this.lineHeight > 1) && (x /= this.lineHeight);
            var L = s.left + w + S, j = k - S, G = x, te = 0;
            this.inCompositionMode ? (c.fillStyle = this.compositionColor || "black", G = 1, te = x) : c.fillStyle = this.selectionColor, this.direction === "rtl" && (L = this.width - L - j), c.fillRect(
              L,
              s.top + s.topOffset + te,
              j,
              G
            ), s.topOffset += _;
          }
        },
        /**
         * High level function to know the height of the cursor.
         * the currentChar is the one that precedes the cursor
         * Returns fontSize of char at the current cursor
         * Unused from the library, is for the end user
         * @return {Number} Character font size
         */
        getCurrentCharFontSize: function() {
          var s = this._getCurrentCharIndex();
          return this.getValueOfPropertyAt(s.l, s.c, "fontSize");
        },
        /**
         * High level function to know the color of the cursor.
         * the currentChar is the one that precedes the cursor
         * Returns color (fill) of char at the current cursor
         * if the text object has a pattern or gradient for filler, it will return that.
         * Unused by the library, is for the end user
         * @return {String | fabric.Gradient | fabric.Pattern} Character color (fill)
         */
        getCurrentCharColor: function() {
          var s = this._getCurrentCharIndex();
          return this.getValueOfPropertyAt(s.l, s.c, "fill");
        },
        /**
         * Returns the cursor position for the getCurrent.. functions
         * @private
         */
        _getCurrentCharIndex: function() {
          var s = this.get2DCursorLocation(this.selectionStart, !0), c = s.charIndex > 0 ? s.charIndex - 1 : 0;
          return { l: s.lineIndex, c };
        }
      }
    ), e.IText.fromObject = function(s, c) {
      var f = e.util.stylesFromArray(s.styles, s.text), o = Object.assign({}, s, { styles: f });
      if (a(o), o.styles)
        for (var h in o.styles)
          for (var u in o.styles[h])
            a(o.styles[h][u]);
      e.Object._fromObject("IText", o, c, "text");
    };
  }(), function() {
    var a = e.util.object.clone;
    e.util.object.extend(
      e.IText.prototype,
      /** @lends fabric.IText.prototype */
      {
        /**
         * Initializes all the interactive behavior of IText
         */
        initBehavior: function() {
          this.initAddedHandler(), this.initRemovedHandler(), this.initCursorSelectionHandlers(), this.initDoubleClickSimulation(), this.mouseMoveHandler = this.mouseMoveHandler.bind(this);
        },
        onDeselect: function() {
          this.isEditing && this.exitEditing(), this.selected = !1;
        },
        /**
         * Initializes "added" event handler
         */
        initAddedHandler: function() {
          var s = this;
          this.on("added", function() {
            var c = s.canvas;
            c && (c._hasITextHandlers || (c._hasITextHandlers = !0, s._initCanvasHandlers(c)), c._iTextInstances = c._iTextInstances || [], c._iTextInstances.push(s));
          });
        },
        initRemovedHandler: function() {
          var s = this;
          this.on("removed", function() {
            var c = s.canvas;
            c && (c._iTextInstances = c._iTextInstances || [], e.util.removeFromArray(c._iTextInstances, s), c._iTextInstances.length === 0 && (c._hasITextHandlers = !1, s._removeCanvasHandlers(c)));
          });
        },
        /**
         * register canvas event to manage exiting on other instances
         * @private
         */
        _initCanvasHandlers: function(s) {
          s._mouseUpITextHandler = function() {
            s._iTextInstances && s._iTextInstances.forEach(function(c) {
              c.__isMousedown = !1;
            });
          }, s.on("mouse:up", s._mouseUpITextHandler);
        },
        /**
         * remove canvas event to manage exiting on other instances
         * @private
         */
        _removeCanvasHandlers: function(s) {
          s.off("mouse:up", s._mouseUpITextHandler);
        },
        /**
         * @private
         */
        _tick: function() {
          this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, "_onTickComplete");
        },
        /**
         * @private
         */
        _animateCursor: function(s, c, f, o) {
          var h;
          return h = {
            isAborted: !1,
            abort: function() {
              this.isAborted = !0;
            }
          }, s.animate("_currentCursorOpacity", c, {
            duration: f,
            onComplete: function() {
              h.isAborted || s[o]();
            },
            onChange: function() {
              s.canvas && s.selectionStart === s.selectionEnd && s.renderCursorOrSelection();
            },
            abort: function() {
              return h.isAborted;
            }
          }), h;
        },
        /**
         * @private
         */
        _onTickComplete: function() {
          var s = this;
          this._cursorTimeout1 && clearTimeout(this._cursorTimeout1), this._cursorTimeout1 = setTimeout(function() {
            s._currentTickCompleteState = s._animateCursor(s, 0, this.cursorDuration / 2, "_tick");
          }, 100);
        },
        /**
         * Initializes delayed cursor
         */
        initDelayedCursor: function(s) {
          var c = this, f = s ? 0 : this.cursorDelay;
          this.abortCursorAnimation(), this._currentCursorOpacity = 1, this._cursorTimeout2 = setTimeout(function() {
            c._tick();
          }, f);
        },
        /**
         * Aborts cursor animation and clears all timeouts
         */
        abortCursorAnimation: function() {
          var s = this._currentTickState || this._currentTickCompleteState, c = this.canvas;
          this._currentTickState && this._currentTickState.abort(), this._currentTickCompleteState && this._currentTickCompleteState.abort(), clearTimeout(this._cursorTimeout1), clearTimeout(this._cursorTimeout2), this._currentCursorOpacity = 0, s && c && c.clearContext(c.contextTop || c.contextContainer);
        },
        /**
         * Selects entire text
         * @return {fabric.IText} thisArg
         * @chainable
         */
        selectAll: function() {
          return this.selectionStart = 0, this.selectionEnd = this._text.length, this._fireSelectionChanged(), this._updateTextarea(), this;
        },
        /**
         * Returns selected text
         * @return {String}
         */
        getSelectedText: function() {
          return this._text.slice(this.selectionStart, this.selectionEnd).join("");
        },
        /**
         * Find new selection index representing start of current word according to current selection index
         * @param {Number} startFrom Current selection index
         * @return {Number} New selection index
         */
        findWordBoundaryLeft: function(s) {
          var c = 0, f = s - 1;
          if (this._reSpace.test(this._text[f]))
            for (; this._reSpace.test(this._text[f]); )
              c++, f--;
          for (; /\S/.test(this._text[f]) && f > -1; )
            c++, f--;
          return s - c;
        },
        /**
         * Find new selection index representing end of current word according to current selection index
         * @param {Number} startFrom Current selection index
         * @return {Number} New selection index
         */
        findWordBoundaryRight: function(s) {
          var c = 0, f = s;
          if (this._reSpace.test(this._text[f]))
            for (; this._reSpace.test(this._text[f]); )
              c++, f++;
          for (; /\S/.test(this._text[f]) && f < this._text.length; )
            c++, f++;
          return s + c;
        },
        /**
         * Find new selection index representing start of current line according to current selection index
         * @param {Number} startFrom Current selection index
         * @return {Number} New selection index
         */
        findLineBoundaryLeft: function(s) {
          for (var c = 0, f = s - 1; !/\n/.test(this._text[f]) && f > -1; )
            c++, f--;
          return s - c;
        },
        /**
         * Find new selection index representing end of current line according to current selection index
         * @param {Number} startFrom Current selection index
         * @return {Number} New selection index
         */
        findLineBoundaryRight: function(s) {
          for (var c = 0, f = s; !/\n/.test(this._text[f]) && f < this._text.length; )
            c++, f++;
          return s + c;
        },
        /**
         * Finds index corresponding to beginning or end of a word
         * @param {Number} selectionStart Index of a character
         * @param {Number} direction 1 or -1
         * @return {Number} Index of the beginning or end of a word
         */
        searchWordBoundary: function(s, c) {
          for (var f = this._text, o = this._reSpace.test(f[s]) ? s - 1 : s, h = f[o], u = e.reNonWord; !u.test(h) && o > 0 && o < f.length; )
            o += c, h = f[o];
          return u.test(h) && (o += c === 1 ? 0 : 1), o;
        },
        /**
         * Selects a word based on the index
         * @param {Number} selectionStart Index of a character
         */
        selectWord: function(s) {
          s = s || this.selectionStart;
          var c = this.searchWordBoundary(s, -1), f = this.searchWordBoundary(s, 1);
          this.selectionStart = c, this.selectionEnd = f, this._fireSelectionChanged(), this._updateTextarea(), this.renderCursorOrSelection();
        },
        /**
         * Selects a line based on the index
         * @param {Number} selectionStart Index of a character
         * @return {fabric.IText} thisArg
         * @chainable
         */
        selectLine: function(s) {
          s = s || this.selectionStart;
          var c = this.findLineBoundaryLeft(s), f = this.findLineBoundaryRight(s);
          return this.selectionStart = c, this.selectionEnd = f, this._fireSelectionChanged(), this._updateTextarea(), this;
        },
        /**
         * Enters editing state
         * @return {fabric.IText} thisArg
         * @chainable
         */
        enterEditing: function(s) {
          if (!(this.isEditing || !this.editable))
            return this.canvas && (this.canvas.calcOffset(), this.exitEditingOnOthers(this.canvas)), this.isEditing = !0, this.initHiddenTextarea(s), this.hiddenTextarea.focus(), this.hiddenTextarea.value = this.text, this._updateTextarea(), this._saveEditingProps(), this._setEditingProps(), this._textBeforeEdit = this.text, this._tick(), this.fire("editing:entered"), this._fireSelectionChanged(), this.canvas ? (this.canvas.fire("text:editing:entered", { target: this }), this.initMouseMoveHandler(), this.canvas.requestRenderAll(), this) : this;
        },
        exitEditingOnOthers: function(s) {
          s._iTextInstances && s._iTextInstances.forEach(function(c) {
            c.selected = !1, c.isEditing && c.exitEditing();
          });
        },
        /**
         * Initializes "mousemove" event handler
         */
        initMouseMoveHandler: function() {
          this.canvas.on("mouse:move", this.mouseMoveHandler);
        },
        /**
         * @private
         */
        mouseMoveHandler: function(s) {
          if (!(!this.__isMousedown || !this.isEditing)) {
            document.activeElement !== this.hiddenTextarea && this.hiddenTextarea.focus();
            var c = this.getSelectionStartFromPointer(s.e), f = this.selectionStart, o = this.selectionEnd;
            (c !== this.__selectionStartOnMouseDown || f === o) && (f === c || o === c) || (c > this.__selectionStartOnMouseDown ? (this.selectionStart = this.__selectionStartOnMouseDown, this.selectionEnd = c) : (this.selectionStart = c, this.selectionEnd = this.__selectionStartOnMouseDown), (this.selectionStart !== f || this.selectionEnd !== o) && (this.restartCursorIfNeeded(), this._fireSelectionChanged(), this._updateTextarea(), this.renderCursorOrSelection()));
          }
        },
        /**
         * @private
         */
        _setEditingProps: function() {
          this.hoverCursor = "text", this.canvas && (this.canvas.defaultCursor = this.canvas.moveCursor = "text"), this.borderColor = this.editingBorderColor, this.hasControls = this.selectable = !1, this.lockMovementX = this.lockMovementY = !0;
        },
        /**
         * convert from textarea to grapheme indexes
         */
        fromStringToGraphemeSelection: function(s, c, f) {
          var o = f.slice(0, s), h = e.util.string.graphemeSplit(o).length;
          if (s === c)
            return { selectionStart: h, selectionEnd: h };
          var u = f.slice(s, c), d = e.util.string.graphemeSplit(u).length;
          return { selectionStart: h, selectionEnd: h + d };
        },
        /**
         * convert from fabric to textarea values
         */
        fromGraphemeToStringSelection: function(s, c, f) {
          var o = f.slice(0, s), h = o.join("").length;
          if (s === c)
            return { selectionStart: h, selectionEnd: h };
          var u = f.slice(s, c), d = u.join("").length;
          return { selectionStart: h, selectionEnd: h + d };
        },
        /**
         * @private
         */
        _updateTextarea: function() {
          if (this.cursorOffsetCache = {}, !!this.hiddenTextarea) {
            if (!this.inCompositionMode) {
              var s = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);
              this.hiddenTextarea.selectionStart = s.selectionStart, this.hiddenTextarea.selectionEnd = s.selectionEnd;
            }
            this.updateTextareaPosition();
          }
        },
        /**
         * @private
         */
        updateFromTextArea: function() {
          if (this.hiddenTextarea) {
            this.cursorOffsetCache = {}, this.text = this.hiddenTextarea.value, this._shouldClearDimensionCache() && (this.initDimensions(), this.setCoords());
            var s = this.fromStringToGraphemeSelection(
              this.hiddenTextarea.selectionStart,
              this.hiddenTextarea.selectionEnd,
              this.hiddenTextarea.value
            );
            this.selectionEnd = this.selectionStart = s.selectionEnd, this.inCompositionMode || (this.selectionStart = s.selectionStart), this.updateTextareaPosition();
          }
        },
        /**
         * @private
         */
        updateTextareaPosition: function() {
          if (this.selectionStart === this.selectionEnd) {
            var s = this._calcTextareaPosition();
            this.hiddenTextarea.style.left = s.left, this.hiddenTextarea.style.top = s.top;
          }
        },
        /**
         * @private
         * @return {Object} style contains style for hiddenTextarea
         */
        _calcTextareaPosition: function() {
          if (!this.canvas)
            return { x: 1, y: 1 };
          var s = this.inCompositionMode ? this.compositionStart : this.selectionStart, c = this._getCursorBoundaries(s), f = this.get2DCursorLocation(s), o = f.lineIndex, h = f.charIndex, u = this.getValueOfPropertyAt(o, h, "fontSize") * this.lineHeight, d = c.leftOffset, m = this.calcTransformMatrix(), p = {
            x: c.left + d,
            y: c.top + c.topOffset + u
          }, v = this.canvas.getRetinaScaling(), b = this.canvas.upperCanvasEl, y = b.width / v, w = b.height / v, x = y - u, _ = w - u, S = b.clientWidth / y, k = b.clientHeight / w;
          return p = e.util.transformPoint(p, m), p = e.util.transformPoint(p, this.canvas.viewportTransform), p.x *= S, p.y *= k, p.x < 0 && (p.x = 0), p.x > x && (p.x = x), p.y < 0 && (p.y = 0), p.y > _ && (p.y = _), p.x += this.canvas._offset.left, p.y += this.canvas._offset.top, { left: p.x + "px", top: p.y + "px", fontSize: u + "px", charHeight: u };
        },
        /**
         * @private
         */
        _saveEditingProps: function() {
          this._savedProps = {
            hasControls: this.hasControls,
            borderColor: this.borderColor,
            lockMovementX: this.lockMovementX,
            lockMovementY: this.lockMovementY,
            hoverCursor: this.hoverCursor,
            selectable: this.selectable,
            defaultCursor: this.canvas && this.canvas.defaultCursor,
            moveCursor: this.canvas && this.canvas.moveCursor
          };
        },
        /**
         * @private
         */
        _restoreEditingProps: function() {
          this._savedProps && (this.hoverCursor = this._savedProps.hoverCursor, this.hasControls = this._savedProps.hasControls, this.borderColor = this._savedProps.borderColor, this.selectable = this._savedProps.selectable, this.lockMovementX = this._savedProps.lockMovementX, this.lockMovementY = this._savedProps.lockMovementY, this.canvas && (this.canvas.defaultCursor = this._savedProps.defaultCursor, this.canvas.moveCursor = this._savedProps.moveCursor));
        },
        /**
         * Exits from editing state
         * @return {fabric.IText} thisArg
         * @chainable
         */
        exitEditing: function() {
          var s = this._textBeforeEdit !== this.text, c = this.hiddenTextarea;
          return this.selected = !1, this.isEditing = !1, this.selectionEnd = this.selectionStart, c && (c.blur && c.blur(), c.parentNode && c.parentNode.removeChild(c)), this.hiddenTextarea = null, this.abortCursorAnimation(), this._restoreEditingProps(), this._currentCursorOpacity = 0, this._shouldClearDimensionCache() && (this.initDimensions(), this.setCoords()), this.fire("editing:exited"), s && this.fire("modified"), this.canvas && (this.canvas.off("mouse:move", this.mouseMoveHandler), this.canvas.fire("text:editing:exited", { target: this }), s && this.canvas.fire("object:modified", { target: this })), this;
        },
        /**
         * @private
         */
        _removeExtraneousStyles: function() {
          for (var s in this.styles)
            this._textLines[s] || delete this.styles[s];
        },
        /**
         * remove and reflow a style block from start to end.
         * @param {Number} start linear start position for removal (included in removal)
         * @param {Number} end linear end position for removal ( excluded from removal )
         */
        removeStyleFromTo: function(s, c) {
          var f = this.get2DCursorLocation(s, !0), o = this.get2DCursorLocation(c, !0), h = f.lineIndex, u = f.charIndex, d = o.lineIndex, m = o.charIndex, p, v;
          if (h !== d) {
            if (this.styles[h])
              for (p = u; p < this._unwrappedTextLines[h].length; p++)
                delete this.styles[h][p];
            if (this.styles[d])
              for (p = m; p < this._unwrappedTextLines[d].length; p++)
                v = this.styles[d][p], v && (this.styles[h] || (this.styles[h] = {}), this.styles[h][u + p - m] = v);
            for (p = h + 1; p <= d; p++)
              delete this.styles[p];
            this.shiftLineStyles(d, h - d);
          } else if (this.styles[h]) {
            v = this.styles[h];
            var b = m - u, y, w;
            for (p = u; p < m; p++)
              delete v[p];
            for (w in this.styles[h])
              y = parseInt(w, 10), y >= m && (v[y - b] = v[w], delete v[w]);
          }
        },
        /**
         * Shifts line styles up or down
         * @param {Number} lineIndex Index of a line
         * @param {Number} offset Can any number?
         */
        shiftLineStyles: function(s, c) {
          var f = a(this.styles);
          for (var o in this.styles) {
            var h = parseInt(o, 10);
            h > s && (this.styles[h + c] = f[h], f[h - c] || delete this.styles[h]);
          }
        },
        restartCursorIfNeeded: function() {
          (!this._currentTickState || this._currentTickState.isAborted || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted) && this.initDelayedCursor();
        },
        /**
         * Handle insertion of more consecutive style lines for when one or more
         * newlines gets added to the text. Since current style needs to be shifted
         * first we shift the current style of the number lines needed, then we add
         * new lines from the last to the first.
         * @param {Number} lineIndex Index of a line
         * @param {Number} charIndex Index of a char
         * @param {Number} qty number of lines to add
         * @param {Array} copiedStyle Array of objects styles
         */
        insertNewlineStyleObject: function(s, c, f, o) {
          var h, u = {}, d = !1, m = this._unwrappedTextLines[s].length === c;
          f || (f = 1), this.shiftLineStyles(s, f), this.styles[s] && (h = this.styles[s][c === 0 ? c : c - 1]);
          for (var p in this.styles[s]) {
            var v = parseInt(p, 10);
            v >= c && (d = !0, u[v - c] = this.styles[s][p], m && c === 0 || delete this.styles[s][p]);
          }
          var b = !1;
          for (d && !m && (this.styles[s + f] = u, b = !0), b && f--; f > 0; )
            o && o[f - 1] ? this.styles[s + f] = { 0: a(o[f - 1]) } : h ? this.styles[s + f] = { 0: a(h) } : delete this.styles[s + f], f--;
          this._forceClearCache = !0;
        },
        /**
         * Inserts style object for a given line/char index
         * @param {Number} lineIndex Index of a line
         * @param {Number} charIndex Index of a char
         * @param {Number} quantity number Style object to insert, if given
         * @param {Array} copiedStyle array of style objects
         */
        insertCharStyleObject: function(s, c, f, o) {
          this.styles || (this.styles = {});
          var h = this.styles[s], u = h ? a(h) : {};
          f || (f = 1);
          for (var d in u) {
            var m = parseInt(d, 10);
            m >= c && (h[m + f] = u[m], u[m - f] || delete h[m]);
          }
          if (this._forceClearCache = !0, o) {
            for (; f--; )
              Object.keys(o[f]).length && (this.styles[s] || (this.styles[s] = {}), this.styles[s][c + f] = a(o[f]));
            return;
          }
          if (h)
            for (var p = h[c ? c - 1 : 1]; p && f--; )
              this.styles[s][c + f] = a(p);
        },
        /**
         * Inserts style object(s)
         * @param {Array} insertedText Characters at the location where style is inserted
         * @param {Number} start cursor index for inserting style
         * @param {Array} [copiedStyle] array of style objects to insert.
         */
        insertNewStyleBlock: function(s, c, f) {
          for (var o = this.get2DCursorLocation(c, !0), h = [0], u = 0, d = 0; d < s.length; d++)
            s[d] === `
` ? (u++, h[u] = 0) : h[u]++;
          h[0] > 0 && (this.insertCharStyleObject(o.lineIndex, o.charIndex, h[0], f), f = f && f.slice(h[0] + 1)), u && this.insertNewlineStyleObject(
            o.lineIndex,
            o.charIndex + h[0],
            u
          );
          for (var d = 1; d < u; d++)
            h[d] > 0 ? this.insertCharStyleObject(o.lineIndex + d, 0, h[d], f) : f && this.styles[o.lineIndex + d] && f[0] && (this.styles[o.lineIndex + d][0] = f[0]), f = f && f.slice(h[d] + 1);
          h[d] > 0 && this.insertCharStyleObject(o.lineIndex + d, 0, h[d], f);
        },
        /**
         * Set the selectionStart and selectionEnd according to the new position of cursor
         * mimic the key - mouse navigation when shift is pressed.
         */
        setSelectionStartEndWithShift: function(s, c, f) {
          f <= s ? (c === s ? this._selectionDirection = "left" : this._selectionDirection === "right" && (this._selectionDirection = "left", this.selectionEnd = s), this.selectionStart = f) : f > s && f < c ? this._selectionDirection === "right" ? this.selectionEnd = f : this.selectionStart = f : (c === s ? this._selectionDirection = "right" : this._selectionDirection === "left" && (this._selectionDirection = "right", this.selectionStart = c), this.selectionEnd = f);
        },
        setSelectionInBoundaries: function() {
          var s = this.text.length;
          this.selectionStart > s ? this.selectionStart = s : this.selectionStart < 0 && (this.selectionStart = 0), this.selectionEnd > s ? this.selectionEnd = s : this.selectionEnd < 0 && (this.selectionEnd = 0);
        }
      }
    );
  }(), e.util.object.extend(
    e.IText.prototype,
    /** @lends fabric.IText.prototype */
    {
      /**
       * Initializes "dbclick" event handler
       */
      initDoubleClickSimulation: function() {
        this.__lastClickTime = +/* @__PURE__ */ new Date(), this.__lastLastClickTime = +/* @__PURE__ */ new Date(), this.__lastPointer = {}, this.on("mousedown", this.onMouseDown);
      },
      /**
       * Default event handler to simulate triple click
       * @private
       */
      onMouseDown: function(a) {
        if (this.canvas) {
          this.__newClickTime = +/* @__PURE__ */ new Date();
          var s = a.pointer;
          this.isTripleClick(s) && (this.fire("tripleclick", a), this._stopEvent(a.e)), this.__lastLastClickTime = this.__lastClickTime, this.__lastClickTime = this.__newClickTime, this.__lastPointer = s, this.__lastIsEditing = this.isEditing, this.__lastSelected = this.selected;
        }
      },
      isTripleClick: function(a) {
        return this.__newClickTime - this.__lastClickTime < 500 && this.__lastClickTime - this.__lastLastClickTime < 500 && this.__lastPointer.x === a.x && this.__lastPointer.y === a.y;
      },
      /**
       * @private
       */
      _stopEvent: function(a) {
        a.preventDefault && a.preventDefault(), a.stopPropagation && a.stopPropagation();
      },
      /**
       * Initializes event handlers related to cursor or selection
       */
      initCursorSelectionHandlers: function() {
        this.initMousedownHandler(), this.initMouseupHandler(), this.initClicks();
      },
      /**
       * Default handler for double click, select a word
       */
      doubleClickHandler: function(a) {
        this.isEditing && this.selectWord(this.getSelectionStartFromPointer(a.e));
      },
      /**
       * Default handler for triple click, select a line
       */
      tripleClickHandler: function(a) {
        this.isEditing && this.selectLine(this.getSelectionStartFromPointer(a.e));
      },
      /**
       * Initializes double and triple click event handlers
       */
      initClicks: function() {
        this.on("mousedblclick", this.doubleClickHandler), this.on("tripleclick", this.tripleClickHandler);
      },
      /**
       * Default event handler for the basic functionalities needed on _mouseDown
       * can be overridden to do something different.
       * Scope of this implementation is: find the click position, set selectionStart
       * find selectionEnd, initialize the drawing of either cursor or selection area
       * initializing a mousedDown on a text area will cancel fabricjs knowledge of
       * current compositionMode. It will be set to false.
       */
      _mouseDownHandler: function(a) {
        !this.canvas || !this.editable || a.e.button && a.e.button !== 1 || (this.__isMousedown = !0, this.selected && (this.inCompositionMode = !1, this.setCursorByClick(a.e)), this.isEditing && (this.__selectionStartOnMouseDown = this.selectionStart, this.selectionStart === this.selectionEnd && this.abortCursorAnimation(), this.renderCursorOrSelection()));
      },
      /**
       * Default event handler for the basic functionalities needed on mousedown:before
       * can be overridden to do something different.
       * Scope of this implementation is: verify the object is already selected when mousing down
       */
      _mouseDownHandlerBefore: function(a) {
        !this.canvas || !this.editable || a.e.button && a.e.button !== 1 || (this.selected = this === this.canvas._activeObject);
      },
      /**
       * Initializes "mousedown" event handler
       */
      initMousedownHandler: function() {
        this.on("mousedown", this._mouseDownHandler), this.on("mousedown:before", this._mouseDownHandlerBefore);
      },
      /**
       * Initializes "mouseup" event handler
       */
      initMouseupHandler: function() {
        this.on("mouseup", this.mouseUpHandler);
      },
      /**
       * standard handler for mouse up, overridable
       * @private
       */
      mouseUpHandler: function(a) {
        if (this.__isMousedown = !1, !(!this.editable || this.group || a.transform && a.transform.actionPerformed || a.e.button && a.e.button !== 1)) {
          if (this.canvas) {
            var s = this.canvas._activeObject;
            if (s && s !== this)
              return;
          }
          this.__lastSelected && !this.__corner ? (this.selected = !1, this.__lastSelected = !1, this.enterEditing(a.e), this.selectionStart === this.selectionEnd ? this.initDelayedCursor(!0) : this.renderCursorOrSelection()) : this.selected = !0;
        }
      },
      /**
       * Changes cursor location in a text depending on passed pointer (x/y) object
       * @param {Event} e Event object
       */
      setCursorByClick: function(a) {
        var s = this.getSelectionStartFromPointer(a), c = this.selectionStart, f = this.selectionEnd;
        a.shiftKey ? this.setSelectionStartEndWithShift(c, f, s) : (this.selectionStart = s, this.selectionEnd = s), this.isEditing && (this._fireSelectionChanged(), this._updateTextarea());
      },
      /**
       * Returns index of a character corresponding to where an object was clicked
       * @param {Event} e Event object
       * @return {Number} Index of a character
       */
      getSelectionStartFromPointer: function(a) {
        for (var s = this.getLocalPointer(a), c = 0, f = 0, o = 0, h = 0, u = 0, d, m, p = 0, v = this._textLines.length; p < v && o <= s.y; p++)
          o += this.getHeightOfLine(p) * this.scaleY, u = p, p > 0 && (h += this._textLines[p - 1].length + this.missingNewlineOffset(p - 1));
        d = this._getLineLeftOffset(u), f = d * this.scaleX, m = this._textLines[u], this.direction === "rtl" && (s.x = this.width * this.scaleX - s.x + f);
        for (var b = 0, y = m.length; b < y && (c = f, f += this.__charBounds[u][b].kernedWidth * this.scaleX, f <= s.x); b++)
          h++;
        return this._getNewSelectionStartFromOffset(s, c, f, h, y);
      },
      /**
       * @private
       */
      _getNewSelectionStartFromOffset: function(a, s, c, f, o) {
        var h = a.x - s, u = c - a.x, d = u > h || u < 0 ? 0 : 1, m = f + d;
        return this.flipX && (m = o - m), m > this._text.length && (m = this._text.length), m;
      }
    }
  ), e.util.object.extend(
    e.IText.prototype,
    /** @lends fabric.IText.prototype */
    {
      /**
       * Initializes hidden textarea (needed to bring up keyboard in iOS)
       */
      initHiddenTextarea: function() {
        this.hiddenTextarea = e.document.createElement("textarea"), this.hiddenTextarea.setAttribute("autocapitalize", "off"), this.hiddenTextarea.setAttribute("autocorrect", "off"), this.hiddenTextarea.setAttribute("autocomplete", "off"), this.hiddenTextarea.setAttribute("spellcheck", "false"), this.hiddenTextarea.setAttribute("data-fabric-hiddentextarea", ""), this.hiddenTextarea.setAttribute("wrap", "off");
        var a = this._calcTextareaPosition();
        this.hiddenTextarea.style.cssText = "position: absolute; top: " + a.top + "; left: " + a.left + "; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px; padding-top: " + a.fontSize + ";", this.hiddenTextareaContainer ? this.hiddenTextareaContainer.appendChild(this.hiddenTextarea) : e.document.body.appendChild(this.hiddenTextarea), e.util.addListener(this.hiddenTextarea, "keydown", this.onKeyDown.bind(this)), e.util.addListener(this.hiddenTextarea, "keyup", this.onKeyUp.bind(this)), e.util.addListener(this.hiddenTextarea, "input", this.onInput.bind(this)), e.util.addListener(this.hiddenTextarea, "copy", this.copy.bind(this)), e.util.addListener(this.hiddenTextarea, "cut", this.copy.bind(this)), e.util.addListener(this.hiddenTextarea, "paste", this.paste.bind(this)), e.util.addListener(this.hiddenTextarea, "compositionstart", this.onCompositionStart.bind(this)), e.util.addListener(this.hiddenTextarea, "compositionupdate", this.onCompositionUpdate.bind(this)), e.util.addListener(this.hiddenTextarea, "compositionend", this.onCompositionEnd.bind(this)), !this._clickHandlerInitialized && this.canvas && (e.util.addListener(this.canvas.upperCanvasEl, "click", this.onClick.bind(this)), this._clickHandlerInitialized = !0);
      },
      /**
       * For functionalities on keyDown
       * Map a special key to a function of the instance/prototype
       * If you need different behaviour for ESC or TAB or arrows, you have to change
       * this map setting the name of a function that you build on the fabric.Itext or
       * your prototype.
       * the map change will affect all Instances unless you need for only some text Instances
       * in that case you have to clone this object and assign your Instance.
       * this.keysMap = fabric.util.object.clone(this.keysMap);
       * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]
       */
      keysMap: {
        9: "exitEditing",
        27: "exitEditing",
        33: "moveCursorUp",
        34: "moveCursorDown",
        35: "moveCursorRight",
        36: "moveCursorLeft",
        37: "moveCursorLeft",
        38: "moveCursorUp",
        39: "moveCursorRight",
        40: "moveCursorDown"
      },
      keysMapRtl: {
        9: "exitEditing",
        27: "exitEditing",
        33: "moveCursorUp",
        34: "moveCursorDown",
        35: "moveCursorLeft",
        36: "moveCursorRight",
        37: "moveCursorRight",
        38: "moveCursorUp",
        39: "moveCursorLeft",
        40: "moveCursorDown"
      },
      /**
       * For functionalities on keyUp + ctrl || cmd
       */
      ctrlKeysMapUp: {
        67: "copy",
        88: "cut"
      },
      /**
       * For functionalities on keyDown + ctrl || cmd
       */
      ctrlKeysMapDown: {
        65: "selectAll"
      },
      onClick: function() {
        this.hiddenTextarea && this.hiddenTextarea.focus();
      },
      /**
       * Handles keydown event
       * only used for arrows and combination of modifier keys.
       * @param {Event} e Event object
       */
      onKeyDown: function(a) {
        if (this.isEditing) {
          var s = this.direction === "rtl" ? this.keysMapRtl : this.keysMap;
          if (a.keyCode in s)
            this[s[a.keyCode]](a);
          else if (a.keyCode in this.ctrlKeysMapDown && (a.ctrlKey || a.metaKey))
            this[this.ctrlKeysMapDown[a.keyCode]](a);
          else
            return;
          a.stopImmediatePropagation(), a.preventDefault(), a.keyCode >= 33 && a.keyCode <= 40 ? (this.inCompositionMode = !1, this.clearContextTop(), this.renderCursorOrSelection()) : this.canvas && this.canvas.requestRenderAll();
        }
      },
      /**
       * Handles keyup event
       * We handle KeyUp because ie11 and edge have difficulties copy/pasting
       * if a copy/cut event fired, keyup is dismissed
       * @param {Event} e Event object
       */
      onKeyUp: function(a) {
        if (!this.isEditing || this._copyDone || this.inCompositionMode) {
          this._copyDone = !1;
          return;
        }
        if (a.keyCode in this.ctrlKeysMapUp && (a.ctrlKey || a.metaKey))
          this[this.ctrlKeysMapUp[a.keyCode]](a);
        else
          return;
        a.stopImmediatePropagation(), a.preventDefault(), this.canvas && this.canvas.requestRenderAll();
      },
      /**
       * Handles onInput event
       * @param {Event} e Event object
       */
      onInput: function(a) {
        var s = this.fromPaste;
        if (this.fromPaste = !1, a && a.stopPropagation(), !!this.isEditing) {
          var c = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText, f = this._text.length, o = c.length, h, u, d = o - f, m = this.selectionStart, p = this.selectionEnd, v = m !== p, b, y, w;
          if (this.hiddenTextarea.value === "") {
            this.styles = {}, this.updateFromTextArea(), this.fire("changed"), this.canvas && (this.canvas.fire("text:changed", { target: this }), this.canvas.requestRenderAll());
            return;
          }
          var x = this.fromStringToGraphemeSelection(
            this.hiddenTextarea.selectionStart,
            this.hiddenTextarea.selectionEnd,
            this.hiddenTextarea.value
          ), _ = m > x.selectionStart;
          v ? (h = this._text.slice(m, p), d += p - m) : o < f && (_ ? h = this._text.slice(p + d, p) : h = this._text.slice(m, m - d)), u = c.slice(x.selectionEnd - d, x.selectionEnd), h && h.length && (u.length && (b = this.getSelectionStyles(m, m + 1, !1), b = u.map(function() {
            return b[0];
          })), v ? (y = m, w = p) : _ ? (y = p - h.length, w = p) : (y = p, w = p + h.length), this.removeStyleFromTo(y, w)), u.length && (s && u.join("") === e.copiedText && !e.disableStyleCopyPaste && (b = e.copiedTextStyle), this.insertNewStyleBlock(u, m, b)), this.updateFromTextArea(), this.fire("changed"), this.canvas && (this.canvas.fire("text:changed", { target: this }), this.canvas.requestRenderAll());
        }
      },
      /**
       * Composition start
       */
      onCompositionStart: function() {
        this.inCompositionMode = !0;
      },
      /**
       * Composition end
       */
      onCompositionEnd: function() {
        this.inCompositionMode = !1;
      },
      // /**
      //  * Composition update
      //  */
      onCompositionUpdate: function(a) {
        this.compositionStart = a.target.selectionStart, this.compositionEnd = a.target.selectionEnd, this.updateTextareaPosition();
      },
      /**
       * Copies selected text
       * @param {Event} e Event object
       */
      copy: function() {
        this.selectionStart !== this.selectionEnd && (e.copiedText = this.getSelectedText(), e.disableStyleCopyPaste ? e.copiedTextStyle = null : e.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, !0), this._copyDone = !0);
      },
      /**
       * Pastes text
       * @param {Event} e Event object
       */
      paste: function() {
        this.fromPaste = !0;
      },
      /**
       * @private
       * @param {Event} e Event object
       * @return {Object} Clipboard data object
       */
      _getClipboardData: function(a) {
        return a && a.clipboardData || e.window.clipboardData;
      },
      /**
       * Finds the width in pixels before the cursor on the same line
       * @private
       * @param {Number} lineIndex
       * @param {Number} charIndex
       * @return {Number} widthBeforeCursor width before cursor
       */
      _getWidthBeforeCursor: function(a, s) {
        var c = this._getLineLeftOffset(a), f;
        return s > 0 && (f = this.__charBounds[a][s - 1], c += f.left + f.width), c;
      },
      /**
       * Gets start offset of a selection
       * @param {Event} e Event object
       * @param {Boolean} isRight
       * @return {Number}
       */
      getDownCursorOffset: function(a, s) {
        var c = this._getSelectionForOffset(a, s), f = this.get2DCursorLocation(c), o = f.lineIndex;
        if (o === this._textLines.length - 1 || a.metaKey || a.keyCode === 34)
          return this._text.length - c;
        var h = f.charIndex, u = this._getWidthBeforeCursor(o, h), d = this._getIndexOnLine(o + 1, u), m = this._textLines[o].slice(h);
        return m.length + d + 1 + this.missingNewlineOffset(o);
      },
      /**
       * private
       * Helps finding if the offset should be counted from Start or End
       * @param {Event} e Event object
       * @param {Boolean} isRight
       * @return {Number}
       */
      _getSelectionForOffset: function(a, s) {
        return a.shiftKey && this.selectionStart !== this.selectionEnd && s ? this.selectionEnd : this.selectionStart;
      },
      /**
       * @param {Event} e Event object
       * @param {Boolean} isRight
       * @return {Number}
       */
      getUpCursorOffset: function(a, s) {
        var c = this._getSelectionForOffset(a, s), f = this.get2DCursorLocation(c), o = f.lineIndex;
        if (o === 0 || a.metaKey || a.keyCode === 33)
          return -c;
        var h = f.charIndex, u = this._getWidthBeforeCursor(o, h), d = this._getIndexOnLine(o - 1, u), m = this._textLines[o].slice(0, h), p = this.missingNewlineOffset(o - 1);
        return -this._textLines[o - 1].length + d - m.length + (1 - p);
      },
      /**
       * for a given width it founds the matching character.
       * @private
       */
      _getIndexOnLine: function(a, s) {
        for (var c = this._textLines[a], f = this._getLineLeftOffset(a), o = f, h = 0, u, d, m = 0, p = c.length; m < p; m++)
          if (u = this.__charBounds[a][m].width, o += u, o > s) {
            d = !0;
            var v = o - u, b = o, y = Math.abs(v - s), w = Math.abs(b - s);
            h = w < y ? m : m - 1;
            break;
          }
        return d || (h = c.length - 1), h;
      },
      /**
       * Moves cursor down
       * @param {Event} e Event object
       */
      moveCursorDown: function(a) {
        this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length || this._moveCursorUpOrDown("Down", a);
      },
      /**
       * Moves cursor up
       * @param {Event} e Event object
       */
      moveCursorUp: function(a) {
        this.selectionStart === 0 && this.selectionEnd === 0 || this._moveCursorUpOrDown("Up", a);
      },
      /**
       * Moves cursor up or down, fires the events
       * @param {String} direction 'Up' or 'Down'
       * @param {Event} e Event object
       */
      _moveCursorUpOrDown: function(a, s) {
        var c = "get" + a + "CursorOffset", f = this[c](s, this._selectionDirection === "right");
        s.shiftKey ? this.moveCursorWithShift(f) : this.moveCursorWithoutShift(f), f !== 0 && (this.setSelectionInBoundaries(), this.abortCursorAnimation(), this._currentCursorOpacity = 1, this.initDelayedCursor(), this._fireSelectionChanged(), this._updateTextarea());
      },
      /**
       * Moves cursor with shift
       * @param {Number} offset
       */
      moveCursorWithShift: function(a) {
        var s = this._selectionDirection === "left" ? this.selectionStart + a : this.selectionEnd + a;
        return this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, s), a !== 0;
      },
      /**
       * Moves cursor up without shift
       * @param {Number} offset
       */
      moveCursorWithoutShift: function(a) {
        return a < 0 ? (this.selectionStart += a, this.selectionEnd = this.selectionStart) : (this.selectionEnd += a, this.selectionStart = this.selectionEnd), a !== 0;
      },
      /**
       * Moves cursor left
       * @param {Event} e Event object
       */
      moveCursorLeft: function(a) {
        this.selectionStart === 0 && this.selectionEnd === 0 || this._moveCursorLeftOrRight("Left", a);
      },
      /**
       * @private
       * @return {Boolean} true if a change happened
       */
      _move: function(a, s, c) {
        var f;
        if (a.altKey)
          f = this["findWordBoundary" + c](this[s]);
        else if (a.metaKey || a.keyCode === 35 || a.keyCode === 36)
          f = this["findLineBoundary" + c](this[s]);
        else
          return this[s] += c === "Left" ? -1 : 1, !0;
        if (typeof f < "u" && this[s] !== f)
          return this[s] = f, !0;
      },
      /**
       * @private
       */
      _moveLeft: function(a, s) {
        return this._move(a, s, "Left");
      },
      /**
       * @private
       */
      _moveRight: function(a, s) {
        return this._move(a, s, "Right");
      },
      /**
       * Moves cursor left without keeping selection
       * @param {Event} e
       */
      moveCursorLeftWithoutShift: function(a) {
        var s = !0;
        return this._selectionDirection = "left", this.selectionEnd === this.selectionStart && this.selectionStart !== 0 && (s = this._moveLeft(a, "selectionStart")), this.selectionEnd = this.selectionStart, s;
      },
      /**
       * Moves cursor left while keeping selection
       * @param {Event} e
       */
      moveCursorLeftWithShift: function(a) {
        if (this._selectionDirection === "right" && this.selectionStart !== this.selectionEnd)
          return this._moveLeft(a, "selectionEnd");
        if (this.selectionStart !== 0)
          return this._selectionDirection = "left", this._moveLeft(a, "selectionStart");
      },
      /**
       * Moves cursor right
       * @param {Event} e Event object
       */
      moveCursorRight: function(a) {
        this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length || this._moveCursorLeftOrRight("Right", a);
      },
      /**
       * Moves cursor right or Left, fires event
       * @param {String} direction 'Left', 'Right'
       * @param {Event} e Event object
       */
      _moveCursorLeftOrRight: function(a, s) {
        var c = "moveCursor" + a + "With";
        this._currentCursorOpacity = 1, s.shiftKey ? c += "Shift" : c += "outShift", this[c](s) && (this.abortCursorAnimation(), this.initDelayedCursor(), this._fireSelectionChanged(), this._updateTextarea());
      },
      /**
       * Moves cursor right while keeping selection
       * @param {Event} e
       */
      moveCursorRightWithShift: function(a) {
        if (this._selectionDirection === "left" && this.selectionStart !== this.selectionEnd)
          return this._moveRight(a, "selectionStart");
        if (this.selectionEnd !== this._text.length)
          return this._selectionDirection = "right", this._moveRight(a, "selectionEnd");
      },
      /**
       * Moves cursor right without keeping selection
       * @param {Event} e Event object
       */
      moveCursorRightWithoutShift: function(a) {
        var s = !0;
        return this._selectionDirection = "right", this.selectionStart === this.selectionEnd ? (s = this._moveRight(a, "selectionStart"), this.selectionEnd = this.selectionStart) : this.selectionStart = this.selectionEnd, s;
      },
      /**
       * Removes characters from start/end
       * start/end ar per grapheme position in _text array.
       *
       * @param {Number} start
       * @param {Number} end default to start + 1
       */
      removeChars: function(a, s) {
        typeof s > "u" && (s = a + 1), this.removeStyleFromTo(a, s), this._text.splice(a, s - a), this.text = this._text.join(""), this.set("dirty", !0), this._shouldClearDimensionCache() && (this.initDimensions(), this.setCoords()), this._removeExtraneousStyles();
      },
      /**
       * insert characters at start position, before start position.
       * start  equal 1 it means the text get inserted between actual grapheme 0 and 1
       * if style array is provided, it must be as the same length of text in graphemes
       * if end is provided and is bigger than start, old text is replaced.
       * start/end ar per grapheme position in _text array.
       *
       * @param {String} text text to insert
       * @param {Array} style array of style objects
       * @param {Number} start
       * @param {Number} end default to start + 1
       */
      insertChars: function(a, s, c, f) {
        typeof f > "u" && (f = c), f > c && this.removeStyleFromTo(c, f);
        var o = e.util.string.graphemeSplit(a);
        this.insertNewStyleBlock(o, c, s), this._text = [].concat(this._text.slice(0, c), o, this._text.slice(f)), this.text = this._text.join(""), this.set("dirty", !0), this._shouldClearDimensionCache() && (this.initDimensions(), this.setCoords()), this._removeExtraneousStyles();
      }
    }
  ), function() {
    var a = e.util.toFixed, s = /  +/g;
    e.util.object.extend(
      e.Text.prototype,
      /** @lends fabric.Text.prototype */
      {
        /**
         * Returns SVG representation of an instance
         * @param {Function} [reviver] Method for further parsing of svg representation.
         * @return {String} svg representation of an instance
         */
        _toSVG: function() {
          var c = this._getSVGLeftTopOffsets(), f = this._getSVGTextAndBg(c.textTop, c.textLeft);
          return this._wrapSVGTextAndBg(f);
        },
        /**
         * Returns svg representation of an instance
         * @param {Function} [reviver] Method for further parsing of svg representation.
         * @return {String} svg representation of an instance
         */
        toSVG: function(c) {
          return this._createBaseSVGMarkup(
            this._toSVG(),
            { reviver: c, noStyle: !0, withShadow: !0 }
          );
        },
        /**
         * @private
         */
        _getSVGLeftTopOffsets: function() {
          return {
            textLeft: -this.width / 2,
            textTop: -this.height / 2,
            lineTop: this.getHeightOfLine(0)
          };
        },
        /**
         * @private
         */
        _wrapSVGTextAndBg: function(c) {
          var f = !0, o = this.getSvgTextDecoration(this);
          return [
            c.textBgRects.join(""),
            '		<text xml:space="preserve" ',
            this.fontFamily ? 'font-family="' + this.fontFamily.replace(/"/g, "'") + '" ' : "",
            this.fontSize ? 'font-size="' + this.fontSize + '" ' : "",
            this.fontStyle ? 'font-style="' + this.fontStyle + '" ' : "",
            this.fontWeight ? 'font-weight="' + this.fontWeight + '" ' : "",
            o ? 'text-decoration="' + o + '" ' : "",
            'style="',
            this.getSvgStyles(f),
            '"',
            this.addPaintOrder(),
            " >",
            c.textSpans.join(""),
            `</text>
`
          ];
        },
        /**
         * @private
         * @param {Number} textTopOffset Text top offset
         * @param {Number} textLeftOffset Text left offset
         * @return {Object}
         */
        _getSVGTextAndBg: function(c, f) {
          var o = [], h = [], u = c, d;
          this._setSVGBg(h);
          for (var m = 0, p = this._textLines.length; m < p; m++)
            d = this._getLineLeftOffset(m), (this.textBackgroundColor || this.styleHas("textBackgroundColor", m)) && this._setSVGTextLineBg(h, m, f + d, u), this._setSVGTextLineText(o, m, f + d, u), u += this.getHeightOfLine(m);
          return {
            textSpans: o,
            textBgRects: h
          };
        },
        /**
         * @private
         */
        _createTextCharSpan: function(c, f, o, h) {
          var u = c !== c.trim() || c.match(s), d = this.getSvgSpanStyles(f, u), m = d ? 'style="' + d + '"' : "", p = f.deltaY, v = "", b = e.Object.NUM_FRACTION_DIGITS;
          return p && (v = ' dy="' + a(p, b) + '" '), [
            '<tspan x="',
            a(o, b),
            '" y="',
            a(h, b),
            '" ',
            v,
            m,
            ">",
            e.util.string.escapeXml(c),
            "</tspan>"
          ].join("");
        },
        _setSVGTextLineText: function(c, f, o, h) {
          var u = this.getHeightOfLine(f), d = this.textAlign.indexOf("justify") !== -1, m, p, v = "", b, y, w = 0, x = this._textLines[f], _;
          h += u * (1 - this._fontSizeFraction) / this.lineHeight;
          for (var S = 0, k = x.length - 1; S <= k; S++)
            _ = S === k || this.charSpacing, v += x[S], b = this.__charBounds[f][S], w === 0 ? (o += b.kernedWidth - b.width, w += b.width) : w += b.kernedWidth, d && !_ && this._reSpaceAndTab.test(x[S]) && (_ = !0), _ || (m = m || this.getCompleteStyleDeclaration(f, S), p = this.getCompleteStyleDeclaration(f, S + 1), _ = e.util.hasStyleChanged(m, p, !0)), _ && (y = this._getStyleDeclaration(f, S) || {}, c.push(this._createTextCharSpan(v, y, o, h)), v = "", m = p, o += w, w = 0);
        },
        _pushTextBgRect: function(c, f, o, h, u, d) {
          var m = e.Object.NUM_FRACTION_DIGITS;
          c.push(
            "		<rect ",
            this._getFillAttributes(f),
            ' x="',
            a(o, m),
            '" y="',
            a(h, m),
            '" width="',
            a(u, m),
            '" height="',
            a(d, m),
            `"></rect>
`
          );
        },
        _setSVGTextLineBg: function(c, f, o, h) {
          for (var u = this._textLines[f], d = this.getHeightOfLine(f) / this.lineHeight, m = 0, p = 0, v, b, y = this.getValueOfPropertyAt(f, 0, "textBackgroundColor"), w = 0, x = u.length; w < x; w++)
            v = this.__charBounds[f][w], b = this.getValueOfPropertyAt(f, w, "textBackgroundColor"), b !== y ? (y && this._pushTextBgRect(
              c,
              y,
              o + p,
              h,
              m,
              d
            ), p = v.left, m = v.width, y = b) : m += v.kernedWidth;
          b && this._pushTextBgRect(
            c,
            b,
            o + p,
            h,
            m,
            d
          );
        },
        /**
         * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values
         * we work around it by "moving" alpha channel into opacity attribute and setting fill's alpha to 1
         *
         * @private
         * @param {*} value
         * @return {String}
         */
        _getFillAttributes: function(c) {
          var f = c && typeof c == "string" ? new e.Color(c) : "";
          return !f || !f.getSource() || f.getAlpha() === 1 ? 'fill="' + c + '"' : 'opacity="' + f.getAlpha() + '" fill="' + f.setAlpha(1).toRgb() + '"';
        },
        /**
         * @private
         */
        _getSVGLineTopOffset: function(c) {
          for (var f = 0, o = 0, h = 0; h < c; h++)
            f += this.getHeightOfLine(h);
          return o = this.getHeightOfLine(h), {
            lineTop: f,
            offset: (this._fontSizeMult - this._fontSizeFraction) * o / (this.lineHeight * this._fontSizeMult)
          };
        },
        /**
         * Returns styles-string for svg-export
         * @param {Boolean} skipShadow a boolean to skip shadow filter output
         * @return {String}
         */
        getSvgStyles: function(c) {
          var f = e.Object.prototype.getSvgStyles.call(this, c);
          return f + " white-space: pre;";
        }
      }
    );
  }(), function(a) {
    var s = a.fabric || (a.fabric = {});
    s.Textbox = s.util.createClass(s.IText, s.Observable, {
      /**
       * Type of an object
       * @type String
       * @default
       */
      type: "textbox",
      /**
       * Minimum width of textbox, in pixels.
       * @type Number
       * @default
       */
      minWidth: 20,
      /**
       * Minimum calculated width of a textbox, in pixels.
       * fixed to 2 so that an empty textbox cannot go to 0
       * and is still selectable without text.
       * @type Number
       * @default
       */
      dynamicMinWidth: 2,
      /**
       * Cached array of text wrapping.
       * @type Array
       */
      __cachedLines: null,
      /**
       * Override standard Object class values
       */
      lockScalingFlip: !0,
      /**
       * Override standard Object class values
       * Textbox needs this on false
       */
      noScaleCache: !1,
      /**
       * Properties which when set cause object to change dimensions
       * @type Object
       * @private
       */
      _dimensionAffectingProps: s.Text.prototype._dimensionAffectingProps.concat("width"),
      /**
       * Use this regular expression to split strings in breakable lines
       * @private
       */
      _wordJoiners: /[ \t\r]/,
      /**
       * Use this boolean property in order to split strings that have no white space concept.
       * this is a cheap way to help with chinese/japanese
       * @type Boolean
       * @since 2.6.0
       */
      splitByGrapheme: !1,
      /**
       * Unlike superclass's version of this function, Textbox does not update
       * its width.
       * @private
       * @override
       */
      initDimensions: function() {
        this.__skipDimension || (this.isEditing && this.initDelayedCursor(), this.clearContextTop(), this._clearCache(), this.dynamicMinWidth = 0, this._styleMap = this._generateStyleMap(this._splitText()), this.dynamicMinWidth > this.width && this._set("width", this.dynamicMinWidth), this.textAlign.indexOf("justify") !== -1 && this.enlargeSpaces(), this.height = this.calcTextHeight(), this.saveState({ propertySet: "_dimensionAffectingProps" }));
      },
      /**
       * Generate an object that translates the style object so that it is
       * broken up by visual lines (new lines and automatic wrapping).
       * The original text styles object is broken up by actual lines (new lines only),
       * which is only sufficient for Text / IText
       * @private
       */
      _generateStyleMap: function(c) {
        for (var f = 0, o = 0, h = 0, u = {}, d = 0; d < c.graphemeLines.length; d++)
          c.graphemeText[h] === `
` && d > 0 ? (o = 0, h++, f++) : !this.splitByGrapheme && this._reSpaceAndTab.test(c.graphemeText[h]) && d > 0 && (o++, h++), u[d] = { line: f, offset: o }, h += c.graphemeLines[d].length, o += c.graphemeLines[d].length;
        return u;
      },
      /**
       * Returns true if object has a style property or has it on a specified line
       * @param {Number} lineIndex
       * @return {Boolean}
       */
      styleHas: function(c, f) {
        if (this._styleMap && !this.isWrapping) {
          var o = this._styleMap[f];
          o && (f = o.line);
        }
        return s.Text.prototype.styleHas.call(this, c, f);
      },
      /**
       * Returns true if object has no styling or no styling in a line
       * @param {Number} lineIndex , lineIndex is on wrapped lines.
       * @return {Boolean}
       */
      isEmptyStyles: function(c) {
        if (!this.styles)
          return !0;
        var f = 0, o = c + 1, h, u, d = !1, m = this._styleMap[c], p = this._styleMap[c + 1];
        m && (c = m.line, f = m.offset), p && (o = p.line, d = o === c, h = p.offset), u = typeof c > "u" ? this.styles : { line: this.styles[c] };
        for (var v in u)
          for (var b in u[v])
            if (b >= f && (!d || b < h))
              for (var y in u[v][b])
                return !1;
        return !0;
      },
      /**
       * @param {Number} lineIndex
       * @param {Number} charIndex
       * @private
       */
      _getStyleDeclaration: function(c, f) {
        if (this._styleMap && !this.isWrapping) {
          var o = this._styleMap[c];
          if (!o)
            return null;
          c = o.line, f = o.offset + f;
        }
        return this.callSuper("_getStyleDeclaration", c, f);
      },
      /**
       * @param {Number} lineIndex
       * @param {Number} charIndex
       * @param {Object} style
       * @private
       */
      _setStyleDeclaration: function(c, f, o) {
        var h = this._styleMap[c];
        c = h.line, f = h.offset + f, this.styles[c][f] = o;
      },
      /**
       * @param {Number} lineIndex
       * @param {Number} charIndex
       * @private
       */
      _deleteStyleDeclaration: function(c, f) {
        var o = this._styleMap[c];
        c = o.line, f = o.offset + f, delete this.styles[c][f];
      },
      /**
       * probably broken need a fix
       * Returns the real style line that correspond to the wrapped lineIndex line
       * Used just to verify if the line does exist or not.
       * @param {Number} lineIndex
       * @returns {Boolean} if the line exists or not
       * @private
       */
      _getLineStyle: function(c) {
        var f = this._styleMap[c];
        return !!this.styles[f.line];
      },
      /**
       * Set the line style to an empty object so that is initialized
       * @param {Number} lineIndex
       * @param {Object} style
       * @private
       */
      _setLineStyle: function(c) {
        var f = this._styleMap[c];
        this.styles[f.line] = {};
      },
      /**
       * Wraps text using the 'width' property of Textbox. First this function
       * splits text on newlines, so we preserve newlines entered by the user.
       * Then it wraps each line using the width of the Textbox by calling
       * _wrapLine().
       * @param {Array} lines The string array of text that is split into lines
       * @param {Number} desiredWidth width you want to wrap to
       * @returns {Array} Array of lines
       */
      _wrapText: function(c, f) {
        var o = [], h;
        for (this.isWrapping = !0, h = 0; h < c.length; h++)
          o = o.concat(this._wrapLine(c[h], h, f));
        return this.isWrapping = !1, o;
      },
      /**
       * Helper function to measure a string of text, given its lineIndex and charIndex offset
       * it gets called when charBounds are not available yet.
       * @param {CanvasRenderingContext2D} ctx
       * @param {String} text
       * @param {number} lineIndex
       * @param {number} charOffset
       * @returns {number}
       * @private
       */
      _measureWord: function(c, f, o) {
        var h = 0, u, d = !0;
        o = o || 0;
        for (var m = 0, p = c.length; m < p; m++) {
          var v = this._getGraphemeBox(c[m], f, m + o, u, d);
          h += v.kernedWidth, u = c[m];
        }
        return h;
      },
      /**
       * Wraps a line of text using the width of the Textbox and a context.
       * @param {Array} line The grapheme array that represent the line
       * @param {Number} lineIndex
       * @param {Number} desiredWidth width you want to wrap the line to
       * @param {Number} reservedSpace space to remove from wrapping for custom functionalities
       * @returns {Array} Array of line(s) into which the given text is wrapped
       * to.
       */
      _wrapLine: function(c, f, o, L) {
        var u = 0, d = this.splitByGrapheme, m = [], p = [], v = d ? s.util.string.graphemeSplit(c) : c.split(this._wordJoiners), b = "", y = 0, w = d ? "" : " ", x = 0, _ = 0, S = 0, k = !0, F = this._getWidthOfCharSpacing(), L = L || 0;
        v.length === 0 && v.push([]), o -= L;
        for (var j = 0; j < v.length; j++)
          b = d ? v[j] : s.util.string.graphemeSplit(v[j]), x = this._measureWord(b, f, y), y += b.length, u += _ + x - F, u > o && !k ? (m.push(p), p = [], u = x, k = !0) : u += F, !k && !d && p.push(w), p = p.concat(b), _ = d ? 0 : this._measureWord([w], f, y), y++, k = !1, x > S && (S = x);
        return j && m.push(p), S + L > this.dynamicMinWidth && (this.dynamicMinWidth = S - F + L), m;
      },
      /**
       * Detect if the text line is ended with an hard break
       * text and itext do not have wrapping, return false
       * @param {Number} lineIndex text to split
       * @return {Boolean}
       */
      isEndOfWrapping: function(c) {
        return !this._styleMap[c + 1] || this._styleMap[c + 1].line !== this._styleMap[c].line;
      },
      /**
       * Detect if a line has a linebreak and so we need to account for it when moving
       * and counting style.
       * @return Number
       */
      missingNewlineOffset: function(c) {
        return this.splitByGrapheme ? this.isEndOfWrapping(c) ? 1 : 0 : 1;
      },
      /**
      * Gets lines of text to render in the Textbox. This function calculates
      * text wrapping on the fly every time it is called.
      * @param {String} text text to split
      * @returns {Array} Array of lines in the Textbox.
      * @override
      */
      _splitTextIntoLines: function(c) {
        for (var f = s.Text.prototype._splitTextIntoLines.call(this, c), o = this._wrapText(f.lines, this.width), h = new Array(o.length), u = 0; u < o.length; u++)
          h[u] = o[u].join("");
        return f.lines = h, f.graphemeLines = o, f;
      },
      getMinWidth: function() {
        return Math.max(this.minWidth, this.dynamicMinWidth);
      },
      _removeExtraneousStyles: function() {
        var c = {};
        for (var f in this._styleMap)
          this._textLines[f] && (c[this._styleMap[f].line] = 1);
        for (var f in this.styles)
          c[f] || delete this.styles[f];
      },
      /**
       * Returns object representation of an instance
       * @method toObject
       * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
       * @return {Object} object representation of an instance
       */
      toObject: function(c) {
        return this.callSuper("toObject", ["minWidth", "splitByGrapheme"].concat(c));
      }
    }), s.Textbox.fromObject = function(c, f) {
      var o = s.util.stylesFromArray(c.styles, c.text), h = Object.assign({}, c, { styles: o });
      return s.Object._fromObject("Textbox", h, f, "text");
    };
  }(t), function() {
    var a = e.controlsUtils, s = a.scaleSkewCursorStyleHandler, c = a.scaleCursorStyleHandler, f = a.scalingEqually, o = a.scalingYOrSkewingX, h = a.scalingXOrSkewingY, u = a.scaleOrSkewActionName, d = e.Object.prototype.controls;
    if (d.ml = new e.Control({
      x: -0.5,
      y: 0,
      cursorStyleHandler: s,
      actionHandler: h,
      getActionName: u
    }), d.mr = new e.Control({
      x: 0.5,
      y: 0,
      cursorStyleHandler: s,
      actionHandler: h,
      getActionName: u
    }), d.mb = new e.Control({
      x: 0,
      y: 0.5,
      cursorStyleHandler: s,
      actionHandler: o,
      getActionName: u
    }), d.mt = new e.Control({
      x: 0,
      y: -0.5,
      cursorStyleHandler: s,
      actionHandler: o,
      getActionName: u
    }), d.tl = new e.Control({
      x: -0.5,
      y: -0.5,
      cursorStyleHandler: c,
      actionHandler: f
    }), d.tr = new e.Control({
      x: 0.5,
      y: -0.5,
      cursorStyleHandler: c,
      actionHandler: f
    }), d.bl = new e.Control({
      x: -0.5,
      y: 0.5,
      cursorStyleHandler: c,
      actionHandler: f
    }), d.br = new e.Control({
      x: 0.5,
      y: 0.5,
      cursorStyleHandler: c,
      actionHandler: f
    }), d.mtr = new e.Control({
      x: 0,
      y: -0.5,
      actionHandler: a.rotationWithSnapping,
      cursorStyleHandler: a.rotationStyleHandler,
      offsetY: -40,
      withConnection: !0,
      actionName: "rotate"
    }), e.Textbox) {
      var m = e.Textbox.prototype.controls = {};
      m.mtr = d.mtr, m.tr = d.tr, m.br = d.br, m.tl = d.tl, m.bl = d.bl, m.mt = d.mt, m.mb = d.mb, m.mr = new e.Control({
        x: 0.5,
        y: 0,
        actionHandler: a.changeWidth,
        cursorStyleHandler: s,
        actionName: "resizing"
      }), m.ml = new e.Control({
        x: -0.5,
        y: 0,
        actionHandler: a.changeWidth,
        cursorStyleHandler: s,
        actionName: "resizing"
      });
    }
  }();
})(Ce);
const L0 = {
  lockScalingFlip: !0,
  originY: "center",
  originX: "center",
  lockMovementX: !0,
  lockMovementY: !0,
  borderColor: "transparent"
};
function Fu(t = 36) {
  let e = "";
  const r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  for (let n = 0; n < t; n += 1)
    e += r.charAt(Math.floor(Math.random() * r.length));
  return e;
}
function z3(t) {
  var g;
  const e = new Ce.fabric.Canvas(t, { width: 1, height: 1 });
  e.preserveObjectStacking = !0, e.selection = !1, e.renderOnAddRemove = !1;
  const r = O().config.textureSize;
  r && (Ce.fabric.textureSize = r);
  const i = {
    ...(g = O().config.objectDefaults) == null ? void 0 : g.global,
    ...L0
  };
  Object.keys(i).forEach((a) => {
    Ce.fabric.Object.prototype[a] = i[a];
  }), e.on("object:added", (a) => {
    var s, c;
    a.target && !((c = (s = a.target) == null ? void 0 : s.data) != null && c.id) && (a.target.data || (a.target.data = {}), a.target.data.id = Fu(10));
  });
  const l = Ce.fabric.Object.prototype.controls;
  return Object.keys(l).forEach((a) => {
    delete l[a];
  }), e;
}
let Ms = null;
function wi(t) {
  Ms = t;
}
class N3 {
  constructor() {
    Oe(this, "maxZoom", 2);
    Oe(this, "minZoom", 1);
    Oe(this, "step", 0.05);
    this.allowUserZoom && this.bindMouseWheel(), fe.subscribe(
      (e) => e.stageSize,
      () => {
        setTimeout(() => {
          this.fitToScreen();
        }, 1);
      }
    );
  }
  get allowUserZoom() {
    var e, r, n;
    return ((n = (r = (e = O().config) == null ? void 0 : e.tools) == null ? void 0 : r.zoom) == null ? void 0 : n.allowUserZoom) ?? !0;
  }
  get currentZoom() {
    return O().zoom;
  }
  zoomIn(e = this.step) {
    this.set(this.currentZoom + e);
  }
  canZoomIn(e = this.step) {
    return this.currentZoom + e <= this.maxZoom;
  }
  canZoomOut(e = this.step) {
    return this.currentZoom - e >= this.minZoom;
  }
  zoomOut(e = this.step) {
    this.set(this.currentZoom - e);
  }
  /**
   * Zoom canvas to specified scale.
   */
  set(e, r = !0) {
    if (e < this.minZoom || e > this.maxZoom)
      return;
    const n = Ml.round(O().original.width * e, 0), i = Ml.round(O().original.height * e, 0);
    de().setZoom(e), r && de().setDimensions({ width: n, height: i }), O().setZoom(e);
  }
  /**
   * Resize canvas to fit available screen space.
   */
  fitToScreen() {
    var l, g;
    if (!((g = (l = O().config.tools) == null ? void 0 : l.zoom) != null && g.fitImageToScreen))
      return;
    const { width: e, height: r } = O().stageSize, n = Math.max(r, 1), i = Math.max(e, 1);
    if (O().original.height > n || O().original.width > i) {
      const a = Math.min(
        n / O().original.height,
        i / O().original.width
      );
      this.minZoom = Math.min(a, 1);
    } else
      this.minZoom = 1;
    this.set(this.minZoom);
  }
  bindMouseWheel() {
    de().on("mouse:wheel", (e) => {
      e.e.preventDefault(), e.e.stopPropagation(), Ms == null && (e.e.deltaY < 0 ? this.zoomIn() : this.zoomOut());
    });
  }
}
function B0(t) {
  return new Promise((e) => {
    Ce.fabric.util.loadImage(
      t,
      (r) => e(new Ce.fabric.Image(r)),
      null,
      O().config.crossOrigin ? "anonymous" : void 0
    );
  });
}
function z0() {
  return !O().config.image && !O().config.blankCanvasSize && (!de() || de().getObjects().length === 0);
}
class j3 {
  constructor() {
    Oe(this, "minWidth", 50);
    Oe(this, "minHeight", 50);
  }
  resize(e, r, {
    applyZoom: n = !1,
    resizeHelper: i = !0
  } = {}) {
    const l = O().zoom;
    de().setWidth(e * (n ? l : 1)), de().setHeight(r * (n ? l : 1)), O().setOriginal(e, r), i && I().transform.resetStraightenAnchor();
  }
  async addMainImage(e, r = "mainImage") {
    var i, l;
    O().toggleLoading(r);
    const n = await B0(e);
    if (n)
      return this.clear(), n.set(Fn), n.name = qe.MainImage, de().add(n), this.resize(n.width, n.height), n.center(), n.setCoords(), I().zoom.fitToScreen(), O().toggleLoading(!1), (l = (i = O().config).onMainImageLoaded) == null || l.call(i, n), n;
  }
  openNew(e, r, n) {
    return e = Math.max(this.minWidth, e), r = Math.max(this.minHeight, r), this.clear(), this.resize(e, r), de().backgroundColor = n, I().zoom.fitToScreen(), O().toggleLoading("newCanvas"), requestAnimationFrame(() => {
      O().toggleLoading(!1);
    }), Promise.resolve({ width: e, height: r });
  }
  /**
   * Get main image object, if it exists.
   */
  getMainImage() {
    return de().getObjects().find((e) => e.name === qe.MainImage);
  }
  render() {
    de().requestRenderAll();
  }
  async loadInitialContent() {
    var i, l;
    const e = O().config.image, r = O().config.blankCanvasSize, n = O().config.state;
    if (e && e.endsWith("json")) {
      const g = await ua(e);
      await I().import.loadState(g);
    } else
      e && e.startsWith('{"canvas') ? await I().import.loadState(e) : e ? await this.addMainImage(e) : n ? await I().import.loadState(n) : r && await this.openNew(r.width, r.height);
    return z0() && ((l = (i = O().config.ui) == null ? void 0 : i.openImageDialog) != null && l.show) && O().togglePanel("newImage", !0), new Promise((g) => {
      setTimeout(() => {
        I().history.addInitial(), g();
      }, 10);
    });
  }
  clear() {
    de().clear(), I().frame.remove(), I().transform.resetStraightenAnchor();
  }
}
function $3(t) {
  return t.name === qe.Sticker && "forEachObject" in t;
}
const V3 = [
  "fontSize",
  "fontFamily",
  "left",
  "top",
  "width",
  "height",
  "scaleX",
  "scaleY",
  "flipX",
  "flipY",
  "angle",
  "src",
  "strokeWidth"
];
function N0(t = {}) {
  de().fire("object:modified", H3(t));
}
function H3(t) {
  return {
    values: t,
    sizeOrPositionChanged: U3(t)
  };
}
function U3(t) {
  return Object.keys(t).some(
    (e) => V3.includes(e)
  );
}
function W3() {
  O().fabric.on("selection:created", (t) => {
    var e;
    (e = t.selected) != null && e[0] && !Vf(t) && ul(t.selected[0]);
  }), O().fabric.on("selection:updated", (t) => {
    var e;
    Vf(t) || ul((e = t.selected) == null ? void 0 : e[0]);
  }), O().fabric.on("selection:cleared", () => {
    ul();
  });
}
function Vf(t) {
  var n, i;
  const [e] = Cm((n = t.selected) == null ? void 0 : n[0]), r = e === O().activeTool;
  return O().dirty && (!((i = t.selected) != null && i[0]) || !r) ? (t.deselected && I().objects.select(t.deselected[0]), !0) : !1;
}
function ul(t) {
  (t == null ? void 0 : t.data.id) !== O().objects.active.id && (O().objects.setActive(t ?? null), O().activeTool !== Be.DRAW && fu());
}
class X3 {
  constructor() {
    this.syncObjects(), W3(), O().fabric.on("text:editing:entered", () => {
      O().objects.setIsEditingText(!0);
    }), O().fabric.on("text:editing:exited", () => {
      O().objects.setIsEditingText(!1);
    }), O().fabric.on("object:added", () => {
      this.syncObjects();
    }), O().fabric.on("object:removed", () => {
      this.syncObjects();
    });
  }
  /**
   * Get all objects that are currently on canvas.
   */
  getAll() {
    return de().getObjects().filter((e) => {
      var r;
      return !((r = e == null ? void 0 : e.data) != null && r.pixieInternal);
    });
  }
  /**
   * Get object with specified name from canvas.
   */
  get(e) {
    return this.getAll().find((r) => r.name === e);
  }
  /**
   * Get object with specified id from canvas.
   */
  getById(e) {
    return this.getAll().find((r) => r.data.id === e);
  }
  /**
   * Check whether specified object is currently selected.
   */
  isActive(e) {
    var n;
    const r = typeof e == "string" ? e : e.data.id;
    return ((n = O().objects.active) == null ? void 0 : n.id) === r;
  }
  /**
   * Get currently active object.
   */
  getActive() {
    return de().getActiveObject();
  }
  /**
   * Check if object with specified name exists on canvas.
   */
  has(e) {
    return this.getAll().findIndex((r) => r.name === e) > -1;
  }
  /**
   * Select specified object.
   */
  select(e) {
    const r = typeof e == "string" ? this.getById(e) : e;
    r && (de().setActiveObject(r), de().requestRenderAll());
  }
  /**
   * Deselect currently active object.
   */
  deselectActive() {
    de().discardActiveObject(), de().requestRenderAll();
  }
  /**
   * Apply values to specified or currently active object.
   */
  setValues(e, r) {
    if (r = r || this.getActive(), !r)
      return;
    let n = !1;
    $3(r) && e.fill && e.fill !== r.fill && r.forEachObject((i) => i.set("fill", e.fill)), tn(r) ? ((e.fontFamily !== r.fontFamily || e.fontSize !== r.fontSize) && (n = !0), r.selectionStart !== r.selectionEnd ? r.setSelectionStyles(e) : r.set(e)) : r.set(e), n ? setTimeout(() => {
      de().requestRenderAll();
    }, 50) : de().requestRenderAll(), O().objects.setActive(r), N0(e);
  }
  /**
   * Move specified or currently active object in given direction.
   */
  move(e, r = 1, n) {
    n = n || this.getActive(), n && (e === "up" ? this.setValues({ top: n.top - r }) : e === "down" ? this.setValues({ top: n.top + r }) : e === "left" ? this.setValues({ left: n.left - r }) : e === "right" && this.setValues({ left: n.left + r }), I().canvas.render());
  }
  /**
   * Bring specified or currently active object to front of canvas.
   */
  bringToFront(e) {
    e = e || this.getActive(), e && (e.bringToFront(), I().canvas.render());
  }
  /**
   * Send specified or currently active object to the back of canvas.
   */
  sendToBack(e) {
    e = e || this.getActive(), e && (e.sendToBack(), I().canvas.render());
  }
  /**
   * Flip specified or currently active object horizontally.
   */
  flipHorizontally(e) {
    e = e || this.getActive(), e && (this.setValues({ flipX: !e.flipX }), I().canvas.render());
  }
  /**
   * Duplicate specified or currently active object.
   */
  duplicate(e) {
    const r = e || this.getActive();
    r && (this.deselectActive(), r.clone((n) => {
      n.set({
        left: r.left + 40,
        top: r.top + 40,
        data: { ...r.data, id: Fu(10) },
        name: r.name
      }), de().add(n), this.select(n), I().canvas.render();
    }));
  }
  /**
   * Delete specified or currently active object.
   */
  delete(e) {
    e = e || this.getActive(), e && (this.deselectActive(), de().remove(e), de().requestRenderAll(), I().history.addHistoryItem({ name: "deletedObject" }));
  }
  /**
   * Sync layers list with fabric.js objects.
   * @hidden
   */
  syncObjects() {
    const e = this.getAll().map((r) => ({
      name: r.name,
      selectable: r.selectable ?? !1,
      id: r.data.id
    }));
    fe.setState({
      objects: {
        ...O().objects,
        all: e
      }
    });
  }
}
const Y3 = {
  frame: null,
  fonts: []
};
function Hf(t) {
  return t.state || (t.state = Eo()), {
    ...t.state || Eo(),
    name: t.name,
    id: Fu(15)
  };
}
function Ru(t) {
  return t ? /^[a-zA-Z][a-zA-Z\d+\-.]*?:/.test(t) : !1;
}
class G3 {
  constructor() {
    Oe(this, "loadedAssets", {});
  }
  loadAsset(e, r = { type: "js" }) {
    var l;
    e = e.startsWith("//") ? `${window.location.protocol}${e}` : e;
    const n = (l = this.loadedAssets[e]) == null ? void 0 : l.state;
    return n === "loaded" && !r.force ? new Promise((g) => g()) : !n || this.loadedAssets[e].doc !== r.document || r.force && n === "loaded" ? (this.loadedAssets[e] = {
      state: new Promise((g) => {
        const a = Ru(e) ? e : `assets/${e}`, s = hl(e, r.id), c = {
          url: a,
          id: s,
          resolve: g,
          parentEl: r.parentEl,
          document: r.document
        };
        r.type === "css" ? this.loadStyleAsset(c) : this.loadScriptAsset(c);
      }),
      doc: r.document
    }, this.loadedAssets[e].state) : this.loadedAssets[e].state;
  }
  /**
   * Check whether asset is loading or has already loaded.
   */
  isLoadingOrLoaded(e) {
    return this.loadedAssets[e] != null;
  }
  loadStyleAsset(e) {
    var g;
    const r = e.document || document, n = e.parentEl || r.head, i = r.createElement("link"), l = hl(e.url, e.id);
    i.rel = "stylesheet", i.id = l, i.href = e.url;
    try {
      n.querySelector(`#${l}`) && ((g = n.querySelector(`#${l}`)) == null || g.remove());
    } catch {
    }
    i.onload = () => {
      this.loadedAssets[e.url].state = "loaded", e.resolve();
    }, n.appendChild(i);
  }
  loadScriptAsset(e) {
    var g;
    const r = e.document || document, n = e.parentEl || r.body, i = r.createElement("script"), l = hl(e.url, e.id);
    i.async = !0, i.id = l, i.src = e.url;
    try {
      n.querySelector(`#${l}`) && ((g = n.querySelector(`#${l}`)) == null || g.remove());
    } catch {
    }
    i.onload = () => {
      this.loadedAssets[e.url].state = "loaded", e.resolve();
    }, (n || n).appendChild(i);
  }
}
function hl(t, e) {
  return e || btoa(t.split("/").pop());
}
const q3 = new G3();
function K3(t) {
  return `be-fonts-${t}`;
}
function j0(t, e) {
  const r = e.document || document, n = [], i = [];
  let l = [];
  if (t.forEach((g) => {
    "google" in g && g.google ? n.push(g) : "src" in g && i.push(g);
  }), n != null && n.length) {
    const g = e.weights || [400], a = t.map((c) => `${c.family}:${g.join(",")}`).join("|"), s = q3.loadAsset(
      `https://fonts.googleapis.com/css?family=${a}&display=swap`,
      {
        type: "css",
        id: K3(e.id),
        force: e.forceAssetLoad,
        document: r
      }
    );
    l.push(s);
  }
  if (i != null && i.length) {
    const g = i.map(async (a) => {
      const s = Array.from(r.fonts.values()).find((f) => f.family === a.family);
      if (s)
        return s.loaded;
      const c = new FontFace(
        a.family,
        `url(${e != null && e.prefixSrc ? e.prefixSrc(a.src) : a.src})`,
        a.descriptors
      );
      return r.fonts.add(c), c.load();
    });
    l = l.concat(g);
  }
  return Promise.all(l);
}
function Dt(t) {
  return t ? Ru(t) ? t : `${O().config.baseUrl ? `${O().config.baseUrl}/` : ""}${t}` : "";
}
class J3 {
  /**
   * Undo last canvas operation.
   */
  async undo() {
    if (this.canUndo()) {
      const e = O().history.items[O().history.pointer - 1];
      await this.load(e);
    }
  }
  /**
   * Redo last canvas operation.
   */
  async redo() {
    if (this.canRedo()) {
      const e = O().history.items[O().history.pointer + 1];
      await this.load(e);
    }
  }
  /**
   * Check if there are any actions to undo.
   */
  canUndo() {
    return O().history.canUndo;
  }
  /**
   * Check if there are any actions to redo.
   */
  canRedo() {
    return O().history.canRedo;
  }
  /**
   * Reload current history state, undoing any actions that were not yet applied.
   */
  reload() {
    return this.load(O().history.items[O().history.pointer]);
  }
  /**
   * Replace current history item with current canvas state.
   */
  replaceCurrent() {
    const e = O().history.items[O().history.pointer], r = [...O().history.items];
    r[O().history.pointer] = Hf({
      name: e.name,
      state: e
    });
  }
  /**
   * Create a new history item from current canvas state.
   */
  addHistoryItem(e) {
    const r = Hf(e), i = [...O().history.items.slice(
      0,
      O().history.pointer + 1
    ), r];
    O().history.update(i.length - 1, i);
  }
  /**
   * Replace current canvas state with specified history item.
   */
  load(e) {
    return e = { ...e, editor: e.editor || Y3 }, new Promise((r) => {
      j0(Z3(e.canvas.objects), {
        prefixSrc: Dt,
        id: "pixie-fonts"
      }).finally(() => {
        de().loadFromJSON(e.canvas, () => {
          I().zoom.set(1), e.canvasWidth && e.canvasHeight && I().canvas.resize(e.canvasWidth, e.canvasHeight, {
            resizeHelper: !1,
            applyZoom: !1
          }), I().frame.remove(), e.editor.frame && I().frame.add(
            e.editor.frame.name,
            e.editor.frame.sizePercent
          ), I().objects.syncObjects(), I().objects.getAll().forEach((n) => {
            var i, l;
            if (!n.data.pixieInternal && n.originX === "left" && n.originY === "top") {
              const g = n.getPointByOrigin("center", "center");
              n.set("left", g.x), n.set("top", g.y);
            }
            n.set({ ...L0 }), n.type === "i-text" && (n.padding = (l = (i = O().config.tools) == null ? void 0 : i.text) == null ? void 0 : l.controlsPadding);
          }), I().canvas.render(), de().calcOffset(), I().zoom.fitToScreen(), O().history.updatePointerById(e.id), I().transform.resetStraightenAnchor(), r();
        });
      });
    });
  }
  /**
   * @hidden
   */
  addInitial(e) {
    !O().history.items.find((n) => n.name === "initial") && (e || !z0()) && this.addHistoryItem({ name: "initial", state: e });
  }
}
function Z3(t) {
  const e = [];
  return t.forEach((r) => {
    var i, l, g;
    if (!tn(r))
      return;
    const n = (g = (l = (i = O().config.tools) == null ? void 0 : i.text) == null ? void 0 : l.items) == null ? void 0 : g.find(
      (a) => a.family === r.fontFamily
    );
    n && e.push(n);
  }), e;
}
class Q3 {
  canMerge() {
    return I().objects.getAll().filter((e) => e.name !== qe.MainImage).length > 0;
  }
  async apply() {
    O().toggleLoading("merge");
    const e = I().export.getDataUrl();
    e && await I().canvas.addMainImage(e, "merge");
  }
}
const to = [
  { name: "grayscale" },
  { name: "blackWhite", fabricType: "blackwhite" },
  {
    name: "sharpen",
    uses: "Convolute",
    matrix: [0, -1, 0, -1, 5, -1, 0, -1, 0]
  },
  { name: "invert" },
  { name: "vintage" },
  { name: "polaroid" },
  { name: "kodachrome" },
  { name: "technicolor" },
  { name: "brownie" },
  { name: "sepia" },
  {
    name: "removeColor",
    fabricType: "removecolor",
    options: {
      distance: { type: "slider", current: 0.1, min: 0, max: 1, step: 0.01 },
      color: { current: "#fff", type: "colorPicker" }
    }
  },
  {
    name: "brightness",
    options: {
      brightness: { type: "slider", current: 0.1, min: -1, max: 1, step: 0.1 }
    }
  },
  {
    name: "gamma",
    options: {
      red: { type: "slider", current: 0.1, min: 0.2, max: 2.2, step: 3921e-6 },
      green: { type: "slider", current: 0.1, min: 0.2, max: 2.2, step: 3921e-6 },
      blue: { type: "slider", current: 0.1, min: 0.2, max: 2.2, step: 3921e-6 }
    },
    apply: (t) => {
      t.gamma = [t.red, t.green, t.blue];
    }
  },
  {
    name: "noise",
    options: {
      noise: { type: "slider", current: 40, min: 1, max: 600 }
    }
  },
  {
    name: "pixelate",
    options: {
      blocksize: { type: "slider", min: 1, max: 40, current: 6 }
    }
  },
  {
    name: "blur",
    uses: "Convolute",
    matrix: [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9]
  },
  {
    name: "emboss",
    uses: "Convolute",
    matrix: [1, 1, 1, 1, 0.7, -1, -1, -1, -1]
  },
  {
    name: "blendColor",
    fabricType: "blendcolor",
    options: {
      alpha: { type: "slider", current: 0.5, min: 0.1, max: 1, step: 0.1 },
      mode: {
        current: "add",
        type: "select",
        available: [
          { key: "add" },
          { key: "multiply" },
          { key: "subtract" },
          { key: "diff" },
          { key: "screen" },
          { key: "lighten" },
          { key: "darken" }
        ]
      },
      color: { type: "colorPicker", current: "#FF4081" }
    }
  }
], eT = {
  grayscale: le("grayscale"),
  blackWhite: le("Black & White"),
  sharpen: le("Sharpen"),
  invert: le("Invert"),
  vintage: le("Vintage"),
  polaroid: le("Polaroid"),
  kodachrome: le("Kodachrome"),
  technicolor: le("Technicolor"),
  brownie: le("Brownie"),
  sepia: le("Sepia"),
  removeColor: le("Remove Color"),
  brightness: le("Brightness"),
  gamma: le("Gamma"),
  noise: le("Noise"),
  pixelate: le("Pixelate"),
  blur: le("Blur"),
  emboss: le("Emboss"),
  blendColor: le("Blend Color")
}, fl = {
  distance: le("distance"),
  color: le("color"),
  brightness: le("brightness"),
  red: le("red"),
  green: le("green"),
  blue: le("blue"),
  noise: le("noise"),
  blocksize: le("blocksize"),
  mode: le("mode"),
  alpha: le("alpha")
};
function ro(t) {
  return t && t.charAt(0).toUpperCase() + t.slice(1);
}
class tT {
  constructor() {
    fe.subscribe(
      (e) => e.history.pointer,
      () => {
        this.syncState();
      }
    );
  }
  /**
   * Apply specified filter to all images.
   */
  apply(e) {
    O().filter.select(e, this.hasOptions(e));
    const r = this.getByName(e);
    if (this.isApplied(r.name)) {
      this.remove(r.name);
      return;
    }
    const n = this.create(r);
    this.getImages().forEach((i) => {
      var l;
      (l = i.filters) == null || l.push(n), i.applyFilters();
    }), this.syncState(), I().canvas.render();
  }
  /**
   * Remove specified filter from all images.
   */
  remove(e) {
    O().filter.deselect(e);
    const r = this.getByName(e);
    this.getImages().forEach((n) => {
      var l;
      const i = this.findFilterIndex(
        r.name,
        n.filters
      );
      (l = n.filters) == null || l.splice(i, 1), n.applyFilters();
    }), this.syncState(), I().canvas.render();
  }
  /**
   * Get a list of all available filters.
   */
  getAll() {
    return to;
  }
  /**
   * Get configuration for specified filter.
   */
  getByName(e) {
    return to.find((r) => r.name === e);
  }
  /**
   * Check if specified filter is currently applied.
   */
  isApplied(e) {
    const r = I().canvas.getMainImage();
    return r ? this.findFilterIndex(e, r.filters) > -1 : !1;
  }
  /**
   * Change specified value for an active filter.
   */
  applyValue(e, r, n) {
    const i = this.getByName(e);
    this.getImages().forEach((l) => {
      const g = (l.filters || []).find(
        (a) => a.type.toLowerCase() === i.name.toLowerCase()
      );
      g && (g[r] = n, i.apply && i.apply(g, r, n), l.applyFilters());
    }), I().canvas.render();
  }
  /**
   * Create a custom filter.
   */
  addCustom(e, r, n, i) {
    const l = Ce.fabric.Image.filters;
    l[ro(e)] = Ce.fabric.util.createClass(
      l.BaseFilter,
      r
    ), l[ro(e)].fromObject = l.BaseFilter.fromObject, to.push({
      name: e,
      options: n,
      initialConfig: i
    });
  }
  /**
   * @hidden
   */
  create(e) {
    const r = e.initialConfig || {};
    let n;
    return e.uses ? (r.matrix = e.matrix, n = new Ce.fabric.Image.filters[ro(e.uses)](r)) : (Object.entries(e.options || {}).forEach(([i, l]) => {
      r[i] = l.current;
    }), n = new Ce.fabric.Image.filters[ro(e.name)](r)), n.name = e.name, n;
  }
  /**
   * @hidden
   */
  hasOptions(e) {
    return !!this.getByName(e).options;
  }
  /**
   * @hidden
   */
  findFilterIndex(e, r) {
    if (!(r != null && r.length))
      return -1;
    const n = this.getByName(e);
    return r.findIndex((i) => this.configMatchesFabricFilter(n, i));
  }
  /**
   * @hidden
   */
  syncState() {
    var n;
    const e = [];
    (((n = this.getImages()[0]) == null ? void 0 : n.filters) || []).forEach((i) => {
      const l = this.getByFabricFilter(i);
      l && e.push(l.name);
    }), fe.setState({
      filter: {
        ...O().filter,
        applied: e
      }
    });
  }
  getByFabricFilter(e) {
    return to.find((r) => this.configMatchesFabricFilter(r, e));
  }
  configMatchesFabricFilter(e, r) {
    const n = r.type.toLowerCase().replace(" ", "");
    return n === e.fabricType || n === e.name ? !0 : n === "convolute" && this.matrixAreEqual(e.matrix, r.matrix);
  }
  matrixAreEqual(e, r) {
    if (!e || !r || e.length !== r.length)
      return !1;
    for (let n = e.length; n--; )
      if (e[n] !== r[n])
        return !1;
    return !0;
  }
  getImages() {
    return I().objects.getAll().filter((e) => e.name === qe.Image || e.name === qe.MainImage);
  }
}
function rT(t) {
  return t.width < Uf(t.usePercentages) && (t.width = Uf(t.usePercentages), t.maintainAspect && (t.height = Lo(t.width, t.usePercentages))), t.width > Wf(t.usePercentages) && (t.width = Wf(t.usePercentages), t.maintainAspect && (t.height = Lo(t.width, t.usePercentages))), t.height < Xf(t.usePercentages) && (t.height = Xf(t.usePercentages), t.maintainAspect && (t.width = vc(t.height, t.usePercentages))), t.height > Yf(t.usePercentages) && (t.height = Yf(t.usePercentages), t.maintainAspect && (t.width = vc(t.height, t.usePercentages))), t;
}
function Uf(t) {
  var r, n;
  const e = ((n = (r = O().config.tools) == null ? void 0 : r.resize) == null ? void 0 : n.minWidth) || 50;
  return t ? Math.ceil(e * 100 / O().original.width) : e;
}
function Wf(t) {
  var r, n;
  const e = ((n = (r = O().config.tools) == null ? void 0 : r.resize) == null ? void 0 : n.maxWidth) || 2400;
  return t ? Math.ceil(e * 100 / O().original.width) : e;
}
function Xf(t) {
  var r, n;
  const e = ((n = (r = O().config.tools) == null ? void 0 : r.resize) == null ? void 0 : n.minHeight) || 50;
  return t ? Math.ceil(e * 100 / O().original.height) : e;
}
function Yf(t) {
  var r, n;
  const e = ((n = (r = O().config.tools) == null ? void 0 : r.resize) == null ? void 0 : n.maxHeight) || 2400;
  return t ? Math.ceil(e * 100 / O().original.height) : e;
}
function vc(t, e) {
  if (e)
    return t;
  const r = O().original.height / t;
  return Math.floor(O().original.width / r);
}
function Lo(t, e) {
  if (e)
    return t;
  const r = O().original.width / t;
  return Math.floor(O().original.height / r);
}
class nT {
  /**
   * Resize image and other canvas objects.
   * If "usePercentages" is false, width/height should be pixels.
   */
  apply(e) {
    const { width: r, height: n, usePercentages: i } = rT(e), l = Math.ceil(O().original.width), g = Math.ceil(O().original.height), a = Math.ceil(r), s = Math.ceil(n);
    let c, f;
    i ? (c = r / 100, f = n / 100) : (c = r / O().original.width, f = n / O().original.height), !(l === a && g === s) && this.resize(c, f);
  }
  /**
   * Resize canvas and all objects to specified scale.
   */
  resize(e, r) {
    I().zoom.set(1, !1);
    const n = Math.round(O().original.height * r), i = Math.round(O().original.width * e);
    I().canvas.resize(i, n, {
      applyZoom: !1,
      resizeHelper: !0
    }), I().objects.getAll().forEach((l) => {
      const g = l.scaleX || 1, a = l.scaleY || 1, s = l.left || 0, c = l.top || 0, f = g * e, o = a * r, h = s * e, u = c * r;
      l.scaleX = f, l.scaleY = o, l.left = h, l.top = u, l.setCoords();
    }), I().zoom.fitToScreen(), de().requestRenderAll();
  }
}
function iT(t, e) {
  e.innerZone !== null && (e = e, sT(t, e), oT(t, e), aT(t, e));
}
function sT(t, e) {
  e.innerZone.style.width = `${t.width}px`, e.innerZone.style.height = `${t.height}px`, e.innerZone.style.transform = `translate(${t.left}px, ${t.top}px)`;
}
function oT(t, e) {
  const r = O().canvasSize.width, n = O().canvasSize.height;
  e.maskTop.style.height = `${t.top}px`, e.maskTop.style.width = `${r}px`, e.maskLeft.style.top = `${t.top}px`, e.maskLeft.style.height = `${t.height}px`, e.maskLeft.style.width = `${t.left}px`;
  const i = t.left + t.width;
  e.maskRight.style.left = `${i}px`, e.maskRight.style.top = `${t.top}px`, e.maskRight.style.height = `${t.height}px`, e.maskRight.style.width = `${r - i}px`, e.maskBottom.style.height = `${n - (t.top + t.height)}px`, e.maskBottom.style.width = `${r}px`;
}
function aT(t, e) {
  const r = (t.width - 2) / 3;
  e.lineVer1.style.height = `${t.height}px`, e.lineVer1.style.transform = `translate(${r}px, 0)`, e.lineVer2.style.height = `${t.height}px`, e.lineVer2.style.transform = `translate(${r * 2}px, 0)`;
  const n = (t.height - 2) / 3;
  e.lineHor1.style.width = `${t.width}px`, e.lineHor1.style.transform = `translate(0, ${n}px)`, e.lineHor2.style.width = `${t.width}px`, e.lineHor2.style.transform = `translate(0, ${n * 2}px)`;
}
function Iu(t, e, r) {
  let n = e, i = r;
  return t && (r * t > e ? i = e / t : n = r * t), { width: Math.floor(n), height: Math.floor(i) };
}
function Lu(t) {
  if (!t)
    return null;
  const e = t.split(":");
  return parseInt(e[0]) / parseInt(e[1]);
}
function lT(t, e = null) {
  const r = {
    width: t.width,
    height: t.height,
    top: 0,
    left: 0,
    angle: 0
  };
  if (e) {
    const n = Iu(
      e,
      r.width,
      r.height
    );
    r.width = n.width, r.height = n.height;
  }
  return r.left = (t.width - r.width) / 2, r.top = (t.height - r.height) / 2, r;
}
class cT {
  constructor() {
    Oe(this, "refs", null);
  }
  apply(e) {
    var i;
    const r = (i = I().frame.active.config) == null ? void 0 : i.name, n = I().frame.active.currentSizeInPercent;
    return I().frame.active.hide(), I().merge.apply().then(() => {
      I().canvas.resize(Math.round(e.width), Math.round(e.height), {
        applyZoom: !0,
        resizeHelper: !0
      });
      const l = I().canvas.getMainImage();
      l.cropX = Math.round(e.left), l.cropY = Math.round(e.top), l.width = Math.round(e.width), l.height = Math.round(e.height), l.viewportCenter(), r && I().frame.add(r, n), I().zoom.fitToScreen(), I().canvas.render();
    });
  }
  drawZone(e) {
    var r;
    (r = this.refs) != null && r.current && (O().crop.setCropzoneRect(e), iT(e, this.refs.current));
  }
  resetCropzone(e) {
    const r = O().canvasSize, n = Lu(e);
    if (!r)
      return;
    O().crop.setAspectRatio(e);
    const i = lT(r, n);
    this.drawZone(i);
  }
  registerRefs(e) {
    this.refs = e;
  }
}
class uT {
  getShapeByName(e) {
    var n, i;
    const r = (i = (n = O().config.tools) == null ? void 0 : n.shapes) == null ? void 0 : i.items;
    return (r == null ? void 0 : r.find((l) => l.name === e)) || null;
  }
  addBasicShape(e) {
    var s;
    const r = this.getShapeByName(e);
    if (!r)
      return null;
    const { width: n, height: i, ...l } = ((s = O().config.objectDefaults) == null ? void 0 : s.shape) || {}, g = {
      ...l,
      ...r.options
    };
    let a;
    if (r.name === "circle")
      a = new Ce.fabric.Circle({
        ...g,
        radius: 100
      });
    else if (r.name === "ellipse")
      a = new Ce.fabric.Ellipse({
        ...g,
        rx: 100,
        ry: 50
      });
    else if (r.type === "Path")
      a = new Ce.fabric.Path(g.path, {
        // @ts-ignore
        displayName: r.name,
        ...g
      });
    else {
      const c = r.type;
      a = new Ce.fabric[c]({
        ...g,
        width: 150,
        height: 150
      });
    }
    return this.addAndPositionShape(a, qe.Shape, { width: n, height: i }), a;
  }
  addSticker(e, r) {
    var i, l, g;
    const n = (g = (l = (i = O().config.tools) == null ? void 0 : i.stickers) == null ? void 0 : l.items) == null ? void 0 : g.find(
      (a) => a.name === e
    );
    if (!n)
      return Promise.resolve();
    if (n.type === "svg") {
      const a = bc(n, r);
      return this.addSvgSticker(a);
    }
    return this.addRegularSticker(n, r);
  }
  addRegularSticker(e, r) {
    return new Promise((n) => {
      Ce.fabric.util.loadImage(bc(e, r), (i) => {
        var c;
        const { width: l, height: g, ...a } = ((c = O().config.objectDefaults) == null ? void 0 : c.sticker) || {}, s = new Ce.fabric.Image(i, a);
        this.addAndPositionShape(s, qe.Sticker, { width: l, height: g }), n();
      });
    });
  }
  addSvgSticker(e, r = qe.Sticker) {
    return new Promise((n) => {
      Ce.fabric.loadSVGFromURL(e, (i, l) => {
        var f;
        const { width: g, height: a, ...s } = ((f = O().config.objectDefaults) == null ? void 0 : f.sticker) || {}, c = Ce.fabric.util.groupSVGElements(i, l);
        c.set(s), this.addAndPositionShape(c, r, { width: g, height: a }), n();
      });
    });
  }
  addAndPositionShape(e, r, { width: n }) {
    e.name = r, e.scaleX = 1, e.scaleY = 1, de().add(e);
    const i = n || O().original.width * O().zoom / 4;
    e.scaleToWidth(Math.min(150, i)), e.viewportCenter(), e.setCoords(), I().canvas.render(), de().setActiveObject(e);
  }
}
function bc(t, e) {
  return Dt(
    `images/stickers/${t.name}/${e}.${t.type}`
  );
}
class hT {
  constructor(e) {
    Oe(this, "patternCache", []);
    this.activeFrame = e;
  }
  /**
   * Fill frame part objects with matching pattern images.
   */
  fillParts(e) {
    this.patternCache.forEach((r) => {
      this.fillPartWithPattern(r, e);
    });
  }
  /**
   * Fill specified frame part with matching pattern.
   */
  fillPartWithPattern(e, r) {
    if (!this.activeFrame.parts)
      return;
    e.canvas = new Ce.fabric.StaticCanvas(null), e.canvas.add(e.img);
    const n = new Ce.fabric.Pattern({
      source: e.canvas.getElement(),
      repeat: r === "repeat" ? "repeat" : "no-repeat"
    });
    this.activeFrame.parts[e.name] && this.activeFrame.parts[e.name].set("fill", n);
  }
  /**
   * Scale all frame patterns to fill their container rect objects.
   */
  scale(e) {
    if (!this.activeFrame.config || !this.patternCache)
      return;
    const r = this.activeFrame.config.mode;
    e /= de().getRetinaScaling(), this.patternCache.forEach((n) => {
      this.activeFrame.parts && (n.name === "top" || n.name === "bottom" ? r === "stretch" ? (this.scalePatternToWidth(
        n.img,
        this.activeFrame.parts.top.getScaledWidth()
      ), this.scalePatternToHeight(n.img, e)) : n.img.scaleToHeight(e) : n.name === "left" || n.name === "right" ? r === "stretch" ? (this.scalePatternToWidth(n.img, e), this.scalePatternToHeight(
        n.img,
        this.activeFrame.parts.left.getScaledHeight()
      )) : n.img.scaleToWidth(e) : r === "stretch" ? (this.scalePatternToWidth(n.img, e), this.scalePatternToHeight(n.img, e)) : n.img.scaleToWidth(e), n.canvas.setDimensions({
        width: n.img.getScaledWidth(),
        height: n.img.getScaledHeight()
      }));
    }), I().canvas.render();
  }
  /**
   * Scale pattern image to specified width.
   */
  scalePatternToWidth(e, r) {
    if (!e.width)
      return;
    const n = e.getBoundingRect().width / e.getScaledWidth();
    e.set("scaleX", r / e.width / n), e.setCoords();
  }
  /**
   * Scale pattern image to specified height.
   */
  scalePatternToHeight(e, r) {
    if (!e.height)
      return;
    const n = e.getBoundingRect().height / e.getScaledHeight();
    e.set("scaleY", r / e.height / n), e.setCoords();
  }
  /**
   * Load all images needed to build specified frame.
   */
  load(e) {
    const r = this.activeFrame.getPartNames().map((n) => new Promise((i) => {
      const l = {
        ...Fn,
        originX: "left",
        originY: "top"
      };
      O().config.crossOrigin && (l.crossOrigin = "anonymous"), Ce.fabric.Image.fromURL(
        this.getPartUrl(e, n),
        (g) => {
          i({ name: n, img: g });
        },
        l
      );
    }));
    return Promise.all(r).then((n) => {
      this.patternCache = n, this.fillParts(e.mode);
    });
  }
  getPartUrl(e, r) {
    return Dt(`images/frames/${e.name}/${r}.png`);
  }
}
class fT {
  constructor(e, r) {
    this.activeFrame = e, this.patterns = r;
  }
  get defaultColor() {
    var e, r;
    return (r = (e = O().config.objectDefaults) == null ? void 0 : e.global) == null ? void 0 : r.fill;
  }
  /**
   * Build a new canvas frame group.
   */
  build(e, r) {
    if (this.createParts(e), this.resize(r), this.activeFrame.config = e, e.mode === "basic") {
      I().canvas.render();
      return;
    }
    this.patterns.load(e).then(() => {
      this.patterns.scale(r), I().canvas.render();
    });
  }
  /**
   * Create rect object for each frame part.
   */
  createParts(e) {
    const r = {};
    this.activeFrame.getPartNames().forEach((n) => {
      const i = e.mode === "basic" ? this.defaultColor : void 0;
      r[n] = new Ce.fabric.Rect({
        ...Fn,
        fill: i,
        originX: "left",
        originY: "top",
        name: `frame.rect.${n}`,
        objectCaching: !1,
        // patterns are not redrawn correctly when resizing frame without this
        data: { pixieInternal: !0 }
      }), de().add(r[n]);
    }), this.activeFrame.parts = r;
  }
  /**
   * Position and resize all frame parts.
   */
  resize(e) {
    const r = O().original.width, n = O().original.height, i = this.activeFrame, l = e;
    i.parts && (i.parts.topLeft.set({
      width: l,
      height: l
    }), i.parts.topRight.set({
      left: r - i.parts.topLeft.getScaledWidth(),
      width: l,
      height: l
    }), i.parts.top.set({
      left: i.parts.topLeft.getScaledWidth() - 1,
      width: r - i.parts.topLeft.getScaledWidth() - i.parts.topRight.getScaledWidth() + 3,
      height: l
    }), i.parts.bottomLeft.set({
      top: n - i.parts.topLeft.getScaledHeight(),
      width: l,
      height: l
    }), i.parts.left.set({
      top: i.parts.topLeft.getScaledHeight() - 1,
      width: l,
      height: n - i.parts.topLeft.getScaledHeight() - i.parts.bottomLeft.getScaledHeight() + 3
    }), i.parts.bottomRight.set({
      left: r - i.parts.bottomLeft.getScaledWidth(),
      top: n - i.parts.topRight.getScaledWidth(),
      width: l,
      height: l
    }), i.parts.bottom.set({
      left: i.parts.top.left,
      top: n - i.parts.top.getScaledHeight(),
      width: i.parts.top.getScaledWidth(),
      height: l
    }), i.parts.right.set({
      left: r - i.parts.left.getScaledWidth(),
      top: i.parts.left.top,
      width: i.parts.left.width,
      height: i.parts.left.getScaledHeight()
    }));
  }
}
class dT {
  constructor() {
    /**
     * List of frame corner names.
     */
    Oe(this, "corners", [
      "topLeft",
      "topRight",
      "bottomLeft",
      "bottomRight"
    ]);
    /**
     * List of frame side names.
     */
    Oe(this, "sides", ["top", "right", "bottom", "left"]);
    Oe(this, "parts", null);
    /**
     * Configuration for currently active frame.
     */
    Oe(this, "config", null);
    /**
     * Current size of frame in percents relative to canvas size.
     */
    Oe(this, "currentSizeInPercent", 100);
  }
  getPartNames() {
    return [...this.corners, ...this.sides];
  }
  hide() {
    this.parts && (Object.values(this.parts).forEach((e) => e.set({ visible: !1 })), I().canvas.render());
  }
  show() {
    this.parts && (Object.values(this.parts).forEach((e) => e.set({ visible: !0 })), I().canvas.render());
  }
  /**
   * Remove currently active frame.
   */
  remove() {
    this.parts && (this.config = null, Object.values(this.parts).forEach((e) => {
      de().remove(e);
    }), this.parts = null, I().canvas.render());
  }
  /**
   * Check if specified frame is active.
   */
  is(e) {
    return this.config ? this.config.name === e.name : !1;
  }
  /**
   * Change color of basic frame.
   */
  changeColor(e) {
    var r;
    ((r = this.config) == null ? void 0 : r.mode) !== "basic" || !this.parts || (Object.values(this.parts).forEach((n) => {
      n.set("fill", e);
    }), I().canvas.render());
  }
  getMinSize() {
    var e;
    return ((e = this.config) == null ? void 0 : e.size.min) ?? 1;
  }
  getMaxSize() {
    var e;
    return ((e = this.config) == null ? void 0 : e.size.max) ?? 35;
  }
}
class pT {
  constructor() {
    Oe(this, "patterns");
    Oe(this, "builder");
    Oe(this, "active");
    this.active = new dT(), this.patterns = new hT(this.active), this.builder = new fT(this.active, this.patterns), de().on("object:added", () => {
      Object.values(this.active.parts || []).forEach((e) => e.moveTo(98));
    });
  }
  /**
   * Add a new frame to canvas.
   */
  add(e, r) {
    const n = this.getByName(e);
    if (!n || this.active.is(n))
      return;
    this.active.remove(), this.active.currentSizeInPercent = r ?? n.size.default;
    const i = this.calcFrameSizeInPixels(this.active.currentSizeInPercent);
    this.builder.build(n, i), O().frame.select(n);
  }
  /**
   * Resize active frame to specified percentage relative to canvas size.
   */
  resize(e) {
    if (!this.active.parts || !this.active.config)
      return;
    e ? this.active.currentSizeInPercent = e : e = this.active.currentSizeInPercent;
    const r = this.calcFrameSizeInPixels(e);
    this.builder.resize(r), this.patterns.scale(r), I().canvas.render();
  }
  /**
   * Change color of currently active frame. Only works for "basic" frame.
   */
  changeColor(e) {
    this.active.changeColor(e);
  }
  /**
   * Remove currently active frame.
   */
  remove() {
    this.active.remove(), O().frame.deselect();
  }
  /**
   * Get frame by specified name.
   */
  getByName(e) {
    var n, i;
    const r = (i = (n = O().config.tools) == null ? void 0 : n.frame) == null ? void 0 : i.items;
    if (r)
      return r.find((l) => l.name === e);
  }
  /**
   * @hidden
   */
  getActiveFrameConfig() {
    return this.active.config;
  }
  /**
   * Calculate frame size in pixels based on specified percentage relative to canvas size.
   */
  calcFrameSizeInPixels(e) {
    const r = Math.min(O().original.width, O().original.height);
    return Math.ceil(e / 100 * r);
  }
}
class gT {
  constructor() {
    Oe(this, "minWidth", 250);
  }
  /**
   * Add specified text to canvas.
   */
  add(e, r = {}) {
    var l, g, a, s, c;
    if (e = e || ((g = (l = O().config.tools) == null ? void 0 : l.text) == null ? void 0 : g.defaultText), !e)
      return;
    const n = {
      ...(a = O().config.objectDefaults) == null ? void 0 : a.text,
      ...r,
      name: qe.Text,
      padding: (c = (s = O().config.tools) == null ? void 0 : s.text) == null ? void 0 : c.controlsPadding,
      editingBorderColor: cu.fill
    }, i = new Ce.fabric.IText(e, n);
    de().add(i), r.left == null && r.top == null && this.autoPositionText(i), I().objects.select(i);
  }
  autoPositionText(e) {
    const r = de().getWidth(), n = de().getHeight(), i = Math.min(de().getWidth(), this.minWidth);
    e.scaleToWidth(Math.max(r / 3, i)), e.getScaledHeight() > n && e.scaleToHeight(n - e.getScaledHeight() - 20), e.viewportCenter(), de().getObjects("i-text").forEach((l) => {
      if (l !== e && l.intersectsWithObject(e)) {
        const g = l.top - e.top + l.getScaledHeight();
        let a = e.top + g;
        a > O().original.height - l.getScaledHeight() && (a = 0), e.set("top", a), e.setCoords();
      }
    });
  }
  /**
   * Select first text object on canvas if it exists, otherwise add a new one.
   */
  selectOrAddText(e, r = {}) {
    if (O().objects.active.isText)
      return !1;
    const n = I().objects.getAll().find((i) => tn(i));
    return n ? (I().objects.select(n), !1) : (this.add(e, r), !0);
  }
}
const mT = (t) => {
  const e = new Ce.fabric.PatternBrush(t);
  return e.getPatternSrc = function() {
    const n = Ce.fabric.document.createElement("canvas");
    n.width = 10, n.height = 10;
    const i = n.getContext("2d");
    return i.strokeStyle = this.color, i.lineWidth = 5, i.beginPath(), i.moveTo(0, 5), i.lineTo(10, 5), i.closePath(), i.stroke(), n;
  }, e;
}, vT = (t) => {
  const e = new Ce.fabric.PatternBrush(t);
  return e.getPatternSrc = function() {
    const n = document.createElement("canvas");
    n.width = 10, n.height = 10;
    const i = n.getContext("2d");
    return i.strokeStyle = this.color, i.lineWidth = 5, i.beginPath(), i.moveTo(5, 0), i.lineTo(5, 10), i.closePath(), i.stroke(), n;
  }, e;
}, bT = (t) => {
  const e = new Ce.fabric.PatternBrush(t);
  return e.getPatternSrc = function() {
    const n = this.width / 2, i = 5, l = document.createElement("canvas"), g = new Ce.fabric.Rect({
      width: n,
      height: n,
      angle: 45,
      fill: this.color
    }), a = g.getBoundingRect().width;
    l.width = a + i, l.height = a + i, g.set({ left: a / 2, top: a / 2 });
    const s = l.getContext("2d");
    return g.render(s), l;
  }, e;
}, yT = (t) => {
  const e = new Ce.fabric.PatternBrush(t);
  return e.getPatternSrc = function() {
    const l = document.createElement("canvas");
    l.width = 10 + 2, l.height = 10 + 2;
    const g = l.getContext("2d");
    return g.fillStyle = this.color, g.fillRect(0, 0, 10, 10), l;
  }, e;
};
var Ap, Dp;
class wT {
  constructor() {
    Oe(this, "customBrushes", {
      VLineBrush: mT,
      HLineBrush: vT,
      DiamondBrush: bT,
      SquareBrush: yT
    });
    Oe(this, "currentBrush", {
      type: "PencilBrush",
      color: (Dp = (Ap = O().config.objectDefaults) == null ? void 0 : Ap.global) == null ? void 0 : Dp.fill,
      width: Yg[1]
    });
    Oe(this, "onPathCreated", (e) => {
      e.path.name = qe.Drawing, e.path.set(xT()), O().setDirty(!0);
    });
  }
  /**
   * Enable drawing mode on canvas.
   */
  enable() {
    de().on("path:created", this.onPathCreated), de().isDrawingMode = !0, this.setBrushType(this.currentBrush.type), this.setBrushSize(this.currentBrush.width);
  }
  /**
   * Disable drawing mode on canvas.
   */
  disable() {
    de().off("path:created", this.onPathCreated), de().isDrawingMode = !1;
  }
  getBrushType() {
    return this.currentBrush.type;
  }
  setBrushType(e) {
    this.currentBrush.type = e, de().freeDrawingBrush = e in Ce.fabric ? (
      // @ts-ignore
      new Ce.fabric[e](de())
    ) : (
      // @ts-ignore
      this.customBrushes[e](de())
    ), this.applyBrushStyles();
  }
  /**
   * Apply current brush styles to fabric.js FreeDrawingBrush instance.
   */
  applyBrushStyles() {
    Object.keys(this.currentBrush).forEach((r) => {
      de().freeDrawingBrush[r] = this.currentBrush[r];
    });
    const e = de().freeDrawingBrush;
    e.getPatternSrc && (e.source = e.getPatternSrc.call(e));
  }
  setBrushSize(e) {
    this.currentBrush.width = e, this.applyBrushStyles();
  }
  getBrushSize() {
    return this.currentBrush.width;
  }
  /**
   * Change color of drawing brush.
   */
  setBrushColor(e) {
    this.currentBrush.color = e, this.applyBrushStyles();
  }
  /**
   * Get color of drawing brush.
   */
  getBrushColor() {
    return this.currentBrush.color;
  }
}
function xT() {
  const t = { ...Fn };
  return delete t.strokeWidth, t;
}
function $0(t) {
  var r;
  return ((r = /(?:\.([^.]+))?$/.exec(t)) == null ? void 0 : r[1]) || "";
}
function CT(t) {
  const e = {
    md: "text/markdown",
    markdown: "text/markdown",
    mp4: "video/mp4",
    mp3: "audio/mp3",
    svg: "image/svg+xml",
    jpg: "image/jpeg",
    png: "image/png",
    gif: "image/gif",
    yaml: "text/yaml",
    yml: "text/yaml"
  }, r = t.name ? $0(t.name) : null;
  return t.type ? t.type : r && r in e ? e[r] : "application/octet-stream";
}
let _T = 0;
function ST() {
  return _T;
}
class ba {
  constructor(e, r) {
    Oe(this, "id");
    Oe(this, "fingerprint");
    Oe(this, "name");
    Oe(this, "relativePath", "");
    Oe(this, "size");
    Oe(this, "mime", "");
    Oe(this, "extension", "");
    Oe(this, "native");
    Oe(this, "lastModified");
    Oe(this, "cachedData");
    this.id = _m(), this.name = e.name, this.size = e.size, this.mime = CT(e), this.lastModified = e.lastModified, this.extension = $0(e.name) || "bin", this.native = e, r = r || e.webkitRelativePath || "", r = r.replace(/^\/+/g, ""), r && r.split("/").length > 1 && (this.relativePath = r), this.fingerprint = TT({
      name: this.name,
      size: this.size,
      mime: this.mime,
      lastModified: this.lastModified
    });
  }
  get data() {
    return new Promise((e) => {
      this.cachedData && e(this.cachedData);
      const r = new FileReader();
      r.addEventListener("load", () => {
        this.cachedData = r.result, e(this.cachedData);
      }), this.extension === "json" ? r.readAsText(this.native) : r.readAsDataURL(this.native);
    });
  }
}
function TT({ name: t, mime: e, size: r, relativePath: n, lastModified: i }) {
  let l = "be";
  return typeof t == "string" && (l += `-${Gf(t.toLowerCase())}`), e && (l += `-${e}`), typeof n == "string" && (l += `-${Gf(n.toLowerCase())}`), r !== void 0 && (l += `-${r}`), i !== void 0 && (l += `-${i}`), l += `${ST()}`, `${l}-v1`;
}
function ET(t) {
  return t.charCodeAt(0).toString(32);
}
function Gf(t) {
  let e = "";
  return t.replace(/[^A-Z0-9]/gi, (r) => (e += `-${ET(r)}`, "/")) + e;
}
function kT(t = {}) {
  const e = document.querySelector("#hidden-file-upload-input");
  e && e.remove();
  const r = document.createElement("input");
  return r.type = "file", r.multiple = t.multiple ?? !1, r.classList.add("hidden"), r.style.display = "none", r.style.visibility = "hidden", r.id = "hidden-file-upload-input", r.accept = OT(t), t.directory && (r.webkitdirectory = !0), document.body.appendChild(r), r;
}
function OT({
  extensions: t = [],
  types: e = []
}) {
  const r = [];
  return t != null && t.length && (t = t.map((n) => n.startsWith(".") ? n : `.${n}`), r.push(t.join(","))), e != null && e.length && r.push(e.join(",")), r.join(",");
}
function AT(t = {}) {
  return new Promise((e) => {
    const r = kT(t);
    r.onchange = (n) => {
      const i = n.target.files;
      if (!i)
        return e([]);
      const l = Array.from(i).filter((g) => g.name !== ".DS_Store").map((g) => new ba(g));
      e(l), r.remove();
    }, document.body.appendChild(r), r.click();
  });
}
async function qf(t, e = !0, r = !0) {
  const n = await B0(t);
  if (n)
    return new Promise((i) => {
      n.name = qe.Image, n.opacity = 0;
      const l = O().original.width, g = O().original.height;
      if (e && (n.width >= l || n.height >= g)) {
        const a = l - 0.1 * l, s = g - 0.1 * g, c = 1 / Math.min(
          s / n.getScaledHeight(),
          a / n.getScaledWidth()
        );
        n.scaleX *= 1 / c, n.scaleY *= 1 / c;
      }
      O().fabric.add(n), r && O().fabric.setActiveObject(n), n.viewportCenter(), n.setCoords(), O().fabric.requestRenderAll(), I().zoom.fitToScreen(), n.animate("opacity", "1", {
        duration: 425,
        onChange: () => {
          O().fabric.requestRenderAll();
        },
        onComplete: () => {
          i(n);
        }
      });
    });
}
var Bu = /* @__PURE__ */ ((t) => (t.image = "image/*", t.audio = "audio/*", t.text = "text/*", t.json = "application/json", t.video = "video/mp4,video/mpeg,video/x-m4v,video/*", t))(Bu || {});
function DT(t, e = 1) {
  if (t == null || Number.isNaN(t))
    return "";
  const r = t < 0, n = ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
  if (r && (t = -t), t < 1)
    return `${(r ? "-" : "") + t} B`;
  const i = Math.min(
    Math.floor(Math.log(t) / Math.log(1024)),
    n.length - 1
  );
  t = Number(t / Math.pow(1024, i));
  const l = n[i];
  return t >= 10 || t % 1 === 0 ? `${(r ? "-" : "") + t.toFixed(0)} ${l}` : `${(r ? "-" : "") + t.toFixed(e)} ${l}`;
}
function V0(t, e) {
  this.text = t = t || "", this.hasWild = ~t.indexOf("*"), this.separator = e, this.parts = t.split(e);
}
V0.prototype.match = function(t) {
  var e = !0, r = this.parts, n, i = r.length, l;
  if (typeof t == "string" || t instanceof String)
    if (!this.hasWild && this.text != t)
      e = !1;
    else {
      for (l = (t || "").split(this.separator), n = 0; e && n < i; n++)
        r[n] !== "*" && (n < l.length ? e = r[n] === l[n] : e = !1);
      e = e && l;
    }
  else if (typeof t.splice == "function")
    for (e = [], n = t.length; n--; )
      this.match(t[n]) && (e[e.length] = t[n]);
  else if (typeof t == "object") {
    e = {};
    for (var g in t)
      this.match(g) && (e[g] = t[g]);
  }
  return e;
};
var PT = function(t, e, r) {
  var n = new V0(t, r || /[\/\.]/);
  return typeof e < "u" ? n.match(e) : n;
}, MT = PT, FT = /[\/\+\.]/, RT = function(t, e) {
  function r(n) {
    var i = MT(n, t, FT);
    return i && i.length >= 2;
  }
  return e ? r(e.split(";")[0]) : r;
};
const IT = /* @__PURE__ */ Es(RT);
function LT(t, e) {
  if (!e)
    return;
  const { maxFileSize: r, allowedFileTypes: n, blockedFileTypes: i } = e;
  if (r && t.size != null && t.size > r)
    return le("`:file` exceeds maximum allowed size of :size", {
      values: { file: t.name, size: DT(r) }
    });
  if (n != null && n.length && !Kf(t, n) || i != null && i.length && Kf(t, i))
    return le("This file type is not allowed");
}
function Kf(t, e) {
  return e.map((r) => r.split(",")).flat().some((r) => {
    if (r.includes("/"))
      return t.mime ? IT(t.mime.replace(/;.*?$/, ""), r) : !1;
    const n = r.replace(".", "").toLowerCase();
    return n && t.extension ? t.extension.toLowerCase() === n : !1;
  });
}
function BT(t, e) {
  if (t == null)
    return 0;
  switch (e) {
    case "KB":
      return t * 1024;
    case "MB":
      return t * 1024 ** 2;
    case "GB":
      return t * 1024 ** 3;
    case "TB":
      return t * 1024 ** 4;
    case "PB":
      return t * 1024 ** 5;
    default:
      return t;
  }
}
class zT {
  /**
   * Open file upload window and add selected image to canvas.
   */
  async uploadAndAddImage(e = !0) {
    const r = await this.openUploadWindow();
    await this.openUploadedFile(r, e);
  }
  /**
   * Open file upload window and replace canvas contents with selected image.
   */
  async uploadAndReplaceMainImage() {
    const e = await this.openUploadWindow();
    e && await this.openBackgroundImage(e);
  }
  /**
   * Open file upload window and replace canvas contents with selected state file.
   */
  async uploadAndOpenStateFile() {
    const e = await this.openUploadWindow(jT);
    e && await this.loadState(await e.data);
  }
  /**
   * Add image at specified url to canvas.
   */
  async addImageFromUrl(e, r = !0) {
    var n, i;
    await qf(
      e,
      ((i = (n = O().config.tools) == null ? void 0 : n.import) == null ? void 0 : i.fitOverlayToScreen) ?? !0,
      r
    ), I().history.addHistoryItem({ name: "overlayImage" });
  }
  /**
   * Add specified image data to canvas.
   */
  async addImageFromData(e, r = !0) {
    var n, i;
    await qf(
      e,
      ((i = (n = O().config.tools) == null ? void 0 : n.import) == null ? void 0 : i.fitOverlayToScreen) ?? !0,
      r
    ), I().history.addHistoryItem({ name: "overlayImage" });
  }
  /**
   * @hidden
   */
  async openUploadedFile(e, r = !0) {
    if (!e)
      return;
    const n = await e.data;
    switch (e.extension) {
      case "json":
        await this.loadState(n);
        break;
      case "svg":
        await I().shape.addSvgSticker(n, qe.Image), I().history.addHistoryItem({ name: "overlayImage" });
        break;
      default:
        await this.addImageFromData(n, r);
    }
  }
  /**
   * Replace current editor state with specified one.
   */
  async loadState(e) {
    O().toggleLoading("state"), await ic();
    let r;
    typeof e == "string" ? e.endsWith(".json") ? r = await ua(e) : r = JSON.parse(e) : r = e, r.history ? O().history.reset(r.history) : await I().history.addInitial(r), await I().history.reload(), O().toggleLoading(!1);
  }
  /**
   * @hidden
   */
  async openUploadWindow(e) {
    var n, i;
    e = e || NT();
    const r = (await AT(e))[0];
    return this.fileIsValid(r) ? ((i = (n = O().config).onFileOpen) == null || i.call(n, r), r) : null;
  }
  /**
   * Open specified data or image as background image.
   */
  async openBackgroundImage(e) {
    await ic();
    let r;
    e instanceof HTMLImageElement ? r = e.src : e instanceof ba ? r = await e.data : r = e;
    const n = await I().canvas.addMainImage(r);
    return await I().history.addInitial(), n;
  }
  fileIsValid(e) {
    var l, g, a, s;
    const r = ((g = (l = O().config.tools) == null ? void 0 : l.import) == null ? void 0 : g.maxFileSize) ?? BT(10, "MB"), n = [
      ...((s = (a = O().config.tools) == null ? void 0 : a.import) == null ? void 0 : s.validImgExtensions) ?? [],
      "json"
    ], i = LT(e, { maxFileSize: r, allowedFileTypes: n });
    return i ? (Si.danger(i), !1) : !0;
  }
}
function NT() {
  var e, r;
  const t = (r = (e = O().config.tools) == null ? void 0 : e.import) == null ? void 0 : r.validImgExtensions;
  return t ? { extensions: t } : { types: [Bu.image] };
}
const jT = {
  types: [".json", Bu.json]
};
class $T {
  constructor() {
    Oe(this, "watermark", null);
    Oe(this, "lineStyle", {
      stroke: "rgba(255,255,255,0.3)",
      strokeWidth: 5,
      strokeLineCap: "round",
      strokeLineJoin: "round"
    });
  }
  /**
   * Add a watermark to canvas.
   */
  add(e) {
    this.createGroup(), this.addText(e), this.addLines(), de().add(this.watermark), I().canvas.render();
  }
  /**
   * Remove watermark from canvas.
   */
  remove() {
    this.watermark && (de().remove(this.watermark), this.watermark = null, I().canvas.render());
  }
  createGroup() {
    this.watermark = new Ce.fabric.Group(void 0, {
      ...Fn,
      width: O().original.width,
      height: O().original.height,
      excludeFromExport: !0,
      top: 0,
      left: 0,
      originX: "left",
      originY: "top"
    });
  }
  addText(e) {
    var n;
    const r = new Ce.fabric.Text(e, {
      fill: "rgba(255,255,255,0.3)",
      strokeWidth: 2,
      stroke: "rgba(255,255,255,0.4)",
      originX: "center",
      originY: "center",
      fontWeight: 600,
      fontSize: 150,
      fontFamily: "Courier New"
    });
    r.scaleToWidth(O().original.width / 2), (n = this.watermark) == null || n.add(r);
  }
  addLines() {
    var f;
    if (!this.watermark)
      return;
    const e = (f = this.watermark) == null ? void 0 : f.getObjects("text")[0], r = O().original.width / 2, n = O().original.height / 2, i = 100, l = e.width / 4, g = new Ce.fabric.Line(void 0, this.lineStyle), a = new Ce.fabric.Line(void 0, this.lineStyle), s = new Ce.fabric.Line(void 0, this.lineStyle), c = new Ce.fabric.Line(void 0, this.lineStyle);
    this.watermark.add(g, a, s, c), g.set({
      x1: l,
      y1: -i,
      x2: r,
      y2: -n
    }), a.set({
      x1: l,
      y1: i,
      x2: r,
      y2: n
    }), s.set({
      x1: -l,
      y1: -i,
      x2: -r,
      y2: -n
    }), c.set({
      x1: -l,
      y1: i,
      x2: -r,
      y2: n
    });
  }
}
var H0 = { exports: {} };
(function(t, e) {
  (function(r, n) {
    n();
  })(Wn, function() {
    function r(c, f) {
      return typeof f > "u" ? f = { autoBom: !1 } : typeof f != "object" && (console.warn("Deprecated: Expected third argument to be a object"), f = { autoBom: !f }), f.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(c.type) ? new Blob(["\uFEFF", c], { type: c.type }) : c;
    }
    function n(c, f, o) {
      var h = new XMLHttpRequest();
      h.open("GET", c), h.responseType = "blob", h.onload = function() {
        s(h.response, f, o);
      }, h.onerror = function() {
        console.error("could not download file");
      }, h.send();
    }
    function i(c) {
      var f = new XMLHttpRequest();
      f.open("HEAD", c, !1);
      try {
        f.send();
      } catch {
      }
      return 200 <= f.status && 299 >= f.status;
    }
    function l(c) {
      try {
        c.dispatchEvent(new MouseEvent("click"));
      } catch {
        var f = document.createEvent("MouseEvents");
        f.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), c.dispatchEvent(f);
      }
    }
    var g = typeof window == "object" && window.window === window ? window : typeof self == "object" && self.self === self ? self : typeof Wn == "object" && Wn.global === Wn ? Wn : void 0, a = g.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent), s = g.saveAs || (typeof window != "object" || window !== g ? function() {
    } : "download" in HTMLAnchorElement.prototype && !a ? function(c, f, o) {
      var h = g.URL || g.webkitURL, u = document.createElement("a");
      f = f || c.name || "download", u.download = f, u.rel = "noopener", typeof c == "string" ? (u.href = c, u.origin === location.origin ? l(u) : i(u.href) ? n(c, f, o) : l(u, u.target = "_blank")) : (u.href = h.createObjectURL(c), setTimeout(function() {
        h.revokeObjectURL(u.href);
      }, 4e4), setTimeout(function() {
        l(u);
      }, 0));
    } : "msSaveOrOpenBlob" in navigator ? function(c, f, o) {
      if (f = f || c.name || "download", typeof c != "string")
        navigator.msSaveOrOpenBlob(r(c, o), f);
      else if (i(c))
        n(c, f, o);
      else {
        var h = document.createElement("a");
        h.href = c, h.target = "_blank", setTimeout(function() {
          l(h);
        });
      }
    } : function(c, f, o, h) {
      if (h = h || open("", "_blank"), h && (h.document.title = h.document.body.innerText = "downloading..."), typeof c == "string")
        return n(c, f, o);
      var u = c.type === "application/octet-stream", d = /constructor/i.test(g.HTMLElement) || g.safari, m = /CriOS\/[\d]+/.test(navigator.userAgent);
      if ((m || u && d || a) && typeof FileReader < "u") {
        var p = new FileReader();
        p.onloadend = function() {
          var y = p.result;
          y = m ? y : y.replace(/^data:[^;]*;/, "data:attachment/file;"), h ? h.location.href = y : location = y, h = null;
        }, p.readAsDataURL(c);
      } else {
        var v = g.URL || g.webkitURL, b = v.createObjectURL(c);
        h ? h.location = b : location.href = b, h = null, setTimeout(function() {
          v.revokeObjectURL(b);
        }, 4e4);
      }
    });
    g.saveAs = s.saveAs = s, t.exports = s;
  });
})(H0);
var VT = H0.exports;
function HT(t, e, r) {
  e = e || "", r = r || 512;
  const n = atob(t), i = [];
  for (let l = 0; l < n.length; l += r) {
    const g = n.slice(l, l + r), a = new Array(g.length);
    for (let c = 0; c < g.length; c++)
      a[c] = g.charCodeAt(c);
    const s = new Uint8Array(a);
    i.push(s);
  }
  return new Blob(i, { type: e });
}
class UT {
  /**
   * Primary "save" function. This is called when user clicks "Done" button in the toolbar.
   * It will apply watermark (if specified) and execute one of the actions below in the order of priority:
   *
   * 1. Send image data to url. If specified via "saveUrl" option in configuration.
   * 2. Execute "onSave" callback function. If provided in configuration.
   * 3. Download image or state file to user device with specified name, format and quality.
   */
  save(e, r, n) {
    var a, s, c;
    const i = (a = O().config.tools) == null ? void 0 : a.export;
    e = e || (i == null ? void 0 : i.defaultName), r = this.getFormat(r), n = this.getQuality(n);
    const l = `${e}.${r}`;
    this.applyWaterMark();
    const g = r === "json" ? this.getJsonState() : this.getDataUrl(r, n);
    if (I().watermark.remove(), !!g)
      if (O().config.saveUrl)
        fetch(O().config.saveUrl, {
          method: "POST",
          body: JSON.stringify({ data: g, filename: l, format: r })
        });
      else if (O().config.onSave)
        (c = (s = O().config).onSave) == null || c.call(s, g, l, r);
      else {
        const f = this.getCanvasBlob(r, g);
        VT.saveAs(f, l);
      }
  }
  /**
   * Returns base64 encoded data for current image.
   */
  getDataUrl(e, r) {
    try {
      return e === "svg" ? de().toSVG() : de().toDataURL({
        format: this.getFormat(e),
        quality: this.getQuality(r),
        multiplier: Math.max(
          O().original.width / de().width,
          O().original.height / de().height
        )
      });
    } catch (n) {
      n.message.toLowerCase().includes("tainted") && Si.danger(le("Could not export canvas with external image."));
    }
    return null;
  }
  getCanvasBlob(e, r) {
    if (e === "json")
      return new Blob([r], { type: "application/json" });
    if (e === "svg")
      return new Blob([r], { type: "image/svg+xml" });
    const n = `image/${e}`;
    return r = r.replace(/data:image\/([a-z]*)?;base64,/, ""), HT(r, n);
  }
  getJsonState() {
    return JSON.stringify({
      ...Eo(),
      history: O().history
    });
  }
  applyWaterMark() {
    const e = O().config.watermarkText;
    e && I().watermark.add(e);
  }
  getFormat(e) {
    var n;
    const r = (n = O().config.tools) == null ? void 0 : n.export;
    return e = e || (r == null ? void 0 : r.defaultFormat) || "png", e === "jpg" && (e = "jpeg"), e;
  }
  getQuality(e) {
    var n;
    const r = (n = O().config.tools) == null ? void 0 : n.export;
    return e = e || (r == null ? void 0 : r.defaultQuality) || 0.8, e;
  }
}
class WT {
  constructor() {
    Oe(this, "previewRect", null);
  }
  async apply(e) {
    this.previewRect || this.showPreview(), this.updatePreview(e), de().remove(this.previewRect), de().clipPath = this.previewRect;
    const r = I().export.getDataUrl();
    r && I().canvas.clear(), this.hidePreview(), r && await I().canvas.addMainImage(r), de().clipPath = void 0;
  }
  getPreviewRadius() {
    var e;
    return ((e = this.previewRect) == null ? void 0 : e.rx) || 0;
  }
  updatePreview(e) {
    this.previewRect && (this.previewRect.set({
      rx: e,
      ry: e
    }), I().canvas.render());
  }
  showPreview() {
    const e = O().original.width * 0.04;
    this.previewRect = new Ce.fabric.Rect({
      width: O().original.width,
      height: O().original.height,
      rx: e,
      ry: e,
      objectCaching: !1,
      fill: "transparent",
      name: "round.rect",
      data: { pixieInternal: !0 },
      stroke: "rgba(255,255,255,0.8)",
      strokeWidth: 3,
      strokeDashArray: [4, 4],
      selectable: !1,
      evented: !1
    }), de().add(this.previewRect), this.previewRect.moveTo(99), this.previewRect.viewportCenter(), I().canvas.render();
  }
  hidePreview() {
    this.previewRect && (de().remove(this.previewRect), I().canvas.render(), this.previewRect = null);
  }
}
class XT {
  get straightenAnchor() {
    return de().getObjects().find(
      (e) => e.name === qe.StraightenAnchor
    );
  }
  /**
   * Rotate canvas left by 90 degrees.
   */
  rotateLeft() {
    this.rotateFixed(-90);
  }
  /**
   * Rotate canvas right by 90 degrees.
   */
  rotateRight() {
    this.rotateFixed(90);
  }
  /**
   * Straighten canvas by specified number of degrees.
   */
  straighten(e) {
    this.storeObjectsRelationToHelper(), I().objects.deselectActive();
    const r = (this.straightenAnchor.data.rotateAngle || 0) + e, n = this.getImageScale(r, this.straightenAnchor);
    this.straightenAnchor.angle = r, this.straightenAnchor.scaleX = n, this.straightenAnchor.scaleY = n, this.straightenAnchor.data.straightenAngle = e, this.transformObjectsBasedOnHelper();
  }
  /**
   * Flip canvas vertically or horizontally.
   */
  flip(e) {
    const r = e === "horizontal" ? "flipY" : "flipX";
    I().objects.getAll().forEach((n) => {
      n[r] = !n[r];
    }), I().canvas.render();
  }
  rotateFixed(e) {
    I().zoom.set(1, !1), I().objects.deselectActive();
    const r = this.straightenAnchor.data.rotateAngle || 0;
    e = Math.round(e / 90) * 90;
    const n = r + (this.straightenAnchor.data.straightenAngle || 0) + e;
    I().canvas.resize(O().original.height, O().original.width, {
      applyZoom: !1,
      resizeHelper: !1
    }), this.storeObjectsRelationToHelper(), this.straightenAnchor.rotate(n), this.straightenAnchor.data.rotateAngle = r + e, this.straightenAnchor.center(), this.transformObjectsBasedOnHelper(), I().frame.resize(I().frame.active.currentSizeInPercent), requestAnimationFrame(() => {
      I().zoom.fitToScreen();
    });
  }
  /**
   * Get minimum scale in order for image to fill the whole canvas, based on rotation.
   */
  getImageScale(e, r) {
    e = Ce.fabric.util.degreesToRadians(e);
    const n = O().original.width, i = O().original.height, l = n / 2, g = i / 2, a = r.width / 2, s = r.height / 2, c = Math.sqrt(l ** 2 + g ** 2), f = Math.asin(g / c);
    let o = (e % (Math.PI * 2) + Math.PI * 4) % (Math.PI * 2);
    o > Math.PI && (o -= Math.PI), o > Math.PI / 2 && o <= Math.PI && (o = Math.PI / 2 - (o - Math.PI / 2));
    const h = Math.PI / 2 - f - Math.abs(o), u = Math.abs(f - Math.abs(o)), d = Math.cos(h) * c, m = Math.cos(u) * c;
    return Math.max(m / a, d / s);
  }
  storeObjectsRelationToHelper() {
    I().objects.getAll().forEach((e) => {
      if (e !== this.straightenAnchor) {
        const r = Ce.fabric.util.multiplyTransformMatrices(
          Ce.fabric.util.invertTransform(
            this.straightenAnchor.calcTransformMatrix()
          ),
          e.calcTransformMatrix()
        );
        e.data = { ...e.data, relationToCanvas: r };
      }
    });
  }
  transformObjectsBasedOnHelper() {
    I().objects.getAll().forEach((e) => {
      if (e.data.relationToCanvas) {
        const r = Ce.fabric.util.multiplyTransformMatrices(
          this.straightenAnchor.calcTransformMatrix(),
          e.data.relationToCanvas
        ), n = Ce.fabric.util.qrDecompose(r);
        e.set({ flipX: !1, flipY: !1 }), e.setPositionByOrigin(
          { x: n.translateX, y: n.translateY },
          "center",
          "center"
        ), e.set(n), e.setCoords(), e.data.relationToCanvas = null;
      }
    });
  }
  /**
   * @hidden
   */
  resetStraightenAnchor() {
    const e = this.straightenAnchor;
    e && de().remove(e);
    const r = new Ce.fabric.Rect({
      ...Fn,
      name: qe.StraightenAnchor,
      visible: !1,
      width: O().original.width,
      height: O().original.height,
      data: {
        pixieInternal: !0,
        straightenAngle: 0,
        rotateAngle: 0
      }
    });
    de().add(r), r.viewportCenter();
  }
}
function YT(t) {
  const e = z3(t);
  O().editor.fabric = e, fe.setState({ fabric: e }), O().editor.tools = {
    canvas: new j3(),
    objects: new X3(),
    zoom: new N3(),
    history: new J3(),
    filter: new tT(),
    resize: new nT(),
    crop: new cT(),
    merge: new Q3(),
    shape: new uT(),
    frame: new pT(),
    text: new gT(),
    draw: new wT(),
    transform: new XT(),
    import: new zT(),
    watermark: new $T(),
    export: new UT(),
    corners: new WT()
  };
}
function Jf(t, e) {
  const r = new ResizeObserver((n) => {
    const i = n[0].contentRect;
    e({ width: i.width, height: i.height });
  });
  return t.current && r.observe(t.current), () => {
    t.current && r.unobserve(t.current);
  };
}
function Zf(t) {
  const e = t.getBoundingClientRect();
  return {
    top: e.top,
    right: e.right,
    bottom: e.bottom,
    left: e.left,
    width: e.width,
    height: e.height
  };
}
const U0 = "flex flex-shrink-0 items-center justify-between px-12 py-[9px] w-full h-[54px]", W0 = {
  initial: { opacity: 0 },
  animate: { opacity: 1 },
  exit: { opacity: 0, position: "absolute" },
  transition: { type: "tween", duration: 0.15 }
};
function zu(t, { padding: e, equalWidth: r, variant: n } = {}) {
  switch (t) {
    case "2xs":
      return n === "link" ? "text-xs" : `text-xs h-24 ${r ? "w-24" : e || "px-10"}`;
    case "xs":
      return n === "link" ? "text-xs" : `text-xs h-30 ${r ? "w-30" : e || "px-14"}`;
    case "sm":
      return n === "link" ? "text-sm" : `text-sm h-36 ${r ? "w-36" : e || "px-18"}`;
    case "md":
      return n === "link" ? "text-base" : `text-base h-42 ${r ? "w-42" : e || "px-22"}`;
    case "lg":
      return n === "link" ? "text-lg" : `text-base h-50 ${r ? "w-50" : e || "px-26"}`;
    case "xl":
      return n === "link" ? "text-xl" : `text-lg h-60 ${r ? "w-60" : e || "px-32"}`;
    default:
      return t || "";
  }
}
function GT(t) {
  const {
    variant: e,
    shadow: r,
    whitespace: n = "whitespace-nowrap",
    display: i = "inline-flex"
  } = t, l = { ...t, border: t.border || "border" };
  let g = [];
  return e === "outline" ? g = qT(l) : e === "text" ? g = KT(l) : e === "flat" || e === "raised" ? g = ZT(l) : e === "link" && (g = JT(l)), [
    ...g,
    r || e === "raised" && "shadow-md",
    n,
    i,
    e && "align-middle flex-shrink-0 items-center transition-button duration-200",
    "select-none appearance-none no-underline outline-none disabled:pointer-events-none disabled:cursor-default"
  ];
}
function qT({ color: t, border: e }) {
  const r = "disabled:text-disabled disabled:bg-transparent disabled:border-disabled-bg";
  switch (t) {
    case "primary":
      return [
        `text-primary bg-transparent ${e} border-primary/50`,
        "hover:bg-primary/hover hover:border-primary",
        r
      ];
    case "danger":
      return [
        `text-danger bg-transparent ${e} border-danger/50`,
        "hover:bg-danger/4 hover:border-danger",
        r
      ];
    case "positive":
      return [
        `text-positive bg-transparent ${e} border-positive/50`,
        "hover:bg-positive/4 hover:border-positive",
        r
      ];
    case "paper":
      return [`text bg-paper ${e}`, "hover:bg-hover", r];
    case "white":
      return [
        "text-white bg-transparent border border-white",
        "hover:bg-white/20",
        "disabled:text-white/70 disabled:border-white/70 disabled:bg-transparent"
      ];
    default:
      return [`bg-transparent ${e}`, "hover:bg-hover", r];
  }
}
function KT({ color: t }) {
  const e = "disabled:text-disabled disabled:bg-transparent";
  switch (t) {
    case "primary":
      return [
        "text-primary bg-transparent border-transparent",
        "hover:bg-primary/4",
        e
      ];
    case "danger":
      return [
        "text-danger bg-transparent border-transparent",
        "hover:bg-danger/4",
        e
      ];
    case "positive":
      return [
        "text-positive bg-transparent border-transparent",
        "hover:bg-positive/4",
        e
      ];
    case "white":
      return [
        "text-white bg-transparent border-transparent",
        "hover:bg-white/20",
        "disabled:text-white/70 disabled:bg-transparent"
      ];
    default:
      return ["bg-transparent border-transparent", "hover:bg-hover", e];
  }
}
function JT({ color: t }) {
  switch (t) {
    case "primary":
      return ["text-primary", "hover:underline", "disabled:text-disabled"];
    case "danger":
      return ["text-danger", "hover:underline", "disabled:text-disabled"];
    default:
      return ["text-main", "hover:underline", "disabled:text-disabled"];
  }
}
function ZT({ color: t, border: e }) {
  const r = "disabled:text-disabled disabled:bg-disabled disabled:border-transparent disabled:shadow-none";
  switch (t) {
    case "primary":
      return [
        `text-on-primary bg-primary ${e} border-primary`,
        "hover:bg-primary-dark hover:border-primary-dark",
        r
      ];
    case "danger":
      return [
        `text-white bg-danger ${e} border-danger`,
        "hover:bg-danger/90 hover:border-danger/90",
        r
      ];
    case "chip":
      return [
        `text-main bg-chip ${e} border-chip`,
        "hover:bg-chip/90 hover:border-chip/90",
        r
      ];
    case "paper":
      return [
        `text-main bg-paper ${e} border-paper`,
        "hover:bg-paper/90 hover:border-paper/90",
        r
      ];
    case "white":
      return [
        `text-black bg-white ${e} border-white`,
        "hover:bg-white",
        r
      ];
    default:
      return [`bg ${e} border-background`, "hover:bg-hover", r];
  }
}
function wt(t) {
  return t && ((e) => {
    e.currentTarget.contains(e.target) && t(e);
  });
}
const Er = st((t, e) => {
  const {
    children: r,
    color: n = null,
    variant: i,
    radius: l,
    shadow: g,
    whitespace: a,
    justify: s = "justify-center",
    className: c,
    href: f,
    form: o,
    border: h,
    elementType: u,
    to: d,
    relative: m,
    replace: p,
    end: v,
    display: b,
    type: y = "button",
    onClick: w,
    onPointerDown: x,
    onPointerUp: _,
    onKeyDown: S,
    ...k
  } = t, F = u || (f ? "a" : "button"), L = F === "a";
  return /* @__PURE__ */ C(
    F,
    {
      ref: e,
      form: L ? void 0 : o,
      href: f,
      to: d,
      relative: m,
      type: L ? void 0 : y,
      replace: p,
      end: v,
      onPointerDown: wt(x),
      onPointerUp: wt(_),
      onClick: wt(w),
      onKeyDown: wt(S),
      className: ce(
        "focus-visible:ring",
        GT({ variant: i, color: n, border: h, whitespace: a, display: b }),
        l,
        s,
        c
      ),
      ...k,
      children: r
    }
  );
}), pt = he.forwardRef(
  ({
    children: t,
    startIcon: e,
    endIcon: r,
    size: n = "sm",
    sizeClassName: i,
    className: l,
    equalWidth: g = !1,
    radius: a = "rounded-button",
    variant: s = "text",
    disabled: c,
    elementType: f,
    to: o,
    replace: h,
    href: u,
    download: d,
    ...m
  }, p) => {
    const v = ce(
      "font-semibold",
      i || zu(n, { equalWidth: g, variant: s }),
      l
    );
    return /* @__PURE__ */ oe(
      Er,
      {
        className: v,
        ref: p,
        radius: a,
        variant: s,
        disabled: c,
        to: c ? void 0 : o,
        href: c ? void 0 : u,
        download: c ? void 0 : d,
        elementType: c ? void 0 : f,
        replace: c ? void 0 : h,
        ...m,
        children: [
          e && /* @__PURE__ */ C(Qf, { position: "start", icon: e, size: n }),
          t,
          r && /* @__PURE__ */ C(Qf, { position: "end", icon: r, size: n })
        ]
      }
    );
  }
);
function Qf({ icon: t, position: e, size: r }) {
  const n = ce(
    "m-auto",
    {
      "-ml-4 mr-8": e === "start",
      "-mr-4 ml-8": e === "end"
    },
    t.props.className
  );
  return he.cloneElement(t, { className: n, size: r });
}
var X0 = { exports: {} };
(function(t) {
  (function() {
    var e = Object.assign;
    typeof e != "function" && (e = function() {
      var i = arguments, l = arguments[0];
      if (l == null)
        throw new TypeError("Cannot convert undefined or null to object");
      l = Object(l);
      for (var g = 1; g < i.length; g++)
        if (i[g] && typeof i[g] == "object")
          for (var a in i[g])
            l[a] = i[g][a];
      return l;
    });
    function r(i) {
      var l = i + "", g = l.indexOf("...");
      return g >= 0 && (g < l.indexOf(")") || l.indexOf("arguments") >= 0);
    }
    function n(i, l) {
      l || (l = {});
      var g = l.vargs || r(i), a = /* @__PURE__ */ Object.create(null), s = [], c = [], f, o = /* @__PURE__ */ new WeakMap(), h = function(y, w, x) {
        return setTimeout(function() {
          if (x) {
            w.splice(y, 1), x.splice(y, 1);
            return;
          }
          w instanceof WeakMap ? w.delete(y) : delete w[y];
        }, l.maxAge);
      }, u = l.maxAge > 0 && l.maxAge < 1 / 0 ? h : 0, d = l.equals ? l.equals : function(y, w) {
        return y === w;
      }, m = l.maxArgs, p = l.serializer, v, b;
      return i.length === 1 && !l.equals && !g ? (v = (function(y) {
        var w = typeof y;
        if (!p && (w === "object" && y || w === "function")) {
          var x;
          return o.get(y) || (!u || u(y, o), o.set(y, x = i.call(this, y)), x);
        }
        var _ = w === "number" || w === "boolean" || y == null ? y : w === "string" ? JSON.stringify(y) : p(y);
        return a[_] || (!u || u(_, a), a[_] = i.call(this, y));
      }).bind(this), b = 1) : v = (function() {
        var y = arguments.length;
        if (!y && f != null)
          return c[f];
        var w = m || y, x;
        for (x = s.length - 1; x >= 0; x--)
          if (!(!m && s[x].length !== w)) {
            for (var _ = w - 1; _ >= 0 && d(s[x][_], arguments[_]); _--)
              if (_ === 0)
                return c[x];
          }
        return x = s.length - (x + 1), !y && f == null && (f = x), !u || u(x, c, s), c[x] = i.apply(this, s[x] = arguments);
      }).bind(this), v.clear = function() {
        o = /* @__PURE__ */ new WeakMap(), a = /* @__PURE__ */ Object.create(null), s = [], c = [], f = void 0;
      }, v.keys = function() {
        return b ? null : s.slice();
      }, v.values = function() {
        return b ? null : c.slice();
      }, v.keyValues = function() {
        return b ? { primitives: e({}, a), objects: o } : null;
      }, v;
    }
    t.exports = n, typeof window < "u" && (window.nanomemoize = n);
  }).call(Wn);
})(X0);
var QT = X0.exports;
const Fs = /* @__PURE__ */ Es(QT);
function eE({ children: t, label: e, index: r }) {
  const n = qt();
  return /* @__PURE__ */ oe(
    "div",
    {
      role: "group",
      className: ce(r !== 0 && "border-t my-4"),
      "aria-labelledby": e ? `be-select-${n}` : void 0,
      children: [
        e && /* @__PURE__ */ C(
          "div",
          {
            className: "block uppercase text-muted text-xs px-16 py-10",
            role: "presentation",
            id: `be-select-${n}`,
            "aria-hidden": "true",
            children: e
          }
        ),
        t
      ]
    }
  );
}
const tE = Fs(
  ({ maxItems: t, children: e, items: r, inputValue: n }) => {
    let i = nE({ children: e, items: r }), l = rE({ collection: i, inputValue: n });
    return t && (i = new Map([...i.entries()].slice(0, t)), l = new Map(
      [...l.entries()].slice(0, t)
    )), { collection: i, filteredCollection: l };
  }
), rE = Fs(
  ({ collection: t, inputValue: e }) => {
    let r = /* @__PURE__ */ new Map();
    const n = e ? `${e}`.toLowerCase().trim() : "";
    if (!n)
      r = t;
    else {
      let i = 0;
      t.forEach((l, g) => {
        (l.item ? JSON.stringify(l.item) : l.textLabel).toLowerCase().trim().includes(n) && r.set(g, { ...l, index: i++ });
      });
    }
    return r;
  }
), nE = Fs(
  ({ children: t, items: e }) => {
    let r;
    e && typeof t == "function" ? r = e.map((g) => t(g)) : r = t;
    const n = /* @__PURE__ */ new Map();
    let i = 0;
    const l = (g, a, s, c) => {
      const f = i++, o = a ? (
        // get item from nested array
        e == null ? void 0 : e[s].items[c]
      ) : (
        // get item from flat array
        e == null ? void 0 : e[f]
      );
      n.set(g.props.value, {
        index: f,
        element: g,
        textLabel: iE(g),
        item: o,
        section: a,
        isDisabled: g.props.isDisabled,
        value: g.props.value
      });
    };
    return Wr.forEach(r, (g, a) => {
      xr(g) && (g.type === eE ? Wr.forEach(
        g.props.children,
        (s, c) => {
          l(s, g, a, c);
        }
      ) : l(g));
    }), n;
  }
);
function iE(t) {
  var r;
  const e = t.props.children;
  return t.props.textLabel ? t.props.textLabel : (r = e == null ? void 0 : e.props) != null && r.message ? e.props.message : `${e}` || "";
}
const ir = Math.min, Tt = Math.max, Bo = Math.round, no = Math.floor, qr = (t) => ({
  x: t,
  y: t
}), sE = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, oE = {
  start: "end",
  end: "start"
};
function yc(t, e, r) {
  return Tt(t, ir(e, r));
}
function ki(t, e) {
  return typeof t == "function" ? t(e) : t;
}
function Kr(t) {
  return t.split("-")[0];
}
function Oi(t) {
  return t.split("-")[1];
}
function Y0(t) {
  return t === "x" ? "y" : "x";
}
function Nu(t) {
  return t === "y" ? "height" : "width";
}
function kn(t) {
  return ["top", "bottom"].includes(Kr(t)) ? "y" : "x";
}
function ju(t) {
  return Y0(kn(t));
}
function aE(t, e, r) {
  r === void 0 && (r = !1);
  const n = Oi(t), i = ju(t), l = Nu(i);
  let g = i === "x" ? n === (r ? "end" : "start") ? "right" : "left" : n === "start" ? "bottom" : "top";
  return e.reference[l] > e.floating[l] && (g = zo(g)), [g, zo(g)];
}
function lE(t) {
  const e = zo(t);
  return [wc(t), e, wc(e)];
}
function wc(t) {
  return t.replace(/start|end/g, (e) => oE[e]);
}
function cE(t, e, r) {
  const n = ["left", "right"], i = ["right", "left"], l = ["top", "bottom"], g = ["bottom", "top"];
  switch (t) {
    case "top":
    case "bottom":
      return r ? e ? i : n : e ? n : i;
    case "left":
    case "right":
      return e ? l : g;
    default:
      return [];
  }
}
function uE(t, e, r, n) {
  const i = Oi(t);
  let l = cE(Kr(t), r === "start", n);
  return i && (l = l.map((g) => g + "-" + i), e && (l = l.concat(l.map(wc)))), l;
}
function zo(t) {
  return t.replace(/left|right|bottom|top/g, (e) => sE[e]);
}
function hE(t) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...t
  };
}
function G0(t) {
  return typeof t != "number" ? hE(t) : {
    top: t,
    right: t,
    bottom: t,
    left: t
  };
}
function No(t) {
  const {
    x: e,
    y: r,
    width: n,
    height: i
  } = t;
  return {
    width: n,
    height: i,
    top: r,
    left: e,
    right: e + n,
    bottom: r + i,
    x: e,
    y: r
  };
}
function ed(t, e, r) {
  let {
    reference: n,
    floating: i
  } = t;
  const l = kn(e), g = ju(e), a = Nu(g), s = Kr(e), c = l === "y", f = n.x + n.width / 2 - i.width / 2, o = n.y + n.height / 2 - i.height / 2, h = n[a] / 2 - i[a] / 2;
  let u;
  switch (s) {
    case "top":
      u = {
        x: f,
        y: n.y - i.height
      };
      break;
    case "bottom":
      u = {
        x: f,
        y: n.y + n.height
      };
      break;
    case "right":
      u = {
        x: n.x + n.width,
        y: o
      };
      break;
    case "left":
      u = {
        x: n.x - i.width,
        y: o
      };
      break;
    default:
      u = {
        x: n.x,
        y: n.y
      };
  }
  switch (Oi(e)) {
    case "start":
      u[g] -= h * (r && c ? -1 : 1);
      break;
    case "end":
      u[g] += h * (r && c ? -1 : 1);
      break;
  }
  return u;
}
const fE = async (t, e, r) => {
  const {
    placement: n = "bottom",
    strategy: i = "absolute",
    middleware: l = [],
    platform: g
  } = r, a = l.filter(Boolean), s = await (g.isRTL == null ? void 0 : g.isRTL(e));
  let c = await g.getElementRects({
    reference: t,
    floating: e,
    strategy: i
  }), {
    x: f,
    y: o
  } = ed(c, n, s), h = n, u = {}, d = 0;
  for (let m = 0; m < a.length; m++) {
    const {
      name: p,
      fn: v
    } = a[m], {
      x: b,
      y,
      data: w,
      reset: x
    } = await v({
      x: f,
      y: o,
      initialPlacement: n,
      placement: h,
      strategy: i,
      middlewareData: u,
      rects: c,
      platform: g,
      elements: {
        reference: t,
        floating: e
      }
    });
    f = b ?? f, o = y ?? o, u = {
      ...u,
      [p]: {
        ...u[p],
        ...w
      }
    }, x && d <= 50 && (d++, typeof x == "object" && (x.placement && (h = x.placement), x.rects && (c = x.rects === !0 ? await g.getElementRects({
      reference: t,
      floating: e,
      strategy: i
    }) : x.rects), {
      x: f,
      y: o
    } = ed(c, h, s)), m = -1);
  }
  return {
    x: f,
    y: o,
    placement: h,
    strategy: i,
    middlewareData: u
  };
};
async function $u(t, e) {
  var r;
  e === void 0 && (e = {});
  const {
    x: n,
    y: i,
    platform: l,
    rects: g,
    elements: a,
    strategy: s
  } = t, {
    boundary: c = "clippingAncestors",
    rootBoundary: f = "viewport",
    elementContext: o = "floating",
    altBoundary: h = !1,
    padding: u = 0
  } = ki(e, t), d = G0(u), p = a[h ? o === "floating" ? "reference" : "floating" : o], v = No(await l.getClippingRect({
    element: (r = await (l.isElement == null ? void 0 : l.isElement(p))) == null || r ? p : p.contextElement || await (l.getDocumentElement == null ? void 0 : l.getDocumentElement(a.floating)),
    boundary: c,
    rootBoundary: f,
    strategy: s
  })), b = o === "floating" ? {
    x: n,
    y: i,
    width: g.floating.width,
    height: g.floating.height
  } : g.reference, y = await (l.getOffsetParent == null ? void 0 : l.getOffsetParent(a.floating)), w = await (l.isElement == null ? void 0 : l.isElement(y)) ? await (l.getScale == null ? void 0 : l.getScale(y)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, x = No(l.convertOffsetParentRelativeRectToViewportRelativeRect ? await l.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements: a,
    rect: b,
    offsetParent: y,
    strategy: s
  }) : b);
  return {
    top: (v.top - x.top + d.top) / w.y,
    bottom: (x.bottom - v.bottom + d.bottom) / w.y,
    left: (v.left - x.left + d.left) / w.x,
    right: (x.right - v.right + d.right) / w.x
  };
}
const dE = (t) => ({
  name: "arrow",
  options: t,
  async fn(e) {
    const {
      x: r,
      y: n,
      placement: i,
      rects: l,
      platform: g,
      elements: a,
      middlewareData: s
    } = e, {
      element: c,
      padding: f = 0
    } = ki(t, e) || {};
    if (c == null)
      return {};
    const o = G0(f), h = {
      x: r,
      y: n
    }, u = ju(i), d = Nu(u), m = await g.getDimensions(c), p = u === "y", v = p ? "top" : "left", b = p ? "bottom" : "right", y = p ? "clientHeight" : "clientWidth", w = l.reference[d] + l.reference[u] - h[u] - l.floating[d], x = h[u] - l.reference[u], _ = await (g.getOffsetParent == null ? void 0 : g.getOffsetParent(c));
    let S = _ ? _[y] : 0;
    (!S || !await (g.isElement == null ? void 0 : g.isElement(_))) && (S = a.floating[y] || l.floating[d]);
    const k = w / 2 - x / 2, F = S / 2 - m[d] / 2 - 1, L = ir(o[v], F), j = ir(o[b], F), G = L, te = S - m[d] - j, U = S / 2 - m[d] / 2 + k, K = yc(G, U, te), re = !s.arrow && Oi(i) != null && U !== K && l.reference[d] / 2 - (U < G ? L : j) - m[d] / 2 < 0, ne = re ? U < G ? U - G : U - te : 0;
    return {
      [u]: h[u] + ne,
      data: {
        [u]: K,
        centerOffset: U - K - ne,
        ...re && {
          alignmentOffset: ne
        }
      },
      reset: re
    };
  }
}), pE = function(t) {
  return t === void 0 && (t = {}), {
    name: "flip",
    options: t,
    async fn(e) {
      var r, n;
      const {
        placement: i,
        middlewareData: l,
        rects: g,
        initialPlacement: a,
        platform: s,
        elements: c
      } = e, {
        mainAxis: f = !0,
        crossAxis: o = !0,
        fallbackPlacements: h,
        fallbackStrategy: u = "bestFit",
        fallbackAxisSideDirection: d = "none",
        flipAlignment: m = !0,
        ...p
      } = ki(t, e);
      if ((r = l.arrow) != null && r.alignmentOffset)
        return {};
      const v = Kr(i), b = kn(a), y = Kr(a) === a, w = await (s.isRTL == null ? void 0 : s.isRTL(c.floating)), x = h || (y || !m ? [zo(a)] : lE(a)), _ = d !== "none";
      !h && _ && x.push(...uE(a, m, d, w));
      const S = [a, ...x], k = await $u(e, p), F = [];
      let L = ((n = l.flip) == null ? void 0 : n.overflows) || [];
      if (f && F.push(k[v]), o) {
        const U = aE(i, g, w);
        F.push(k[U[0]], k[U[1]]);
      }
      if (L = [...L, {
        placement: i,
        overflows: F
      }], !F.every((U) => U <= 0)) {
        var j, G;
        const U = (((j = l.flip) == null ? void 0 : j.index) || 0) + 1, K = S[U];
        if (K)
          return {
            data: {
              index: U,
              overflows: L
            },
            reset: {
              placement: K
            }
          };
        let re = (G = L.filter((ne) => ne.overflows[0] <= 0).sort((ne, se) => ne.overflows[1] - se.overflows[1])[0]) == null ? void 0 : G.placement;
        if (!re)
          switch (u) {
            case "bestFit": {
              var te;
              const ne = (te = L.filter((se) => {
                if (_) {
                  const T = kn(se.placement);
                  return T === b || // Create a bias to the `y` side axis due to horizontal
                  // reading directions favoring greater width.
                  T === "y";
                }
                return !0;
              }).map((se) => [se.placement, se.overflows.filter((T) => T > 0).reduce((T, P) => T + P, 0)]).sort((se, T) => se[1] - T[1])[0]) == null ? void 0 : te[0];
              ne && (re = ne);
              break;
            }
            case "initialPlacement":
              re = a;
              break;
          }
        if (i !== re)
          return {
            reset: {
              placement: re
            }
          };
      }
      return {};
    }
  };
};
async function gE(t, e) {
  const {
    placement: r,
    platform: n,
    elements: i
  } = t, l = await (n.isRTL == null ? void 0 : n.isRTL(i.floating)), g = Kr(r), a = Oi(r), s = kn(r) === "y", c = ["left", "top"].includes(g) ? -1 : 1, f = l && s ? -1 : 1, o = ki(e, t);
  let {
    mainAxis: h,
    crossAxis: u,
    alignmentAxis: d
  } = typeof o == "number" ? {
    mainAxis: o,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...o
  };
  return a && typeof d == "number" && (u = a === "end" ? d * -1 : d), s ? {
    x: u * f,
    y: h * c
  } : {
    x: h * c,
    y: u * f
  };
}
const mE = function(t) {
  return t === void 0 && (t = 0), {
    name: "offset",
    options: t,
    async fn(e) {
      var r, n;
      const {
        x: i,
        y: l,
        placement: g,
        middlewareData: a
      } = e, s = await gE(e, t);
      return g === ((r = a.offset) == null ? void 0 : r.placement) && (n = a.arrow) != null && n.alignmentOffset ? {} : {
        x: i + s.x,
        y: l + s.y,
        data: {
          ...s,
          placement: g
        }
      };
    }
  };
}, vE = function(t) {
  return t === void 0 && (t = {}), {
    name: "shift",
    options: t,
    async fn(e) {
      const {
        x: r,
        y: n,
        placement: i
      } = e, {
        mainAxis: l = !0,
        crossAxis: g = !1,
        limiter: a = {
          fn: (p) => {
            let {
              x: v,
              y: b
            } = p;
            return {
              x: v,
              y: b
            };
          }
        },
        ...s
      } = ki(t, e), c = {
        x: r,
        y: n
      }, f = await $u(e, s), o = kn(Kr(i)), h = Y0(o);
      let u = c[h], d = c[o];
      if (l) {
        const p = h === "y" ? "top" : "left", v = h === "y" ? "bottom" : "right", b = u + f[p], y = u - f[v];
        u = yc(b, u, y);
      }
      if (g) {
        const p = o === "y" ? "top" : "left", v = o === "y" ? "bottom" : "right", b = d + f[p], y = d - f[v];
        d = yc(b, d, y);
      }
      const m = a.fn({
        ...e,
        [h]: u,
        [o]: d
      });
      return {
        ...m,
        data: {
          x: m.x - r,
          y: m.y - n
        }
      };
    }
  };
}, bE = function(t) {
  return t === void 0 && (t = {}), {
    name: "size",
    options: t,
    async fn(e) {
      const {
        placement: r,
        rects: n,
        platform: i,
        elements: l
      } = e, {
        apply: g = () => {
        },
        ...a
      } = ki(t, e), s = await $u(e, a), c = Kr(r), f = Oi(r), o = kn(r) === "y", {
        width: h,
        height: u
      } = n.floating;
      let d, m;
      c === "top" || c === "bottom" ? (d = c, m = f === (await (i.isRTL == null ? void 0 : i.isRTL(l.floating)) ? "start" : "end") ? "left" : "right") : (m = c, d = f === "end" ? "top" : "bottom");
      const p = u - s.top - s.bottom, v = h - s.left - s.right, b = ir(u - s[d], p), y = ir(h - s[m], v), w = !e.middlewareData.shift;
      let x = b, _ = y;
      if (o ? _ = f || w ? ir(y, v) : v : x = f || w ? ir(b, p) : p, w && !f) {
        const k = Tt(s.left, 0), F = Tt(s.right, 0), L = Tt(s.top, 0), j = Tt(s.bottom, 0);
        o ? _ = h - 2 * (k !== 0 || F !== 0 ? k + F : Tt(s.left, s.right)) : x = u - 2 * (L !== 0 || j !== 0 ? L + j : Tt(s.top, s.bottom));
      }
      await g({
        ...e,
        availableWidth: _,
        availableHeight: x
      });
      const S = await i.getDimensions(l.floating);
      return h !== S.width || u !== S.height ? {
        reset: {
          rects: !0
        }
      } : {};
    }
  };
};
function Ai(t) {
  return q0(t) ? (t.nodeName || "").toLowerCase() : "#document";
}
function Pt(t) {
  var e;
  return (t == null || (e = t.ownerDocument) == null ? void 0 : e.defaultView) || window;
}
function kr(t) {
  var e;
  return (e = (q0(t) ? t.ownerDocument : t.document) || window.document) == null ? void 0 : e.documentElement;
}
function q0(t) {
  return t instanceof Node || t instanceof Pt(t).Node;
}
function or(t) {
  return t instanceof Element || t instanceof Pt(t).Element;
}
function ar(t) {
  return t instanceof HTMLElement || t instanceof Pt(t).HTMLElement;
}
function td(t) {
  return typeof ShadowRoot > "u" ? !1 : t instanceof ShadowRoot || t instanceof Pt(t).ShadowRoot;
}
function Rs(t) {
  const {
    overflow: e,
    overflowX: r,
    overflowY: n,
    display: i
  } = Gt(t);
  return /auto|scroll|overlay|hidden|clip/.test(e + n + r) && !["inline", "contents"].includes(i);
}
function yE(t) {
  return ["table", "td", "th"].includes(Ai(t));
}
function ya(t) {
  return [":popover-open", ":modal"].some((e) => {
    try {
      return t.matches(e);
    } catch {
      return !1;
    }
  });
}
function Vu(t) {
  const e = Hu(), r = Gt(t);
  return r.transform !== "none" || r.perspective !== "none" || (r.containerType ? r.containerType !== "normal" : !1) || !e && (r.backdropFilter ? r.backdropFilter !== "none" : !1) || !e && (r.filter ? r.filter !== "none" : !1) || ["transform", "perspective", "filter"].some((n) => (r.willChange || "").includes(n)) || ["paint", "layout", "strict", "content"].some((n) => (r.contain || "").includes(n));
}
function wE(t) {
  let e = Jr(t);
  for (; ar(e) && !xi(e); ) {
    if (ya(e))
      return null;
    if (Vu(e))
      return e;
    e = Jr(e);
  }
  return null;
}
function Hu() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
function xi(t) {
  return ["html", "body", "#document"].includes(Ai(t));
}
function Gt(t) {
  return Pt(t).getComputedStyle(t);
}
function wa(t) {
  return or(t) ? {
    scrollLeft: t.scrollLeft,
    scrollTop: t.scrollTop
  } : {
    scrollLeft: t.scrollX,
    scrollTop: t.scrollY
  };
}
function Jr(t) {
  if (Ai(t) === "html")
    return t;
  const e = (
    // Step into the shadow DOM of the parent of a slotted node.
    t.assignedSlot || // DOM Element detected.
    t.parentNode || // ShadowRoot detected.
    td(t) && t.host || // Fallback.
    kr(t)
  );
  return td(e) ? e.host : e;
}
function K0(t) {
  const e = Jr(t);
  return xi(e) ? t.ownerDocument ? t.ownerDocument.body : t.body : ar(e) && Rs(e) ? e : K0(e);
}
function hs(t, e, r) {
  var n;
  e === void 0 && (e = []), r === void 0 && (r = !0);
  const i = K0(t), l = i === ((n = t.ownerDocument) == null ? void 0 : n.body), g = Pt(i);
  return l ? e.concat(g, g.visualViewport || [], Rs(i) ? i : [], g.frameElement && r ? hs(g.frameElement) : []) : e.concat(i, hs(i, [], r));
}
function J0(t) {
  const e = Gt(t);
  let r = parseFloat(e.width) || 0, n = parseFloat(e.height) || 0;
  const i = ar(t), l = i ? t.offsetWidth : r, g = i ? t.offsetHeight : n, a = Bo(r) !== l || Bo(n) !== g;
  return a && (r = l, n = g), {
    width: r,
    height: n,
    $: a
  };
}
function Uu(t) {
  return or(t) ? t : t.contextElement;
}
function Qn(t) {
  const e = Uu(t);
  if (!ar(e))
    return qr(1);
  const r = e.getBoundingClientRect(), {
    width: n,
    height: i,
    $: l
  } = J0(e);
  let g = (l ? Bo(r.width) : r.width) / n, a = (l ? Bo(r.height) : r.height) / i;
  return (!g || !Number.isFinite(g)) && (g = 1), (!a || !Number.isFinite(a)) && (a = 1), {
    x: g,
    y: a
  };
}
const xE = /* @__PURE__ */ qr(0);
function Z0(t) {
  const e = Pt(t);
  return !Hu() || !e.visualViewport ? xE : {
    x: e.visualViewport.offsetLeft,
    y: e.visualViewport.offsetTop
  };
}
function CE(t, e, r) {
  return e === void 0 && (e = !1), !r || e && r !== Pt(t) ? !1 : e;
}
function On(t, e, r, n) {
  e === void 0 && (e = !1), r === void 0 && (r = !1);
  const i = t.getBoundingClientRect(), l = Uu(t);
  let g = qr(1);
  e && (n ? or(n) && (g = Qn(n)) : g = Qn(t));
  const a = CE(l, r, n) ? Z0(l) : qr(0);
  let s = (i.left + a.x) / g.x, c = (i.top + a.y) / g.y, f = i.width / g.x, o = i.height / g.y;
  if (l) {
    const h = Pt(l), u = n && or(n) ? Pt(n) : n;
    let d = h, m = d.frameElement;
    for (; m && n && u !== d; ) {
      const p = Qn(m), v = m.getBoundingClientRect(), b = Gt(m), y = v.left + (m.clientLeft + parseFloat(b.paddingLeft)) * p.x, w = v.top + (m.clientTop + parseFloat(b.paddingTop)) * p.y;
      s *= p.x, c *= p.y, f *= p.x, o *= p.y, s += y, c += w, d = Pt(m), m = d.frameElement;
    }
  }
  return No({
    width: f,
    height: o,
    x: s,
    y: c
  });
}
function _E(t) {
  let {
    elements: e,
    rect: r,
    offsetParent: n,
    strategy: i
  } = t;
  const l = i === "fixed", g = kr(n), a = e ? ya(e.floating) : !1;
  if (n === g || a && l)
    return r;
  let s = {
    scrollLeft: 0,
    scrollTop: 0
  }, c = qr(1);
  const f = qr(0), o = ar(n);
  if ((o || !o && !l) && ((Ai(n) !== "body" || Rs(g)) && (s = wa(n)), ar(n))) {
    const h = On(n);
    c = Qn(n), f.x = h.x + n.clientLeft, f.y = h.y + n.clientTop;
  }
  return {
    width: r.width * c.x,
    height: r.height * c.y,
    x: r.x * c.x - s.scrollLeft * c.x + f.x,
    y: r.y * c.y - s.scrollTop * c.y + f.y
  };
}
function SE(t) {
  return Array.from(t.getClientRects());
}
function Q0(t) {
  return On(kr(t)).left + wa(t).scrollLeft;
}
function TE(t) {
  const e = kr(t), r = wa(t), n = t.ownerDocument.body, i = Tt(e.scrollWidth, e.clientWidth, n.scrollWidth, n.clientWidth), l = Tt(e.scrollHeight, e.clientHeight, n.scrollHeight, n.clientHeight);
  let g = -r.scrollLeft + Q0(t);
  const a = -r.scrollTop;
  return Gt(n).direction === "rtl" && (g += Tt(e.clientWidth, n.clientWidth) - i), {
    width: i,
    height: l,
    x: g,
    y: a
  };
}
function EE(t, e) {
  const r = Pt(t), n = kr(t), i = r.visualViewport;
  let l = n.clientWidth, g = n.clientHeight, a = 0, s = 0;
  if (i) {
    l = i.width, g = i.height;
    const c = Hu();
    (!c || c && e === "fixed") && (a = i.offsetLeft, s = i.offsetTop);
  }
  return {
    width: l,
    height: g,
    x: a,
    y: s
  };
}
function kE(t, e) {
  const r = On(t, !0, e === "fixed"), n = r.top + t.clientTop, i = r.left + t.clientLeft, l = ar(t) ? Qn(t) : qr(1), g = t.clientWidth * l.x, a = t.clientHeight * l.y, s = i * l.x, c = n * l.y;
  return {
    width: g,
    height: a,
    x: s,
    y: c
  };
}
function rd(t, e, r) {
  let n;
  if (e === "viewport")
    n = EE(t, r);
  else if (e === "document")
    n = TE(kr(t));
  else if (or(e))
    n = kE(e, r);
  else {
    const i = Z0(t);
    n = {
      ...e,
      x: e.x - i.x,
      y: e.y - i.y
    };
  }
  return No(n);
}
function ev(t, e) {
  const r = Jr(t);
  return r === e || !or(r) || xi(r) ? !1 : Gt(r).position === "fixed" || ev(r, e);
}
function OE(t, e) {
  const r = e.get(t);
  if (r)
    return r;
  let n = hs(t, [], !1).filter((a) => or(a) && Ai(a) !== "body"), i = null;
  const l = Gt(t).position === "fixed";
  let g = l ? Jr(t) : t;
  for (; or(g) && !xi(g); ) {
    const a = Gt(g), s = Vu(g);
    !s && a.position === "fixed" && (i = null), (l ? !s && !i : !s && a.position === "static" && !!i && ["absolute", "fixed"].includes(i.position) || Rs(g) && !s && ev(t, g)) ? n = n.filter((f) => f !== g) : i = a, g = Jr(g);
  }
  return e.set(t, n), n;
}
function AE(t) {
  let {
    element: e,
    boundary: r,
    rootBoundary: n,
    strategy: i
  } = t;
  const g = [...r === "clippingAncestors" ? ya(e) ? [] : OE(e, this._c) : [].concat(r), n], a = g[0], s = g.reduce((c, f) => {
    const o = rd(e, f, i);
    return c.top = Tt(o.top, c.top), c.right = ir(o.right, c.right), c.bottom = ir(o.bottom, c.bottom), c.left = Tt(o.left, c.left), c;
  }, rd(e, a, i));
  return {
    width: s.right - s.left,
    height: s.bottom - s.top,
    x: s.left,
    y: s.top
  };
}
function DE(t) {
  const {
    width: e,
    height: r
  } = J0(t);
  return {
    width: e,
    height: r
  };
}
function PE(t, e, r) {
  const n = ar(e), i = kr(e), l = r === "fixed", g = On(t, !0, l, e);
  let a = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const s = qr(0);
  if (n || !n && !l)
    if ((Ai(e) !== "body" || Rs(i)) && (a = wa(e)), n) {
      const o = On(e, !0, l, e);
      s.x = o.x + e.clientLeft, s.y = o.y + e.clientTop;
    } else
      i && (s.x = Q0(i));
  const c = g.left + a.scrollLeft - s.x, f = g.top + a.scrollTop - s.y;
  return {
    x: c,
    y: f,
    width: g.width,
    height: g.height
  };
}
function dl(t) {
  return Gt(t).position === "static";
}
function nd(t, e) {
  return !ar(t) || Gt(t).position === "fixed" ? null : e ? e(t) : t.offsetParent;
}
function tv(t, e) {
  const r = Pt(t);
  if (ya(t))
    return r;
  if (!ar(t)) {
    let i = Jr(t);
    for (; i && !xi(i); ) {
      if (or(i) && !dl(i))
        return i;
      i = Jr(i);
    }
    return r;
  }
  let n = nd(t, e);
  for (; n && yE(n) && dl(n); )
    n = nd(n, e);
  return n && xi(n) && dl(n) && !Vu(n) ? r : n || wE(t) || r;
}
const ME = async function(t) {
  const e = this.getOffsetParent || tv, r = this.getDimensions, n = await r(t.floating);
  return {
    reference: PE(t.reference, await e(t.floating), t.strategy),
    floating: {
      x: 0,
      y: 0,
      width: n.width,
      height: n.height
    }
  };
};
function FE(t) {
  return Gt(t).direction === "rtl";
}
const RE = {
  convertOffsetParentRelativeRectToViewportRelativeRect: _E,
  getDocumentElement: kr,
  getClippingRect: AE,
  getOffsetParent: tv,
  getElementRects: ME,
  getClientRects: SE,
  getDimensions: DE,
  getScale: Qn,
  isElement: or,
  isRTL: FE
};
function IE(t, e) {
  let r = null, n;
  const i = kr(t);
  function l() {
    var a;
    clearTimeout(n), (a = r) == null || a.disconnect(), r = null;
  }
  function g(a, s) {
    a === void 0 && (a = !1), s === void 0 && (s = 1), l();
    const {
      left: c,
      top: f,
      width: o,
      height: h
    } = t.getBoundingClientRect();
    if (a || e(), !o || !h)
      return;
    const u = no(f), d = no(i.clientWidth - (c + o)), m = no(i.clientHeight - (f + h)), p = no(c), b = {
      rootMargin: -u + "px " + -d + "px " + -m + "px " + -p + "px",
      threshold: Tt(0, ir(1, s)) || 1
    };
    let y = !0;
    function w(x) {
      const _ = x[0].intersectionRatio;
      if (_ !== s) {
        if (!y)
          return g();
        _ ? g(!1, _) : n = setTimeout(() => {
          g(!1, 1e-7);
        }, 1e3);
      }
      y = !1;
    }
    try {
      r = new IntersectionObserver(w, {
        ...b,
        // Handle <iframe>s
        root: i.ownerDocument
      });
    } catch {
      r = new IntersectionObserver(w, b);
    }
    r.observe(t);
  }
  return g(!0), l;
}
function LE(t, e, r, n) {
  n === void 0 && (n = {});
  const {
    ancestorScroll: i = !0,
    ancestorResize: l = !0,
    elementResize: g = typeof ResizeObserver == "function",
    layoutShift: a = typeof IntersectionObserver == "function",
    animationFrame: s = !1
  } = n, c = Uu(t), f = i || l ? [...c ? hs(c) : [], ...hs(e)] : [];
  f.forEach((v) => {
    i && v.addEventListener("scroll", r, {
      passive: !0
    }), l && v.addEventListener("resize", r);
  });
  const o = c && a ? IE(c, r) : null;
  let h = -1, u = null;
  g && (u = new ResizeObserver((v) => {
    let [b] = v;
    b && b.target === c && u && (u.unobserve(e), cancelAnimationFrame(h), h = requestAnimationFrame(() => {
      var y;
      (y = u) == null || y.observe(e);
    })), r();
  }), c && !s && u.observe(c), u.observe(e));
  let d, m = s ? On(t) : null;
  s && p();
  function p() {
    const v = On(t);
    m && (v.x !== m.x || v.y !== m.y || v.width !== m.width || v.height !== m.height) && r(), m = v, d = requestAnimationFrame(p);
  }
  return r(), () => {
    var v;
    f.forEach((b) => {
      i && b.removeEventListener("scroll", r), l && b.removeEventListener("resize", r);
    }), o == null || o(), (v = u) == null || v.disconnect(), u = null, s && cancelAnimationFrame(d);
  };
}
const BE = mE, zE = vE, NE = pE, jE = bE, id = dE, $E = (t, e, r) => {
  const n = /* @__PURE__ */ new Map(), i = {
    platform: RE,
    ...r
  }, l = {
    ...i.platform,
    _c: n
  };
  return fE(t, e, {
    ...i,
    platform: l
  });
};
var uo = typeof document < "u" ? xs : ke;
function jo(t, e) {
  if (t === e)
    return !0;
  if (typeof t != typeof e)
    return !1;
  if (typeof t == "function" && t.toString() === e.toString())
    return !0;
  let r, n, i;
  if (t && e && typeof t == "object") {
    if (Array.isArray(t)) {
      if (r = t.length, r !== e.length)
        return !1;
      for (n = r; n-- !== 0; )
        if (!jo(t[n], e[n]))
          return !1;
      return !0;
    }
    if (i = Object.keys(t), r = i.length, r !== Object.keys(e).length)
      return !1;
    for (n = r; n-- !== 0; )
      if (!{}.hasOwnProperty.call(e, i[n]))
        return !1;
    for (n = r; n-- !== 0; ) {
      const l = i[n];
      if (!(l === "_owner" && t.$$typeof) && !jo(t[l], e[l]))
        return !1;
    }
    return !0;
  }
  return t !== t && e !== e;
}
function rv(t) {
  return typeof window > "u" ? 1 : (t.ownerDocument.defaultView || window).devicePixelRatio || 1;
}
function sd(t, e) {
  const r = rv(t);
  return Math.round(e * r) / r;
}
function od(t) {
  const e = ve.useRef(t);
  return uo(() => {
    e.current = t;
  }), e;
}
function VE(t) {
  t === void 0 && (t = {});
  const {
    placement: e = "bottom",
    strategy: r = "absolute",
    middleware: n = [],
    platform: i,
    elements: {
      reference: l,
      floating: g
    } = {},
    transform: a = !0,
    whileElementsMounted: s,
    open: c
  } = t, [f, o] = ve.useState({
    x: 0,
    y: 0,
    strategy: r,
    placement: e,
    middlewareData: {},
    isPositioned: !1
  }), [h, u] = ve.useState(n);
  jo(h, n) || u(n);
  const [d, m] = ve.useState(null), [p, v] = ve.useState(null), b = ve.useCallback((ne) => {
    ne !== _.current && (_.current = ne, m(ne));
  }, []), y = ve.useCallback((ne) => {
    ne !== S.current && (S.current = ne, v(ne));
  }, []), w = l || d, x = g || p, _ = ve.useRef(null), S = ve.useRef(null), k = ve.useRef(f), F = s != null, L = od(s), j = od(i), G = ve.useCallback(() => {
    if (!_.current || !S.current)
      return;
    const ne = {
      placement: e,
      strategy: r,
      middleware: h
    };
    j.current && (ne.platform = j.current), $E(_.current, S.current, ne).then((se) => {
      const T = {
        ...se,
        isPositioned: !0
      };
      te.current && !jo(k.current, T) && (k.current = T, My.flushSync(() => {
        o(T);
      }));
    });
  }, [h, e, r, j]);
  uo(() => {
    c === !1 && k.current.isPositioned && (k.current.isPositioned = !1, o((ne) => ({
      ...ne,
      isPositioned: !1
    })));
  }, [c]);
  const te = ve.useRef(!1);
  uo(() => (te.current = !0, () => {
    te.current = !1;
  }), []), uo(() => {
    if (w && (_.current = w), x && (S.current = x), w && x) {
      if (L.current)
        return L.current(w, x, G);
      G();
    }
  }, [w, x, G, L, F]);
  const U = ve.useMemo(() => ({
    reference: _,
    floating: S,
    setReference: b,
    setFloating: y
  }), [b, y]), K = ve.useMemo(() => ({
    reference: w,
    floating: x
  }), [w, x]), re = ve.useMemo(() => {
    const ne = {
      position: r,
      left: 0,
      top: 0
    };
    if (!K.floating)
      return ne;
    const se = sd(K.floating, f.x), T = sd(K.floating, f.y);
    return a ? {
      ...ne,
      transform: "translate(" + se + "px, " + T + "px)",
      ...rv(K.floating) >= 1.5 && {
        willChange: "transform"
      }
    } : {
      position: r,
      left: se,
      top: T
    };
  }, [r, a, K.floating, f.x, f.y]);
  return ve.useMemo(() => ({
    ...f,
    update: G,
    refs: U,
    elements: K,
    floatingStyles: re
  }), [f, G, U, K, re]);
}
const HE = (t) => {
  function e(r) {
    return {}.hasOwnProperty.call(r, "current");
  }
  return {
    name: "arrow",
    options: t,
    fn(r) {
      const {
        element: n,
        padding: i
      } = typeof t == "function" ? t(r) : t;
      return n && e(n) ? n.current != null ? id({
        element: n.current,
        padding: i
      }).fn(r) : {} : n ? id({
        element: n,
        padding: i
      }).fn(r) : {};
    }
  };
}, UE = (t, e) => ({
  ...BE(t),
  options: [t, e]
}), WE = (t, e) => ({
  ...zE(t),
  options: [t, e]
}), XE = (t, e) => ({
  ...NE(t),
  options: [t, e]
}), YE = (t, e) => ({
  ...jE(t),
  options: [t, e]
}), GE = (t, e) => ({
  ...HE(t),
  options: [t, e]
});
function qE(t) {
  return (e) => {
    t.forEach((r) => {
      typeof r == "function" ? r(e) : r != null && (r.current = e);
    });
  };
}
function Wu({
  floatingWidth: t,
  ref: e,
  disablePositioning: r = !1,
  placement: n = "bottom",
  offset: i = 2,
  showArrow: l = !1,
  maxHeight: g,
  shiftCrossAxis: a = !0,
  fallbackPlacements: s
}) {
  const c = ge(null), f = { placement: n, strategy: "fixed" };
  r || (f.whileElementsMounted = LE, f.middleware = [
    UE(i),
    WE({ padding: 16, crossAxis: a, mainAxis: !0 }),
    XE({
      padding: 16,
      fallbackPlacements: s
    }),
    YE({
      apply({ rects: v, availableHeight: b, availableWidth: y, elements: w }) {
        t === "matchTrigger" && g != null ? Object.assign(w.floating.style, {
          width: `${v.reference.width}px`,
          maxWidth: `${y}`,
          maxHeight: `${Math.min(b, g)}px`
        }) : g != null && Object.assign(w.floating.style, {
          maxHeight: `${Math.min(b, g)}px`
        });
      },
      padding: 16
    })
  ], l && f.middleware.push(GE({ element: c })));
  const o = VE(f), h = Ye(
    () => qE([e, o.refs.setReference]),
    [o.refs.setReference, e]
  ), { x: u, y: d } = o.middlewareData.arrow || {}, m = {
    top: "bottom",
    right: "left",
    bottom: "top",
    left: "right"
  }[o.placement.split("-")[0]], p = {
    left: u,
    top: d,
    right: "",
    bottom: "",
    [m]: "-4px"
  };
  return {
    ...o,
    reference: h,
    arrowRef: c,
    arrowStyle: p
  };
}
function nv(t, e) {
  const {
    children: r,
    items: n,
    role: i = "listbox",
    virtualFocus: l,
    focusLoopingMode: g = "stay",
    autoFocusFirstItem: a = !0,
    onItemSelected: s,
    clearInputOnItemSelection: c,
    blurReferenceOnItemSelection: f,
    floatingWidth: o = "matchTrigger",
    floatingMinWidth: h,
    floatingMaxHeight: u,
    offset: d,
    placement: m,
    showCheckmark: p,
    showEmptyMessage: v,
    maxItems: b,
    isAsync: y,
    allowCustomValue: w,
    clearSelectionOnInputClear: x
  } = t, _ = t.selectionMode || "none", k = `${qt()}-listbox`, [F, L] = Gr(
    t.inputValue,
    t.defaultInputValue || "",
    t.onInputValueChange
  ), [j, G] = Fe(
    "all"
  ), te = tE({
    children: r,
    items: n,
    // don't filter on client side if async, it will already be filtered on server
    inputValue: y ? void 0 : F,
    maxItems: b
  }), U = j === "all" ? te.collection : te.filteredCollection, K = ge([]), re = Ye(() => [...U.values()].map(
    (B) => B.isDisabled ? null : B.textLabel
  ), [U]), { selectedValues: ne, selectValues: se } = JE(t), [T, P] = Gr(
    t.isOpen,
    t.defaultIsOpen,
    t.onOpenChange
  ), [D, M] = Fe(null), $ = Wu({
    floatingWidth: o,
    ref: e,
    placement: m,
    offset: d,
    maxHeight: u ?? 420,
    // don't shift floating menu on the sides of combobox, otherwise input might get obscured
    shiftCrossAxis: !l
  }), { refs: A, strategy: E, x: R, y: N } = $, H = _ === "none" ? void 0 : U.get(ne[0]), V = _ === "none" || H == null ? void 0 : H.index, Z = (B) => {
    if (_ !== "none") {
      const X = [...U.values()][B];
      X && se(X.value);
    }
  }, ee = Me(
    (B, X) => {
      var ae, ye;
      const Q = [...U.values()], z = !Q.find((me) => !me.isDisabled), Y = U.size - 1;
      if (X == null || !U.size || X > Y || X < 0 || z) {
        M(null);
        return;
      }
      X = KE(
        Q,
        X,
        g,
        B
      ), M(X), X != null && (l ? (ae = K.current[X]) == null || ae.scrollIntoView({
        block: "nearest"
      }) : (ye = K.current[X]) == null || ye.focus());
    },
    [U, l, g]
  ), ue = Me(
    (B) => {
      L(B.target.value), G(B.target.value.trim() ? "filtered" : "all"), B.target.value ? P(!0) : x && se(""), a && D == null ? ee("increment", 0) : M(null);
    },
    [
      L,
      P,
      G,
      se,
      x,
      ee,
      a,
      D
    ]
  );
  return {
    // even handlers
    handleItemSelection: (B) => {
      const X = A.reference.current;
      _ !== "none" ? se(B) : X && "focus" in X && X.focus(), l && (L(c ? "" : `${B}`), f && X && "blur" in X && X.blur()), G("all"), P(!1), s == null || s(B), M(null);
    },
    onInputChange: ue,
    focusLoopingMode: g,
    // config
    floatingWidth: o,
    floatingMinWidth: h,
    floatingMaxHeight: u,
    showCheckmark: p,
    collection: U,
    collections: te,
    virtualFocus: l,
    focusItem: ee,
    showEmptyMessage: v && !!F,
    allowCustomValue: w,
    // floating ui
    refs: A,
    reference: $.reference,
    floating: A.setFloating,
    positionStyle: {
      position: E,
      top: N ?? "",
      left: R ?? ""
    },
    listContent: re,
    listItemsRef: K,
    listboxId: k,
    role: i,
    state: {
      // currently focused or active (if virtual focus) option
      activeIndex: D,
      setActiveIndex: M,
      selectedIndex: V,
      setSelectedIndex: Z,
      selectionMode: _,
      selectedValues: ne,
      selectValues: se,
      inputValue: F,
      setInputValue: L,
      isOpen: T,
      setIsOpen: P,
      setActiveCollection: G
    }
  };
}
function KE(t, e, r, n) {
  var l;
  const i = t.length - 1;
  for (; (l = t[e]) != null && l.isDisabled; )
    if (n === "increment") {
      if (e++, e >= i)
        if (r === "loop")
          e = 0;
        else
          return r === "stay" ? e - 1 : null;
    } else if (e--, e < 0)
      if (r === "loop")
        e = i;
      else
        return r === "stay" ? e + 1 : null;
  return e;
}
function JE(t) {
  const { selectionMode: e, allowEmptySelection: r } = t, n = e === "single" || e === "multiple", [i, l] = Gr(
    n ? t.selectedValue : void 0,
    n ? t.defaultSelectedValue : void 0,
    n ? t.onSelectionChange : void 0
  ), g = Ye(() => typeof i > "u" ? [] : Array.isArray(i) ? i : [i], [i]), a = Me(
    (s) => {
      const c = Array.isArray(s) ? s : [s];
      e === "single" ? l(c[0]) : c.forEach((f) => {
        const o = g.indexOf(f);
        o === -1 ? (g.push(f), l([...g])) : (g.length > 1 || r) && (g.splice(o, 1), l([...g]));
      });
    },
    [r, g, e, l]
  );
  return {
    selectedValues: g,
    selectValues: a
  };
}
const iv = Qr(null);
function Xu() {
  return Ve(iv);
}
const xc = we(
  /* @__PURE__ */ C("path", { d: "M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z" }),
  "CheckOutlined"
), ZE = he.forwardRef(
  (t, e) => {
    let {
      startIcon: r,
      capitalizeFirst: n,
      children: i,
      description: l,
      endIcon: g,
      endSection: a,
      isDisabled: s,
      isActive: c,
      isSelected: f,
      showCheckmark: o,
      elementType: h = "div",
      radius: u,
      padding: d,
      ...m
    } = t;
    !r && o && (r = /* @__PURE__ */ C(
      xc,
      {
        size: "sm",
        className: ce("text-primary", !f && "invisible")
      }
    ));
    const p = ce(
      "icon-sm rounded overflow-hidden flex-shrink-0",
      !s && "text-muted"
    ), v = ce(!s && "text-muted");
    return /* @__PURE__ */ oe(
      h,
      {
        ...m,
        "aria-disabled": s,
        className: QE(t),
        ref: e,
        children: [
          r && /* @__PURE__ */ C("div", { className: p, children: r }),
          /* @__PURE__ */ oe(
            "div",
            {
              className: ce(
                "min-w-auto mr-auto w-full overflow-hidden overflow-ellipsis",
                n && "first-letter:capitalize"
              ),
              children: [
                i,
                l && /* @__PURE__ */ C(
                  "div",
                  {
                    className: ce(
                      "mt-4 whitespace-normal text-xs",
                      s ? "text-disabled" : "text-muted"
                    ),
                    children: l
                  }
                )
              ]
            }
          ),
          (g || a) && /* @__PURE__ */ C("div", { className: g ? p : v, children: g || a })
        ]
      }
    );
  }
);
function QE({
  className: t,
  isSelected: e,
  isActive: r,
  isDisabled: n,
  showCheckmark: i,
  endIcon: l,
  endSection: g,
  radius: a,
  padding: s
}) {
  let c = "";
  n ? c = "text-disabled pointer-events-none" : e ? r ? c = "bg-primary/focus" : c = "bg-primary/selected hover:bg-primary/focus" : r ? c = "hover:bg-fg-base/15 bg-focus" : c = "hover:bg-hover";
  let f;
  return s ? f = s : i ? l || g ? f = "pl-8 pr-8 py-8" : f = "pl-8 pr-24 py-8" : f = "px-20 py-8", ce(
    "w-full select-none outline-none cursor-pointer",
    "text-sm truncate flex items-center gap-10",
    !n && "text-main",
    f,
    c,
    t,
    a
  );
}
function xa({
  children: t,
  value: e,
  startIcon: r,
  endIcon: n,
  endSection: i,
  description: l,
  capitalizeFirst: g,
  textLabel: a,
  isDisabled: s,
  onSelected: c,
  onClick: f,
  ...o
}) {
  var L;
  const {
    collection: h,
    showCheckmark: u,
    virtualFocus: d,
    listboxId: m,
    role: p,
    listItemsRef: v,
    handleItemSelection: b,
    state: { selectedValues: y, activeIndex: w, setActiveIndex: x }
  } = Xu(), _ = y.includes(e), S = (L = h.get(e)) == null ? void 0 : L.index, k = w === S;
  if (S == null)
    return null;
  const F = k && !s ? -1 : 0;
  return /* @__PURE__ */ C(
    ZE,
    {
      ...o,
      onFocus: () => {
        d || x(S);
      },
      onPointerEnter: (j) => {
        x(S), d || j.currentTarget.focus();
      },
      onPointerDown: (j) => {
        d && j.preventDefault();
      },
      onKeyDown: (j) => {
        (j.key === "Enter" || j.key === " ") && (j.preventDefault(), b(e), c == null || c());
      },
      onClick: (j) => {
        b(e), c == null || c(), f == null || f(j);
      },
      ref: (j) => v.current[S] = j,
      id: `${m}-${S}`,
      role: p === "menu" ? "menuitem" : "option",
      tabIndex: d ? void 0 : F,
      "aria-selected": k && _,
      showCheckmark: u,
      isDisabled: s,
      isActive: k,
      isSelected: _,
      startIcon: r,
      description: l,
      endIcon: n,
      endSection: i,
      capitalizeFirst: g,
      "data-value": e,
      children: t
    }
  );
}
var Ca = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Set(), this.subscribe = this.subscribe.bind(this);
  }
  subscribe(t) {
    return this.listeners.add(t), this.onSubscribe(), () => {
      this.listeners.delete(t), this.onUnsubscribe();
    };
  }
  hasListeners() {
    return this.listeners.size > 0;
  }
  onSubscribe() {
  }
  onUnsubscribe() {
  }
}, _a = typeof window > "u" || "Deno" in globalThis;
function Vt() {
}
function ek(t, e) {
  return typeof t == "function" ? t(e) : t;
}
function tk(t) {
  return typeof t == "number" && t >= 0 && t !== 1 / 0;
}
function rk(t, e) {
  return Math.max(t + (e || 0) - Date.now(), 0);
}
function ad(t, e) {
  return typeof t == "function" ? t(e) : t;
}
function nk(t, e) {
  return typeof t == "function" ? t(e) : t;
}
function ld(t, e) {
  const {
    type: r = "all",
    exact: n,
    fetchStatus: i,
    predicate: l,
    queryKey: g,
    stale: a
  } = t;
  if (g) {
    if (n) {
      if (e.queryHash !== Yu(g, e.options))
        return !1;
    } else if (!ds(e.queryKey, g))
      return !1;
  }
  if (r !== "all") {
    const s = e.isActive();
    if (r === "active" && !s || r === "inactive" && s)
      return !1;
  }
  return !(typeof a == "boolean" && e.isStale() !== a || i && i !== e.state.fetchStatus || l && !l(e));
}
function cd(t, e) {
  const { exact: r, status: n, predicate: i, mutationKey: l } = t;
  if (l) {
    if (!e.options.mutationKey)
      return !1;
    if (r) {
      if (fs(e.options.mutationKey) !== fs(l))
        return !1;
    } else if (!ds(e.options.mutationKey, l))
      return !1;
  }
  return !(n && e.state.status !== n || i && !i(e));
}
function Yu(t, e) {
  return ((e == null ? void 0 : e.queryKeyHashFn) || fs)(t);
}
function fs(t) {
  return JSON.stringify(
    t,
    (e, r) => Cc(r) ? Object.keys(r).sort().reduce((n, i) => (n[i] = r[i], n), {}) : r
  );
}
function ds(t, e) {
  return t === e ? !0 : typeof t != typeof e ? !1 : t && e && typeof t == "object" && typeof e == "object" ? !Object.keys(e).some((r) => !ds(t[r], e[r])) : !1;
}
function sv(t, e) {
  if (t === e)
    return t;
  const r = ud(t) && ud(e);
  if (r || Cc(t) && Cc(e)) {
    const n = r ? t : Object.keys(t), i = n.length, l = r ? e : Object.keys(e), g = l.length, a = r ? [] : {};
    let s = 0;
    for (let c = 0; c < g; c++) {
      const f = r ? c : l[c];
      (!r && n.includes(f) || r) && t[f] === void 0 && e[f] === void 0 ? (a[f] = void 0, s++) : (a[f] = sv(t[f], e[f]), a[f] === t[f] && t[f] !== void 0 && s++);
    }
    return i === g && s === i ? t : a;
  }
  return e;
}
function ud(t) {
  return Array.isArray(t) && t.length === Object.keys(t).length;
}
function Cc(t) {
  if (!hd(t))
    return !1;
  const e = t.constructor;
  if (e === void 0)
    return !0;
  const r = e.prototype;
  return !(!hd(r) || !r.hasOwnProperty("isPrototypeOf") || Object.getPrototypeOf(t) !== Object.prototype);
}
function hd(t) {
  return Object.prototype.toString.call(t) === "[object Object]";
}
function ik(t) {
  return new Promise((e) => {
    setTimeout(e, t);
  });
}
function sk(t, e, r) {
  return typeof r.structuralSharing == "function" ? r.structuralSharing(t, e) : r.structuralSharing !== !1 ? sv(t, e) : e;
}
function ok(t, e, r = 0) {
  const n = [...t, e];
  return r && n.length > r ? n.slice(1) : n;
}
function ak(t, e, r = 0) {
  const n = [e, ...t];
  return r && n.length > r ? n.slice(0, -1) : n;
}
var ov = Symbol(), av = (t, e) => !t.queryFn && (e != null && e.initialPromise) ? () => e.initialPromise : !t.queryFn || t.queryFn === ov ? () => Promise.reject(new Error(`Missing queryFn: '${t.queryHash}'`)) : t.queryFn, pn, Rr, ti, Pp, lk = (Pp = class extends Ca {
  constructor() {
    super();
    Re(this, pn, void 0);
    Re(this, Rr, void 0);
    Re(this, ti, void 0);
    Ae(this, ti, (e) => {
      if (!_a && window.addEventListener) {
        const r = () => e();
        return window.addEventListener("visibilitychange", r, !1), () => {
          window.removeEventListener("visibilitychange", r);
        };
      }
    });
  }
  onSubscribe() {
    ie(this, Rr) || this.setEventListener(ie(this, ti));
  }
  onUnsubscribe() {
    var e;
    this.hasListeners() || ((e = ie(this, Rr)) == null || e.call(this), Ae(this, Rr, void 0));
  }
  setEventListener(e) {
    var r;
    Ae(this, ti, e), (r = ie(this, Rr)) == null || r.call(this), Ae(this, Rr, e((n) => {
      typeof n == "boolean" ? this.setFocused(n) : this.onFocus();
    }));
  }
  setFocused(e) {
    ie(this, pn) !== e && (Ae(this, pn, e), this.onFocus());
  }
  onFocus() {
    const e = this.isFocused();
    this.listeners.forEach((r) => {
      r(e);
    });
  }
  isFocused() {
    var e;
    return typeof ie(this, pn) == "boolean" ? ie(this, pn) : ((e = globalThis.document) == null ? void 0 : e.visibilityState) !== "hidden";
  }
}, pn = new WeakMap(), Rr = new WeakMap(), ti = new WeakMap(), Pp), lv = new lk(), ri, Ir, ni, Mp, ck = (Mp = class extends Ca {
  constructor() {
    super();
    Re(this, ri, !0);
    Re(this, Ir, void 0);
    Re(this, ni, void 0);
    Ae(this, ni, (e) => {
      if (!_a && window.addEventListener) {
        const r = () => e(!0), n = () => e(!1);
        return window.addEventListener("online", r, !1), window.addEventListener("offline", n, !1), () => {
          window.removeEventListener("online", r), window.removeEventListener("offline", n);
        };
      }
    });
  }
  onSubscribe() {
    ie(this, Ir) || this.setEventListener(ie(this, ni));
  }
  onUnsubscribe() {
    var e;
    this.hasListeners() || ((e = ie(this, Ir)) == null || e.call(this), Ae(this, Ir, void 0));
  }
  setEventListener(e) {
    var r;
    Ae(this, ni, e), (r = ie(this, Ir)) == null || r.call(this), Ae(this, Ir, e(this.setOnline.bind(this)));
  }
  setOnline(e) {
    ie(this, ri) !== e && (Ae(this, ri, e), this.listeners.forEach((n) => {
      n(e);
    }));
  }
  isOnline() {
    return ie(this, ri);
  }
}, ri = new WeakMap(), Ir = new WeakMap(), ni = new WeakMap(), Mp), $o = new ck();
function uk(t) {
  return Math.min(1e3 * 2 ** t, 3e4);
}
function cv(t) {
  return (t ?? "online") === "online" ? $o.isOnline() : !0;
}
var uv = class {
  constructor(t) {
    this.revert = t == null ? void 0 : t.revert, this.silent = t == null ? void 0 : t.silent;
  }
};
function pl(t) {
  return t instanceof uv;
}
function hv(t) {
  let e = !1, r = 0, n = !1, i, l, g;
  const a = new Promise((v, b) => {
    l = v, g = b;
  }), s = (v) => {
    var b;
    n || (d(new uv(v)), (b = t.abort) == null || b.call(t));
  }, c = () => {
    e = !0;
  }, f = () => {
    e = !1;
  }, o = () => lv.isFocused() && (t.networkMode === "always" || $o.isOnline()) && t.canRun(), h = () => cv(t.networkMode) && t.canRun(), u = (v) => {
    var b;
    n || (n = !0, (b = t.onSuccess) == null || b.call(t, v), i == null || i(), l(v));
  }, d = (v) => {
    var b;
    n || (n = !0, (b = t.onError) == null || b.call(t, v), i == null || i(), g(v));
  }, m = () => new Promise((v) => {
    var b;
    i = (y) => {
      (n || o()) && v(y);
    }, (b = t.onPause) == null || b.call(t);
  }).then(() => {
    var v;
    i = void 0, n || (v = t.onContinue) == null || v.call(t);
  }), p = () => {
    if (n)
      return;
    let v;
    const b = r === 0 ? t.initialPromise : void 0;
    try {
      v = b ?? t.fn();
    } catch (y) {
      v = Promise.reject(y);
    }
    Promise.resolve(v).then(u).catch((y) => {
      var k;
      if (n)
        return;
      const w = t.retry ?? (_a ? 0 : 3), x = t.retryDelay ?? uk, _ = typeof x == "function" ? x(r, y) : x, S = w === !0 || typeof w == "number" && r < w || typeof w == "function" && w(r, y);
      if (e || !S) {
        d(y);
        return;
      }
      r++, (k = t.onFail) == null || k.call(t, r, y), ik(_).then(() => o() ? void 0 : m()).then(() => {
        e ? d(y) : p();
      });
    });
  };
  return {
    promise: a,
    cancel: s,
    continue: () => (i == null || i(), a),
    cancelRetry: c,
    continueRetry: f,
    canStart: h,
    start: () => (h() ? p() : m().then(p), a)
  };
}
function hk() {
  let t = [], e = 0, r = (h) => {
    h();
  }, n = (h) => {
    h();
  }, i = (h) => setTimeout(h, 0);
  const l = (h) => {
    i = h;
  }, g = (h) => {
    let u;
    e++;
    try {
      u = h();
    } finally {
      e--, e || c();
    }
    return u;
  }, a = (h) => {
    e ? t.push(h) : i(() => {
      r(h);
    });
  }, s = (h) => (...u) => {
    a(() => {
      h(...u);
    });
  }, c = () => {
    const h = t;
    t = [], h.length && i(() => {
      n(() => {
        h.forEach((u) => {
          r(u);
        });
      });
    });
  };
  return {
    batch: g,
    batchCalls: s,
    schedule: a,
    setNotifyFunction: (h) => {
      r = h;
    },
    setBatchNotifyFunction: (h) => {
      n = h;
    },
    setScheduler: l
  };
}
var yt = hk(), gn, Fp, fv = (Fp = class {
  constructor() {
    Re(this, gn, void 0);
  }
  destroy() {
    this.clearGcTimeout();
  }
  scheduleGc() {
    this.clearGcTimeout(), tk(this.gcTime) && Ae(this, gn, setTimeout(() => {
      this.optionalRemove();
    }, this.gcTime));
  }
  updateGcTime(t) {
    this.gcTime = Math.max(
      this.gcTime || 0,
      t ?? (_a ? 1 / 0 : 5 * 60 * 1e3)
    );
  }
  clearGcTimeout() {
    ie(this, gn) && (clearTimeout(ie(this, gn)), Ae(this, gn, void 0));
  }
}, gn = new WeakMap(), Fp), ii, si, It, lt, ys, mn, Ht, cr, Rp, fk = (Rp = class extends fv {
  constructor(e) {
    super();
    Re(this, Ht);
    Re(this, ii, void 0);
    Re(this, si, void 0);
    Re(this, It, void 0);
    Re(this, lt, void 0);
    Re(this, ys, void 0);
    Re(this, mn, void 0);
    Ae(this, mn, !1), Ae(this, ys, e.defaultOptions), this.setOptions(e.options), this.observers = [], Ae(this, It, e.cache), this.queryKey = e.queryKey, this.queryHash = e.queryHash, Ae(this, ii, e.state || pk(this.options)), this.state = ie(this, ii), this.scheduleGc();
  }
  get meta() {
    return this.options.meta;
  }
  get promise() {
    var e;
    return (e = ie(this, lt)) == null ? void 0 : e.promise;
  }
  setOptions(e) {
    this.options = { ...ie(this, ys), ...e }, this.updateGcTime(this.options.gcTime);
  }
  optionalRemove() {
    !this.observers.length && this.state.fetchStatus === "idle" && ie(this, It).remove(this);
  }
  setData(e, r) {
    const n = sk(this.state.data, e, this.options);
    return ot(this, Ht, cr).call(this, {
      data: n,
      type: "success",
      dataUpdatedAt: r == null ? void 0 : r.updatedAt,
      manual: r == null ? void 0 : r.manual
    }), n;
  }
  setState(e, r) {
    ot(this, Ht, cr).call(this, { type: "setState", state: e, setStateOptions: r });
  }
  cancel(e) {
    var n, i;
    const r = (n = ie(this, lt)) == null ? void 0 : n.promise;
    return (i = ie(this, lt)) == null || i.cancel(e), r ? r.then(Vt).catch(Vt) : Promise.resolve();
  }
  destroy() {
    super.destroy(), this.cancel({ silent: !0 });
  }
  reset() {
    this.destroy(), this.setState(ie(this, ii));
  }
  isActive() {
    return this.observers.some(
      (e) => nk(e.options.enabled, this) !== !1
    );
  }
  isDisabled() {
    return this.getObserversCount() > 0 && !this.isActive();
  }
  isStale() {
    return this.state.isInvalidated ? !0 : this.getObserversCount() > 0 ? this.observers.some(
      (e) => e.getCurrentResult().isStale
    ) : this.state.data === void 0;
  }
  isStaleByTime(e = 0) {
    return this.state.isInvalidated || this.state.data === void 0 || !rk(this.state.dataUpdatedAt, e);
  }
  onFocus() {
    var r;
    const e = this.observers.find((n) => n.shouldFetchOnWindowFocus());
    e == null || e.refetch({ cancelRefetch: !1 }), (r = ie(this, lt)) == null || r.continue();
  }
  onOnline() {
    var r;
    const e = this.observers.find((n) => n.shouldFetchOnReconnect());
    e == null || e.refetch({ cancelRefetch: !1 }), (r = ie(this, lt)) == null || r.continue();
  }
  addObserver(e) {
    this.observers.includes(e) || (this.observers.push(e), this.clearGcTimeout(), ie(this, It).notify({ type: "observerAdded", query: this, observer: e }));
  }
  removeObserver(e) {
    this.observers.includes(e) && (this.observers = this.observers.filter((r) => r !== e), this.observers.length || (ie(this, lt) && (ie(this, mn) ? ie(this, lt).cancel({ revert: !0 }) : ie(this, lt).cancelRetry()), this.scheduleGc()), ie(this, It).notify({ type: "observerRemoved", query: this, observer: e }));
  }
  getObserversCount() {
    return this.observers.length;
  }
  invalidate() {
    this.state.isInvalidated || ot(this, Ht, cr).call(this, { type: "invalidate" });
  }
  fetch(e, r) {
    var s, c, f;
    if (this.state.fetchStatus !== "idle") {
      if (this.state.data !== void 0 && (r != null && r.cancelRefetch))
        this.cancel({ silent: !0 });
      else if (ie(this, lt))
        return ie(this, lt).continueRetry(), ie(this, lt).promise;
    }
    if (e && this.setOptions(e), !this.options.queryFn) {
      const o = this.observers.find((h) => h.options.queryFn);
      o && this.setOptions(o.options);
    }
    const n = new AbortController(), i = (o) => {
      Object.defineProperty(o, "signal", {
        enumerable: !0,
        get: () => (Ae(this, mn, !0), n.signal)
      });
    }, l = () => {
      const o = av(this.options, r), h = {
        queryKey: this.queryKey,
        meta: this.meta
      };
      return i(h), Ae(this, mn, !1), this.options.persister ? this.options.persister(
        o,
        h,
        this
      ) : o(h);
    }, g = {
      fetchOptions: r,
      options: this.options,
      queryKey: this.queryKey,
      state: this.state,
      fetchFn: l
    };
    i(g), (s = this.options.behavior) == null || s.onFetch(
      g,
      this
    ), Ae(this, si, this.state), (this.state.fetchStatus === "idle" || this.state.fetchMeta !== ((c = g.fetchOptions) == null ? void 0 : c.meta)) && ot(this, Ht, cr).call(this, { type: "fetch", meta: (f = g.fetchOptions) == null ? void 0 : f.meta });
    const a = (o) => {
      var h, u, d, m;
      pl(o) && o.silent || ot(this, Ht, cr).call(this, {
        type: "error",
        error: o
      }), pl(o) || ((u = (h = ie(this, It).config).onError) == null || u.call(
        h,
        o,
        this
      ), (m = (d = ie(this, It).config).onSettled) == null || m.call(
        d,
        this.state.data,
        o,
        this
      )), this.isFetchingOptimistic || this.scheduleGc(), this.isFetchingOptimistic = !1;
    };
    return Ae(this, lt, hv({
      initialPromise: r == null ? void 0 : r.initialPromise,
      fn: g.fetchFn,
      abort: n.abort.bind(n),
      onSuccess: (o) => {
        var h, u, d, m;
        if (o === void 0) {
          a(new Error(`${this.queryHash} data is undefined`));
          return;
        }
        this.setData(o), (u = (h = ie(this, It).config).onSuccess) == null || u.call(h, o, this), (m = (d = ie(this, It).config).onSettled) == null || m.call(
          d,
          o,
          this.state.error,
          this
        ), this.isFetchingOptimistic || this.scheduleGc(), this.isFetchingOptimistic = !1;
      },
      onError: a,
      onFail: (o, h) => {
        ot(this, Ht, cr).call(this, { type: "failed", failureCount: o, error: h });
      },
      onPause: () => {
        ot(this, Ht, cr).call(this, { type: "pause" });
      },
      onContinue: () => {
        ot(this, Ht, cr).call(this, { type: "continue" });
      },
      retry: g.options.retry,
      retryDelay: g.options.retryDelay,
      networkMode: g.options.networkMode,
      canRun: () => !0
    })), ie(this, lt).start();
  }
}, ii = new WeakMap(), si = new WeakMap(), It = new WeakMap(), lt = new WeakMap(), ys = new WeakMap(), mn = new WeakMap(), Ht = new WeakSet(), cr = function(e) {
  const r = (n) => {
    switch (e.type) {
      case "failed":
        return {
          ...n,
          fetchFailureCount: e.failureCount,
          fetchFailureReason: e.error
        };
      case "pause":
        return {
          ...n,
          fetchStatus: "paused"
        };
      case "continue":
        return {
          ...n,
          fetchStatus: "fetching"
        };
      case "fetch":
        return {
          ...n,
          ...dk(n.data, this.options),
          fetchMeta: e.meta ?? null
        };
      case "success":
        return {
          ...n,
          data: e.data,
          dataUpdateCount: n.dataUpdateCount + 1,
          dataUpdatedAt: e.dataUpdatedAt ?? Date.now(),
          error: null,
          isInvalidated: !1,
          status: "success",
          ...!e.manual && {
            fetchStatus: "idle",
            fetchFailureCount: 0,
            fetchFailureReason: null
          }
        };
      case "error":
        const i = e.error;
        return pl(i) && i.revert && ie(this, si) ? { ...ie(this, si), fetchStatus: "idle" } : {
          ...n,
          error: i,
          errorUpdateCount: n.errorUpdateCount + 1,
          errorUpdatedAt: Date.now(),
          fetchFailureCount: n.fetchFailureCount + 1,
          fetchFailureReason: i,
          fetchStatus: "idle",
          status: "error"
        };
      case "invalidate":
        return {
          ...n,
          isInvalidated: !0
        };
      case "setState":
        return {
          ...n,
          ...e.state
        };
    }
  };
  this.state = r(this.state), yt.batch(() => {
    this.observers.forEach((n) => {
      n.onQueryUpdate();
    }), ie(this, It).notify({ query: this, type: "updated", action: e });
  });
}, Rp);
function dk(t, e) {
  return {
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchStatus: cv(e.networkMode) ? "fetching" : "paused",
    ...t === void 0 && {
      error: null,
      status: "pending"
    }
  };
}
function pk(t) {
  const e = typeof t.initialData == "function" ? t.initialData() : t.initialData, r = e !== void 0, n = r ? typeof t.initialDataUpdatedAt == "function" ? t.initialDataUpdatedAt() : t.initialDataUpdatedAt : 0;
  return {
    data: e,
    dataUpdateCount: 0,
    dataUpdatedAt: r ? n ?? Date.now() : 0,
    error: null,
    errorUpdateCount: 0,
    errorUpdatedAt: 0,
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchMeta: null,
    isInvalidated: !1,
    status: r ? "success" : "pending",
    fetchStatus: "idle"
  };
}
var Zt, Ip, gk = (Ip = class extends Ca {
  constructor(e = {}) {
    super();
    Re(this, Zt, void 0);
    this.config = e, Ae(this, Zt, /* @__PURE__ */ new Map());
  }
  build(e, r, n) {
    const i = r.queryKey, l = r.queryHash ?? Yu(i, r);
    let g = this.get(l);
    return g || (g = new fk({
      cache: this,
      queryKey: i,
      queryHash: l,
      options: e.defaultQueryOptions(r),
      state: n,
      defaultOptions: e.getQueryDefaults(i)
    }), this.add(g)), g;
  }
  add(e) {
    ie(this, Zt).has(e.queryHash) || (ie(this, Zt).set(e.queryHash, e), this.notify({
      type: "added",
      query: e
    }));
  }
  remove(e) {
    const r = ie(this, Zt).get(e.queryHash);
    r && (e.destroy(), r === e && ie(this, Zt).delete(e.queryHash), this.notify({ type: "removed", query: e }));
  }
  clear() {
    yt.batch(() => {
      this.getAll().forEach((e) => {
        this.remove(e);
      });
    });
  }
  get(e) {
    return ie(this, Zt).get(e);
  }
  getAll() {
    return [...ie(this, Zt).values()];
  }
  find(e) {
    const r = { exact: !0, ...e };
    return this.getAll().find(
      (n) => ld(r, n)
    );
  }
  findAll(e = {}) {
    const r = this.getAll();
    return Object.keys(e).length > 0 ? r.filter((n) => ld(e, n)) : r;
  }
  notify(e) {
    yt.batch(() => {
      this.listeners.forEach((r) => {
        r(e);
      });
    });
  }
  onFocus() {
    yt.batch(() => {
      this.getAll().forEach((e) => {
        e.onFocus();
      });
    });
  }
  onOnline() {
    yt.batch(() => {
      this.getAll().forEach((e) => {
        e.onOnline();
      });
    });
  }
}, Zt = new WeakMap(), Ip), Qt, vt, vn, er, Dr, Lp, mk = (Lp = class extends fv {
  constructor(e) {
    super();
    Re(this, er);
    Re(this, Qt, void 0);
    Re(this, vt, void 0);
    Re(this, vn, void 0);
    this.mutationId = e.mutationId, Ae(this, vt, e.mutationCache), Ae(this, Qt, []), this.state = e.state || vk(), this.setOptions(e.options), this.scheduleGc();
  }
  setOptions(e) {
    this.options = e, this.updateGcTime(this.options.gcTime);
  }
  get meta() {
    return this.options.meta;
  }
  addObserver(e) {
    ie(this, Qt).includes(e) || (ie(this, Qt).push(e), this.clearGcTimeout(), ie(this, vt).notify({
      type: "observerAdded",
      mutation: this,
      observer: e
    }));
  }
  removeObserver(e) {
    Ae(this, Qt, ie(this, Qt).filter((r) => r !== e)), this.scheduleGc(), ie(this, vt).notify({
      type: "observerRemoved",
      mutation: this,
      observer: e
    });
  }
  optionalRemove() {
    ie(this, Qt).length || (this.state.status === "pending" ? this.scheduleGc() : ie(this, vt).remove(this));
  }
  continue() {
    var e;
    return ((e = ie(this, vn)) == null ? void 0 : e.continue()) ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before
    this.execute(this.state.variables);
  }
  async execute(e) {
    var i, l, g, a, s, c, f, o, h, u, d, m, p, v, b, y, w, x, _, S;
    Ae(this, vn, hv({
      fn: () => this.options.mutationFn ? this.options.mutationFn(e) : Promise.reject(new Error("No mutationFn found")),
      onFail: (k, F) => {
        ot(this, er, Dr).call(this, { type: "failed", failureCount: k, error: F });
      },
      onPause: () => {
        ot(this, er, Dr).call(this, { type: "pause" });
      },
      onContinue: () => {
        ot(this, er, Dr).call(this, { type: "continue" });
      },
      retry: this.options.retry ?? 0,
      retryDelay: this.options.retryDelay,
      networkMode: this.options.networkMode,
      canRun: () => ie(this, vt).canRun(this)
    }));
    const r = this.state.status === "pending", n = !ie(this, vn).canStart();
    try {
      if (!r) {
        ot(this, er, Dr).call(this, { type: "pending", variables: e, isPaused: n }), await ((l = (i = ie(this, vt).config).onMutate) == null ? void 0 : l.call(
          i,
          e,
          this
        ));
        const F = await ((a = (g = this.options).onMutate) == null ? void 0 : a.call(g, e));
        F !== this.state.context && ot(this, er, Dr).call(this, {
          type: "pending",
          context: F,
          variables: e,
          isPaused: n
        });
      }
      const k = await ie(this, vn).start();
      return await ((c = (s = ie(this, vt).config).onSuccess) == null ? void 0 : c.call(
        s,
        k,
        e,
        this.state.context,
        this
      )), await ((o = (f = this.options).onSuccess) == null ? void 0 : o.call(f, k, e, this.state.context)), await ((u = (h = ie(this, vt).config).onSettled) == null ? void 0 : u.call(
        h,
        k,
        null,
        this.state.variables,
        this.state.context,
        this
      )), await ((m = (d = this.options).onSettled) == null ? void 0 : m.call(d, k, null, e, this.state.context)), ot(this, er, Dr).call(this, { type: "success", data: k }), k;
    } catch (k) {
      try {
        throw await ((v = (p = ie(this, vt).config).onError) == null ? void 0 : v.call(
          p,
          k,
          e,
          this.state.context,
          this
        )), await ((y = (b = this.options).onError) == null ? void 0 : y.call(
          b,
          k,
          e,
          this.state.context
        )), await ((x = (w = ie(this, vt).config).onSettled) == null ? void 0 : x.call(
          w,
          void 0,
          k,
          this.state.variables,
          this.state.context,
          this
        )), await ((S = (_ = this.options).onSettled) == null ? void 0 : S.call(
          _,
          void 0,
          k,
          e,
          this.state.context
        )), k;
      } finally {
        ot(this, er, Dr).call(this, { type: "error", error: k });
      }
    } finally {
      ie(this, vt).runNext(this);
    }
  }
}, Qt = new WeakMap(), vt = new WeakMap(), vn = new WeakMap(), er = new WeakSet(), Dr = function(e) {
  const r = (n) => {
    switch (e.type) {
      case "failed":
        return {
          ...n,
          failureCount: e.failureCount,
          failureReason: e.error
        };
      case "pause":
        return {
          ...n,
          isPaused: !0
        };
      case "continue":
        return {
          ...n,
          isPaused: !1
        };
      case "pending":
        return {
          ...n,
          context: e.context,
          data: void 0,
          failureCount: 0,
          failureReason: null,
          error: null,
          isPaused: e.isPaused,
          status: "pending",
          variables: e.variables,
          submittedAt: Date.now()
        };
      case "success":
        return {
          ...n,
          data: e.data,
          failureCount: 0,
          failureReason: null,
          error: null,
          status: "success",
          isPaused: !1
        };
      case "error":
        return {
          ...n,
          data: void 0,
          error: e.error,
          failureCount: n.failureCount + 1,
          failureReason: e.error,
          isPaused: !1,
          status: "error"
        };
    }
  };
  this.state = r(this.state), yt.batch(() => {
    ie(this, Qt).forEach((n) => {
      n.onMutationUpdate(e);
    }), ie(this, vt).notify({
      mutation: this,
      type: "updated",
      action: e
    });
  });
}, Lp);
function vk() {
  return {
    context: void 0,
    data: void 0,
    error: null,
    failureCount: 0,
    failureReason: null,
    isPaused: !1,
    status: "idle",
    variables: void 0,
    submittedAt: 0
  };
}
var _t, ws, Bp, bk = (Bp = class extends Ca {
  constructor(e = {}) {
    super();
    Re(this, _t, void 0);
    Re(this, ws, void 0);
    this.config = e, Ae(this, _t, /* @__PURE__ */ new Map()), Ae(this, ws, Date.now());
  }
  build(e, r, n) {
    const i = new mk({
      mutationCache: this,
      mutationId: ++Vs(this, ws)._,
      options: e.defaultMutationOptions(r),
      state: n
    });
    return this.add(i), i;
  }
  add(e) {
    const r = io(e), n = ie(this, _t).get(r) ?? [];
    n.push(e), ie(this, _t).set(r, n), this.notify({ type: "added", mutation: e });
  }
  remove(e) {
    var n;
    const r = io(e);
    if (ie(this, _t).has(r)) {
      const i = (n = ie(this, _t).get(r)) == null ? void 0 : n.filter((l) => l !== e);
      i && (i.length === 0 ? ie(this, _t).delete(r) : ie(this, _t).set(r, i));
    }
    this.notify({ type: "removed", mutation: e });
  }
  canRun(e) {
    var n;
    const r = (n = ie(this, _t).get(io(e))) == null ? void 0 : n.find((i) => i.state.status === "pending");
    return !r || r === e;
  }
  runNext(e) {
    var n;
    const r = (n = ie(this, _t).get(io(e))) == null ? void 0 : n.find((i) => i !== e && i.state.isPaused);
    return (r == null ? void 0 : r.continue()) ?? Promise.resolve();
  }
  clear() {
    yt.batch(() => {
      this.getAll().forEach((e) => {
        this.remove(e);
      });
    });
  }
  getAll() {
    return [...ie(this, _t).values()].flat();
  }
  find(e) {
    const r = { exact: !0, ...e };
    return this.getAll().find(
      (n) => cd(r, n)
    );
  }
  findAll(e = {}) {
    return this.getAll().filter((r) => cd(e, r));
  }
  notify(e) {
    yt.batch(() => {
      this.listeners.forEach((r) => {
        r(e);
      });
    });
  }
  resumePausedMutations() {
    const e = this.getAll().filter((r) => r.state.isPaused);
    return yt.batch(
      () => Promise.all(
        e.map((r) => r.continue().catch(Vt))
      )
    );
  }
}, _t = new WeakMap(), ws = new WeakMap(), Bp);
function io(t) {
  var e;
  return ((e = t.options.scope) == null ? void 0 : e.id) ?? String(t.mutationId);
}
function yk(t) {
  return {
    onFetch: (e, r) => {
      const n = async () => {
        var d, m, p, v, b;
        const i = e.options, l = (p = (m = (d = e.fetchOptions) == null ? void 0 : d.meta) == null ? void 0 : m.fetchMore) == null ? void 0 : p.direction, g = ((v = e.state.data) == null ? void 0 : v.pages) || [], a = ((b = e.state.data) == null ? void 0 : b.pageParams) || [], s = { pages: [], pageParams: [] };
        let c = !1;
        const f = (y) => {
          Object.defineProperty(y, "signal", {
            enumerable: !0,
            get: () => (e.signal.aborted ? c = !0 : e.signal.addEventListener("abort", () => {
              c = !0;
            }), e.signal)
          });
        }, o = av(e.options, e.fetchOptions), h = async (y, w, x) => {
          if (c)
            return Promise.reject();
          if (w == null && y.pages.length)
            return Promise.resolve(y);
          const _ = {
            queryKey: e.queryKey,
            pageParam: w,
            direction: x ? "backward" : "forward",
            meta: e.options.meta
          };
          f(_);
          const S = await o(
            _
          ), { maxPages: k } = e.options, F = x ? ak : ok;
          return {
            pages: F(y.pages, S, k),
            pageParams: F(y.pageParams, w, k)
          };
        };
        let u;
        if (l && g.length) {
          const y = l === "backward", w = y ? wk : fd, x = {
            pages: g,
            pageParams: a
          }, _ = w(i, x);
          u = await h(x, _, y);
        } else {
          u = await h(
            s,
            a[0] ?? i.initialPageParam
          );
          const y = t ?? g.length;
          for (let w = 1; w < y; w++) {
            const x = fd(i, u);
            u = await h(u, x);
          }
        }
        return u;
      };
      e.options.persister ? e.fetchFn = () => {
        var i, l;
        return (l = (i = e.options).persister) == null ? void 0 : l.call(
          i,
          n,
          {
            queryKey: e.queryKey,
            meta: e.options.meta,
            signal: e.signal
          },
          r
        );
      } : e.fetchFn = n;
    }
  };
}
function fd(t, { pages: e, pageParams: r }) {
  const n = e.length - 1;
  return t.getNextPageParam(
    e[n],
    e,
    r[n],
    r
  );
}
function wk(t, { pages: e, pageParams: r }) {
  var n;
  return (n = t.getPreviousPageParam) == null ? void 0 : n.call(
    t,
    e[0],
    e,
    r[0],
    r
  );
}
var Xe, Lr, Br, oi, ai, zr, li, ci, zp, xk = (zp = class {
  constructor(t = {}) {
    Re(this, Xe, void 0);
    Re(this, Lr, void 0);
    Re(this, Br, void 0);
    Re(this, oi, void 0);
    Re(this, ai, void 0);
    Re(this, zr, void 0);
    Re(this, li, void 0);
    Re(this, ci, void 0);
    Ae(this, Xe, t.queryCache || new gk()), Ae(this, Lr, t.mutationCache || new bk()), Ae(this, Br, t.defaultOptions || {}), Ae(this, oi, /* @__PURE__ */ new Map()), Ae(this, ai, /* @__PURE__ */ new Map()), Ae(this, zr, 0);
  }
  mount() {
    Vs(this, zr)._++, ie(this, zr) === 1 && (Ae(this, li, lv.subscribe(async (t) => {
      t && (await this.resumePausedMutations(), ie(this, Xe).onFocus());
    })), Ae(this, ci, $o.subscribe(async (t) => {
      t && (await this.resumePausedMutations(), ie(this, Xe).onOnline());
    })));
  }
  unmount() {
    var t, e;
    Vs(this, zr)._--, ie(this, zr) === 0 && ((t = ie(this, li)) == null || t.call(this), Ae(this, li, void 0), (e = ie(this, ci)) == null || e.call(this), Ae(this, ci, void 0));
  }
  isFetching(t) {
    return ie(this, Xe).findAll({ ...t, fetchStatus: "fetching" }).length;
  }
  isMutating(t) {
    return ie(this, Lr).findAll({ ...t, status: "pending" }).length;
  }
  getQueryData(t) {
    var r;
    const e = this.defaultQueryOptions({ queryKey: t });
    return (r = ie(this, Xe).get(e.queryHash)) == null ? void 0 : r.state.data;
  }
  ensureQueryData(t) {
    const e = this.getQueryData(t.queryKey);
    if (e === void 0)
      return this.fetchQuery(t);
    {
      const r = this.defaultQueryOptions(t), n = ie(this, Xe).build(this, r);
      return t.revalidateIfStale && n.isStaleByTime(ad(r.staleTime, n)) && this.prefetchQuery(r), Promise.resolve(e);
    }
  }
  getQueriesData(t) {
    return ie(this, Xe).findAll(t).map(({ queryKey: e, state: r }) => {
      const n = r.data;
      return [e, n];
    });
  }
  setQueryData(t, e, r) {
    const n = this.defaultQueryOptions({ queryKey: t }), i = ie(this, Xe).get(
      n.queryHash
    ), l = i == null ? void 0 : i.state.data, g = ek(e, l);
    if (g !== void 0)
      return ie(this, Xe).build(this, n).setData(g, { ...r, manual: !0 });
  }
  setQueriesData(t, e, r) {
    return yt.batch(
      () => ie(this, Xe).findAll(t).map(({ queryKey: n }) => [
        n,
        this.setQueryData(n, e, r)
      ])
    );
  }
  getQueryState(t) {
    var r;
    const e = this.defaultQueryOptions({ queryKey: t });
    return (r = ie(this, Xe).get(e.queryHash)) == null ? void 0 : r.state;
  }
  removeQueries(t) {
    const e = ie(this, Xe);
    yt.batch(() => {
      e.findAll(t).forEach((r) => {
        e.remove(r);
      });
    });
  }
  resetQueries(t, e) {
    const r = ie(this, Xe), n = {
      type: "active",
      ...t
    };
    return yt.batch(() => (r.findAll(t).forEach((i) => {
      i.reset();
    }), this.refetchQueries(n, e)));
  }
  cancelQueries(t = {}, e = {}) {
    const r = { revert: !0, ...e }, n = yt.batch(
      () => ie(this, Xe).findAll(t).map((i) => i.cancel(r))
    );
    return Promise.all(n).then(Vt).catch(Vt);
  }
  invalidateQueries(t = {}, e = {}) {
    return yt.batch(() => {
      if (ie(this, Xe).findAll(t).forEach((n) => {
        n.invalidate();
      }), t.refetchType === "none")
        return Promise.resolve();
      const r = {
        ...t,
        type: t.refetchType ?? t.type ?? "active"
      };
      return this.refetchQueries(r, e);
    });
  }
  refetchQueries(t = {}, e) {
    const r = {
      ...e,
      cancelRefetch: (e == null ? void 0 : e.cancelRefetch) ?? !0
    }, n = yt.batch(
      () => ie(this, Xe).findAll(t).filter((i) => !i.isDisabled()).map((i) => {
        let l = i.fetch(void 0, r);
        return r.throwOnError || (l = l.catch(Vt)), i.state.fetchStatus === "paused" ? Promise.resolve() : l;
      })
    );
    return Promise.all(n).then(Vt);
  }
  fetchQuery(t) {
    const e = this.defaultQueryOptions(t);
    e.retry === void 0 && (e.retry = !1);
    const r = ie(this, Xe).build(this, e);
    return r.isStaleByTime(
      ad(e.staleTime, r)
    ) ? r.fetch(e) : Promise.resolve(r.state.data);
  }
  prefetchQuery(t) {
    return this.fetchQuery(t).then(Vt).catch(Vt);
  }
  fetchInfiniteQuery(t) {
    return t.behavior = yk(t.pages), this.fetchQuery(t);
  }
  prefetchInfiniteQuery(t) {
    return this.fetchInfiniteQuery(t).then(Vt).catch(Vt);
  }
  resumePausedMutations() {
    return $o.isOnline() ? ie(this, Lr).resumePausedMutations() : Promise.resolve();
  }
  getQueryCache() {
    return ie(this, Xe);
  }
  getMutationCache() {
    return ie(this, Lr);
  }
  getDefaultOptions() {
    return ie(this, Br);
  }
  setDefaultOptions(t) {
    Ae(this, Br, t);
  }
  setQueryDefaults(t, e) {
    ie(this, oi).set(fs(t), {
      queryKey: t,
      defaultOptions: e
    });
  }
  getQueryDefaults(t) {
    const e = [...ie(this, oi).values()];
    let r = {};
    return e.forEach((n) => {
      ds(t, n.queryKey) && (r = { ...r, ...n.defaultOptions });
    }), r;
  }
  setMutationDefaults(t, e) {
    ie(this, ai).set(fs(t), {
      mutationKey: t,
      defaultOptions: e
    });
  }
  getMutationDefaults(t) {
    const e = [...ie(this, ai).values()];
    let r = {};
    return e.forEach((n) => {
      ds(t, n.mutationKey) && (r = { ...r, ...n.defaultOptions });
    }), r;
  }
  defaultQueryOptions(t) {
    if (t._defaulted)
      return t;
    const e = {
      ...ie(this, Br).queries,
      ...this.getQueryDefaults(t.queryKey),
      ...t,
      _defaulted: !0
    };
    return e.queryHash || (e.queryHash = Yu(
      e.queryKey,
      e
    )), e.refetchOnReconnect === void 0 && (e.refetchOnReconnect = e.networkMode !== "always"), e.throwOnError === void 0 && (e.throwOnError = !!e.suspense), !e.networkMode && e.persister && (e.networkMode = "offlineFirst"), e.enabled !== !0 && e.queryFn === ov && (e.enabled = !1), e;
  }
  defaultMutationOptions(t) {
    return t != null && t._defaulted ? t : {
      ...ie(this, Br).mutations,
      ...(t == null ? void 0 : t.mutationKey) && this.getMutationDefaults(t.mutationKey),
      ...t,
      _defaulted: !0
    };
  }
  clear() {
    ie(this, Xe).clear(), ie(this, Lr).clear();
  }
}, Xe = new WeakMap(), Lr = new WeakMap(), Br = new WeakMap(), oi = new WeakMap(), ai = new WeakMap(), zr = new WeakMap(), li = new WeakMap(), ci = new WeakMap(), zp);
function dv(t, e) {
  return function() {
    return t.apply(e, arguments);
  };
}
const { toString: Ck } = Object.prototype, { getPrototypeOf: Gu } = Object, Sa = ((t) => (e) => {
  const r = Ck.call(e);
  return t[r] || (t[r] = r.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null)), Kt = (t) => (t = t.toLowerCase(), (e) => Sa(e) === t), Ta = (t) => (e) => typeof e === t, { isArray: Di } = Array, ps = Ta("undefined");
function _k(t) {
  return t !== null && !ps(t) && t.constructor !== null && !ps(t.constructor) && $t(t.constructor.isBuffer) && t.constructor.isBuffer(t);
}
const pv = Kt("ArrayBuffer");
function Sk(t) {
  let e;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? e = ArrayBuffer.isView(t) : e = t && t.buffer && pv(t.buffer), e;
}
const Tk = Ta("string"), $t = Ta("function"), gv = Ta("number"), Ea = (t) => t !== null && typeof t == "object", Ek = (t) => t === !0 || t === !1, ho = (t) => {
  if (Sa(t) !== "object")
    return !1;
  const e = Gu(t);
  return (e === null || e === Object.prototype || Object.getPrototypeOf(e) === null) && !(Symbol.toStringTag in t) && !(Symbol.iterator in t);
}, kk = Kt("Date"), Ok = Kt("File"), Ak = Kt("Blob"), Dk = Kt("FileList"), Pk = (t) => Ea(t) && $t(t.pipe), Mk = (t) => {
  let e;
  return t && (typeof FormData == "function" && t instanceof FormData || $t(t.append) && ((e = Sa(t)) === "formdata" || // detect form-data instance
  e === "object" && $t(t.toString) && t.toString() === "[object FormData]"));
}, Fk = Kt("URLSearchParams"), [Rk, Ik, Lk, Bk] = ["ReadableStream", "Request", "Response", "Headers"].map(Kt), zk = (t) => t.trim ? t.trim() : t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function Is(t, e, { allOwnKeys: r = !1 } = {}) {
  if (t === null || typeof t > "u")
    return;
  let n, i;
  if (typeof t != "object" && (t = [t]), Di(t))
    for (n = 0, i = t.length; n < i; n++)
      e.call(null, t[n], n, t);
  else {
    const l = r ? Object.getOwnPropertyNames(t) : Object.keys(t), g = l.length;
    let a;
    for (n = 0; n < g; n++)
      a = l[n], e.call(null, t[a], a, t);
  }
}
function mv(t, e) {
  e = e.toLowerCase();
  const r = Object.keys(t);
  let n = r.length, i;
  for (; n-- > 0; )
    if (i = r[n], e === i.toLowerCase())
      return i;
  return null;
}
const vv = (() => typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : global)(), bv = (t) => !ps(t) && t !== vv;
function _c() {
  const { caseless: t } = bv(this) && this || {}, e = {}, r = (n, i) => {
    const l = t && mv(e, i) || i;
    ho(e[l]) && ho(n) ? e[l] = _c(e[l], n) : ho(n) ? e[l] = _c({}, n) : Di(n) ? e[l] = n.slice() : e[l] = n;
  };
  for (let n = 0, i = arguments.length; n < i; n++)
    arguments[n] && Is(arguments[n], r);
  return e;
}
const Nk = (t, e, r, { allOwnKeys: n } = {}) => (Is(e, (i, l) => {
  r && $t(i) ? t[l] = dv(i, r) : t[l] = i;
}, { allOwnKeys: n }), t), jk = (t) => (t.charCodeAt(0) === 65279 && (t = t.slice(1)), t), $k = (t, e, r, n) => {
  t.prototype = Object.create(e.prototype, n), t.prototype.constructor = t, Object.defineProperty(t, "super", {
    value: e.prototype
  }), r && Object.assign(t.prototype, r);
}, Vk = (t, e, r, n) => {
  let i, l, g;
  const a = {};
  if (e = e || {}, t == null)
    return e;
  do {
    for (i = Object.getOwnPropertyNames(t), l = i.length; l-- > 0; )
      g = i[l], (!n || n(g, t, e)) && !a[g] && (e[g] = t[g], a[g] = !0);
    t = r !== !1 && Gu(t);
  } while (t && (!r || r(t, e)) && t !== Object.prototype);
  return e;
}, Hk = (t, e, r) => {
  t = String(t), (r === void 0 || r > t.length) && (r = t.length), r -= e.length;
  const n = t.indexOf(e, r);
  return n !== -1 && n === r;
}, Uk = (t) => {
  if (!t)
    return null;
  if (Di(t))
    return t;
  let e = t.length;
  if (!gv(e))
    return null;
  const r = new Array(e);
  for (; e-- > 0; )
    r[e] = t[e];
  return r;
}, Wk = ((t) => (e) => t && e instanceof t)(typeof Uint8Array < "u" && Gu(Uint8Array)), Xk = (t, e) => {
  const n = (t && t[Symbol.iterator]).call(t);
  let i;
  for (; (i = n.next()) && !i.done; ) {
    const l = i.value;
    e.call(t, l[0], l[1]);
  }
}, Yk = (t, e) => {
  let r;
  const n = [];
  for (; (r = t.exec(e)) !== null; )
    n.push(r);
  return n;
}, Gk = Kt("HTMLFormElement"), qk = (t) => t.toLowerCase().replace(
  /[-_\s]([a-z\d])(\w*)/g,
  function(r, n, i) {
    return n.toUpperCase() + i;
  }
), dd = (({ hasOwnProperty: t }) => (e, r) => t.call(e, r))(Object.prototype), Kk = Kt("RegExp"), yv = (t, e) => {
  const r = Object.getOwnPropertyDescriptors(t), n = {};
  Is(r, (i, l) => {
    let g;
    (g = e(i, l, t)) !== !1 && (n[l] = g || i);
  }), Object.defineProperties(t, n);
}, Jk = (t) => {
  yv(t, (e, r) => {
    if ($t(t) && ["arguments", "caller", "callee"].indexOf(r) !== -1)
      return !1;
    const n = t[r];
    if ($t(n)) {
      if (e.enumerable = !1, "writable" in e) {
        e.writable = !1;
        return;
      }
      e.set || (e.set = () => {
        throw Error("Can not rewrite read-only method '" + r + "'");
      });
    }
  });
}, Zk = (t, e) => {
  const r = {}, n = (i) => {
    i.forEach((l) => {
      r[l] = !0;
    });
  };
  return Di(t) ? n(t) : n(String(t).split(e)), r;
}, Qk = () => {
}, eO = (t, e) => t != null && Number.isFinite(t = +t) ? t : e, gl = "abcdefghijklmnopqrstuvwxyz", pd = "0123456789", wv = {
  DIGIT: pd,
  ALPHA: gl,
  ALPHA_DIGIT: gl + gl.toUpperCase() + pd
}, tO = (t = 16, e = wv.ALPHA_DIGIT) => {
  let r = "";
  const { length: n } = e;
  for (; t--; )
    r += e[Math.random() * n | 0];
  return r;
};
function rO(t) {
  return !!(t && $t(t.append) && t[Symbol.toStringTag] === "FormData" && t[Symbol.iterator]);
}
const nO = (t) => {
  const e = new Array(10), r = (n, i) => {
    if (Ea(n)) {
      if (e.indexOf(n) >= 0)
        return;
      if (!("toJSON" in n)) {
        e[i] = n;
        const l = Di(n) ? [] : {};
        return Is(n, (g, a) => {
          const s = r(g, i + 1);
          !ps(s) && (l[a] = s);
        }), e[i] = void 0, l;
      }
    }
    return n;
  };
  return r(t, 0);
}, iO = Kt("AsyncFunction"), sO = (t) => t && (Ea(t) || $t(t)) && $t(t.then) && $t(t.catch), q = {
  isArray: Di,
  isArrayBuffer: pv,
  isBuffer: _k,
  isFormData: Mk,
  isArrayBufferView: Sk,
  isString: Tk,
  isNumber: gv,
  isBoolean: Ek,
  isObject: Ea,
  isPlainObject: ho,
  isReadableStream: Rk,
  isRequest: Ik,
  isResponse: Lk,
  isHeaders: Bk,
  isUndefined: ps,
  isDate: kk,
  isFile: Ok,
  isBlob: Ak,
  isRegExp: Kk,
  isFunction: $t,
  isStream: Pk,
  isURLSearchParams: Fk,
  isTypedArray: Wk,
  isFileList: Dk,
  forEach: Is,
  merge: _c,
  extend: Nk,
  trim: zk,
  stripBOM: jk,
  inherits: $k,
  toFlatObject: Vk,
  kindOf: Sa,
  kindOfTest: Kt,
  endsWith: Hk,
  toArray: Uk,
  forEachEntry: Xk,
  matchAll: Yk,
  isHTMLForm: Gk,
  hasOwnProperty: dd,
  hasOwnProp: dd,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors: yv,
  freezeMethods: Jk,
  toObjectSet: Zk,
  toCamelCase: qk,
  noop: Qk,
  toFiniteNumber: eO,
  findKey: mv,
  global: vv,
  isContextDefined: bv,
  ALPHABET: wv,
  generateString: tO,
  isSpecCompliantForm: rO,
  toJSONObject: nO,
  isAsyncFn: iO,
  isThenable: sO
};
function Ee(t, e, r, n, i) {
  Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = t, this.name = "AxiosError", e && (this.code = e), r && (this.config = r), n && (this.request = n), i && (this.response = i);
}
q.inherits(Ee, Error, {
  toJSON: function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: q.toJSONObject(this.config),
      code: this.code,
      status: this.response && this.response.status ? this.response.status : null
    };
  }
});
const xv = Ee.prototype, Cv = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((t) => {
  Cv[t] = { value: t };
});
Object.defineProperties(Ee, Cv);
Object.defineProperty(xv, "isAxiosError", { value: !0 });
Ee.from = (t, e, r, n, i, l) => {
  const g = Object.create(xv);
  return q.toFlatObject(t, g, function(s) {
    return s !== Error.prototype;
  }, (a) => a !== "isAxiosError"), Ee.call(g, t.message, e, r, n, i), g.cause = t, g.name = t.name, l && Object.assign(g, l), g;
};
const oO = null;
function Sc(t) {
  return q.isPlainObject(t) || q.isArray(t);
}
function _v(t) {
  return q.endsWith(t, "[]") ? t.slice(0, -2) : t;
}
function gd(t, e, r) {
  return t ? t.concat(e).map(function(i, l) {
    return i = _v(i), !r && l ? "[" + i + "]" : i;
  }).join(r ? "." : "") : e;
}
function aO(t) {
  return q.isArray(t) && !t.some(Sc);
}
const lO = q.toFlatObject(q, {}, null, function(e) {
  return /^is[A-Z]/.test(e);
});
function ka(t, e, r) {
  if (!q.isObject(t))
    throw new TypeError("target must be an object");
  e = e || new FormData(), r = q.toFlatObject(r, {
    metaTokens: !0,
    dots: !1,
    indexes: !1
  }, !1, function(m, p) {
    return !q.isUndefined(p[m]);
  });
  const n = r.metaTokens, i = r.visitor || f, l = r.dots, g = r.indexes, s = (r.Blob || typeof Blob < "u" && Blob) && q.isSpecCompliantForm(e);
  if (!q.isFunction(i))
    throw new TypeError("visitor must be a function");
  function c(d) {
    if (d === null)
      return "";
    if (q.isDate(d))
      return d.toISOString();
    if (!s && q.isBlob(d))
      throw new Ee("Blob is not supported. Use a Buffer instead.");
    return q.isArrayBuffer(d) || q.isTypedArray(d) ? s && typeof Blob == "function" ? new Blob([d]) : Buffer.from(d) : d;
  }
  function f(d, m, p) {
    let v = d;
    if (d && !p && typeof d == "object") {
      if (q.endsWith(m, "{}"))
        m = n ? m : m.slice(0, -2), d = JSON.stringify(d);
      else if (q.isArray(d) && aO(d) || (q.isFileList(d) || q.endsWith(m, "[]")) && (v = q.toArray(d)))
        return m = _v(m), v.forEach(function(y, w) {
          !(q.isUndefined(y) || y === null) && e.append(
            // eslint-disable-next-line no-nested-ternary
            g === !0 ? gd([m], w, l) : g === null ? m : m + "[]",
            c(y)
          );
        }), !1;
    }
    return Sc(d) ? !0 : (e.append(gd(p, m, l), c(d)), !1);
  }
  const o = [], h = Object.assign(lO, {
    defaultVisitor: f,
    convertValue: c,
    isVisitable: Sc
  });
  function u(d, m) {
    if (!q.isUndefined(d)) {
      if (o.indexOf(d) !== -1)
        throw Error("Circular reference detected in " + m.join("."));
      o.push(d), q.forEach(d, function(v, b) {
        (!(q.isUndefined(v) || v === null) && i.call(
          e,
          v,
          q.isString(b) ? b.trim() : b,
          m,
          h
        )) === !0 && u(v, m ? m.concat(b) : [b]);
      }), o.pop();
    }
  }
  if (!q.isObject(t))
    throw new TypeError("data must be an object");
  return u(t), e;
}
function md(t) {
  const e = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(t).replace(/[!'()~]|%20|%00/g, function(n) {
    return e[n];
  });
}
function qu(t, e) {
  this._pairs = [], t && ka(t, this, e);
}
const Sv = qu.prototype;
Sv.append = function(e, r) {
  this._pairs.push([e, r]);
};
Sv.toString = function(e) {
  const r = e ? function(n) {
    return e.call(this, n, md);
  } : md;
  return this._pairs.map(function(i) {
    return r(i[0]) + "=" + r(i[1]);
  }, "").join("&");
};
function cO(t) {
  return encodeURIComponent(t).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function Tv(t, e, r) {
  if (!e)
    return t;
  const n = r && r.encode || cO, i = r && r.serialize;
  let l;
  if (i ? l = i(e, r) : l = q.isURLSearchParams(e) ? e.toString() : new qu(e, r).toString(n), l) {
    const g = t.indexOf("#");
    g !== -1 && (t = t.slice(0, g)), t += (t.indexOf("?") === -1 ? "?" : "&") + l;
  }
  return t;
}
class uO {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(e, r, n) {
    return this.handlers.push({
      fulfilled: e,
      rejected: r,
      synchronous: n ? n.synchronous : !1,
      runWhen: n ? n.runWhen : null
    }), this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(e) {
    this.handlers[e] && (this.handlers[e] = null);
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    this.handlers && (this.handlers = []);
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(e) {
    q.forEach(this.handlers, function(n) {
      n !== null && e(n);
    });
  }
}
const vd = uO, Ev = {
  silentJSONParsing: !0,
  forcedJSONParsing: !0,
  clarifyTimeoutError: !1
}, hO = typeof URLSearchParams < "u" ? URLSearchParams : qu, fO = typeof FormData < "u" ? FormData : null, dO = typeof Blob < "u" ? Blob : null, pO = {
  isBrowser: !0,
  classes: {
    URLSearchParams: hO,
    FormData: fO,
    Blob: dO
  },
  protocols: ["http", "https", "file", "blob", "url", "data"]
}, Ku = typeof window < "u" && typeof document < "u", gO = ((t) => Ku && ["ReactNative", "NativeScript", "NS"].indexOf(t) < 0)(typeof navigator < "u" && navigator.product), mO = (() => typeof WorkerGlobalScope < "u" && // eslint-disable-next-line no-undef
self instanceof WorkerGlobalScope && typeof self.importScripts == "function")(), vO = Ku && window.location.href || "http://localhost", bO = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hasBrowserEnv: Ku,
  hasStandardBrowserEnv: gO,
  hasStandardBrowserWebWorkerEnv: mO,
  origin: vO
}, Symbol.toStringTag, { value: "Module" })), Xt = {
  ...bO,
  ...pO
};
function yO(t, e) {
  return ka(t, new Xt.classes.URLSearchParams(), Object.assign({
    visitor: function(r, n, i, l) {
      return Xt.isNode && q.isBuffer(r) ? (this.append(n, r.toString("base64")), !1) : l.defaultVisitor.apply(this, arguments);
    }
  }, e));
}
function wO(t) {
  return q.matchAll(/\w+|\[(\w*)]/g, t).map((e) => e[0] === "[]" ? "" : e[1] || e[0]);
}
function xO(t) {
  const e = {}, r = Object.keys(t);
  let n;
  const i = r.length;
  let l;
  for (n = 0; n < i; n++)
    l = r[n], e[l] = t[l];
  return e;
}
function kv(t) {
  function e(r, n, i, l) {
    let g = r[l++];
    if (g === "__proto__")
      return !0;
    const a = Number.isFinite(+g), s = l >= r.length;
    return g = !g && q.isArray(i) ? i.length : g, s ? (q.hasOwnProp(i, g) ? i[g] = [i[g], n] : i[g] = n, !a) : ((!i[g] || !q.isObject(i[g])) && (i[g] = []), e(r, n, i[g], l) && q.isArray(i[g]) && (i[g] = xO(i[g])), !a);
  }
  if (q.isFormData(t) && q.isFunction(t.entries)) {
    const r = {};
    return q.forEachEntry(t, (n, i) => {
      e(wO(n), i, r, 0);
    }), r;
  }
  return null;
}
function CO(t, e, r) {
  if (q.isString(t))
    try {
      return (e || JSON.parse)(t), q.trim(t);
    } catch (n) {
      if (n.name !== "SyntaxError")
        throw n;
    }
  return (r || JSON.stringify)(t);
}
const Ju = {
  transitional: Ev,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function(e, r) {
    const n = r.getContentType() || "", i = n.indexOf("application/json") > -1, l = q.isObject(e);
    if (l && q.isHTMLForm(e) && (e = new FormData(e)), q.isFormData(e))
      return i ? JSON.stringify(kv(e)) : e;
    if (q.isArrayBuffer(e) || q.isBuffer(e) || q.isStream(e) || q.isFile(e) || q.isBlob(e) || q.isReadableStream(e))
      return e;
    if (q.isArrayBufferView(e))
      return e.buffer;
    if (q.isURLSearchParams(e))
      return r.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), e.toString();
    let a;
    if (l) {
      if (n.indexOf("application/x-www-form-urlencoded") > -1)
        return yO(e, this.formSerializer).toString();
      if ((a = q.isFileList(e)) || n.indexOf("multipart/form-data") > -1) {
        const s = this.env && this.env.FormData;
        return ka(
          a ? { "files[]": e } : e,
          s && new s(),
          this.formSerializer
        );
      }
    }
    return l || i ? (r.setContentType("application/json", !1), CO(e)) : e;
  }],
  transformResponse: [function(e) {
    const r = this.transitional || Ju.transitional, n = r && r.forcedJSONParsing, i = this.responseType === "json";
    if (q.isResponse(e) || q.isReadableStream(e))
      return e;
    if (e && q.isString(e) && (n && !this.responseType || i)) {
      const g = !(r && r.silentJSONParsing) && i;
      try {
        return JSON.parse(e);
      } catch (a) {
        if (g)
          throw a.name === "SyntaxError" ? Ee.from(a, Ee.ERR_BAD_RESPONSE, this, null, this.response) : a;
      }
    }
    return e;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: Xt.classes.FormData,
    Blob: Xt.classes.Blob
  },
  validateStatus: function(e) {
    return e >= 200 && e < 300;
  },
  headers: {
    common: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
q.forEach(["delete", "get", "head", "post", "put", "patch"], (t) => {
  Ju.headers[t] = {};
});
const Zu = Ju, _O = q.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]), SO = (t) => {
  const e = {};
  let r, n, i;
  return t && t.split(`
`).forEach(function(g) {
    i = g.indexOf(":"), r = g.substring(0, i).trim().toLowerCase(), n = g.substring(i + 1).trim(), !(!r || e[r] && _O[r]) && (r === "set-cookie" ? e[r] ? e[r].push(n) : e[r] = [n] : e[r] = e[r] ? e[r] + ", " + n : n);
  }), e;
}, bd = Symbol("internals");
function zi(t) {
  return t && String(t).trim().toLowerCase();
}
function fo(t) {
  return t === !1 || t == null ? t : q.isArray(t) ? t.map(fo) : String(t);
}
function TO(t) {
  const e = /* @__PURE__ */ Object.create(null), r = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let n;
  for (; n = r.exec(t); )
    e[n[1]] = n[2];
  return e;
}
const EO = (t) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(t.trim());
function ml(t, e, r, n, i) {
  if (q.isFunction(n))
    return n.call(this, e, r);
  if (i && (e = r), !!q.isString(e)) {
    if (q.isString(n))
      return e.indexOf(n) !== -1;
    if (q.isRegExp(n))
      return n.test(e);
  }
}
function kO(t) {
  return t.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (e, r, n) => r.toUpperCase() + n);
}
function OO(t, e) {
  const r = q.toCamelCase(" " + e);
  ["get", "set", "has"].forEach((n) => {
    Object.defineProperty(t, n + r, {
      value: function(i, l, g) {
        return this[n].call(this, e, i, l, g);
      },
      configurable: !0
    });
  });
}
class Oa {
  constructor(e) {
    e && this.set(e);
  }
  set(e, r, n) {
    const i = this;
    function l(a, s, c) {
      const f = zi(s);
      if (!f)
        throw new Error("header name must be a non-empty string");
      const o = q.findKey(i, f);
      (!o || i[o] === void 0 || c === !0 || c === void 0 && i[o] !== !1) && (i[o || s] = fo(a));
    }
    const g = (a, s) => q.forEach(a, (c, f) => l(c, f, s));
    if (q.isPlainObject(e) || e instanceof this.constructor)
      g(e, r);
    else if (q.isString(e) && (e = e.trim()) && !EO(e))
      g(SO(e), r);
    else if (q.isHeaders(e))
      for (const [a, s] of e.entries())
        l(s, a, n);
    else
      e != null && l(r, e, n);
    return this;
  }
  get(e, r) {
    if (e = zi(e), e) {
      const n = q.findKey(this, e);
      if (n) {
        const i = this[n];
        if (!r)
          return i;
        if (r === !0)
          return TO(i);
        if (q.isFunction(r))
          return r.call(this, i, n);
        if (q.isRegExp(r))
          return r.exec(i);
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(e, r) {
    if (e = zi(e), e) {
      const n = q.findKey(this, e);
      return !!(n && this[n] !== void 0 && (!r || ml(this, this[n], n, r)));
    }
    return !1;
  }
  delete(e, r) {
    const n = this;
    let i = !1;
    function l(g) {
      if (g = zi(g), g) {
        const a = q.findKey(n, g);
        a && (!r || ml(n, n[a], a, r)) && (delete n[a], i = !0);
      }
    }
    return q.isArray(e) ? e.forEach(l) : l(e), i;
  }
  clear(e) {
    const r = Object.keys(this);
    let n = r.length, i = !1;
    for (; n--; ) {
      const l = r[n];
      (!e || ml(this, this[l], l, e, !0)) && (delete this[l], i = !0);
    }
    return i;
  }
  normalize(e) {
    const r = this, n = {};
    return q.forEach(this, (i, l) => {
      const g = q.findKey(n, l);
      if (g) {
        r[g] = fo(i), delete r[l];
        return;
      }
      const a = e ? kO(l) : String(l).trim();
      a !== l && delete r[l], r[a] = fo(i), n[a] = !0;
    }), this;
  }
  concat(...e) {
    return this.constructor.concat(this, ...e);
  }
  toJSON(e) {
    const r = /* @__PURE__ */ Object.create(null);
    return q.forEach(this, (n, i) => {
      n != null && n !== !1 && (r[i] = e && q.isArray(n) ? n.join(", ") : n);
    }), r;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([e, r]) => e + ": " + r).join(`
`);
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(e) {
    return e instanceof this ? e : new this(e);
  }
  static concat(e, ...r) {
    const n = new this(e);
    return r.forEach((i) => n.set(i)), n;
  }
  static accessor(e) {
    const n = (this[bd] = this[bd] = {
      accessors: {}
    }).accessors, i = this.prototype;
    function l(g) {
      const a = zi(g);
      n[a] || (OO(i, g), n[a] = !0);
    }
    return q.isArray(e) ? e.forEach(l) : l(e), this;
  }
}
Oa.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
q.reduceDescriptors(Oa.prototype, ({ value: t }, e) => {
  let r = e[0].toUpperCase() + e.slice(1);
  return {
    get: () => t,
    set(n) {
      this[r] = n;
    }
  };
});
q.freezeMethods(Oa);
const Yt = Oa;
function vl(t, e) {
  const r = this || Zu, n = e || r, i = Yt.from(n.headers);
  let l = n.data;
  return q.forEach(t, function(a) {
    l = a.call(r, l, i.normalize(), e ? e.status : void 0);
  }), i.normalize(), l;
}
function Ov(t) {
  return !!(t && t.__CANCEL__);
}
function Pi(t, e, r) {
  Ee.call(this, t ?? "canceled", Ee.ERR_CANCELED, e, r), this.name = "CanceledError";
}
q.inherits(Pi, Ee, {
  __CANCEL__: !0
});
function Av(t, e, r) {
  const n = r.config.validateStatus;
  !r.status || !n || n(r.status) ? t(r) : e(new Ee(
    "Request failed with status code " + r.status,
    [Ee.ERR_BAD_REQUEST, Ee.ERR_BAD_RESPONSE][Math.floor(r.status / 100) - 4],
    r.config,
    r.request,
    r
  ));
}
function AO(t) {
  const e = /^([-+\w]{1,25})(:?\/\/|:)/.exec(t);
  return e && e[1] || "";
}
function DO(t, e) {
  t = t || 10;
  const r = new Array(t), n = new Array(t);
  let i = 0, l = 0, g;
  return e = e !== void 0 ? e : 1e3, function(s) {
    const c = Date.now(), f = n[l];
    g || (g = c), r[i] = s, n[i] = c;
    let o = l, h = 0;
    for (; o !== i; )
      h += r[o++], o = o % t;
    if (i = (i + 1) % t, i === l && (l = (l + 1) % t), c - g < e)
      return;
    const u = f && c - f;
    return u ? Math.round(h * 1e3 / u) : void 0;
  };
}
function PO(t, e) {
  let r = 0;
  const n = 1e3 / e;
  let i = null;
  return function() {
    const g = this === !0, a = Date.now();
    if (g || a - r > n)
      return i && (clearTimeout(i), i = null), r = a, t.apply(null, arguments);
    i || (i = setTimeout(() => (i = null, r = Date.now(), t.apply(null, arguments)), n - (a - r)));
  };
}
const Vo = (t, e, r = 3) => {
  let n = 0;
  const i = DO(50, 250);
  return PO((l) => {
    const g = l.loaded, a = l.lengthComputable ? l.total : void 0, s = g - n, c = i(s), f = g <= a;
    n = g;
    const o = {
      loaded: g,
      total: a,
      progress: a ? g / a : void 0,
      bytes: s,
      rate: c || void 0,
      estimated: c && a && f ? (a - g) / c : void 0,
      event: l,
      lengthComputable: a != null
    };
    o[e ? "download" : "upload"] = !0, t(o);
  }, r);
}, MO = Xt.hasStandardBrowserEnv ? (
  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  function() {
    const e = /(msie|trident)/i.test(navigator.userAgent), r = document.createElement("a");
    let n;
    function i(l) {
      let g = l;
      return e && (r.setAttribute("href", g), g = r.href), r.setAttribute("href", g), {
        href: r.href,
        protocol: r.protocol ? r.protocol.replace(/:$/, "") : "",
        host: r.host,
        search: r.search ? r.search.replace(/^\?/, "") : "",
        hash: r.hash ? r.hash.replace(/^#/, "") : "",
        hostname: r.hostname,
        port: r.port,
        pathname: r.pathname.charAt(0) === "/" ? r.pathname : "/" + r.pathname
      };
    }
    return n = i(window.location.href), function(g) {
      const a = q.isString(g) ? i(g) : g;
      return a.protocol === n.protocol && a.host === n.host;
    };
  }()
) : (
  // Non standard browser envs (web workers, react-native) lack needed support.
  function() {
    return function() {
      return !0;
    };
  }()
), FO = Xt.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(t, e, r, n, i, l) {
      const g = [t + "=" + encodeURIComponent(e)];
      q.isNumber(r) && g.push("expires=" + new Date(r).toGMTString()), q.isString(n) && g.push("path=" + n), q.isString(i) && g.push("domain=" + i), l === !0 && g.push("secure"), document.cookie = g.join("; ");
    },
    read(t) {
      const e = document.cookie.match(new RegExp("(^|;\\s*)(" + t + ")=([^;]*)"));
      return e ? decodeURIComponent(e[3]) : null;
    },
    remove(t) {
      this.write(t, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);
function RO(t) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(t);
}
function IO(t, e) {
  return e ? t.replace(/\/?\/$/, "") + "/" + e.replace(/^\/+/, "") : t;
}
function Dv(t, e) {
  return t && !RO(e) ? IO(t, e) : e;
}
const yd = (t) => t instanceof Yt ? { ...t } : t;
function An(t, e) {
  e = e || {};
  const r = {};
  function n(c, f, o) {
    return q.isPlainObject(c) && q.isPlainObject(f) ? q.merge.call({ caseless: o }, c, f) : q.isPlainObject(f) ? q.merge({}, f) : q.isArray(f) ? f.slice() : f;
  }
  function i(c, f, o) {
    if (q.isUndefined(f)) {
      if (!q.isUndefined(c))
        return n(void 0, c, o);
    } else
      return n(c, f, o);
  }
  function l(c, f) {
    if (!q.isUndefined(f))
      return n(void 0, f);
  }
  function g(c, f) {
    if (q.isUndefined(f)) {
      if (!q.isUndefined(c))
        return n(void 0, c);
    } else
      return n(void 0, f);
  }
  function a(c, f, o) {
    if (o in e)
      return n(c, f);
    if (o in t)
      return n(void 0, c);
  }
  const s = {
    url: l,
    method: l,
    data: l,
    baseURL: g,
    transformRequest: g,
    transformResponse: g,
    paramsSerializer: g,
    timeout: g,
    timeoutMessage: g,
    withCredentials: g,
    withXSRFToken: g,
    adapter: g,
    responseType: g,
    xsrfCookieName: g,
    xsrfHeaderName: g,
    onUploadProgress: g,
    onDownloadProgress: g,
    decompress: g,
    maxContentLength: g,
    maxBodyLength: g,
    beforeRedirect: g,
    transport: g,
    httpAgent: g,
    httpsAgent: g,
    cancelToken: g,
    socketPath: g,
    responseEncoding: g,
    validateStatus: a,
    headers: (c, f) => i(yd(c), yd(f), !0)
  };
  return q.forEach(Object.keys(Object.assign({}, t, e)), function(f) {
    const o = s[f] || i, h = o(t[f], e[f], f);
    q.isUndefined(h) && o !== a || (r[f] = h);
  }), r;
}
const Pv = (t) => {
  const e = An({}, t);
  let { data: r, withXSRFToken: n, xsrfHeaderName: i, xsrfCookieName: l, headers: g, auth: a } = e;
  e.headers = g = Yt.from(g), e.url = Tv(Dv(e.baseURL, e.url), t.params, t.paramsSerializer), a && g.set(
    "Authorization",
    "Basic " + btoa((a.username || "") + ":" + (a.password ? unescape(encodeURIComponent(a.password)) : ""))
  );
  let s;
  if (q.isFormData(r)) {
    if (Xt.hasStandardBrowserEnv || Xt.hasStandardBrowserWebWorkerEnv)
      g.setContentType(void 0);
    else if ((s = g.getContentType()) !== !1) {
      const [c, ...f] = s ? s.split(";").map((o) => o.trim()).filter(Boolean) : [];
      g.setContentType([c || "multipart/form-data", ...f].join("; "));
    }
  }
  if (Xt.hasStandardBrowserEnv && (n && q.isFunction(n) && (n = n(e)), n || n !== !1 && MO(e.url))) {
    const c = i && l && FO.read(l);
    c && g.set(i, c);
  }
  return e;
}, LO = typeof XMLHttpRequest < "u", BO = LO && function(t) {
  return new Promise(function(r, n) {
    const i = Pv(t);
    let l = i.data;
    const g = Yt.from(i.headers).normalize();
    let { responseType: a } = i, s;
    function c() {
      i.cancelToken && i.cancelToken.unsubscribe(s), i.signal && i.signal.removeEventListener("abort", s);
    }
    let f = new XMLHttpRequest();
    f.open(i.method.toUpperCase(), i.url, !0), f.timeout = i.timeout;
    function o() {
      if (!f)
        return;
      const u = Yt.from(
        "getAllResponseHeaders" in f && f.getAllResponseHeaders()
      ), m = {
        data: !a || a === "text" || a === "json" ? f.responseText : f.response,
        status: f.status,
        statusText: f.statusText,
        headers: u,
        config: t,
        request: f
      };
      Av(function(v) {
        r(v), c();
      }, function(v) {
        n(v), c();
      }, m), f = null;
    }
    "onloadend" in f ? f.onloadend = o : f.onreadystatechange = function() {
      !f || f.readyState !== 4 || f.status === 0 && !(f.responseURL && f.responseURL.indexOf("file:") === 0) || setTimeout(o);
    }, f.onabort = function() {
      f && (n(new Ee("Request aborted", Ee.ECONNABORTED, i, f)), f = null);
    }, f.onerror = function() {
      n(new Ee("Network Error", Ee.ERR_NETWORK, i, f)), f = null;
    }, f.ontimeout = function() {
      let d = i.timeout ? "timeout of " + i.timeout + "ms exceeded" : "timeout exceeded";
      const m = i.transitional || Ev;
      i.timeoutErrorMessage && (d = i.timeoutErrorMessage), n(new Ee(
        d,
        m.clarifyTimeoutError ? Ee.ETIMEDOUT : Ee.ECONNABORTED,
        i,
        f
      )), f = null;
    }, l === void 0 && g.setContentType(null), "setRequestHeader" in f && q.forEach(g.toJSON(), function(d, m) {
      f.setRequestHeader(m, d);
    }), q.isUndefined(i.withCredentials) || (f.withCredentials = !!i.withCredentials), a && a !== "json" && (f.responseType = i.responseType), typeof i.onDownloadProgress == "function" && f.addEventListener("progress", Vo(i.onDownloadProgress, !0)), typeof i.onUploadProgress == "function" && f.upload && f.upload.addEventListener("progress", Vo(i.onUploadProgress)), (i.cancelToken || i.signal) && (s = (u) => {
      f && (n(!u || u.type ? new Pi(null, t, f) : u), f.abort(), f = null);
    }, i.cancelToken && i.cancelToken.subscribe(s), i.signal && (i.signal.aborted ? s() : i.signal.addEventListener("abort", s)));
    const h = AO(i.url);
    if (h && Xt.protocols.indexOf(h) === -1) {
      n(new Ee("Unsupported protocol " + h + ":", Ee.ERR_BAD_REQUEST, t));
      return;
    }
    f.send(l || null);
  });
}, zO = (t, e) => {
  let r = new AbortController(), n;
  const i = function(s) {
    if (!n) {
      n = !0, g();
      const c = s instanceof Error ? s : this.reason;
      r.abort(c instanceof Ee ? c : new Pi(c instanceof Error ? c.message : c));
    }
  };
  let l = e && setTimeout(() => {
    i(new Ee(`timeout ${e} of ms exceeded`, Ee.ETIMEDOUT));
  }, e);
  const g = () => {
    t && (l && clearTimeout(l), l = null, t.forEach((s) => {
      s && (s.removeEventListener ? s.removeEventListener("abort", i) : s.unsubscribe(i));
    }), t = null);
  };
  t.forEach((s) => s && s.addEventListener && s.addEventListener("abort", i));
  const { signal: a } = r;
  return a.unsubscribe = g, [a, () => {
    l && clearTimeout(l), l = null;
  }];
}, NO = zO, jO = function* (t, e) {
  let r = t.byteLength;
  if (!e || r < e) {
    yield t;
    return;
  }
  let n = 0, i;
  for (; n < r; )
    i = n + e, yield t.slice(n, i), n = i;
}, $O = async function* (t, e, r) {
  for await (const n of t)
    yield* jO(ArrayBuffer.isView(n) ? n : await r(String(n)), e);
}, wd = (t, e, r, n, i) => {
  const l = $O(t, e, i);
  let g = 0;
  return new ReadableStream({
    type: "bytes",
    async pull(a) {
      const { done: s, value: c } = await l.next();
      if (s) {
        a.close(), n();
        return;
      }
      let f = c.byteLength;
      r && r(g += f), a.enqueue(new Uint8Array(c));
    },
    cancel(a) {
      return n(a), l.return();
    }
  }, {
    highWaterMark: 2
  });
}, xd = (t, e) => {
  const r = t != null;
  return (n) => setTimeout(() => e({
    lengthComputable: r,
    total: t,
    loaded: n
  }));
}, Aa = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", Mv = Aa && typeof ReadableStream == "function", Tc = Aa && (typeof TextEncoder == "function" ? ((t) => (e) => t.encode(e))(new TextEncoder()) : async (t) => new Uint8Array(await new Response(t).arrayBuffer())), VO = Mv && (() => {
  let t = !1;
  const e = new Request(Xt.origin, {
    body: new ReadableStream(),
    method: "POST",
    get duplex() {
      return t = !0, "half";
    }
  }).headers.has("Content-Type");
  return t && !e;
})(), Cd = 64 * 1024, Ec = Mv && !!(() => {
  try {
    return q.isReadableStream(new Response("").body);
  } catch {
  }
})(), Ho = {
  stream: Ec && ((t) => t.body)
};
Aa && ((t) => {
  ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((e) => {
    !Ho[e] && (Ho[e] = q.isFunction(t[e]) ? (r) => r[e]() : (r, n) => {
      throw new Ee(`Response type '${e}' is not supported`, Ee.ERR_NOT_SUPPORT, n);
    });
  });
})(new Response());
const HO = async (t) => {
  if (t == null)
    return 0;
  if (q.isBlob(t))
    return t.size;
  if (q.isSpecCompliantForm(t))
    return (await new Request(t).arrayBuffer()).byteLength;
  if (q.isArrayBufferView(t))
    return t.byteLength;
  if (q.isURLSearchParams(t) && (t = t + ""), q.isString(t))
    return (await Tc(t)).byteLength;
}, UO = async (t, e) => {
  const r = q.toFiniteNumber(t.getContentLength());
  return r ?? HO(e);
}, WO = Aa && (async (t) => {
  let {
    url: e,
    method: r,
    data: n,
    signal: i,
    cancelToken: l,
    timeout: g,
    onDownloadProgress: a,
    onUploadProgress: s,
    responseType: c,
    headers: f,
    withCredentials: o = "same-origin",
    fetchOptions: h
  } = Pv(t);
  c = c ? (c + "").toLowerCase() : "text";
  let [u, d] = i || l || g ? NO([i, l], g) : [], m, p;
  const v = () => {
    !m && setTimeout(() => {
      u && u.unsubscribe();
    }), m = !0;
  };
  let b;
  try {
    if (s && VO && r !== "get" && r !== "head" && (b = await UO(f, n)) !== 0) {
      let _ = new Request(e, {
        method: "POST",
        body: n,
        duplex: "half"
      }), S;
      q.isFormData(n) && (S = _.headers.get("content-type")) && f.setContentType(S), _.body && (n = wd(_.body, Cd, xd(
        b,
        Vo(s)
      ), null, Tc));
    }
    q.isString(o) || (o = o ? "cors" : "omit"), p = new Request(e, {
      ...h,
      signal: u,
      method: r.toUpperCase(),
      headers: f.normalize().toJSON(),
      body: n,
      duplex: "half",
      withCredentials: o
    });
    let y = await fetch(p);
    const w = Ec && (c === "stream" || c === "response");
    if (Ec && (a || w)) {
      const _ = {};
      ["status", "statusText", "headers"].forEach((k) => {
        _[k] = y[k];
      });
      const S = q.toFiniteNumber(y.headers.get("content-length"));
      y = new Response(
        wd(y.body, Cd, a && xd(
          S,
          Vo(a, !0)
        ), w && v, Tc),
        _
      );
    }
    c = c || "text";
    let x = await Ho[q.findKey(Ho, c) || "text"](y, t);
    return !w && v(), d && d(), await new Promise((_, S) => {
      Av(_, S, {
        data: x,
        headers: Yt.from(y.headers),
        status: y.status,
        statusText: y.statusText,
        config: t,
        request: p
      });
    });
  } catch (y) {
    throw v(), y && y.name === "TypeError" && /fetch/i.test(y.message) ? Object.assign(
      new Ee("Network Error", Ee.ERR_NETWORK, t, p),
      {
        cause: y.cause || y
      }
    ) : Ee.from(y, y && y.code, t, p);
  }
}), kc = {
  http: oO,
  xhr: BO,
  fetch: WO
};
q.forEach(kc, (t, e) => {
  if (t) {
    try {
      Object.defineProperty(t, "name", { value: e });
    } catch {
    }
    Object.defineProperty(t, "adapterName", { value: e });
  }
});
const _d = (t) => `- ${t}`, XO = (t) => q.isFunction(t) || t === null || t === !1, Fv = {
  getAdapter: (t) => {
    t = q.isArray(t) ? t : [t];
    const { length: e } = t;
    let r, n;
    const i = {};
    for (let l = 0; l < e; l++) {
      r = t[l];
      let g;
      if (n = r, !XO(r) && (n = kc[(g = String(r)).toLowerCase()], n === void 0))
        throw new Ee(`Unknown adapter '${g}'`);
      if (n)
        break;
      i[g || "#" + l] = n;
    }
    if (!n) {
      const l = Object.entries(i).map(
        ([a, s]) => `adapter ${a} ` + (s === !1 ? "is not supported by the environment" : "is not available in the build")
      );
      let g = e ? l.length > 1 ? `since :
` + l.map(_d).join(`
`) : " " + _d(l[0]) : "as no adapter specified";
      throw new Ee(
        "There is no suitable adapter to dispatch the request " + g,
        "ERR_NOT_SUPPORT"
      );
    }
    return n;
  },
  adapters: kc
};
function bl(t) {
  if (t.cancelToken && t.cancelToken.throwIfRequested(), t.signal && t.signal.aborted)
    throw new Pi(null, t);
}
function Sd(t) {
  return bl(t), t.headers = Yt.from(t.headers), t.data = vl.call(
    t,
    t.transformRequest
  ), ["post", "put", "patch"].indexOf(t.method) !== -1 && t.headers.setContentType("application/x-www-form-urlencoded", !1), Fv.getAdapter(t.adapter || Zu.adapter)(t).then(function(n) {
    return bl(t), n.data = vl.call(
      t,
      t.transformResponse,
      n
    ), n.headers = Yt.from(n.headers), n;
  }, function(n) {
    return Ov(n) || (bl(t), n && n.response && (n.response.data = vl.call(
      t,
      t.transformResponse,
      n.response
    ), n.response.headers = Yt.from(n.response.headers))), Promise.reject(n);
  });
}
const Rv = "1.7.2", Qu = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((t, e) => {
  Qu[t] = function(n) {
    return typeof n === t || "a" + (e < 1 ? "n " : " ") + t;
  };
});
const Td = {};
Qu.transitional = function(e, r, n) {
  function i(l, g) {
    return "[Axios v" + Rv + "] Transitional option '" + l + "'" + g + (n ? ". " + n : "");
  }
  return (l, g, a) => {
    if (e === !1)
      throw new Ee(
        i(g, " has been removed" + (r ? " in " + r : "")),
        Ee.ERR_DEPRECATED
      );
    return r && !Td[g] && (Td[g] = !0, console.warn(
      i(
        g,
        " has been deprecated since v" + r + " and will be removed in the near future"
      )
    )), e ? e(l, g, a) : !0;
  };
};
function YO(t, e, r) {
  if (typeof t != "object")
    throw new Ee("options must be an object", Ee.ERR_BAD_OPTION_VALUE);
  const n = Object.keys(t);
  let i = n.length;
  for (; i-- > 0; ) {
    const l = n[i], g = e[l];
    if (g) {
      const a = t[l], s = a === void 0 || g(a, l, t);
      if (s !== !0)
        throw new Ee("option " + l + " must be " + s, Ee.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (r !== !0)
      throw new Ee("Unknown option " + l, Ee.ERR_BAD_OPTION);
  }
}
const Oc = {
  assertOptions: YO,
  validators: Qu
}, Or = Oc.validators;
class Uo {
  constructor(e) {
    this.defaults = e, this.interceptors = {
      request: new vd(),
      response: new vd()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(e, r) {
    try {
      return await this._request(e, r);
    } catch (n) {
      if (n instanceof Error) {
        let i;
        Error.captureStackTrace ? Error.captureStackTrace(i = {}) : i = new Error();
        const l = i.stack ? i.stack.replace(/^.+\n/, "") : "";
        try {
          n.stack ? l && !String(n.stack).endsWith(l.replace(/^.+\n.+\n/, "")) && (n.stack += `
` + l) : n.stack = l;
        } catch {
        }
      }
      throw n;
    }
  }
  _request(e, r) {
    typeof e == "string" ? (r = r || {}, r.url = e) : r = e || {}, r = An(this.defaults, r);
    const { transitional: n, paramsSerializer: i, headers: l } = r;
    n !== void 0 && Oc.assertOptions(n, {
      silentJSONParsing: Or.transitional(Or.boolean),
      forcedJSONParsing: Or.transitional(Or.boolean),
      clarifyTimeoutError: Or.transitional(Or.boolean)
    }, !1), i != null && (q.isFunction(i) ? r.paramsSerializer = {
      serialize: i
    } : Oc.assertOptions(i, {
      encode: Or.function,
      serialize: Or.function
    }, !0)), r.method = (r.method || this.defaults.method || "get").toLowerCase();
    let g = l && q.merge(
      l.common,
      l[r.method]
    );
    l && q.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (d) => {
        delete l[d];
      }
    ), r.headers = Yt.concat(g, l);
    const a = [];
    let s = !0;
    this.interceptors.request.forEach(function(m) {
      typeof m.runWhen == "function" && m.runWhen(r) === !1 || (s = s && m.synchronous, a.unshift(m.fulfilled, m.rejected));
    });
    const c = [];
    this.interceptors.response.forEach(function(m) {
      c.push(m.fulfilled, m.rejected);
    });
    let f, o = 0, h;
    if (!s) {
      const d = [Sd.bind(this), void 0];
      for (d.unshift.apply(d, a), d.push.apply(d, c), h = d.length, f = Promise.resolve(r); o < h; )
        f = f.then(d[o++], d[o++]);
      return f;
    }
    h = a.length;
    let u = r;
    for (o = 0; o < h; ) {
      const d = a[o++], m = a[o++];
      try {
        u = d(u);
      } catch (p) {
        m.call(this, p);
        break;
      }
    }
    try {
      f = Sd.call(this, u);
    } catch (d) {
      return Promise.reject(d);
    }
    for (o = 0, h = c.length; o < h; )
      f = f.then(c[o++], c[o++]);
    return f;
  }
  getUri(e) {
    e = An(this.defaults, e);
    const r = Dv(e.baseURL, e.url);
    return Tv(r, e.params, e.paramsSerializer);
  }
}
q.forEach(["delete", "get", "head", "options"], function(e) {
  Uo.prototype[e] = function(r, n) {
    return this.request(An(n || {}, {
      method: e,
      url: r,
      data: (n || {}).data
    }));
  };
});
q.forEach(["post", "put", "patch"], function(e) {
  function r(n) {
    return function(l, g, a) {
      return this.request(An(a || {}, {
        method: e,
        headers: n ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url: l,
        data: g
      }));
    };
  }
  Uo.prototype[e] = r(), Uo.prototype[e + "Form"] = r(!0);
});
const po = Uo;
class eh {
  constructor(e) {
    if (typeof e != "function")
      throw new TypeError("executor must be a function.");
    let r;
    this.promise = new Promise(function(l) {
      r = l;
    });
    const n = this;
    this.promise.then((i) => {
      if (!n._listeners)
        return;
      let l = n._listeners.length;
      for (; l-- > 0; )
        n._listeners[l](i);
      n._listeners = null;
    }), this.promise.then = (i) => {
      let l;
      const g = new Promise((a) => {
        n.subscribe(a), l = a;
      }).then(i);
      return g.cancel = function() {
        n.unsubscribe(l);
      }, g;
    }, e(function(l, g, a) {
      n.reason || (n.reason = new Pi(l, g, a), r(n.reason));
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason)
      throw this.reason;
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(e) {
    if (this.reason) {
      e(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(e) : this._listeners = [e];
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(e) {
    if (!this._listeners)
      return;
    const r = this._listeners.indexOf(e);
    r !== -1 && this._listeners.splice(r, 1);
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let e;
    return {
      token: new eh(function(i) {
        e = i;
      }),
      cancel: e
    };
  }
}
const GO = eh;
function qO(t) {
  return function(r) {
    return t.apply(null, r);
  };
}
function KO(t) {
  return q.isObject(t) && t.isAxiosError === !0;
}
const Ac = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(Ac).forEach(([t, e]) => {
  Ac[e] = t;
});
const JO = Ac;
function Iv(t) {
  const e = new po(t), r = dv(po.prototype.request, e);
  return q.extend(r, po.prototype, e, { allOwnKeys: !0 }), q.extend(r, e, null, { allOwnKeys: !0 }), r.create = function(i) {
    return Iv(An(t, i));
  }, r;
}
const Qe = Iv(Zu);
Qe.Axios = po;
Qe.CanceledError = Pi;
Qe.CancelToken = GO;
Qe.isCancel = Ov;
Qe.VERSION = Rv;
Qe.toFormData = ka;
Qe.AxiosError = Ee;
Qe.Cancel = Qe.CanceledError;
Qe.all = function(e) {
  return Promise.all(e);
};
Qe.spread = qO;
Qe.isAxiosError = KO;
Qe.mergeConfig = An;
Qe.AxiosHeaders = Yt;
Qe.formToJSON = (t) => kv(q.isHTMLForm(t) ? new FormData(t) : t);
Qe.getAdapter = Fv.getAdapter;
Qe.HttpStatusCode = JO;
Qe.default = Qe;
const Lv = Qe;
function yl(t, e) {
  var r;
  return Lv.isAxiosError(t) && ((r = t.response) == null ? void 0 : r.status) == e;
}
const Bv = new xk({
  defaultOptions: {
    queries: {
      staleTime: 3e4,
      retry: (t, e) => !yl(e, 401) && !yl(e, 403) && !yl(e, 404) && t < 2
    }
  }
}), Da = Lv.create();
Da.defaults.withCredentials = !0;
Da.defaults.responseType = "json";
Da.defaults.headers = {
  common: {
    Accept: "application/json"
  }
};
const ZO = ["auth", "secure", "log-viewer", "horizon"];
Da.interceptors.request.use((t) => {
  var r, n, i, l;
  !ZO.some((g) => {
    var a;
    return (a = t.url) == null ? void 0 : a.startsWith(g);
  }) && !Ru(t == null ? void 0 : t.url) && (t.url = `api/v1/${t.url}`);
  const e = (r = t.method) == null ? void 0 : r.toUpperCase();
  return e === "GET" && Array.isArray((n = t.params) == null ? void 0 : n.with) && (t.params.with = t.params.with.join(",")), e === "GET" && Array.isArray((i = t.params) == null ? void 0 : i.load) && (t.params.load = t.params.load.join(",")), e === "GET" && Array.isArray((l = t.params) == null ? void 0 : l.loadCount) && (t.params.loadCount = t.params.loadCount.join(",")), (e === "PUT" || e === "DELETE" || e === "PATCH") && (t.headers = {
    ...t.headers,
    "X-HTTP-Method-Override": e
  }, t.method = "POST", t.params = {
    ...t.params,
    _method: e
  }), t;
});
const zv = ["bootstrapData"];
function QO() {
  return Bv.getQueryData(zv);
}
const eA = typeof window < "u" && window.bootstrapData ? tA(window.bootstrapData) : void 0;
Bv.setQueryData(zv, eA);
function tA(t) {
  return typeof t == "string" ? JSON.parse(t) : t;
}
const rA = 768;
function nA() {
  return Pu() || typeof window > "u" ? QO().is_mobile_device : window.screen.width <= rA;
}
const Pa = {
  initial: { opacity: 0, y: 5 },
  animate: { opacity: 1, y: 0 },
  exit: { opacity: 0, y: 5 },
  transition: { type: "tween", duration: 0.125 }
};
function th() {
  const { width: t, height: e } = F3();
  return {
    "--be-viewport-height": `${e}px`,
    "--be-viewport-width": `${t}px`
  };
}
let Ls = null, iA = /* @__PURE__ */ new Set(), Ji = /* @__PURE__ */ new Map(), Dn = !1, Dc = !1;
function rh(t, e) {
  for (let r of iA)
    r(t, e);
}
function sA(t) {
  return !(t.metaKey || !I0() && t.altKey || t.ctrlKey || t.key === "Control" || t.key === "Shift" || t.key === "Meta");
}
function Wo(t) {
  Dn = !0, sA(t) && (Ls = "keyboard", rh("keyboard", t));
}
function Bt(t) {
  Ls = "pointer", (t.type === "mousedown" || t.type === "pointerdown") && (Dn = !0, rh("pointer", t));
}
function Nv(t) {
  R3(t) && (Dn = !0, Ls = "virtual");
}
function jv(t) {
  t.target === window || t.target === document || (!Dn && !Dc && (Ls = "virtual", rh("virtual", t)), Dn = !1, Dc = !1);
}
function $v() {
  Dn = !1, Dc = !0;
}
function Ed(t) {
  if (typeof window > "u" || Ji.get(Io(t)))
    return;
  const e = Io(t), r = dt(t);
  let n = e.HTMLElement.prototype.focus;
  e.HTMLElement.prototype.focus = function() {
    Dn = !0, n.apply(this, arguments);
  }, r.addEventListener("keydown", Wo, !0), r.addEventListener("keyup", Wo, !0), r.addEventListener("click", Nv, !0), e.addEventListener("focus", jv, !0), e.addEventListener("blur", $v, !1), typeof PointerEvent < "u" ? (r.addEventListener("pointerdown", Bt, !0), r.addEventListener("pointermove", Bt, !0), r.addEventListener("pointerup", Bt, !0)) : (r.addEventListener("mousedown", Bt, !0), r.addEventListener("mousemove", Bt, !0), r.addEventListener("mouseup", Bt, !0)), e.addEventListener("beforeunload", () => {
    Vv(t);
  }, {
    once: !0
  }), Ji.set(e, {
    focus: n
  });
}
const Vv = (t, e) => {
  const r = Io(t), n = dt(t);
  e && n.removeEventListener("DOMContentLoaded", e), Ji.has(r) && (r.HTMLElement.prototype.focus = Ji.get(r).focus, n.removeEventListener("keydown", Wo, !0), n.removeEventListener("keyup", Wo, !0), n.removeEventListener("click", Nv, !0), r.removeEventListener("focus", jv, !0), r.removeEventListener("blur", $v, !1), typeof PointerEvent < "u" ? (n.removeEventListener("pointerdown", Bt, !0), n.removeEventListener("pointermove", Bt, !0), n.removeEventListener("pointerup", Bt, !0)) : (n.removeEventListener("mousedown", Bt, !0), n.removeEventListener("mousemove", Bt, !0), n.removeEventListener("mouseup", Bt, !0)), Ji.delete(r));
};
function oA(t) {
  const e = dt(t);
  let r;
  return e.readyState !== "loading" ? Ed(t) : (r = () => {
    Ed(t);
  }, e.addEventListener("DOMContentLoaded", r)), () => Vv(t, r);
}
typeof document < "u" && oA();
function aA() {
  return Ls;
}
function lA(t) {
  const e = dt(t);
  if (aA() === "virtual") {
    let r = e.activeElement;
    M3(() => {
      e.activeElement === r && t.isConnected && Nf(t);
    });
  } else
    Nf(t);
}
function cA(t) {
  const e = Io(t);
  if (!(t instanceof e.HTMLElement) && !(t instanceof e.SVGElement))
    return !1;
  let { display: r, visibility: n } = t.style, i = r !== "none" && n !== "hidden" && n !== "collapse";
  if (i) {
    const { getComputedStyle: l } = t.ownerDocument.defaultView;
    let { display: g, visibility: a } = l(t);
    i = g !== "none" && a !== "hidden" && a !== "collapse";
  }
  return i;
}
function uA(t, e) {
  return !t.hasAttribute("hidden") && // Ignore HiddenSelect when tree walking.
  !t.hasAttribute("data-react-aria-prevent-focus") && (t.nodeName === "DETAILS" && e && e.nodeName !== "SUMMARY" ? t.hasAttribute("open") : !0);
}
function Hv(t, e) {
  return t.nodeName !== "#comment" && cA(t) && uA(t, e) && (!t.parentElement || Hv(t.parentElement, t));
}
const Pc = /* @__PURE__ */ he.createContext(null);
let He = null;
function Ma(t) {
  let { children: e, contain: r, restoreFocus: n, autoFocus: i } = t, l = ge(null), g = ge(null), a = ge([]), { parentNode: s } = Ve(Pc) || {}, c = Ye(() => new Fc({
    scopeRef: a
  }), [
    a
  ]);
  Ot(() => {
    let h = s || Je.root;
    if (Je.getTreeNode(h.scopeRef) && He && !Xo(He, h.scopeRef)) {
      let u = Je.getTreeNode(He);
      u && (h = u);
    }
    h.addChild(c), Je.addNode(c);
  }, [
    c,
    s
  ]), Ot(() => {
    let h = Je.getTreeNode(a);
    h && (h.contain = !!r);
  }, [
    r
  ]), Ot(() => {
    var h;
    let u = (h = l.current) === null || h === void 0 ? void 0 : h.nextSibling, d = [];
    for (; u && u !== g.current; )
      d.push(u), u = u.nextSibling;
    a.current = d;
  }, [
    e
  ]), vA(a, n, r), gA(a, r), yA(a, n, r), mA(a, i), ke(() => {
    const h = dt(a.current ? a.current[0] : void 0).activeElement;
    let u = null;
    if (ht(h, a.current)) {
      for (let d of Je.traverse())
        d.scopeRef && ht(h, d.scopeRef.current) && (u = d);
      u === Je.getTreeNode(a) && (He = u.scopeRef);
    }
  }, [
    a
  ]), Ot(() => () => {
    var h, u, d;
    let m = (d = (u = Je.getTreeNode(a)) === null || u === void 0 || (h = u.parent) === null || h === void 0 ? void 0 : h.scopeRef) !== null && d !== void 0 ? d : null;
    (a === He || Xo(a, He)) && (!m || Je.getTreeNode(m)) && (He = m), Je.removeTreeNode(a);
  }, [
    a
  ]);
  let f = Ye(() => fA(a), []), o = Ye(() => ({
    focusManager: f,
    parentNode: c
  }), [
    c,
    f
  ]);
  return /* @__PURE__ */ he.createElement(Pc.Provider, {
    value: o
  }, /* @__PURE__ */ he.createElement("span", {
    "data-focus-scope-start": !0,
    hidden: !0,
    ref: l
  }), e, /* @__PURE__ */ he.createElement("span", {
    "data-focus-scope-end": !0,
    hidden: !0,
    ref: g
  }));
}
function hA() {
  var t;
  return (t = Ve(Pc)) === null || t === void 0 ? void 0 : t.focusManager;
}
function fA(t) {
  return {
    focusNext(e = {}) {
      let r = t.current, { from: n, tabbable: i, wrap: l, accept: g } = e, a = n || dt(r[0]).activeElement, s = r[0].previousElementSibling, c = dn(r), f = pr(c, {
        tabbable: i,
        accept: g
      }, r);
      f.currentNode = ht(a, r) ? a : s;
      let o = f.nextNode();
      return !o && l && (f.currentNode = s, o = f.nextNode()), o && dr(o, !0), o;
    },
    focusPrevious(e = {}) {
      let r = t.current, { from: n, tabbable: i, wrap: l, accept: g } = e, a = n || dt(r[0]).activeElement, s = r[r.length - 1].nextElementSibling, c = dn(r), f = pr(c, {
        tabbable: i,
        accept: g
      }, r);
      f.currentNode = ht(a, r) ? a : s;
      let o = f.previousNode();
      return !o && l && (f.currentNode = s, o = f.previousNode()), o && dr(o, !0), o;
    },
    focusFirst(e = {}) {
      let r = t.current, { tabbable: n, accept: i } = e, l = dn(r), g = pr(l, {
        tabbable: n,
        accept: i
      }, r);
      g.currentNode = r[0].previousElementSibling;
      let a = g.nextNode();
      return a && dr(a, !0), a;
    },
    focusLast(e = {}) {
      let r = t.current, { tabbable: n, accept: i } = e, l = dn(r), g = pr(l, {
        tabbable: n,
        accept: i
      }, r);
      g.currentNode = r[r.length - 1].nextElementSibling;
      let a = g.previousNode();
      return a && dr(a, !0), a;
    }
  };
}
const nh = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
], dA = nh.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
nh.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
const pA = nh.join(':not([hidden]):not([tabindex="-1"]),');
function dn(t) {
  return t[0].parentElement;
}
function Xi(t) {
  let e = Je.getTreeNode(He);
  for (; e && e.scopeRef !== t; ) {
    if (e.contain)
      return !1;
    e = e.parent;
  }
  return !0;
}
function gA(t, e) {
  let r = ge(), n = ge();
  Ot(() => {
    let i = t.current;
    if (!e) {
      n.current && (cancelAnimationFrame(n.current), n.current = void 0);
      return;
    }
    const l = dt(i ? i[0] : void 0);
    let g = (c) => {
      if (c.key !== "Tab" || c.altKey || c.ctrlKey || c.metaKey || !Xi(t) || c.isComposing)
        return;
      let f = l.activeElement, o = t.current;
      if (!o || !ht(f, o))
        return;
      let h = dn(o), u = pr(h, {
        tabbable: !0
      }, o);
      if (!f)
        return;
      u.currentNode = f;
      let d = c.shiftKey ? u.previousNode() : u.nextNode();
      d || (u.currentNode = c.shiftKey ? o[o.length - 1].nextElementSibling : o[0].previousElementSibling, d = c.shiftKey ? u.previousNode() : u.nextNode()), c.preventDefault(), d && dr(d, !0);
    }, a = (c) => {
      (!He || Xo(He, t)) && ht(c.target, t.current) ? (He = t, r.current = c.target) : Xi(t) && !Mc(c.target, t) ? r.current ? r.current.focus() : He && He.current && Yo(He.current) : Xi(t) && (r.current = c.target);
    }, s = (c) => {
      n.current && cancelAnimationFrame(n.current), n.current = requestAnimationFrame(() => {
        if (l.activeElement && Xi(t) && !Mc(l.activeElement, t))
          if (He = t, l.body.contains(c.target)) {
            var f;
            r.current = c.target, (f = r.current) === null || f === void 0 || f.focus();
          } else
            He.current && Yo(He.current);
      });
    };
    return l.addEventListener("keydown", g, !1), l.addEventListener("focusin", a, !1), i == null || i.forEach((c) => c.addEventListener("focusin", a, !1)), i == null || i.forEach((c) => c.addEventListener("focusout", s, !1)), () => {
      l.removeEventListener("keydown", g, !1), l.removeEventListener("focusin", a, !1), i == null || i.forEach((c) => c.removeEventListener("focusin", a, !1)), i == null || i.forEach((c) => c.removeEventListener("focusout", s, !1));
    };
  }, [
    t,
    e
  ]), Ot(() => () => {
    n.current && cancelAnimationFrame(n.current);
  }, [
    n
  ]);
}
function Uv(t) {
  return Mc(t);
}
function ht(t, e) {
  return !t || !e ? !1 : e.some((r) => r.contains(t));
}
function Mc(t, e = null) {
  if (t instanceof Element && t.closest("[data-react-aria-top-layer]"))
    return !0;
  for (let { scopeRef: r } of Je.traverse(Je.getTreeNode(e)))
    if (r && ht(t, r.current))
      return !0;
  return !1;
}
function Xo(t, e) {
  var r;
  let n = (r = Je.getTreeNode(e)) === null || r === void 0 ? void 0 : r.parent;
  for (; n; ) {
    if (n.scopeRef === t)
      return !0;
    n = n.parent;
  }
  return !1;
}
function dr(t, e = !1) {
  if (t != null && !e)
    try {
      lA(t);
    } catch {
    }
  else if (t != null)
    try {
      t.focus();
    } catch {
    }
}
function Yo(t, e = !0) {
  let r = t[0].previousElementSibling, n = dn(t), i = pr(n, {
    tabbable: e
  }, t);
  i.currentNode = r;
  let l = i.nextNode();
  e && !l && (n = dn(t), i = pr(n, {
    tabbable: !1
  }, t), i.currentNode = r, l = i.nextNode()), dr(l);
}
function mA(t, e) {
  const r = he.useRef(e);
  ke(() => {
    if (r.current) {
      He = t;
      const n = dt(t.current ? t.current[0] : void 0);
      !ht(n.activeElement, He.current) && t.current && Yo(t.current);
    }
    r.current = !1;
  }, [
    t
  ]);
}
function vA(t, e, r) {
  Ot(() => {
    if (e || r)
      return;
    let n = t.current;
    const i = dt(n ? n[0] : void 0);
    let l = (g) => {
      let a = g.target;
      ht(a, t.current) ? He = t : Uv(a) || (He = null);
    };
    return i.addEventListener("focusin", l, !1), n == null || n.forEach((g) => g.addEventListener("focusin", l, !1)), () => {
      i.removeEventListener("focusin", l, !1), n == null || n.forEach((g) => g.removeEventListener("focusin", l, !1));
    };
  }, [
    t,
    e,
    r
  ]);
}
function bA(t) {
  let e = Je.getTreeNode(He);
  for (; e && e.scopeRef !== t; ) {
    if (e.nodeToRestore)
      return !1;
    e = e.parent;
  }
  return (e == null ? void 0 : e.scopeRef) === t;
}
function yA(t, e, r) {
  const n = ge(typeof document < "u" ? dt(t.current ? t.current[0] : void 0).activeElement : null);
  Ot(() => {
    let i = t.current;
    const l = dt(i ? i[0] : void 0);
    if (!e || r)
      return;
    let g = () => {
      (!He || Xo(He, t)) && ht(l.activeElement, t.current) && (He = t);
    };
    return l.addEventListener("focusin", g, !1), i == null || i.forEach((a) => a.addEventListener("focusin", g, !1)), () => {
      l.removeEventListener("focusin", g, !1), i == null || i.forEach((a) => a.removeEventListener("focusin", g, !1));
    };
  }, [
    t,
    r
  ]), Ot(() => {
    const i = dt(t.current ? t.current[0] : void 0);
    if (!e)
      return;
    let l = (g) => {
      if (g.key !== "Tab" || g.altKey || g.ctrlKey || g.metaKey || !Xi(t) || g.isComposing)
        return;
      let a = i.activeElement;
      if (!ht(a, t.current))
        return;
      let s = Je.getTreeNode(t);
      if (!s)
        return;
      let c = s.nodeToRestore, f = pr(i.body, {
        tabbable: !0
      });
      f.currentNode = a;
      let o = g.shiftKey ? f.previousNode() : f.nextNode();
      if ((!c || !i.body.contains(c) || c === i.body) && (c = void 0, s.nodeToRestore = void 0), (!o || !ht(o, t.current)) && c) {
        f.currentNode = c;
        do
          o = g.shiftKey ? f.previousNode() : f.nextNode();
        while (ht(o, t.current));
        g.preventDefault(), g.stopPropagation(), o ? dr(o, !0) : Uv(c) ? dr(c, !0) : a.blur();
      }
    };
    return r || i.addEventListener("keydown", l, !0), () => {
      r || i.removeEventListener("keydown", l, !0);
    };
  }, [
    t,
    e,
    r
  ]), Ot(() => {
    const i = dt(t.current ? t.current[0] : void 0);
    if (!e)
      return;
    let l = Je.getTreeNode(t);
    if (l) {
      var g;
      return l.nodeToRestore = (g = n.current) !== null && g !== void 0 ? g : void 0, () => {
        let a = Je.getTreeNode(t);
        if (!a)
          return;
        let s = a.nodeToRestore;
        if (e && s && // eslint-disable-next-line react-hooks/exhaustive-deps
        (ht(i.activeElement, t.current) || i.activeElement === i.body && bA(t))) {
          let c = Je.clone();
          requestAnimationFrame(() => {
            if (i.activeElement === i.body) {
              let f = c.getTreeNode(t);
              for (; f; ) {
                if (f.nodeToRestore && f.nodeToRestore.isConnected) {
                  dr(f.nodeToRestore);
                  return;
                }
                f = f.parent;
              }
              for (f = c.getTreeNode(t); f; ) {
                if (f.scopeRef && f.scopeRef.current && Je.getTreeNode(f.scopeRef)) {
                  Yo(f.scopeRef.current, !0);
                  return;
                }
                f = f.parent;
              }
            }
          });
        }
      };
    }
  }, [
    t,
    e
  ]);
}
function pr(t, e, r) {
  let n = e != null && e.tabbable ? pA : dA, i = dt(t).createTreeWalker(t, NodeFilter.SHOW_ELEMENT, {
    acceptNode(l) {
      var g;
      return !(e == null || (g = e.from) === null || g === void 0) && g.contains(l) ? NodeFilter.FILTER_REJECT : l.matches(n) && Hv(l) && (!r || ht(l, r)) && (!(e != null && e.accept) || e.accept(l)) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  return e != null && e.from && (i.currentNode = e.from), i;
}
class ih {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(e) {
    return this.fastMap.get(e);
  }
  addTreeNode(e, r, n) {
    let i = this.fastMap.get(r ?? null);
    if (!i)
      return;
    let l = new Fc({
      scopeRef: e
    });
    i.addChild(l), l.parent = i, this.fastMap.set(e, l), n && (l.nodeToRestore = n);
  }
  addNode(e) {
    this.fastMap.set(e.scopeRef, e);
  }
  removeTreeNode(e) {
    if (e === null)
      return;
    let r = this.fastMap.get(e);
    if (!r)
      return;
    let n = r.parent;
    for (let l of this.traverse())
      l !== r && r.nodeToRestore && l.nodeToRestore && r.scopeRef && r.scopeRef.current && ht(l.nodeToRestore, r.scopeRef.current) && (l.nodeToRestore = r.nodeToRestore);
    let i = r.children;
    n && (n.removeChild(r), i.size > 0 && i.forEach((l) => n && n.addChild(l))), this.fastMap.delete(r.scopeRef);
  }
  // Pre Order Depth First
  *traverse(e = this.root) {
    if (e.scopeRef != null && (yield e), e.children.size > 0)
      for (let r of e.children)
        yield* this.traverse(r);
  }
  clone() {
    var e;
    let r = new ih();
    var n;
    for (let i of this.traverse())
      r.addTreeNode(i.scopeRef, (n = (e = i.parent) === null || e === void 0 ? void 0 : e.scopeRef) !== null && n !== void 0 ? n : null, i.nodeToRestore);
    return r;
  }
  constructor() {
    this.fastMap = /* @__PURE__ */ new Map(), this.root = new Fc({
      scopeRef: null
    }), this.fastMap.set(null, this.root);
  }
}
class Fc {
  addChild(e) {
    this.children.add(e), e.parent = this;
  }
  removeChild(e) {
    this.children.delete(e), e.parent = void 0;
  }
  constructor(e) {
    this.children = /* @__PURE__ */ new Set(), this.contain = !1, this.scopeRef = e.scopeRef;
  }
}
let Je = new ih();
const go = st(
  ({
    children: t,
    style: e,
    autoFocus: r = !1,
    restoreFocus: n = !0,
    isDismissable: i,
    isContextMenu: l,
    isOpen: g,
    onClose: a,
    triggerRef: s,
    arrowRef: c,
    arrowStyle: f,
    onPointerLeave: o,
    onPointerEnter: h
  }, u) => {
    const d = th(), m = Ln(u), { domProps: p } = wA(
      {
        isDismissable: i,
        isOpen: g,
        onClose: a,
        triggerRef: s,
        isContextMenu: l
      },
      m
    );
    return /* @__PURE__ */ C(
      gt.div,
      {
        className: "isolate z-popover",
        role: "presentation",
        ref: m,
        style: { ...d, ...e, position: "fixed" },
        ...Pa,
        ...Tr(p, { onPointerLeave: o, onPointerEnter: h }),
        children: /* @__PURE__ */ C(
          Ma,
          {
            restoreFocus: n,
            autoFocus: r,
            contain: !1,
            children: t
          }
        )
      }
    );
  }
), Ni = [];
function wA({
  onClose: t,
  isDismissable: e = !0,
  triggerRef: r,
  isContextMenu: n = !1
}, i) {
  const l = ge({
    isPointerDown: !1,
    isContextMenu: n,
    onClose: t
  }), g = l.current;
  g.isContextMenu = n, g.onClose = t;
  const a = Me(
    (d) => {
      const m = d.target;
      if (m) {
        const p = m.ownerDocument;
        if (!p || !p.documentElement.contains(m))
          return !1;
      }
      return i.current && !i.current.contains(m);
    },
    [i]
  ), s = Me(() => Ni[Ni.length - 1] === i, [i]), c = Me(() => {
    s() && g.onClose();
  }, [s, g]), f = Me(
    (d) => {
      var m, p;
      return r.current && "contains" in r.current ? (p = (m = r.current).contains) == null ? void 0 : p.call(m, d) : !1;
    },
    [r]
  ), o = Me(
    (d) => {
      f(d.target) || s() && (d.stopPropagation(), d.preventDefault());
    },
    [f, s]
  ), h = Me(
    (d) => {
      f(d.target) || (s() && (d.stopPropagation(), d.preventDefault()), (!g.isContextMenu || d.button !== 2) && c());
    },
    [f, c, g, s]
  );
  return ke(() => {
    Ni.push(i);
    const d = (b) => {
      a(b) && (o(b), l.current.isPointerDown = !0);
    }, m = (b) => {
      l.current.isPointerDown && a(b) && (l.current.isPointerDown = !1, h(b));
    }, p = (b) => {
      b.preventDefault(), a(b) && c();
    }, v = (b) => {
      if (!r.current)
        return;
      const y = b.target;
      let w;
      r.current instanceof Node ? w = r.current : "contextElement" in r.current && (w = r.current.contextElement), (!(y instanceof Node) || !w || y.contains(w)) && g.onClose();
    };
    return document.addEventListener("pointerdown", d, !0), document.addEventListener("pointerup", m, !0), document.addEventListener("contextmenu", p, !0), document.addEventListener("scroll", v, !0), () => {
      const b = Ni.indexOf(i);
      b >= 0 && Ni.splice(b, 1), document.removeEventListener("pointerdown", d, !0), document.removeEventListener("pointerup", m, !0), document.removeEventListener("contextmenu", p, !0), document.removeEventListener("scroll", v, !0);
    };
  }, [
    i,
    a,
    g,
    h,
    o,
    r,
    f,
    c
  ]), {
    domProps: {
      onKeyDown: (d) => {
        d.key === "Escape" && (d.stopPropagation(), d.preventDefault(), c());
      }
    }
  };
}
const xA = {
  initial: { opacity: 0 },
  animate: { opacity: 1 },
  exit: { opacity: 0 },
  transition: { duration: 0.2 }
};
function sh({
  position: t = "absolute",
  className: e,
  isTransparent: r = !1,
  disableInitialTransition: n,
  ...i
}) {
  return /* @__PURE__ */ C(
    gt.div,
    {
      ...i,
      className: ce(
        e,
        !r && "bg-background/80",
        "inset-0 z-10 h-full w-full",
        t,
        "backdrop-blur-sm"
      ),
      "aria-hidden": !0,
      initial: n ? void 0 : { opacity: 0 },
      animate: { opacity: 1 },
      exit: { opacity: 0 },
      ...xA,
      transition: { duration: 0.15 }
    }
  );
}
const Wv = st(
  ({
    children: t,
    autoFocus: e = !1,
    restoreFocus: r = !0,
    isDismissable: n,
    isOpen: i,
    onClose: l
  }, g) => {
    const a = th(), s = Ln(g);
    return /* @__PURE__ */ oe("div", { className: "isolate z-tray fixed inset-0", style: a, children: [
      /* @__PURE__ */ C(
        sh,
        {
          onClick: () => {
            n && l();
          }
        },
        "tray-underlay"
      ),
      /* @__PURE__ */ C(
        gt.div,
        {
          ref: s,
          className: "absolute bottom-0 left-0 right-0 w-full z-20 rounded-t overflow-hidden max-w-375 max-h-tray mx-auto pb-safe-area",
          role: "presentation",
          initial: { opacity: 0, y: "100%" },
          animate: { opacity: 1, y: 0 },
          exit: { opacity: 0, y: "100%" },
          transition: { type: "tween", duration: 0.2 },
          children: /* @__PURE__ */ C(Ma, { restoreFocus: r, autoFocus: e, contain: !0, children: t })
        }
      )
    ] });
  }
);
function Rc(t, e) {
  if (t === e)
    return !0;
  if (!t || !e)
    return !1;
  const r = Object.keys(t), n = Object.keys(e), i = r.length;
  if (n.length !== i)
    return !1;
  for (let l = 0; l < i; l++) {
    const g = r[l];
    if (t[g] !== e[g] || !Object.prototype.hasOwnProperty.call(e, g))
      return !1;
  }
  return !0;
}
const Xv = Qr(
  null
);
function CA() {
  return Ve(Xv);
}
function Fa() {
  const {
    data: { i18n: t }
  } = CA();
  return {
    locale: t,
    localeCode: (t == null ? void 0 : t.language) || "en",
    lines: t == null ? void 0 : t.lines
  };
}
function Yv(t, { message: e, values: r }) {
  const n = e.match(/\[(.+?)]/), i = r == null ? void 0 : r.count;
  if (n && n[1] && !Number.isNaN(i)) {
    const [l, g] = n, a = g.split("|");
    if (!a.length)
      return e;
    const c = _A(t).select(i);
    let f = a.find((h) => h.startsWith(c));
    f || (f = a[0]);
    const o = f.substring(f.indexOf(" ") + 1);
    return e.replace(l, o);
  }
  return e;
}
const _A = Fs((t) => new Intl.PluralRules(t));
function kd(t, e) {
  return t == null ? !1 : Object.hasOwn !== void 0 ? Object.hasOwn(t, e) : Object.hasOwnProperty(e);
}
const xe = Dy((t) => {
  const { message: e, values: r } = t, { lines: n, localeCode: i } = Fa();
  let l;
  if (kd(n, e) ? l = n == null ? void 0 : n[e] : kd(n, e == null ? void 0 : e.toLowerCase()) ? l = n == null ? void 0 : n[e == null ? void 0 : e.toLowerCase()] : l = e, !r || !l)
    return /* @__PURE__ */ C(gr, { children: l });
  l = Yv(i, {
    message: l,
    values: r
  });
  const g = [], a = [];
  if (Object.entries(r).forEach(([s, c]) => {
    typeof c == "function" ? a.push(s) : xr(c) ? g.push(s) : c != null && (l = l == null ? void 0 : l.replace(`:${s}`, `${c}`));
  }), a.length || g.length) {
    const s = [];
    if (a.length) {
      const h = a.join("");
      s.push(`(<[${h}]>.+?<\\/[${h}]>)`);
    }
    if (g.length) {
      const h = g.join("|");
      s.push(`(:(?:${h}))`);
    }
    const c = new RegExp(s.join("|"), "gm"), o = l.split(c).filter(Boolean).map((h, u) => {
      if (h.startsWith("<") && h.endsWith(">")) {
        const d = h.match(/<([a-z]+)>(.+?)<\/([a-z]+)>/);
        if (d) {
          const [, m, p] = d, v = r == null ? void 0 : r[m];
          if (typeof v == "function") {
            const b = v(p);
            return xt(b, { key: u });
          }
        }
      }
      if (h.startsWith(":")) {
        const d = h.replace(":", ""), m = r == null ? void 0 : r[d];
        if (xr(m))
          return xt(m, { key: u });
      }
      return h;
    });
    return /* @__PURE__ */ C(gr, { children: o });
  }
  return /* @__PURE__ */ C(gr, { children: l });
}, SA);
function SA(t, e) {
  const { values: r, ...n } = t, { values: i, ...l } = e;
  return Rc(i, r) && Rc(n, l);
}
function Gv({
  listbox: t,
  children: e,
  isLoading: r,
  mobileOverlay: n = Wv,
  searchField: i,
  onClose: l,
  prepend: g,
  className: a,
  ...s
}) {
  const c = nA(), {
    floatingWidth: f,
    floatingMinWidth: o = "min-w-180",
    collection: h,
    showEmptyMessage: u,
    state: { isOpen: d, setIsOpen: m },
    positionStyle: p,
    floating: v,
    refs: b
  } = t, y = !g && c ? n : go, w = ce(
    "text-base sm:text-sm outline-none bg max-h-inherit flex flex-col",
    !g && "shadow-xl border py-4",
    a,
    // tray will apply its own rounding and max width
    y === go && "rounded-panel",
    y === go && f === "auto" ? `max-w-288 ${o}` : ""
  ), x = Ye(() => {
    let k = 0;
    const F = [];
    return [...h.values()].reduce((L, j) => {
      if (!j.section)
        L.push(
          xt(j.element, {
            key: j.element.key || j.element.props.value
          })
        );
      else if (!F.includes(j.section)) {
        const G = xt(j.section, {
          key: j.section.key || k,
          index: k
        });
        L.push(G), F.push(j.section), k++;
      }
      return L;
    }, []);
  }, [h]), _ = x.length > 0 || u && !r, S = _ ? /* @__PURE__ */ oe("div", { className: w, role: "presentation", children: [
    i,
    /* @__PURE__ */ C(TA, { isLoading: r, ...s, children: x })
  ] }) : null;
  return /* @__PURE__ */ oe(iv.Provider, { value: t, children: [
    e,
    g ? S : En && qc(
      /* @__PURE__ */ C(Sr, { children: d && _ && /* @__PURE__ */ C(
        y,
        {
          triggerRef: b.reference,
          restoreFocus: !0,
          isOpen: d,
          onClose: () => {
            l == null || l(), m(!1);
          },
          isDismissable: !0,
          style: p,
          ref: v,
          children: S
        }
      ) }),
      En
    )
  ] });
}
function TA({
  className: t,
  children: e,
  isLoading: r,
  ...n
}) {
  const {
    role: i,
    listboxId: l,
    virtualFocus: g,
    focusItem: a,
    state: { activeIndex: s, setActiveIndex: c, selectedIndex: f }
  } = Xu(), o = ge(!0), h = ge(null);
  return ke(() => () => c(null), [c]), ke(() => {
    if (o.current) {
      const u = s ?? f;
      u == null && !g ? requestAnimationFrame(() => {
        var d;
        (d = h.current) == null || d.focus({ preventScroll: !0 });
      }) : u != null && requestAnimationFrame(() => {
        a("increment", u);
      });
    }
    o.current = !1;
  }, [s, f, a, g]), /* @__PURE__ */ C(
    "div",
    {
      tabIndex: g ? void 0 : -1,
      role: i,
      id: l,
      className: "flex-auto overflow-y-auto overscroll-contain outline-none",
      ref: h,
      ...n,
      children: e.length ? e : /* @__PURE__ */ C(EA, {})
    }
  );
}
function EA() {
  return /* @__PURE__ */ C("div", { className: "px-8 py-4 text-sm italic text-muted", children: /* @__PURE__ */ C(xe, { message: "There are no items matching your query" }) });
}
function qv({
  state: {
    isOpen: t,
    setIsOpen: e,
    selectedIndex: r,
    activeIndex: n,
    setInputValue: i,
    setActiveIndex: l
  },
  focusLoopingMode: g,
  collection: a,
  focusItem: s,
  handleItemSelection: c,
  allowCustomValue: f
}) {
  const o = (d) => {
    if (!(t || !d.currentTarget.contains(d.target))) {
      if (d.key === "ArrowDown")
        return d.preventDefault(), e(!0), s("increment", r ?? 0), !0;
      if (d.key === "ArrowUp")
        return d.preventDefault(), e(!0), s(
          "decrement",
          r ?? a.size - 1
        ), !0;
      if (d.key === "Enter" || d.key === "Space")
        return d.preventDefault(), e(!0), s("increment", r ?? 0), !0;
    }
  }, h = (d) => {
    const m = Math.max(0, a.size - 1);
    if (!(!t || !d.currentTarget.contains(d.target)))
      switch (d.key) {
        case "ArrowDown":
          return d.preventDefault(), n == null ? s("increment", 0) : n >= m ? g === "loop" ? s("increment", 0) : g === "deselect" && l(null) : s("increment", n + 1), !0;
        case "ArrowUp":
          return d.preventDefault(), n == null ? s("decrement", m) : n <= 0 ? g === "loop" ? s("decrement", m) : g === "deselect" && l(null) : s("decrement", n - 1), !0;
        case "Home":
          return d.preventDefault(), s("increment", 0), !0;
        case "End":
          return d.preventDefault(), s("decrement", m), !0;
        case "Tab":
          return e(!1), !0;
      }
  };
  return {
    handleTriggerKeyDown: o,
    handleListboxKeyboardNavigation: h,
    handleListboxSearchFieldKeydown: (d) => {
      var p, v;
      if (d.key === "Enter" && n != null && a.size) {
        d.preventDefault();
        const [b, y] = [...a.entries()][n];
        b && (c(b), (v = (p = y.element.props).onSelected) == null || v.call(p));
        return;
      }
      d.key === "Escape" && t && (e(!1), f || i("")), o(d) || h(d);
    }
  };
}
const wl = /* @__PURE__ */ new Map();
function kA(t) {
  const { localeCode: e } = Fa(), r = e + (t ? Object.entries(t).sort((i, l) => i[0] < l[0] ? -1 : 1).join() : "");
  if (wl.has(r))
    return wl.get(r);
  const n = new Intl.Collator(e, t);
  return wl.set(r, n), n;
}
function Kv() {
  const t = kA({ usage: "search", sensitivity: "base" }), e = ge({
    search: "",
    timeout: void 0
  }).current, r = (i, l) => {
    let g = l ?? 0;
    for (; g != null; ) {
      const a = i[g], s = a == null ? void 0 : a.slice(0, e.search.length);
      if (s && t.compare(s, e.search) === 0)
        return g;
      if (g < i.length - 1)
        g++;
      else
        return null;
    }
    return null;
  };
  return { findMatchingItem: (i, l, g = 0) => {
    const a = OA(i.key);
    if (!a || i.ctrlKey || i.metaKey)
      return null;
    a === " " && e.search.trim().length > 0 && (i.preventDefault(), i.stopPropagation()), e.search += a;
    let s = r(l, g);
    return s == null && (s = r(l, 0)), clearTimeout(e.timeout), e.timeout = setTimeout(() => {
      e.search = "";
    }, 500), s ?? null;
  } };
}
function OA(t) {
  return t.length === 1 || !/^[A-Z]/i.test(t) ? t : "";
}
function AA(t, { noSSR: e } = { noSSR: !0 }) {
  const r = typeof window < "u" && typeof window.matchMedia == "function", [n, i] = Fe(
    e ? () => r ? window.matchMedia(t).matches : !1 : null
  );
  return ke(() => {
    if (!r)
      return;
    const l = window.matchMedia(t), g = () => {
      i(l.matches);
    };
    return l.addEventListener("change", g), e || g(), () => {
      l.removeEventListener("change", g);
    };
  }, [r, t, e]), typeof window > "u" ? null : n;
}
function Ra(t) {
  return AA("(max-width: 768px)", t);
}
const Jv = we(
  /* @__PURE__ */ C("path", { d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z" }),
  "SearchOutlined"
);
var DA = (t) => t.type === "checkbox", PA = (t) => t instanceof Date, Zv = (t) => t == null;
const MA = (t) => typeof t == "object";
var Mi = (t) => !Zv(t) && !Array.isArray(t) && MA(t) && !PA(t), FA = (t) => Mi(t) && t.target ? DA(t.target) ? t.target.checked : t.target.value : t, RA = (t) => t.substring(0, t.search(/\.\d+(\.|$)/)) || t, IA = (t, e) => t.has(RA(e)), LA = (t) => {
  const e = t.constructor && t.constructor.prototype;
  return Mi(e) && e.hasOwnProperty("isPrototypeOf");
}, BA = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
function oh(t) {
  let e;
  const r = Array.isArray(t);
  if (t instanceof Date)
    e = new Date(t);
  else if (t instanceof Set)
    e = new Set(t);
  else if (!(BA && (t instanceof Blob || t instanceof FileList)) && (r || Mi(t)))
    if (e = r ? [] : {}, !r && !LA(t))
      e = t;
    else
      for (const n in t)
        t.hasOwnProperty(n) && (e[n] = oh(t[n]));
  else
    return t;
  return e;
}
var Qv = (t) => Array.isArray(t) ? t.filter(Boolean) : [], Ic = (t) => t === void 0, at = (t, e, r) => {
  if (!e || !Mi(t))
    return r;
  const n = Qv(e.split(/[,[\].]+?/)).reduce((i, l) => Zv(i) ? i : i[l], t);
  return Ic(n) || n === t ? Ic(t[e]) ? r : t[e] : n;
}, Od = (t) => typeof t == "boolean", zA = (t) => /^\w*$/.test(t), NA = (t) => Qv(t.replace(/["|']|\]/g, "").split(/\.|\[/)), Ad = (t, e, r) => {
  let n = -1;
  const i = zA(e) ? [e] : NA(e), l = i.length, g = l - 1;
  for (; ++n < l; ) {
    const a = i[n];
    let s = r;
    if (n !== g) {
      const c = t[a];
      s = Mi(c) || Array.isArray(c) ? c : isNaN(+i[n + 1]) ? {} : [];
    }
    if (a === "__proto__")
      return;
    t[a] = s, t = t[a];
  }
  return t;
};
const Dd = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
}, Lc = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
}, jA = he.createContext(null), ah = () => he.useContext(jA);
var $A = (t, e, r, n = !0) => {
  const i = {
    defaultValues: e._defaultValues
  };
  for (const l in t)
    Object.defineProperty(i, l, {
      get: () => {
        const g = l;
        return e._proxyFormState[g] !== Lc.all && (e._proxyFormState[g] = !n || Lc.all), r && (r[g] = !0), t[g];
      }
    });
  return i;
}, VA = (t) => Mi(t) && !Object.keys(t).length, HA = (t, e, r, n) => {
  r(t);
  const { name: i, ...l } = t;
  return VA(l) || Object.keys(l).length >= Object.keys(e).length || Object.keys(l).find((g) => e[g] === (!n || Lc.all));
}, UA = (t) => Array.isArray(t) ? t : [t], eb = (t, e, r) => !t || !e || t === e || UA(t).some((n) => n && (r ? n === e : n.startsWith(e) || e.startsWith(n)));
function tb(t) {
  const e = he.useRef(t);
  e.current = t, he.useEffect(() => {
    const r = !t.disabled && e.current.subject && e.current.subject.subscribe({
      next: e.current.next
    });
    return () => {
      r && r.unsubscribe();
    };
  }, [t.disabled]);
}
function WA(t) {
  const e = ah(), { control: r = e.control, disabled: n, name: i, exact: l } = t || {}, [g, a] = he.useState(r._formState), s = he.useRef(!0), c = he.useRef({
    isDirty: !1,
    isLoading: !1,
    dirtyFields: !1,
    touchedFields: !1,
    validatingFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }), f = he.useRef(i);
  return f.current = i, tb({
    disabled: n,
    next: (o) => s.current && eb(f.current, o.name, l) && HA(o, c.current, r._updateFormState) && a({
      ...r._formState,
      ...o
    }),
    subject: r._subjects.state
  }), he.useEffect(() => (s.current = !0, c.current.isValid && r._updateValid(!0), () => {
    s.current = !1;
  }), [r]), $A(g, r, c.current, !1);
}
var XA = (t) => typeof t == "string", YA = (t, e, r, n, i) => XA(t) ? (n && e.watch.add(t), at(r, t, i)) : Array.isArray(t) ? t.map((l) => (n && e.watch.add(l), at(r, l))) : (n && (e.watchAll = !0), r);
function GA(t) {
  const e = ah(), { control: r = e.control, name: n, defaultValue: i, disabled: l, exact: g } = t || {}, a = he.useRef(n);
  a.current = n, tb({
    disabled: l,
    subject: r._subjects.values,
    next: (f) => {
      eb(a.current, f.name, g) && c(oh(YA(a.current, r._names, f.values || r._formValues, !1, i)));
    }
  });
  const [s, c] = he.useState(r._getWatch(n, i));
  return he.useEffect(() => r._removeUnmounted()), s;
}
function qA(t) {
  const e = ah(), { name: r, disabled: n, control: i = e.control, shouldUnregister: l } = t, g = IA(i._names.array, r), a = GA({
    control: i,
    name: r,
    defaultValue: at(i._formValues, r, at(i._defaultValues, r, t.defaultValue)),
    exact: !0
  }), s = WA({
    control: i,
    name: r
  }), c = he.useRef(i.register(r, {
    ...t.rules,
    value: a,
    ...Od(t.disabled) ? { disabled: t.disabled } : {}
  }));
  return he.useEffect(() => {
    const f = i._options.shouldUnregister || l, o = (h, u) => {
      const d = at(i._fields, h);
      d && d._f && (d._f.mount = u);
    };
    if (o(r, !0), f) {
      const h = oh(at(i._options.defaultValues, r));
      Ad(i._defaultValues, r, h), Ic(at(i._formValues, r)) && Ad(i._formValues, r, h);
    }
    return () => {
      (g ? f && !i._state.action : f) ? i.unregister(r) : o(r, !1);
    };
  }, [r, i, g, l]), he.useEffect(() => {
    at(i._fields, r) && i._updateDisabledField({
      disabled: n,
      fields: i._fields,
      name: r,
      value: at(i._fields, r)._f.value
    });
  }, [n, r, i]), {
    field: {
      name: r,
      value: a,
      ...Od(n) || s.disabled ? { disabled: s.disabled || n } : {},
      onChange: he.useCallback((f) => c.current.onChange({
        target: {
          value: FA(f),
          name: r
        },
        type: Dd.CHANGE
      }), [r]),
      onBlur: he.useCallback(() => c.current.onBlur({
        target: {
          value: at(i._formValues, r),
          name: r
        },
        type: Dd.BLUR
      }), [r, i]),
      ref: (f) => {
        const o = at(i._fields, r);
        o && f && (o._f.ref = {
          focus: () => f.focus(),
          select: () => f.select(),
          setCustomValidity: (h) => f.setCustomValidity(h),
          reportValidity: () => f.reportValidity()
        });
      }
    },
    formState: s,
    fieldState: Object.defineProperties({}, {
      invalid: {
        enumerable: !0,
        get: () => !!at(s.errors, r)
      },
      isDirty: {
        enumerable: !0,
        get: () => !!at(s.dirtyFields, r)
      },
      isTouched: {
        enumerable: !0,
        get: () => !!at(s.touchedFields, r)
      },
      isValidating: {
        enumerable: !0,
        get: () => !!at(s.validatingFields, r)
      },
      error: {
        enumerable: !0,
        get: () => at(s.errors, r)
      }
    })
  };
}
function Bn(t = {}) {
  const {
    size: e = "md",
    startAppend: r,
    endAppend: n,
    className: i,
    labelPosition: l,
    labelDisplay: g = "block",
    inputClassName: a,
    inputWrapperClassName: s,
    unstyled: c,
    invalid: f,
    disabled: o,
    background: h = "bg-transparent",
    flexibleHeight: u,
    inputShadow: d = "shadow-sm",
    descriptionPosition: m = "bottom",
    inputRing: p,
    inputFontSize: v,
    labelSuffix: b
  } = { ...t };
  if (c)
    return {
      label: "",
      input: a || "",
      wrapper: i || "",
      inputWrapper: s || "",
      adornment: "",
      append: { size: "", radius: "" },
      size: { font: "", height: "" },
      description: "",
      error: ""
    };
  const y = QA({
    size: t.size,
    flexibleHeight: u
  });
  v && (y.font = v);
  const w = r || n, _ = p || `focus:ring ${f ? "focus:ring-danger/focus focus:border-danger/60" : "focus:ring-primary/focus focus:border-primary/60"}`, S = ZA(t);
  return {
    label: ce(
      g,
      "first-letter:capitalize text-left whitespace-nowrap",
      o && "text-disabled",
      y.font,
      b ? "" : l === "side" ? "mr-16" : "mb-4"
    ),
    input: ce(
      "block text-left relative w-full appearance-none transition-shadow text",
      h,
      // radius
      S.input,
      KA(t),
      !o && `${_} focus:outline-none ${d}`,
      o && "text-disabled cursor-not-allowed",
      a,
      y.font,
      y.height,
      JA(t)
    ),
    adornment: eD(e),
    append: {
      size: zu(e),
      radius: S.append
    },
    wrapper: ce(i, y.font, {
      "flex items-center": l === "side"
    }),
    inputWrapper: ce(
      "isolate relative",
      s,
      w && "flex items-stretch"
    ),
    size: y,
    description: `text-muted ${m === "bottom" ? "pt-10" : "pb-10"} text-xs`,
    error: "text-danger pt-10 text-xs"
  };
}
function KA({
  startAppend: t,
  endAppend: e,
  inputBorder: r,
  invalid: n
}) {
  if (r)
    return r;
  const i = t || e, l = n ? "border-danger" : "border-divider";
  return i ? t ? `${l} border-y border-r` : `${l} border-y border-l` : `${l} border`;
}
function JA({
  startAdornment: t,
  endAdornment: e,
  inputRadius: r
}) {
  return r === "rounded-full" ? ce(
    t ? "pl-54" : "pl-28",
    e ? "pr-54" : "pr-28"
  ) : ce(
    t ? "pl-46" : "pl-12",
    e ? "pr-46" : "pr-12"
  );
}
function ZA(t) {
  const { startAppend: e, endAppend: r, inputRadius: n } = t, i = e || r;
  return n === "rounded-full" ? {
    input: ce(
      !i && "rounded-full",
      e && "rounded-r-full rounded-l-none",
      r && "rounded-l-full rounded-r-none"
    ),
    append: e ? "rounded-l-full" : "rounded-r-full"
  } : n === "rounded-none" ? {
    input: "",
    append: ""
  } : n ? {
    input: n,
    append: n
  } : {
    input: ce(
      !i && "rounded-input",
      e && "rounded-r-input rounded-l-none",
      r && "rounded-l-input rounded-r-none"
    ),
    append: e ? "rounded-l-input" : "rounded-r-input"
  };
}
function QA({ size: t, flexibleHeight: e }) {
  switch (t) {
    case "2xs":
      return { font: "text-xs", height: e ? "min-h-24" : "h-24" };
    case "xs":
      return { font: "text-xs", height: e ? "min-h-30" : "h-30" };
    case "sm":
      return { font: "text-sm", height: e ? "min-h-36" : "h-36" };
    case "lg":
      return {
        font: "text-md md:text-lg",
        height: e ? "min-h-50" : "h-50"
      };
    case "xl":
      return { font: "text-xl", height: e ? "min-h-60" : "h-60" };
    default:
      return { font: "text-sm", height: e ? "min-h-42" : "h-42" };
  }
}
function eD(t) {
  switch (t) {
    case "2xs":
      return "icon-2xs";
    case "xs":
      return "icon-xs";
    case "sm":
      return "icon-sm";
    case "md":
      return "icon-sm";
    case "lg":
      return "icon-lg";
    case "xl":
      return "icon-xl";
    default:
      return "";
  }
}
function Pd({
  children: t,
  direction: e,
  className: r,
  position: n = e === "start" ? "left-0" : "right-0"
}) {
  return t ? /* @__PURE__ */ C(
    "div",
    {
      className: ce(
        "pointer-events-none absolute top-0 z-10 flex h-full min-w-42 items-center justify-center text-muted",
        n,
        r
      ),
      children: t
    }
  ) : null;
}
function rb(t, e) {
  const r = (e == null ? void 0 : e.copy) ?? !0, n = r ? { ...t } : t;
  return Object.keys(n).forEach((i) => {
    const l = i;
    e != null && e.arrays && Array.isArray(n[l]) && n[l].length === 0 ? delete n[l] : e != null && e.deep && n[l] && typeof n[l] == "object" ? (n[l] = rb(n[l], e), Object.keys(n[l]).length === 0 && delete n[l]) : (n[l] == null || n[l] === "") && delete n[l];
  }), r ? n : t;
}
const nb = he.forwardRef(
  (t, e) => {
    const {
      children: r,
      // Not every component that uses <Field> supports help text.
      description: n,
      errorMessage: i,
      descriptionProps: l = {},
      errorMessageProps: g = {},
      startAdornment: a,
      endAdornment: s,
      adornmentPosition: c,
      startAppend: f,
      endAppend: o,
      fieldClassNames: h,
      disabled: u,
      wrapperProps: d
    } = t;
    return /* @__PURE__ */ oe("div", { className: h.wrapper, ref: e, ...d, children: [
      /* @__PURE__ */ C(tD, { ...t }),
      /* @__PURE__ */ oe("div", { className: h.inputWrapper, children: [
        /* @__PURE__ */ C(
          Pd,
          {
            direction: "start",
            className: h.adornment,
            position: c,
            children: a
          }
        ),
        f && /* @__PURE__ */ C(Md, { style: h.append, disabled: u, children: f }),
        r,
        o && /* @__PURE__ */ C(Md, { style: h.append, disabled: u, children: o }),
        /* @__PURE__ */ C(
          Pd,
          {
            direction: "end",
            className: h.adornment,
            position: c,
            children: s
          }
        )
      ] }),
      n && !i && /* @__PURE__ */ C("div", { className: h.description, ...l, children: n }),
      i && /* @__PURE__ */ C("div", { className: h.error, ...g, children: i })
    ] });
  }
);
function tD({
  labelElementType: t,
  fieldClassNames: e,
  labelProps: r,
  label: n,
  labelSuffix: i,
  labelSuffixPosition: l = "spaced",
  required: g
}) {
  if (!n)
    return null;
  const s = /* @__PURE__ */ oe(t || "label", { className: e.label, ...r, children: [
    n,
    g && /* @__PURE__ */ C("span", { className: "text-danger", children: " *" })
  ] });
  return i ? /* @__PURE__ */ oe(
    "div",
    {
      className: ce(
        "mb-4 flex w-full gap-4",
        l === "spaced" ? "items-end" : "items-center"
      ),
      children: [
        s,
        /* @__PURE__ */ C(
          "div",
          {
            className: ce(
              "text-xs text-muted",
              l === "spaced" ? "ml-auto" : ""
            ),
            children: i
          }
        )
      ]
    }
  ) : s;
}
function Md({ children: t, style: e, disabled: r }) {
  return he.cloneElement(t, {
    ...t.props,
    disabled: t.props.disabled || r,
    // make sure append styles are not overwritten with empty values
    ...rb(e)
  });
}
function lh({ autoFocus: t, autoSelectText: e }, r) {
  const n = ge(t);
  ke(() => {
    n.current && r.current && requestAnimationFrame(() => {
      var i, l;
      (i = r.current) == null || i.focus(), e && ((l = r.current) == null ? void 0 : l.nodeName.toLowerCase()) === "input" && r.current.select();
    }), n.current = !1;
  }, [r, e]);
}
function ib(t) {
  const {
    focusRef: e,
    labelElementType: r = "label",
    label: n,
    labelSuffix: i,
    labelSuffixPosition: l,
    autoFocus: g,
    autoSelectText: a,
    labelPosition: s,
    descriptionPosition: c,
    size: f,
    errorMessage: o,
    description: h,
    flexibleHeight: u,
    startAdornment: d,
    endAdornment: m,
    startAppend: p,
    adornmentPosition: v,
    endAppend: b,
    className: y,
    inputClassName: w,
    inputWrapperClassName: x,
    unstyled: _,
    background: S,
    invalid: k,
    disabled: F,
    id: L,
    inputRadius: j,
    inputBorder: G,
    inputShadow: te,
    inputRing: U,
    inputFontSize: K,
    ...re
  } = t;
  lh(t, e);
  const ne = qt(), se = L || ne, T = `${se}-label`, P = `${se}-description`, D = `${se}-error`, M = {
    id: T,
    htmlFor: r === "label" ? se : void 0
  }, $ = {
    id: P
  }, A = {
    id: D
  }, R = {
    "aria-label": !t.label && !t["aria-label"] && t.placeholder ? t.placeholder : t["aria-label"],
    "aria-invalid": k || void 0,
    id: se,
    disabled: F,
    ...re
  }, N = [];
  n && N.push(M.id), R["aria-labelledby"] && N.push(R["aria-labelledby"]), R["aria-labelledby"] = N.length ? N.join(" ") : void 0;
  const H = [];
  return h && H.push($.id), o && H.push(A.id), R["aria-describedby"] && H.push(R["aria-describedby"]), R["aria-describedby"] = H.length ? H.join(" ") : void 0, {
    fieldProps: {
      errorMessageProps: A,
      descriptionProps: $,
      labelProps: M,
      disabled: F,
      label: n,
      labelSuffix: i,
      labelSuffixPosition: l,
      autoFocus: g,
      autoSelectText: a,
      labelPosition: s,
      descriptionPosition: c,
      size: f,
      errorMessage: o,
      description: h,
      flexibleHeight: u,
      startAdornment: d,
      endAdornment: m,
      startAppend: p,
      adornmentPosition: v,
      endAppend: b,
      className: y,
      inputClassName: w,
      inputWrapperClassName: x,
      unstyled: _,
      background: S,
      invalid: k
    },
    inputProps: R
  };
}
const Cr = st(
  ({
    inputElementType: t = "input",
    flexibleHeight: e,
    inputRef: r,
    inputTestId: n,
    ...i
  }, l) => {
    const g = Ln(r), { fieldProps: a, inputProps: s } = ib({
      ...i,
      focusRef: g
    }), c = t === "textarea", f = c ? "textarea" : "input", o = Bn({
      ...i,
      flexibleHeight: e || t === "textarea"
    });
    return t === "textarea" && !i.unstyled && (o.input = `${o.input} py-12`), /* @__PURE__ */ C(nb, { ref: l, fieldClassNames: o, ...a, children: /* @__PURE__ */ C(
      f,
      {
        "data-testid": n,
        ref: g,
        ...s,
        rows: c ? s.rows || 4 : void 0,
        className: o.input
      }
    ) });
  }
);
he.forwardRef(({ name: t, ...e }, r) => {
  const {
    field: { onChange: n, onBlur: i, value: l = "", ref: g },
    fieldState: { invalid: a, error: s }
  } = qA({
    name: t
  }), c = {
    onChange: n,
    onBlur: i,
    value: l ?? "",
    // avoid issues with "null" value when setting form defaults from backend model
    invalid: a,
    errorMessage: s == null ? void 0 : s.message,
    inputRef: g,
    name: t
  };
  return /* @__PURE__ */ C(Cr, { ref: r, ...Tr(c, e) });
});
const rD = st(
  (t, e) => {
    const {
      searchPlaceholder: r,
      showSearchField: n,
      children: [i, l],
      floatingWidth: g = "auto",
      isLoading: a
    } = t, s = qt(), c = Ra(), f = nv(
      {
        ...t,
        clearInputOnItemSelection: !0,
        showEmptyMessage: n,
        // on mobile menu will be shown as bottom drawer, so make it fullscreen width always
        floatingWidth: c ? "auto" : g,
        virtualFocus: n,
        role: n ? "listbox" : "menu",
        focusLoopingMode: n ? "stay" : "loop",
        children: l.props.children
      },
      e
    ), {
      state: { isOpen: o, setIsOpen: h, activeIndex: u, inputValue: d, setInputValue: m },
      listboxId: p,
      focusItem: v,
      listContent: b,
      reference: y,
      onInputChange: w
    } = f, {
      handleTriggerKeyDown: x,
      handleListboxKeyboardNavigation: _,
      handleListboxSearchFieldKeydown: S
    } = qv(f), { findMatchingItem: k } = Kv();
    return /* @__PURE__ */ C(
      Gv,
      {
        onClick: (L) => L.stopPropagation(),
        listbox: f,
        onKeyDownCapture: n ? void 0 : (L) => {
          if (!o)
            return;
          const j = k(L, b, u);
          j != null && v("increment", j);
        },
        onKeyDown: _,
        onClose: n ? () => m("") : void 0,
        "aria-labelledby": s,
        isLoading: a,
        searchField: n ? /* @__PURE__ */ C(
          Cr,
          {
            size: "sm",
            placeholder: r,
            startAdornment: /* @__PURE__ */ C(Jv, {}),
            className: "flex-shrink-0 px-8 pb-8 pt-4",
            autoFocus: !0,
            "aria-expanded": o ? "true" : "false",
            "aria-haspopup": "listbox",
            "aria-controls": o ? p : void 0,
            "aria-autocomplete": "list",
            autoComplete: "off",
            autoCorrect: "off",
            spellCheck: "false",
            value: d,
            onChange: w,
            onKeyDown: (L) => {
              S(L);
            }
          }
        ) : null,
        children: xt(i, {
          id: s,
          "aria-expanded": o ? "true" : "false",
          "aria-haspopup": "menu",
          "aria-controls": o ? p : void 0,
          ref: y,
          onKeyDown: x,
          onClick: wt((L) => {
            var j, G;
            (G = (j = i.props) == null ? void 0 : j.onClick) == null || G.call(j, L), h(!o);
          })
        })
      }
    );
  }
);
function nD({ children: t }) {
  return t;
}
function iD({ item: t, button: e }) {
  return /* @__PURE__ */ oe(rD, { children: [
    e,
    /* @__PURE__ */ C(nD, { children: (t.menuItems || []).map((r) => /* @__PURE__ */ C(
      xa,
      {
        value: r.label,
        onSelected: () => {
          r.action(O().editor);
        },
        children: r.label
      },
      r.label
    )) })
  ] });
}
const ze = st(
  ({
    children: t,
    size: e = "md",
    // only set icon size based on button size if "ButtonSize" is passed in and not custom className
    iconSize: r = e && e.length <= 3 ? e : "md",
    variant: n = "text",
    radius: i = "rounded-button",
    className: l,
    padding: g,
    equalWidth: a = !0,
    badge: s,
    ...c
  }, f) => {
    const o = ce(
      zu(e, { padding: g, equalWidth: a, variant: n }),
      l,
      s && "relative"
    );
    return /* @__PURE__ */ oe(
      Er,
      {
        ...c,
        ref: f,
        radius: i,
        variant: n,
        className: o,
        children: [
          xt(t, { size: r }),
          s
        ]
      }
    );
  }
);
function sD({ icon: t, className: e, size: r }) {
  let n;
  return he.isValidElement(t) ? n = he.cloneElement(t, {
    className: "svg-iconEl"
  }) : typeof t == "string" ? n = /* @__PURE__ */ C("img", { className: "w-font h-font", src: t, alt: "" }) : Array.isArray(t) ? n = he.createElement(A2(t), { size: r }) : n = he.createElement(t, { size: r }), /* @__PURE__ */ C("span", { className: ce(e, "leading-none"), children: n });
}
const ch = he.memo(sD);
function Bc({ value: t }) {
  return t ? typeof t == "string" ? /* @__PURE__ */ C(xe, { message: t }) : /* @__PURE__ */ C(xe, { ...t }) : null;
}
function oD({ item: t }) {
  const e = t.label ? /* @__PURE__ */ C(lD, { item: t }) : /* @__PURE__ */ C(aD, { item: t });
  return t.menuItems ? /* @__PURE__ */ C(iD, { item: t, button: e }) : he.cloneElement(e, {
    onClick: () => {
      var r;
      (r = t.action) == null || r.call(t, O().editor);
    }
  });
}
const aD = st(
  ({ item: t, ...e }, r) => /* @__PURE__ */ C(ze, { ref: r, radius: "rounded-full", size: "sm", ...e, children: /* @__PURE__ */ C(ch, { icon: t.icon }) })
), lD = st(
  ({ item: t, ...e }, r) => /* @__PURE__ */ C(
    pt,
    {
      ref: r,
      radius: "rounded-full",
      size: "xs",
      color: t.buttonColor || "primary",
      variant: t.buttonVariant || "flat",
      startIcon: t.icon && /* @__PURE__ */ C(ch, { icon: t.icon }),
      ...e,
      children: /* @__PURE__ */ C(Bc, { value: t.label })
    }
  )
);
function Ia({
  children: t,
  color: e,
  variant: r,
  radius: n = "rounded-button",
  size: i,
  className: l,
  value: g,
  onChange: a,
  multiple: s,
  disabled: c
}) {
  const f = (u) => g === void 0 ? !1 : s ? g.includes(u) : u === g, o = (u) => {
    const d = [...g], m = g.indexOf(u);
    return m > -1 ? d.splice(m, 1) : d.push(u), d;
  }, h = he.Children.map(t, (u, d) => {
    if (he.isValidElement(u)) {
      const m = f(u.props.value), p = m ? "primary" : e;
      return he.cloneElement(u, {
        color: m ? "primary" : e,
        variant: r,
        size: i,
        radius: null,
        disabled: u.props.disabled || c,
        ...u.props,
        onClick: (v) => {
          u.props.onClick && u.props.onClick(v), a && (s ? a == null || a(o(u.props.value)) : a == null || a(u.props.value));
        },
        className: ce(
          u.props.className,
          // borders are hidden via negative margin, make sure both are visible for active item
          m ? "z-20" : "z-10",
          cD(d, t, n, p)
        )
      });
    }
  });
  return /* @__PURE__ */ C("div", { className: ce(n, "isolate inline-flex", l), children: h });
}
function cD(t, e, r, n) {
  return t === 0 ? ce(
    r,
    "rounded-tr-none rounded-br-none",
    !n && "border-r-transparent disabled:border-r-transparent"
  ) : t === e.length - 1 ? ce(r, "rounded-tl-none rounded-bl-none -ml-1") : ce(
    "rounded-none -ml-1",
    !n && "border-r-transparent disabled:border-r-transparent"
  );
}
const uD = we(
  /* @__PURE__ */ C("path", { d: "M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z" }),
  "UndoOutlined"
), hD = we(
  /* @__PURE__ */ C("path", { d: "M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16c1.05-3.19 4.05-5.5 7.6-5.5 1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z" }),
  "RedoOutlined"
);
function fD() {
  const t = fe((r) => r.history.canUndo), e = fe((r) => r.history.canRedo);
  return /* @__PURE__ */ oe(Ia, { variant: "outline", children: [
    /* @__PURE__ */ C(
      ze,
      {
        equalWidth: !1,
        size: "xs",
        padding: "pl-12 pr-10",
        radius: "rounded-full",
        disabled: !t,
        onClick: () => {
          I().history.undo();
        },
        children: /* @__PURE__ */ C(uD, {})
      },
      "undo"
    ),
    /* @__PURE__ */ C(
      ze,
      {
        equalWidth: !1,
        padding: "pl-10 pr-12",
        size: "xs",
        radius: "rounded-full",
        disabled: !e,
        onClick: () => {
          I().history.redo();
        },
        children: /* @__PURE__ */ C(hD, {})
      },
      "redo"
    )
  ] });
}
const dD = we(
  /* @__PURE__ */ C("path", { d: "M19 13H5v-2h14v2z" }),
  "RemoveOutlined"
), pD = we(
  /* @__PURE__ */ C("path", { d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" }),
  "AddOutlined"
);
function gD() {
  var r, n;
  const t = fe((i) => i.zoom) || 1;
  return fe((i) => {
    var l, g;
    return (g = (l = i.config.tools) == null ? void 0 : l.zoom) == null ? void 0 : g.allowUserZoom;
  }) ?? !0 ? /* @__PURE__ */ oe("div", { className: "flex items-center select-none", children: [
    /* @__PURE__ */ C(
      ze,
      {
        size: "sm",
        disabled: !((r = I().zoom) != null && r.canZoomOut()),
        onClick: () => {
          I().zoom.zoomOut(I().zoom.step);
        },
        children: /* @__PURE__ */ C(dD, {})
      }
    ),
    /* @__PURE__ */ oe("div", { className: "w-[4ch] text-sm text-center", children: [
      Math.round(t * 100),
      "%"
    ] }),
    /* @__PURE__ */ C(
      ze,
      {
        size: "sm",
        disabled: !((n = I().zoom) != null && n.canZoomIn()),
        onClick: () => {
          I().zoom.zoomIn(I().zoom.step);
        },
        children: /* @__PURE__ */ C(pD, {})
      }
    )
  ] }) : null;
}
function xl({ item: t }) {
  switch (t.type) {
    case "undoWidget":
      return /* @__PURE__ */ C(fD, {});
    case "zoomWidget":
      return /* @__PURE__ */ C(gD, {});
    case "button":
      return /* @__PURE__ */ C(oD, { item: t });
    case "image":
      return /* @__PURE__ */ C("img", { className: "h-30 object-cover", src: Dt(t.src), alt: "" });
    default:
      return null;
  }
}
const Zr = we(
  /* @__PURE__ */ C("path", { d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z" }),
  "CloseOutlined"
);
function La() {
  var n;
  let t = fe((i) => {
    var l;
    return ((l = i.config.ui) == null ? void 0 : l.mode) === lu.OVERLAY;
  });
  const { width: e } = fe((i) => i.stageSize), r = e <= 700;
  return r && ((n = O().config.ui) != null && n.forceOverlayModeOnMobile) && (t = !0), { isModal: t, isMobile: r };
}
function mD() {
  const { isModal: t, isMobile: e } = La(), r = fe((s) => {
    var c;
    return (c = s.config.ui) == null ? void 0 : c.allowEditorClose;
  }) ?? !0, n = fe((s) => {
    var c, f;
    return (f = (c = s.config.ui) == null ? void 0 : c.menubar) == null ? void 0 : f.items;
  }), { left: i, center: l, right: g } = Ye(() => vD(n || [], e), [n, e]), a = t && e && r && /* @__PURE__ */ C(
    ze,
    {
      size: "sm",
      className: "ml-10",
      onClick: () => {
        O().editor.close();
      },
      children: /* @__PURE__ */ C(Zr, {})
    }
  );
  return /* @__PURE__ */ oe(gt.div, { className: U0, ...W0, children: [
    /* @__PURE__ */ C("div", { className: "mr-auto flex items-center gap-8", children: i.map((s, c) => (
      // eslint-disable-next-line react/no-array-index-key
      /* @__PURE__ */ C(xl, { item: s }, c)
    )) }),
    /* @__PURE__ */ C("div", { className: "flex items-center gap-10", children: l.map((s, c) => (
      // eslint-disable-next-line react/no-array-index-key
      /* @__PURE__ */ C(xl, { item: s }, c)
    )) }),
    /* @__PURE__ */ C("div", { className: "ml-auto flex items-center gap-8", children: g.map((s, c) => (
      // eslint-disable-next-line react/no-array-index-key
      /* @__PURE__ */ C(xl, { item: s }, c)
    )) }),
    a
  ] });
}
function vD(t, e) {
  const r = {
    left: [],
    center: [],
    right: []
  };
  (t || []).filter(
    (i) => !e && !i.mobileOnly || e && !i.desktopOnly
  ).forEach((i) => {
    i.align === "left" ? r.left.push({ ...i, position: i.position ?? 1 }) : i.align === "right" ? r.right.push({ ...i, position: i.position ?? 1 }) : r.center.push({ ...i, position: i.position ?? 1 });
  });
  const n = Object.entries(r).map(([i, l]) => [i, l.sort((g, a) => (g.position ?? 0) - (a.position ?? 0))]);
  return Object.fromEntries(n);
}
function bD() {
  const t = fe((r) => {
    var n;
    return (n = r.crop.zoneRect) == null ? void 0 : n.width;
  }) || 1, e = fe((r) => {
    var n;
    return (n = r.crop.zoneRect) == null ? void 0 : n.height;
  }) || 1;
  return /* @__PURE__ */ C("div", { className: "text-sm", children: `${t}x${e}` });
}
function yD() {
  const t = fe((e) => e.activeTool);
  return /* @__PURE__ */ oe(gt.div, { className: U0, ...W0, children: [
    /* @__PURE__ */ C(wD, {}),
    xD(t),
    /* @__PURE__ */ C(CD, {})
  ] });
}
function wD() {
  const { isMobile: t } = La(), e = fe((r) => r.dirty);
  return t ? /* @__PURE__ */ C(
    ze,
    {
      size: "sm",
      onClick: () => {
        O().cancelChanges();
      },
      children: /* @__PURE__ */ C(Zr, {})
    }
  ) : /* @__PURE__ */ C(
    pt,
    {
      variant: "outline",
      size: "xs",
      startIcon: /* @__PURE__ */ C(Zr, {}),
      radius: "rounded-full",
      className: "min-w-92",
      onClick: () => {
        O().cancelChanges();
      },
      children: e ? /* @__PURE__ */ C(xe, { message: "Cancel" }) : /* @__PURE__ */ C(xe, { message: "Close" })
    }
  );
}
function xD(t) {
  var r, n;
  if (!t)
    return null;
  const e = /* @__PURE__ */ C("div", { className: "capitalize text-sm", children: /* @__PURE__ */ C(xe, { message: t }) });
  switch (t) {
    case Be.CROP:
      return ((n = (r = O().config.tools) == null ? void 0 : r.crop) == null ? void 0 : n.allowCustomRatio) ?? !0 ? /* @__PURE__ */ C(bD, {}) : e;
    default:
      return e;
  }
}
function CD() {
  const { isMobile: t } = La(), e = fe((r) => r.dirty);
  return t ? /* @__PURE__ */ C(
    ze,
    {
      size: "sm",
      disabled: !e,
      onClick: () => {
        O().applyChanges();
      },
      children: /* @__PURE__ */ C(xc, {})
    }
  ) : /* @__PURE__ */ C(
    pt,
    {
      variant: "flat",
      color: "primary",
      size: "xs",
      disabled: !e,
      startIcon: /* @__PURE__ */ C(xc, {}),
      radius: "rounded-full",
      onClick: () => {
        O().applyChanges();
      },
      children: /* @__PURE__ */ C(xe, { message: "Apply" })
    }
  );
}
function Fd() {
  const t = fe((e) => e.activeTool);
  return /* @__PURE__ */ C(Sr, { initial: !1, children: t ? /* @__PURE__ */ C(yD, {}, "activeToolbar") : /* @__PURE__ */ C(mD, {}, "mainToolbar") });
}
const _D = {
  newCanvas: le("Loading Canvas"),
  mainImage: le("Loading Image"),
  state: le("Loading State"),
  merge: le("Processing Image")
};
function SD() {
  const [t, e] = Fe(
    !1
  );
  return ke(() => {
    fe.subscribe(
      (r) => r.loading,
      (r) => {
        r && e(r);
      }
    );
  }, []), /* @__PURE__ */ C(Sr, { children: t && /* @__PURE__ */ C(
    gt.div,
    {
      initial: { y: "60%", opacity: 0 },
      animate: { y: 0, opacity: 1 },
      exit: { y: "-60%", opacity: 0 },
      transition: { type: "tween", duration: 0.3 },
      onAnimationComplete: () => {
        setTimeout(() => {
          e(!1);
        }, 400);
      },
      className: "absolute z-loading-indicator inset-0 m-auto p-6 w-144 h-32 text-center text-sm bg-paper rounded-full shadow-lg",
      children: /* @__PURE__ */ C(xe, { ..._D[t] })
    }
  ) });
}
function TD(t, e, r) {
  return Math.max(e, Math.min(t, r));
}
const tt = {
  toVector(t, e) {
    return t === void 0 && (t = e), Array.isArray(t) ? t : [t, t];
  },
  add(t, e) {
    return [t[0] + e[0], t[1] + e[1]];
  },
  sub(t, e) {
    return [t[0] - e[0], t[1] - e[1]];
  },
  addTo(t, e) {
    t[0] += e[0], t[1] += e[1];
  },
  subTo(t, e) {
    t[0] -= e[0], t[1] -= e[1];
  }
};
function Rd(t, e, r) {
  return e === 0 || Math.abs(e) === 1 / 0 ? Math.pow(t, r * 5) : t * e * r / (e + r * t);
}
function Id(t, e, r, n = 0.15) {
  return n === 0 ? TD(t, e, r) : t < e ? -Rd(e - t, r - e, n) + e : t > r ? +Rd(t - r, r - e, n) + r : t;
}
function ED(t, [e, r], [n, i]) {
  const [[l, g], [a, s]] = t;
  return [Id(e, l, g, n), Id(r, a, s, i)];
}
function kD(t, e) {
  if (typeof t != "object" || t === null)
    return t;
  var r = t[Symbol.toPrimitive];
  if (r !== void 0) {
    var n = r.call(t, e || "default");
    if (typeof n != "object")
      return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function OD(t) {
  var e = kD(t, "string");
  return typeof e == "symbol" ? e : String(e);
}
function ct(t, e, r) {
  return e = OD(e), e in t ? Object.defineProperty(t, e, {
    value: r,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : t[e] = r, t;
}
function Ld(t, e) {
  var r = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(t);
    e && (n = n.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function Ue(t) {
  for (var e = 1; e < arguments.length; e++) {
    var r = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Ld(Object(r), !0).forEach(function(n) {
      ct(t, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : Ld(Object(r)).forEach(function(n) {
      Object.defineProperty(t, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return t;
}
const sb = {
  pointer: {
    start: "down",
    change: "move",
    end: "up"
  },
  mouse: {
    start: "down",
    change: "move",
    end: "up"
  },
  touch: {
    start: "start",
    change: "move",
    end: "end"
  },
  gesture: {
    start: "start",
    change: "change",
    end: "end"
  }
};
function Bd(t) {
  return t ? t[0].toUpperCase() + t.slice(1) : "";
}
const AD = ["enter", "leave"];
function DD(t = !1, e) {
  return t && !AD.includes(e);
}
function PD(t, e = "", r = !1) {
  const n = sb[t], i = n && n[e] || e;
  return "on" + Bd(t) + Bd(i) + (DD(r, i) ? "Capture" : "");
}
const MD = ["gotpointercapture", "lostpointercapture"];
function FD(t) {
  let e = t.substring(2).toLowerCase();
  const r = !!~e.indexOf("passive");
  r && (e = e.replace("passive", ""));
  const n = MD.includes(e) ? "capturecapture" : "capture", i = !!~e.indexOf(n);
  return i && (e = e.replace("capture", "")), {
    device: e,
    capture: i,
    passive: r
  };
}
function RD(t, e = "") {
  const r = sb[t], n = r && r[e] || e;
  return t + n;
}
function Ba(t) {
  return "touches" in t;
}
function ob(t) {
  return Ba(t) ? "touch" : "pointerType" in t ? t.pointerType : "mouse";
}
function ID(t) {
  return Array.from(t.touches).filter((e) => {
    var r, n;
    return e.target === t.currentTarget || ((r = t.currentTarget) === null || r === void 0 || (n = r.contains) === null || n === void 0 ? void 0 : n.call(r, e.target));
  });
}
function LD(t) {
  return t.type === "touchend" || t.type === "touchcancel" ? t.changedTouches : t.targetTouches;
}
function ab(t) {
  return Ba(t) ? LD(t)[0] : t;
}
function zc(t, e) {
  try {
    const r = e.clientX - t.clientX, n = e.clientY - t.clientY, i = (e.clientX + t.clientX) / 2, l = (e.clientY + t.clientY) / 2, g = Math.hypot(r, n);
    return {
      angle: -(Math.atan2(r, n) * 180) / Math.PI,
      distance: g,
      origin: [i, l]
    };
  } catch {
  }
  return null;
}
function BD(t) {
  return ID(t).map((e) => e.identifier);
}
function zd(t, e) {
  const [r, n] = Array.from(t.touches).filter((i) => e.includes(i.identifier));
  return zc(r, n);
}
function Cl(t) {
  const e = ab(t);
  return Ba(t) ? e.identifier : e.pointerId;
}
function Nd(t) {
  const e = ab(t);
  return [e.clientX, e.clientY];
}
const jd = 40, $d = 800;
function zD(t) {
  let {
    deltaX: e,
    deltaY: r,
    deltaMode: n
  } = t;
  return n === 1 ? (e *= jd, r *= jd) : n === 2 && (e *= $d, r *= $d), [e, r];
}
function ND(t) {
  const e = {};
  if ("buttons" in t && (e.buttons = t.buttons), "shiftKey" in t) {
    const {
      shiftKey: r,
      altKey: n,
      metaKey: i,
      ctrlKey: l
    } = t;
    Object.assign(e, {
      shiftKey: r,
      altKey: n,
      metaKey: i,
      ctrlKey: l
    });
  }
  return e;
}
function Go(t, ...e) {
  return typeof t == "function" ? t(...e) : t;
}
function jD() {
}
function $D(...t) {
  return t.length === 0 ? jD : t.length === 1 ? t[0] : function() {
    let e;
    for (const r of t)
      e = r.apply(this, arguments) || e;
    return e;
  };
}
function Vd(t, e) {
  return Object.assign({}, e, t || {});
}
const VD = 32;
class lb {
  constructor(e, r, n) {
    this.ctrl = e, this.args = r, this.key = n, this.state || (this.state = {}, this.computeValues([0, 0]), this.computeInitial(), this.init && this.init(), this.reset());
  }
  get state() {
    return this.ctrl.state[this.key];
  }
  set state(e) {
    this.ctrl.state[this.key] = e;
  }
  get shared() {
    return this.ctrl.state.shared;
  }
  get eventStore() {
    return this.ctrl.gestureEventStores[this.key];
  }
  get timeoutStore() {
    return this.ctrl.gestureTimeoutStores[this.key];
  }
  get config() {
    return this.ctrl.config[this.key];
  }
  get sharedConfig() {
    return this.ctrl.config.shared;
  }
  get handler() {
    return this.ctrl.handlers[this.key];
  }
  reset() {
    const {
      state: e,
      shared: r,
      ingKey: n,
      args: i
    } = this;
    r[n] = e._active = e.active = e._blocked = e._force = !1, e._step = [!1, !1], e.intentional = !1, e._movement = [0, 0], e._distance = [0, 0], e._direction = [0, 0], e._delta = [0, 0], e._bounds = [[-1 / 0, 1 / 0], [-1 / 0, 1 / 0]], e.args = i, e.axis = void 0, e.memo = void 0, e.elapsedTime = e.timeDelta = 0, e.direction = [0, 0], e.distance = [0, 0], e.overflow = [0, 0], e._movementBound = [!1, !1], e.velocity = [0, 0], e.movement = [0, 0], e.delta = [0, 0], e.timeStamp = 0;
  }
  start(e) {
    const r = this.state, n = this.config;
    r._active || (this.reset(), this.computeInitial(), r._active = !0, r.target = e.target, r.currentTarget = e.currentTarget, r.lastOffset = n.from ? Go(n.from, r) : r.offset, r.offset = r.lastOffset, r.startTime = r.timeStamp = e.timeStamp);
  }
  computeValues(e) {
    const r = this.state;
    r._values = e, r.values = this.config.transform(e);
  }
  computeInitial() {
    const e = this.state;
    e._initial = e._values, e.initial = e.values;
  }
  compute(e) {
    const {
      state: r,
      config: n,
      shared: i
    } = this;
    r.args = this.args;
    let l = 0;
    if (e && (r.event = e, n.preventDefault && e.cancelable && r.event.preventDefault(), r.type = e.type, i.touches = this.ctrl.pointerIds.size || this.ctrl.touchIds.size, i.locked = !!document.pointerLockElement, Object.assign(i, ND(e)), i.down = i.pressed = i.buttons % 2 === 1 || i.touches > 0, l = e.timeStamp - r.timeStamp, r.timeStamp = e.timeStamp, r.elapsedTime = r.timeStamp - r.startTime), r._active) {
      const _ = r._delta.map(Math.abs);
      tt.addTo(r._distance, _);
    }
    this.axisIntent && this.axisIntent(e);
    const [g, a] = r._movement, [s, c] = n.threshold, {
      _step: f,
      values: o
    } = r;
    if (n.hasCustomTransform ? (f[0] === !1 && (f[0] = Math.abs(g) >= s && o[0]), f[1] === !1 && (f[1] = Math.abs(a) >= c && o[1])) : (f[0] === !1 && (f[0] = Math.abs(g) >= s && Math.sign(g) * s), f[1] === !1 && (f[1] = Math.abs(a) >= c && Math.sign(a) * c)), r.intentional = f[0] !== !1 || f[1] !== !1, !r.intentional)
      return;
    const h = [0, 0];
    if (n.hasCustomTransform) {
      const [_, S] = o;
      h[0] = f[0] !== !1 ? _ - f[0] : 0, h[1] = f[1] !== !1 ? S - f[1] : 0;
    } else
      h[0] = f[0] !== !1 ? g - f[0] : 0, h[1] = f[1] !== !1 ? a - f[1] : 0;
    this.restrictToAxis && !r._blocked && this.restrictToAxis(h);
    const u = r.offset, d = r._active && !r._blocked || r.active;
    d && (r.first = r._active && !r.active, r.last = !r._active && r.active, r.active = i[this.ingKey] = r._active, e && (r.first && ("bounds" in n && (r._bounds = Go(n.bounds, r)), this.setup && this.setup()), r.movement = h, this.computeOffset()));
    const [m, p] = r.offset, [[v, b], [y, w]] = r._bounds;
    r.overflow = [m < v ? -1 : m > b ? 1 : 0, p < y ? -1 : p > w ? 1 : 0], r._movementBound[0] = r.overflow[0] ? r._movementBound[0] === !1 ? r._movement[0] : r._movementBound[0] : !1, r._movementBound[1] = r.overflow[1] ? r._movementBound[1] === !1 ? r._movement[1] : r._movementBound[1] : !1;
    const x = r._active ? n.rubberband || [0, 0] : [0, 0];
    if (r.offset = ED(r._bounds, r.offset, x), r.delta = tt.sub(r.offset, u), this.computeMovement(), d && (!r.last || l > VD)) {
      r.delta = tt.sub(r.offset, u);
      const _ = r.delta.map(Math.abs);
      tt.addTo(r.distance, _), r.direction = r.delta.map(Math.sign), r._direction = r._delta.map(Math.sign), !r.first && l > 0 && (r.velocity = [_[0] / l, _[1] / l], r.timeDelta = l);
    }
  }
  emit() {
    const e = this.state, r = this.shared, n = this.config;
    if (e._active || this.clean(), (e._blocked || !e.intentional) && !e._force && !n.triggerAllEvents)
      return;
    const i = this.handler(Ue(Ue(Ue({}, r), e), {}, {
      [this.aliasKey]: e.values
    }));
    i !== void 0 && (e.memo = i);
  }
  clean() {
    this.eventStore.clean(), this.timeoutStore.clean();
  }
}
function HD([t, e], r) {
  const n = Math.abs(t), i = Math.abs(e);
  if (n > i && n > r)
    return "x";
  if (i > n && i > r)
    return "y";
}
class UD extends lb {
  constructor(...e) {
    super(...e), ct(this, "aliasKey", "xy");
  }
  reset() {
    super.reset(), this.state.axis = void 0;
  }
  init() {
    this.state.offset = [0, 0], this.state.lastOffset = [0, 0];
  }
  computeOffset() {
    this.state.offset = tt.add(this.state.lastOffset, this.state.movement);
  }
  computeMovement() {
    this.state.movement = tt.sub(this.state.offset, this.state.lastOffset);
  }
  axisIntent(e) {
    const r = this.state, n = this.config;
    if (!r.axis && e) {
      const i = typeof n.axisThreshold == "object" ? n.axisThreshold[ob(e)] : n.axisThreshold;
      r.axis = HD(r._movement, i);
    }
    r._blocked = (n.lockDirection || !!n.axis) && !r.axis || !!n.axis && n.axis !== r.axis;
  }
  restrictToAxis(e) {
    if (this.config.axis || this.config.lockDirection)
      switch (this.state.axis) {
        case "x":
          e[1] = 0;
          break;
        case "y":
          e[0] = 0;
          break;
      }
  }
}
const WD = (t) => t, Hd = 0.15, cb = {
  enabled(t = !0) {
    return t;
  },
  eventOptions(t, e, r) {
    return Ue(Ue({}, r.shared.eventOptions), t);
  },
  preventDefault(t = !1) {
    return t;
  },
  triggerAllEvents(t = !1) {
    return t;
  },
  rubberband(t = 0) {
    switch (t) {
      case !0:
        return [Hd, Hd];
      case !1:
        return [0, 0];
      default:
        return tt.toVector(t);
    }
  },
  from(t) {
    if (typeof t == "function")
      return t;
    if (t != null)
      return tt.toVector(t);
  },
  transform(t, e, r) {
    const n = t || r.shared.transform;
    return this.hasCustomTransform = !!n, n || WD;
  },
  threshold(t) {
    return tt.toVector(t, 0);
  }
}, XD = 0, Bs = Ue(Ue({}, cb), {}, {
  axis(t, e, {
    axis: r
  }) {
    if (this.lockDirection = r === "lock", !this.lockDirection)
      return r;
  },
  axisThreshold(t = XD) {
    return t;
  },
  bounds(t = {}) {
    if (typeof t == "function")
      return (l) => Bs.bounds(t(l));
    if ("current" in t)
      return () => t.current;
    if (typeof HTMLElement == "function" && t instanceof HTMLElement)
      return t;
    const {
      left: e = -1 / 0,
      right: r = 1 / 0,
      top: n = -1 / 0,
      bottom: i = 1 / 0
    } = t;
    return [[e, r], [n, i]];
  }
}), Ud = {
  ArrowRight: (t, e = 1) => [t * e, 0],
  ArrowLeft: (t, e = 1) => [-1 * t * e, 0],
  ArrowUp: (t, e = 1) => [0, -1 * t * e],
  ArrowDown: (t, e = 1) => [0, t * e]
};
class YD extends UD {
  constructor(...e) {
    super(...e), ct(this, "ingKey", "dragging");
  }
  reset() {
    super.reset();
    const e = this.state;
    e._pointerId = void 0, e._pointerActive = !1, e._keyboardActive = !1, e._preventScroll = !1, e._delayed = !1, e.swipe = [0, 0], e.tap = !1, e.canceled = !1, e.cancel = this.cancel.bind(this);
  }
  setup() {
    const e = this.state;
    if (e._bounds instanceof HTMLElement) {
      const r = e._bounds.getBoundingClientRect(), n = e.currentTarget.getBoundingClientRect(), i = {
        left: r.left - n.left + e.offset[0],
        right: r.right - n.right + e.offset[0],
        top: r.top - n.top + e.offset[1],
        bottom: r.bottom - n.bottom + e.offset[1]
      };
      e._bounds = Bs.bounds(i);
    }
  }
  cancel() {
    const e = this.state;
    e.canceled || (e.canceled = !0, e._active = !1, setTimeout(() => {
      this.compute(), this.emit();
    }, 0));
  }
  setActive() {
    this.state._active = this.state._pointerActive || this.state._keyboardActive;
  }
  clean() {
    this.pointerClean(), this.state._pointerActive = !1, this.state._keyboardActive = !1, super.clean();
  }
  pointerDown(e) {
    const r = this.config, n = this.state;
    if (e.buttons != null && (Array.isArray(r.pointerButtons) ? !r.pointerButtons.includes(e.buttons) : r.pointerButtons !== -1 && r.pointerButtons !== e.buttons))
      return;
    const i = this.ctrl.setEventIds(e);
    r.pointerCapture && e.target.setPointerCapture(e.pointerId), !(i && i.size > 1 && n._pointerActive) && (this.start(e), this.setupPointer(e), n._pointerId = Cl(e), n._pointerActive = !0, this.computeValues(Nd(e)), this.computeInitial(), r.preventScrollAxis && ob(e) !== "mouse" ? (n._active = !1, this.setupScrollPrevention(e)) : r.delay > 0 ? (this.setupDelayTrigger(e), r.triggerAllEvents && (this.compute(e), this.emit())) : this.startPointerDrag(e));
  }
  startPointerDrag(e) {
    const r = this.state;
    r._active = !0, r._preventScroll = !0, r._delayed = !1, this.compute(e), this.emit();
  }
  pointerMove(e) {
    const r = this.state, n = this.config;
    if (!r._pointerActive)
      return;
    const i = Cl(e);
    if (r._pointerId !== void 0 && i !== r._pointerId)
      return;
    const l = Nd(e);
    if (document.pointerLockElement === e.target ? r._delta = [e.movementX, e.movementY] : (r._delta = tt.sub(l, r._values), this.computeValues(l)), tt.addTo(r._movement, r._delta), this.compute(e), r._delayed && r.intentional) {
      this.timeoutStore.remove("dragDelay"), r.active = !1, this.startPointerDrag(e);
      return;
    }
    if (n.preventScrollAxis && !r._preventScroll)
      if (r.axis)
        if (r.axis === n.preventScrollAxis || n.preventScrollAxis === "xy") {
          r._active = !1, this.clean();
          return;
        } else {
          this.timeoutStore.remove("startPointerDrag"), this.startPointerDrag(e);
          return;
        }
      else
        return;
    this.emit();
  }
  pointerUp(e) {
    this.ctrl.setEventIds(e);
    try {
      this.config.pointerCapture && e.target.hasPointerCapture(e.pointerId) && e.target.releasePointerCapture(e.pointerId);
    } catch {
    }
    const r = this.state, n = this.config;
    if (!r._active || !r._pointerActive)
      return;
    const i = Cl(e);
    if (r._pointerId !== void 0 && i !== r._pointerId)
      return;
    this.state._pointerActive = !1, this.setActive(), this.compute(e);
    const [l, g] = r._distance;
    if (r.tap = l <= n.tapsThreshold && g <= n.tapsThreshold, r.tap && n.filterTaps)
      r._force = !0;
    else {
      const [a, s] = r._delta, [c, f] = r._movement, [o, h] = n.swipe.velocity, [u, d] = n.swipe.distance, m = n.swipe.duration;
      if (r.elapsedTime < m) {
        const p = Math.abs(a / r.timeDelta), v = Math.abs(s / r.timeDelta);
        p > o && Math.abs(c) > u && (r.swipe[0] = Math.sign(a)), v > h && Math.abs(f) > d && (r.swipe[1] = Math.sign(s));
      }
    }
    this.emit();
  }
  pointerClick(e) {
    !this.state.tap && e.detail > 0 && (e.preventDefault(), e.stopPropagation());
  }
  setupPointer(e) {
    const r = this.config, n = r.device;
    r.pointerLock && e.currentTarget.requestPointerLock(), r.pointerCapture || (this.eventStore.add(this.sharedConfig.window, n, "change", this.pointerMove.bind(this)), this.eventStore.add(this.sharedConfig.window, n, "end", this.pointerUp.bind(this)), this.eventStore.add(this.sharedConfig.window, n, "cancel", this.pointerUp.bind(this)));
  }
  pointerClean() {
    this.config.pointerLock && document.pointerLockElement === this.state.currentTarget && document.exitPointerLock();
  }
  preventScroll(e) {
    this.state._preventScroll && e.cancelable && e.preventDefault();
  }
  setupScrollPrevention(e) {
    this.state._preventScroll = !1, GD(e);
    const r = this.eventStore.add(this.sharedConfig.window, "touch", "change", this.preventScroll.bind(this), {
      passive: !1
    });
    this.eventStore.add(this.sharedConfig.window, "touch", "end", r), this.eventStore.add(this.sharedConfig.window, "touch", "cancel", r), this.timeoutStore.add("startPointerDrag", this.startPointerDrag.bind(this), this.config.preventScrollDelay, e);
  }
  setupDelayTrigger(e) {
    this.state._delayed = !0, this.timeoutStore.add("dragDelay", () => {
      this.state._step = [0, 0], this.startPointerDrag(e);
    }, this.config.delay);
  }
  keyDown(e) {
    const r = Ud[e.key];
    if (r) {
      const n = this.state, i = e.shiftKey ? 10 : e.altKey ? 0.1 : 1;
      this.start(e), n._delta = r(this.config.keyboardDisplacement, i), n._keyboardActive = !0, tt.addTo(n._movement, n._delta), this.compute(e), this.emit();
    }
  }
  keyUp(e) {
    e.key in Ud && (this.state._keyboardActive = !1, this.setActive(), this.compute(e), this.emit());
  }
  bind(e) {
    const r = this.config.device;
    e(r, "start", this.pointerDown.bind(this)), this.config.pointerCapture && (e(r, "change", this.pointerMove.bind(this)), e(r, "end", this.pointerUp.bind(this)), e(r, "cancel", this.pointerUp.bind(this)), e("lostPointerCapture", "", this.pointerUp.bind(this))), this.config.keys && (e("key", "down", this.keyDown.bind(this)), e("key", "up", this.keyUp.bind(this))), this.config.filterTaps && e("click", "", this.pointerClick.bind(this), {
      capture: !0,
      passive: !1
    });
  }
}
function GD(t) {
  "persist" in t && typeof t.persist == "function" && t.persist();
}
const zs = typeof window < "u" && window.document && window.document.createElement;
function ub() {
  return zs && "ontouchstart" in window;
}
function qD() {
  return ub() || zs && window.navigator.maxTouchPoints > 1;
}
function KD() {
  return zs && "onpointerdown" in window;
}
function JD() {
  return zs && "exitPointerLock" in window.document;
}
function ZD() {
  try {
    return "constructor" in GestureEvent;
  } catch {
    return !1;
  }
}
const zt = {
  isBrowser: zs,
  gesture: ZD(),
  touch: ub(),
  touchscreen: qD(),
  pointer: KD(),
  pointerLock: JD()
}, QD = 250, eP = 180, tP = 0.5, rP = 50, nP = 250, iP = 10, Wd = {
  mouse: 0,
  touch: 0,
  pen: 8
}, sP = Ue(Ue({}, Bs), {}, {
  device(t, e, {
    pointer: {
      touch: r = !1,
      lock: n = !1,
      mouse: i = !1
    } = {}
  }) {
    return this.pointerLock = n && zt.pointerLock, zt.touch && r ? "touch" : this.pointerLock ? "mouse" : zt.pointer && !i ? "pointer" : zt.touch ? "touch" : "mouse";
  },
  preventScrollAxis(t, e, {
    preventScroll: r
  }) {
    if (this.preventScrollDelay = typeof r == "number" ? r : r || r === void 0 && t ? QD : void 0, !(!zt.touchscreen || r === !1))
      return t || (r !== void 0 ? "y" : void 0);
  },
  pointerCapture(t, e, {
    pointer: {
      capture: r = !0,
      buttons: n = 1,
      keys: i = !0
    } = {}
  }) {
    return this.pointerButtons = n, this.keys = i, !this.pointerLock && this.device === "pointer" && r;
  },
  threshold(t, e, {
    filterTaps: r = !1,
    tapsThreshold: n = 3,
    axis: i = void 0
  }) {
    const l = tt.toVector(t, r ? n : i ? 1 : 0);
    return this.filterTaps = r, this.tapsThreshold = n, l;
  },
  swipe({
    velocity: t = tP,
    distance: e = rP,
    duration: r = nP
  } = {}) {
    return {
      velocity: this.transform(tt.toVector(t)),
      distance: this.transform(tt.toVector(e)),
      duration: r
    };
  },
  delay(t = 0) {
    switch (t) {
      case !0:
        return eP;
      case !1:
        return 0;
      default:
        return t;
    }
  },
  axisThreshold(t) {
    return t ? Ue(Ue({}, Wd), t) : Wd;
  },
  keyboardDisplacement(t = iP) {
    return t;
  }
});
function oP(t) {
  const [e, r] = t.overflow, [n, i] = t._delta, [l, g] = t._direction;
  (e < 0 && n > 0 && l < 0 || e > 0 && n < 0 && l > 0) && (t._movement[0] = t._movementBound[0]), (r < 0 && i > 0 && g < 0 || r > 0 && i < 0 && g > 0) && (t._movement[1] = t._movementBound[1]);
}
const aP = 30, lP = 100;
class cP extends lb {
  constructor(...e) {
    super(...e), ct(this, "ingKey", "pinching"), ct(this, "aliasKey", "da");
  }
  init() {
    this.state.offset = [1, 0], this.state.lastOffset = [1, 0], this.state._pointerEvents = /* @__PURE__ */ new Map();
  }
  reset() {
    super.reset();
    const e = this.state;
    e._touchIds = [], e.canceled = !1, e.cancel = this.cancel.bind(this), e.turns = 0;
  }
  computeOffset() {
    const {
      type: e,
      movement: r,
      lastOffset: n
    } = this.state;
    e === "wheel" ? this.state.offset = tt.add(r, n) : this.state.offset = [(1 + r[0]) * n[0], r[1] + n[1]];
  }
  computeMovement() {
    const {
      offset: e,
      lastOffset: r
    } = this.state;
    this.state.movement = [e[0] / r[0], e[1] - r[1]];
  }
  axisIntent() {
    const e = this.state, [r, n] = e._movement;
    if (!e.axis) {
      const i = Math.abs(r) * aP - Math.abs(n);
      i < 0 ? e.axis = "angle" : i > 0 && (e.axis = "scale");
    }
  }
  restrictToAxis(e) {
    this.config.lockDirection && (this.state.axis === "scale" ? e[1] = 0 : this.state.axis === "angle" && (e[0] = 0));
  }
  cancel() {
    const e = this.state;
    e.canceled || setTimeout(() => {
      e.canceled = !0, e._active = !1, this.compute(), this.emit();
    }, 0);
  }
  touchStart(e) {
    this.ctrl.setEventIds(e);
    const r = this.state, n = this.ctrl.touchIds;
    if (r._active && r._touchIds.every((l) => n.has(l)) || n.size < 2)
      return;
    this.start(e), r._touchIds = Array.from(n).slice(0, 2);
    const i = zd(e, r._touchIds);
    i && this.pinchStart(e, i);
  }
  pointerStart(e) {
    if (e.buttons != null && e.buttons % 2 !== 1)
      return;
    this.ctrl.setEventIds(e), e.target.setPointerCapture(e.pointerId);
    const r = this.state, n = r._pointerEvents, i = this.ctrl.pointerIds;
    if (r._active && Array.from(n.keys()).every((g) => i.has(g)) || (n.size < 2 && n.set(e.pointerId, e), r._pointerEvents.size < 2))
      return;
    this.start(e);
    const l = zc(...Array.from(n.values()));
    l && this.pinchStart(e, l);
  }
  pinchStart(e, r) {
    const n = this.state;
    n.origin = r.origin, this.computeValues([r.distance, r.angle]), this.computeInitial(), this.compute(e), this.emit();
  }
  touchMove(e) {
    if (!this.state._active)
      return;
    const r = zd(e, this.state._touchIds);
    r && this.pinchMove(e, r);
  }
  pointerMove(e) {
    const r = this.state._pointerEvents;
    if (r.has(e.pointerId) && r.set(e.pointerId, e), !this.state._active)
      return;
    const n = zc(...Array.from(r.values()));
    n && this.pinchMove(e, n);
  }
  pinchMove(e, r) {
    const n = this.state, i = n._values[1], l = r.angle - i;
    let g = 0;
    Math.abs(l) > 270 && (g += Math.sign(l)), this.computeValues([r.distance, r.angle - 360 * g]), n.origin = r.origin, n.turns = g, n._movement = [n._values[0] / n._initial[0] - 1, n._values[1] - n._initial[1]], this.compute(e), this.emit();
  }
  touchEnd(e) {
    this.ctrl.setEventIds(e), this.state._active && this.state._touchIds.some((r) => !this.ctrl.touchIds.has(r)) && (this.state._active = !1, this.compute(e), this.emit());
  }
  pointerEnd(e) {
    const r = this.state;
    this.ctrl.setEventIds(e);
    try {
      e.target.releasePointerCapture(e.pointerId);
    } catch {
    }
    r._pointerEvents.has(e.pointerId) && r._pointerEvents.delete(e.pointerId), r._active && r._pointerEvents.size < 2 && (r._active = !1, this.compute(e), this.emit());
  }
  gestureStart(e) {
    e.cancelable && e.preventDefault();
    const r = this.state;
    r._active || (this.start(e), this.computeValues([e.scale, e.rotation]), r.origin = [e.clientX, e.clientY], this.compute(e), this.emit());
  }
  gestureMove(e) {
    if (e.cancelable && e.preventDefault(), !this.state._active)
      return;
    const r = this.state;
    this.computeValues([e.scale, e.rotation]), r.origin = [e.clientX, e.clientY];
    const n = r._movement;
    r._movement = [e.scale - 1, e.rotation], r._delta = tt.sub(r._movement, n), this.compute(e), this.emit();
  }
  gestureEnd(e) {
    this.state._active && (this.state._active = !1, this.compute(e), this.emit());
  }
  wheel(e) {
    const r = this.config.modifierKey;
    r && (Array.isArray(r) ? !r.find((n) => e[n]) : !e[r]) || (this.state._active ? this.wheelChange(e) : this.wheelStart(e), this.timeoutStore.add("wheelEnd", this.wheelEnd.bind(this)));
  }
  wheelStart(e) {
    this.start(e), this.wheelChange(e);
  }
  wheelChange(e) {
    "uv" in e || e.cancelable && e.preventDefault();
    const n = this.state;
    n._delta = [-zD(e)[1] / lP * n.offset[0], 0], tt.addTo(n._movement, n._delta), oP(n), this.state.origin = [e.clientX, e.clientY], this.compute(e), this.emit();
  }
  wheelEnd() {
    this.state._active && (this.state._active = !1, this.compute(), this.emit());
  }
  bind(e) {
    const r = this.config.device;
    r && (e(r, "start", this[r + "Start"].bind(this)), e(r, "change", this[r + "Move"].bind(this)), e(r, "end", this[r + "End"].bind(this)), e(r, "cancel", this[r + "End"].bind(this)), e("lostPointerCapture", "", this[r + "End"].bind(this))), this.config.pinchOnWheel && e("wheel", "", this.wheel.bind(this), {
      passive: !1
    });
  }
}
const uP = Ue(Ue({}, cb), {}, {
  device(t, e, {
    shared: r,
    pointer: {
      touch: n = !1
    } = {}
  }) {
    if (r.target && !zt.touch && zt.gesture)
      return "gesture";
    if (zt.touch && n)
      return "touch";
    if (zt.touchscreen) {
      if (zt.pointer)
        return "pointer";
      if (zt.touch)
        return "touch";
    }
  },
  bounds(t, e, {
    scaleBounds: r = {},
    angleBounds: n = {}
  }) {
    const i = (g) => {
      const a = Vd(Go(r, g), {
        min: -1 / 0,
        max: 1 / 0
      });
      return [a.min, a.max];
    }, l = (g) => {
      const a = Vd(Go(n, g), {
        min: -1 / 0,
        max: 1 / 0
      });
      return [a.min, a.max];
    };
    return typeof r != "function" && typeof n != "function" ? [i(), l()] : (g) => [i(g), l(g)];
  },
  threshold(t, e, r) {
    return this.lockDirection = r.axis === "lock", tt.toVector(t, this.lockDirection ? [0.1, 3] : 0);
  },
  modifierKey(t) {
    return t === void 0 ? "ctrlKey" : t;
  },
  pinchOnWheel(t = !0) {
    return t;
  }
});
Ue(Ue({}, Bs), {}, {
  mouseOnly: (t = !0) => t
});
Ue(Ue({}, Bs), {}, {
  mouseOnly: (t = !0) => t
});
const uh = /* @__PURE__ */ new Map(), Nc = /* @__PURE__ */ new Map();
function hP(t) {
  uh.set(t.key, t.engine), Nc.set(t.key, t.resolver);
}
const fP = {
  key: "drag",
  engine: YD,
  resolver: sP
}, dP = {
  key: "pinch",
  engine: cP,
  resolver: uP
};
function pP(t, e) {
  if (t == null)
    return {};
  var r = {}, n = Object.keys(t), i, l;
  for (l = 0; l < n.length; l++)
    i = n[l], !(e.indexOf(i) >= 0) && (r[i] = t[i]);
  return r;
}
function gP(t, e) {
  if (t == null)
    return {};
  var r = pP(t, e), n, i;
  if (Object.getOwnPropertySymbols) {
    var l = Object.getOwnPropertySymbols(t);
    for (i = 0; i < l.length; i++)
      n = l[i], !(e.indexOf(n) >= 0) && Object.prototype.propertyIsEnumerable.call(t, n) && (r[n] = t[n]);
  }
  return r;
}
const mP = {
  target(t) {
    if (t)
      return () => "current" in t ? t.current : t;
  },
  enabled(t = !0) {
    return t;
  },
  window(t = zt.isBrowser ? window : void 0) {
    return t;
  },
  eventOptions({
    passive: t = !0,
    capture: e = !1
  } = {}) {
    return {
      passive: t,
      capture: e
    };
  },
  transform(t) {
    return t;
  }
}, vP = ["target", "eventOptions", "window", "enabled", "transform"];
function mo(t = {}, e) {
  const r = {};
  for (const [n, i] of Object.entries(e))
    switch (typeof i) {
      case "function":
        r[n] = i.call(r, t[n], n, t);
        break;
      case "object":
        r[n] = mo(t[n], i);
        break;
      case "boolean":
        i && (r[n] = t[n]);
        break;
    }
  return r;
}
function bP(t, e, r = {}) {
  const n = t, {
    target: i,
    eventOptions: l,
    window: g,
    enabled: a,
    transform: s
  } = n, c = gP(n, vP);
  if (r.shared = mo({
    target: i,
    eventOptions: l,
    window: g,
    enabled: a,
    transform: s
  }, mP), e) {
    const f = Nc.get(e);
    r[e] = mo(Ue({
      shared: r.shared
    }, c), f);
  } else
    for (const f in c) {
      const o = Nc.get(f);
      o && (r[f] = mo(Ue({
        shared: r.shared
      }, c[f]), o));
    }
  return r;
}
class hb {
  constructor(e, r) {
    ct(this, "_listeners", /* @__PURE__ */ new Set()), this._ctrl = e, this._gestureKey = r;
  }
  add(e, r, n, i, l) {
    const g = this._listeners, a = RD(r, n), s = this._gestureKey ? this._ctrl.config[this._gestureKey].eventOptions : {}, c = Ue(Ue({}, s), l);
    e.addEventListener(a, i, c);
    const f = () => {
      e.removeEventListener(a, i, c), g.delete(f);
    };
    return g.add(f), f;
  }
  clean() {
    this._listeners.forEach((e) => e()), this._listeners.clear();
  }
}
class yP {
  constructor() {
    ct(this, "_timeouts", /* @__PURE__ */ new Map());
  }
  add(e, r, n = 140, ...i) {
    this.remove(e), this._timeouts.set(e, window.setTimeout(r, n, ...i));
  }
  remove(e) {
    const r = this._timeouts.get(e);
    r && window.clearTimeout(r);
  }
  clean() {
    this._timeouts.forEach((e) => void window.clearTimeout(e)), this._timeouts.clear();
  }
}
class wP {
  constructor(e) {
    ct(this, "gestures", /* @__PURE__ */ new Set()), ct(this, "_targetEventStore", new hb(this)), ct(this, "gestureEventStores", {}), ct(this, "gestureTimeoutStores", {}), ct(this, "handlers", {}), ct(this, "config", {}), ct(this, "pointerIds", /* @__PURE__ */ new Set()), ct(this, "touchIds", /* @__PURE__ */ new Set()), ct(this, "state", {
      shared: {
        shiftKey: !1,
        metaKey: !1,
        ctrlKey: !1,
        altKey: !1
      }
    }), xP(this, e);
  }
  setEventIds(e) {
    if (Ba(e))
      return this.touchIds = new Set(BD(e)), this.touchIds;
    if ("pointerId" in e)
      return e.type === "pointerup" || e.type === "pointercancel" ? this.pointerIds.delete(e.pointerId) : e.type === "pointerdown" && this.pointerIds.add(e.pointerId), this.pointerIds;
  }
  applyHandlers(e, r) {
    this.handlers = e, this.nativeHandlers = r;
  }
  applyConfig(e, r) {
    this.config = bP(e, r, this.config);
  }
  clean() {
    this._targetEventStore.clean();
    for (const e of this.gestures)
      this.gestureEventStores[e].clean(), this.gestureTimeoutStores[e].clean();
  }
  effect() {
    return this.config.shared.target && this.bind(), () => this._targetEventStore.clean();
  }
  bind(...e) {
    const r = this.config.shared, n = {};
    let i;
    if (!(r.target && (i = r.target(), !i))) {
      if (r.enabled) {
        for (const g of this.gestures) {
          const a = this.config[g], s = Xd(n, a.eventOptions, !!i);
          if (a.enabled) {
            const c = uh.get(g);
            new c(this, e, g).bind(s);
          }
        }
        const l = Xd(n, r.eventOptions, !!i);
        for (const g in this.nativeHandlers)
          l(g, "", (a) => this.nativeHandlers[g](Ue(Ue({}, this.state.shared), {}, {
            event: a,
            args: e
          })), void 0, !0);
      }
      for (const l in n)
        n[l] = $D(...n[l]);
      if (!i)
        return n;
      for (const l in n) {
        const {
          device: g,
          capture: a,
          passive: s
        } = FD(l);
        this._targetEventStore.add(i, g, "", n[l], {
          capture: a,
          passive: s
        });
      }
    }
  }
}
function $n(t, e) {
  t.gestures.add(e), t.gestureEventStores[e] = new hb(t, e), t.gestureTimeoutStores[e] = new yP();
}
function xP(t, e) {
  e.drag && $n(t, "drag"), e.wheel && $n(t, "wheel"), e.scroll && $n(t, "scroll"), e.move && $n(t, "move"), e.pinch && $n(t, "pinch"), e.hover && $n(t, "hover");
}
const Xd = (t, e, r) => (n, i, l, g = {}, a = !1) => {
  var s, c;
  const f = (s = g.capture) !== null && s !== void 0 ? s : e.capture, o = (c = g.passive) !== null && c !== void 0 ? c : e.passive;
  let h = a ? n : PD(n, i, f);
  r && o && (h += "Passive"), t[h] = t[h] || [], t[h].push(l);
}, CP = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;
function _P(t) {
  const e = {}, r = {}, n = /* @__PURE__ */ new Set();
  for (let i in t)
    CP.test(i) ? (n.add(RegExp.lastMatch), r[i] = t[i]) : e[i] = t[i];
  return [r, e, n];
}
function Vn(t, e, r, n, i, l) {
  if (!t.has(r) || !uh.has(n))
    return;
  const g = r + "Start", a = r + "End", s = (c) => {
    let f;
    return c.first && g in e && e[g](c), r in e && (f = e[r](c)), c.last && a in e && e[a](c), f;
  };
  i[n] = s, l[n] = l[n] || {};
}
function SP(t, e) {
  const [r, n, i] = _P(t), l = {};
  return Vn(i, r, "onDrag", "drag", l, e), Vn(i, r, "onWheel", "wheel", l, e), Vn(i, r, "onScroll", "scroll", l, e), Vn(i, r, "onPinch", "pinch", l, e), Vn(i, r, "onMove", "move", l, e), Vn(i, r, "onHover", "hover", l, e), {
    handlers: l,
    config: e,
    nativeHandlers: n
  };
}
function TP(t, e = {}, r, n) {
  const i = he.useMemo(() => new wP(t), []);
  if (i.applyHandlers(t, n), i.applyConfig(e, r), he.useEffect(i.effect.bind(i)), he.useEffect(() => i.clean.bind(i), []), e.target === void 0)
    return i.bind.bind(i);
}
function EP(t) {
  return t.forEach(hP), function(r, n) {
    const {
      handlers: i,
      nativeHandlers: l,
      config: g
    } = SP(r, n || {});
    return TP(i, g, void 0, l);
  };
}
function br({
  e: t,
  rect: e,
  deltaX: r,
  deltaY: n
}) {
  return {
    rect: e,
    x: t.clientX,
    y: t.clientY,
    deltaX: r ?? 0,
    deltaY: n ?? 0,
    nativeEvent: t
  };
}
function za({
  onMoveStart: t,
  onMove: e,
  onMoveEnd: r,
  minimumMovement: n = 0,
  preventDefault: i,
  stopPropagation: l = !0,
  onPress: g,
  onLongPress: a,
  ...s
}) {
  const f = ge({
    lastPosition: { x: 0, y: 0 },
    started: !1,
    longPressTriggered: !1
  }).current, { addGlobalListener: o, removeGlobalListener: h } = Mu(), u = (v) => {
    !f.el || (t == null ? void 0 : t(v, f.el)) === !1 || (f.originalTouchAction = f.el.style.touchAction, f.el.style.touchAction = "none", f.originalUserSelect = document.documentElement.style.userSelect, document.documentElement.style.userSelect = "none", f.started = !0);
  }, d = (v) => {
    var b;
    if (v.button === 0 && f.id == null) {
      if (f.started = !1, ((b = s.onPointerDown) == null ? void 0 : b.call(s, v)) === !1)
        return;
      l && v.stopPropagation(), i && v.preventDefault(), f.id = v.pointerId, f.el = v.currentTarget, f.lastPosition = { x: v.clientX, y: v.clientY }, a && (f.longPressTimer = setTimeout(() => {
        a(v, f.el), f.longPressTriggered = !0;
      }, 400)), (t || e) && o(window, "pointermove", m, !1), o(window, "pointerup", p, !1), o(window, "pointercancel", p, !1);
    }
  }, m = (v) => {
    if (v.pointerId === f.id) {
      const b = v.clientX - f.lastPosition.x, y = v.clientY - f.lastPosition.y;
      (Math.abs(b) >= n || Math.abs(y) >= n) && !f.started && u(v), f.started && (e == null || e(v, b, y), f.lastPosition = { x: v.clientX, y: v.clientY });
    }
  }, p = (v) => {
    var b;
    if (v.pointerId === f.id) {
      f.longPressTimer && clearTimeout(f.longPressTimer);
      const y = f.longPressTriggered;
      f.longPressTriggered = !1, f.started && (r == null || r(v)), f.el && (v.type !== "pointercancel" && ((b = s.onPointerUp) == null || b.call(s, v, f.el), v.target && f.el.contains(v.target) && (y ? a == null || a(v, f.el) : g == null || g(v, f.el))), document.documentElement.style.userSelect = f.originalUserSelect || "", f.el.style.touchAction = f.originalTouchAction || ""), f.id = void 0, f.started = !1, h(window, "pointermove", m, !1), h(window, "pointerup", p, !1), h(window, "pointercancel", p, !1);
    }
  };
  return {
    domProps: {
      onPointerDown: wt(d)
    }
  };
}
function kP(t, e) {
  const r = { ...t };
  r.left = Math.max(0, r.left);
  const n = r.left - t.left;
  n > 0 && (r.width -= n), r.top = Math.max(0, r.top);
  const i = r.top - t.top;
  return i > 0 && (r.height -= i), r.width = Math.min(
    r.width,
    e.width - r.left
  ), r.height = Math.min(
    r.height,
    e.height - r.top
  ), r;
}
function gs(t) {
  return {
    left: t.left,
    top: t.top,
    width: t.width,
    height: t.height
  };
}
var At = /* @__PURE__ */ ((t) => (t.topLeft = "topLeft", t.topRight = "topRight", t.bottomLeft = "bottomLeft", t.bottomRight = "bottomRight", t))(At || {});
let Pe = {};
const Yd = (t = {}) => {
  wi(null), Pe = t;
};
function fb({
  aspectRatio: t,
  boundaryRef: e,
  boundaryRect: r,
  restrictWithinBoundary: n = !0,
  minWidth: i = 50,
  minHeight: l = 50,
  ...g
}) {
  const a = {
    onMoveStart: (c, f) => {
      var h;
      const o = c.target;
      if (!o.dataset.resizeHandle || Ms || (Yd({
        currentRect: gs(f.getBoundingClientRect()),
        resizeDir: o.dataset.resizeHandle
      }), !Pe.currentRect))
        return !1;
      wi("resize"), r ? Pe.boundaryRect = r : e != null && e.current && (Pe.boundaryRect = gs(
        e.current.getBoundingClientRect()
      )), Pe.currentRect && Pe.boundaryRect && (Pe.currentRect.left -= Pe.boundaryRect.left, Pe.currentRect.top -= Pe.boundaryRect.top), Pe.initialAspectRatio = Pe.currentRect.width / Pe.currentRect.height, (h = g.onResizeStart) == null || h.call(g, br({ rect: Pe.currentRect, e: c }));
    },
    onMove: (c, f, o) => {
      var m;
      if (!Pe.resizeDir || !Pe.currentRect)
        return;
      const h = t === "initial" ? Pe.initialAspectRatio : t, u = OP(Pe.currentRect, f, o, h), d = AP(u, i, l, h);
      (m = g.onResize) == null || m.call(
        g,
        br({ rect: d, e: c, deltaX: f, deltaY: o })
      ), Pe.currentRect = u;
    },
    onMoveEnd: (c) => {
      var f;
      Pe.currentRect && ((f = g.onResizeEnd) == null || f.call(g, br({ rect: Pe.currentRect, e: c }))), Yd();
    }
  }, { domProps: s } = za(a);
  return { resizeProps: s };
}
function OP(t, e, r, n) {
  const i = { ...t }, l = { ...t };
  return Pe.resizeDir === "topRight" ? (l.width = Math.floor(l.width + e), n ? l.height = Math.floor(l.width / n) : l.height = Math.floor(l.height - r), l.top = Math.floor(l.top + (i.height - l.height))) : Pe.resizeDir === "bottomRight" ? (l.width = Math.floor(l.width + e), n ? l.height = Math.floor(l.width / n) : l.height = Math.floor(l.height + r)) : Pe.resizeDir === "topLeft" ? (l.width = Math.floor(l.width - e), n ? l.height = Math.floor(l.width / n) : l.height = Math.floor(l.height - r), l.left = Math.floor(l.left + (i.width - l.width)), l.top = Math.floor(l.top + (i.height - l.height))) : Pe.resizeDir === "bottomLeft" && (l.width = Math.floor(l.width - e), n ? l.height = Math.floor(l.width / n) : l.height = Math.floor(l.height + r), l.left = Math.floor(l.left + e)), l;
}
function AP(t, e, r, n) {
  const i = Pe.resizeDir === "bottomLeft" || Pe.resizeDir === "topLeft", l = Pe.resizeDir === "topRight" || Pe.resizeDir === "topLeft";
  let g = { ...t };
  g.width = Math.max(e, t.width), g.height = Math.max(r, t.height);
  const a = g.width - t.width;
  i && a > 0 && (g.left -= a);
  const s = g.height - t.height;
  if (l && s > 0 && (g.top -= s), Pe.boundaryRect && (g = kP(
    g,
    Pe.boundaryRect
  )), n) {
    const c = g.width, f = g.height, o = Iu(
      n,
      g.width,
      g.height
    );
    g.width = o.width, g.height = o.height, l && (g.top += f - g.height), i && (g.left += c - g.width);
  }
  return g;
}
function Nr({ position: t, inset: e = !1 }) {
  const r = DP(t, e);
  return /* @__PURE__ */ C(
    "div",
    {
      "data-resize-handle": t,
      className: `border-white absolute w-20 h-20 ${r}`
    }
  );
}
function DP(t, e) {
  const r = e ? "left-0" : "-left-5", n = e ? "top-0" : "-top-5", i = e ? "bottom-0" : "-bottom-5", l = e ? "right-0" : "-right-5";
  switch (t) {
    case At.topLeft:
      return `${r} ${n} border-l-4 border-t-4 cursor-nwse-resize`;
    case At.topRight:
      return `${l} ${n} border-r-4 border-t-4 cursor-nesw-resize`;
    case At.bottomRight:
      return `${l} ${i} border-r-4 border-b-4 cursor-se-resize`;
    case At.bottomLeft:
      return `${r} ${i} border-l-4 border-b-4 cursor-sw-resize`;
    default:
      return "";
  }
}
var Yi = /* @__PURE__ */ ((t) => (t.top = "maskTop", t.right = "maskRight", t.bottom = "maskBottom", t.left = "maskLeft", t))(Yi || {});
function so({ position: t, refs: e }) {
  const r = PP(t);
  return /* @__PURE__ */ C(
    "div",
    {
      className: `cropzone-transition bg-black/50 bottom absolute ${r}`,
      ref: (n) => e.current[t] = n
    }
  );
}
function PP(t) {
  switch (t) {
    case "maskTop":
      return "left-0 top-0";
    case "maskBottom":
      return "bottom-0 left-0";
    default:
      return "";
  }
}
function oo({ name: t, refs: e }) {
  const r = ce(
    "cropzone-transition pointer-events-none absolute left-0 top-0 bg-white/50",
    t.startsWith("lineHor") ? "h-px" : "w-px"
  );
  return /* @__PURE__ */ C(
    "div",
    {
      className: r,
      ref: (n) => {
        e.current[t] = n;
      }
    }
  );
}
function ms(t, e, r) {
  return Math.min(Math.max(t, e), r);
}
let Ge = {};
function db({
  boundaryRef: t,
  boundaryRect: e,
  minimumMovement: r,
  restrictWithinBoundary: n = !0,
  ...i
}) {
  const l = {
    minimumMovement: r,
    onMoveStart: (a, s) => {
      var c;
      if (Ms)
        return !1;
      Ge = {
        currentRect: gs(s.getBoundingClientRect())
      }, wi("move"), e ? Ge.boundaryRect = e : t != null && t.current && (Ge.boundaryRect = gs(
        t.current.getBoundingClientRect()
      )), Ge.currentRect && Ge.boundaryRect && (Ge.currentRect.left -= Ge.boundaryRect.left, Ge.currentRect.top -= Ge.boundaryRect.top), (c = i.onMoveStart) == null || c.call(i, br({ rect: Ge.currentRect, e: a }));
    },
    onMove: (a, s, c) => {
      var h;
      if (!Ge.currentRect)
        return;
      const f = {
        ...Ge.currentRect,
        left: Ge.currentRect.left + s,
        top: Ge.currentRect.top + c
      }, o = { ...f };
      Ge.boundaryRect && n && (o.left = ms(
        f.left,
        0,
        Ge.boundaryRect.width - f.width
      ), o.top = ms(
        f.top,
        0,
        Ge.boundaryRect.height - f.height
      )), (h = i.onMove) == null || h.call(i, br({ rect: o, e: a, deltaX: s, deltaY: c })), Ge.currentRect = f;
    },
    onMoveEnd: (a) => {
      var s;
      Ge.currentRect && ((s = i.onMoveEnd) == null || s.call(i, br({ rect: Ge.currentRect, e: a })), wi(null), Ge = {});
    }
  }, { domProps: g } = za(l);
  return { moveProps: g };
}
function MP() {
  const t = ge({}), [e, r] = Fe(!0), n = fe((f) => f.canvasSize), i = fe((f) => {
    var o, h;
    return (h = (o = f.config.tools) == null ? void 0 : o.crop) == null ? void 0 : h.cropzone;
  }), l = fe((f) => {
    var o, h;
    return (h = (o = f.config.tools) == null ? void 0 : o.crop) == null ? void 0 : h.defaultRatio;
  }) || null, g = fe((f) => f.crop.selectedAspectRatio) || null, { moveProps: a } = db({
    boundaryRect: n,
    onMoveStart: () => r(!0),
    onMove: (f) => I().crop.drawZone(f.rect),
    onMoveEnd: () => r(!1)
  }), { resizeProps: s } = fb({
    boundaryRect: n,
    minHeight: 50,
    minWidth: 50,
    aspectRatio: Lu(g),
    onResizeStart: () => r(!0),
    onResize: (f) => I().crop.drawZone(f.rect),
    onResizeEnd: () => r(!1)
  });
  xs(() => {
    I().crop.registerRefs(t), I().crop.resetCropzone(l);
  }, [l, n]);
  const c = ce(
    "cropzone absolute z-cropzone isolate left-0 top-0 w-full h-full overflow-hidden",
    e && "moving"
  );
  return /* @__PURE__ */ oe(
    "div",
    {
      className: c,
      onPointerDown: (f) => {
        f.stopPropagation(), f.preventDefault();
      },
      children: [
        /* @__PURE__ */ oe(
          "div",
          {
            className: "cropzone-transition border-white/50 absolute z-10 left-0 top-0 border",
            ...Tr(s, a),
            ref: (f) => t.current.innerZone = f,
            children: [
              !(i != null && i.hideTopLeft) && /* @__PURE__ */ C(Nr, { position: At.topLeft, inset: !0 }),
              !(i != null && i.hideTopRight) && /* @__PURE__ */ C(Nr, { position: At.topRight, inset: !0 }),
              !(i != null && i.hideBottomLeft) && /* @__PURE__ */ C(Nr, { position: At.bottomLeft, inset: !0 }),
              !(i != null && i.hideBottomRight) && /* @__PURE__ */ C(Nr, { position: At.bottomRight, inset: !0 }),
              /* @__PURE__ */ C(oo, { name: "lineVer1", refs: t }),
              /* @__PURE__ */ C(oo, { name: "lineVer2", refs: t }),
              /* @__PURE__ */ C(oo, { name: "lineHor1", refs: t }),
              /* @__PURE__ */ C(oo, { name: "lineHor2", refs: t })
            ]
          }
        ),
        /* @__PURE__ */ C(so, { refs: t, position: Yi.top }),
        /* @__PURE__ */ C(so, { refs: t, position: Yi.left }),
        /* @__PURE__ */ C(so, { refs: t, position: Yi.right }),
        /* @__PURE__ */ C(so, { refs: t, position: Yi.bottom })
      ]
    }
  );
}
const FP = we(
  /* @__PURE__ */ C("path", { d: "M 7 2 C 6.448 2 6 2.448 6 3 C 6 3.552 6.448 4 7 4 L 20 4 L 20 17 C 20 17.552 20.448 18 21 18 C 21.552 18 22 17.552 22 17 L 22 4 C 22 2.895 21.105 2 20 2 L 7 2 z M 4 6 C 2.895 6 2 6.895 2 8 L 2 20 C 2 21.105 2.895 22 4 22 L 16 22 C 17.105 22 18 21.105 18 20 L 18 8 C 18 6.895 17.105 6 16 6 L 4 6 z M 10 10 C 10.552 10 11 10.448 11 11 L 11 13 L 13 13 C 13.552 13 14 13.448 14 14 C 14 14.552 13.552 15 13 15 L 11 15 L 11 17 C 11 17.552 10.552 18 10 18 C 9.448 18 9 17.552 9 17 L 9 15 L 7 15 C 6.448 15 6 14.552 6 14 C 6 13.448 6.448 13 7 13 L 9 13 L 9 11 C 9 10.448 9.448 10 10 10 z" })
), RP = we(
  /* @__PURE__ */ C("path", { d: "M 11 3 L 2 21 L 11 21 L 11 3 z M 13 3 L 13 21 L 22 21 L 13 3 z M 9 11.472656 L 9 19 L 5.2363281 19 L 9 11.472656 z" })
), IP = we(
  /* @__PURE__ */ C("path", { d: "M 16.476562 2.4511719 C 16.392047 2.4657656 16.308531 2.5061719 16.238281 2.5761719 L 14.130859 4.6835938 C 13.956859 4.8575938 13.956859 5.1394531 14.130859 5.3144531 L 16.238281 7.4238281 C 16.519281 7.7048281 17 7.5054219 17 7.1074219 L 17 6 L 20 6 L 20 9 A 1.0001 1.0001 0 1 0 22 9 L 22 6 C 22 4.9069372 21.093063 4 20 4 L 17 4 L 17 2.8925781 C 17 2.5940781 16.730109 2.4073906 16.476562 2.4511719 z M 4 5 C 2.9069372 5 2 5.9069372 2 7 L 2 14 C 2 15.093063 2.9069372 16 4 16 L 7 16 L 7 19 C 7 20.105 7.895 21 9 21 L 16 21 C 17.105 21 18 20.105 18 19 L 18 12 C 18 10.895 17.105 10 16 10 L 13 10 L 13 7 C 13 5.9069372 12.093063 5 11 5 L 4 5 z M 4 7 L 11 7 L 11 14 L 4 14 L 4 7 z" })
), LP = we(
  /* @__PURE__ */ C("path", { d: "M 10 2 L 9 3 L 3 3 L 3 5 L 21 5 L 21 3 L 15 3 L 14 2 L 10 2 z M 4.3652344 7 L 5.8925781 20.263672 C 6.0245781 21.253672 6.877 22 7.875 22 L 16.123047 22 C 17.121047 22 17.974422 21.254859 18.107422 20.255859 L 19.634766 7 L 4.3652344 7 z" })
), BP = {
  width: 120,
  height: 30
}, zP = [
  {
    name: "Duplicate",
    icon: FP,
    onClick: () => {
      I().objects.duplicate();
    }
  },
  {
    name: "Flip",
    icon: RP,
    onClick: () => {
      I().objects.flipHorizontally();
    }
  },
  {
    name: "Bring to front",
    icon: IP,
    onClick: () => {
      I().objects.bringToFront();
    }
  },
  {
    name: "Delete",
    icon: LP,
    onClick: () => {
      I().objects.delete();
    }
  }
], NP = he.forwardRef(
  (t, e) => {
    const n = fe((i) => i.objects.active.isMoving) ? "opacity-0" : "opacity-100";
    return /* @__PURE__ */ C(
      "div",
      {
        ref: e,
        className: `${n} absolute z-obj-box left-0 top-0 flex items-center text-white bg-controls rounded shadow transition-opacity overflow-hidden`,
        children: zP.map((i) => {
          const l = i.icon;
          return /* @__PURE__ */ C(
            ze,
            {
              size: "sm",
              className: "w-30 h-30 hover:bg-white/hover",
              radius: "rounded-none",
              onClick: i.onClick,
              children: /* @__PURE__ */ C(l, {})
            },
            i.name
          );
        })
      }
    );
  }
);
function jP(t, e) {
  if (!e)
    return;
  const r = t.angle || 0, n = r > 168 && r < 188 ? -30 : -15, i = O().canvasSize, l = O().stageSize, g = BP, a = i.top - l.top, s = i.left - l.left, c = l.width - (s + i.width), f = l.height - (a + i.height), o = -a, h = -(i.left - l.left), u = i.width - g.width + c, d = i.height - g.height + f, m = t.getBoundingRect();
  let p = m.top - g.height + n, v = m.left + m.width / 2 - g.width / 2;
  p = Math.min(d, Math.max(o, p)), v = Math.min(u, Math.max(h, v)), e.style.transform = `translate(${v}px, ${p}px) rotate(0deg)`;
}
function $P(t) {
  const e = I().objects.getActive();
  if (!e || !t.rect.angle)
    return;
  const r = Ce.fabric.util.radiansToDegrees(t.rect.angle);
  r !== e.angle && I().objects.setValues({ angle: r });
}
function VP(t) {
  const e = t.rect.width / 2, r = t.rect.height / 2;
  I().objects.setValues({
    left: (t.rect.left + e) / O().zoom,
    top: (t.rect.top + r) / O().zoom
  });
}
function HP(t) {
  const e = I().objects.getActive();
  if (!e)
    return;
  const r = {};
  tn(e) ? (t.deltaX > 0 || e.getScaledHeight() >= 20 && e.getScaledWidth() >= 20) && (r.fontSize = (e.fontSize || 1) + t.deltaX) : (e.width && (r.scaleX = t.rect.width / O().zoom / e.width), e.height && (r.scaleY = t.rect.height / O().zoom / e.height)), I().objects.setValues(r);
}
function Gd(t, e) {
  const r = I().objects.getActive();
  if (!r || !t.current)
    return;
  const n = t.current, i = Ce.fabric.util.degreesToRadians(r.angle ?? 0);
  let l = Math.round(r.getScaledWidth() * O().zoom), g = Math.round(r.getScaledHeight() * O().zoom), a = Math.round((r.left ?? 0) * O().zoom), s = Math.round((r.top ?? 0) * O().zoom);
  const c = r.originX === "center" ? l / 2 : 0, f = r.originY === "center" ? g / 2 : 0;
  r.padding && (l += r.padding * 2, g += r.padding * 2, a -= r.padding, s -= r.padding), n.style.width = `${l}px`, n.style.height = `${g}px`, n.style.transform = `translate(${a - c}px, ${s - f}px) rotate(${i}rad)`, I().canvas.render(), jP(r, e.current);
}
function UP() {
  var e;
  const t = I().objects.getActive();
  tn(t) && (t.enterEditing(), (e = t.hiddenTextarea) == null || e.focus());
}
function WP() {
  return /* @__PURE__ */ C("div", { className: "absolute -bottom-20 left-1/2 w-2 h-20 bg-white cursor-default -translate-x-1/2", children: /* @__PURE__ */ C(
    "div",
    {
      "data-rotate-handle": !0,
      className: "w-18 h-18 absolute -bottom-10 -left-8 bg-white rounded-full cursor-move"
    }
  ) });
}
let tr = {};
function XP(t) {
  const e = {
    onMoveStart: (n, i) => {
      var c, f;
      if (!n.target.dataset.rotateHandle || Ms)
        return !1;
      const g = gs(i.getBoundingClientRect());
      if (!g)
        return !1;
      const a = (c = i.style.transform.match(/rotate\((.+?)\)/)) == null ? void 0 : c[1], [s = "0"] = a ? a.split(",") : [];
      Kd({
        currentRect: g,
        // store the center because the element has css `transform-origin: center center`
        centerX: g.left + g.width / 2,
        centerY: g.top + g.height / 2,
        startAngle: parseFloat(s)
      }), wi("rotate"), tr.startAngle = qd(n), (f = t.onRotateStart) == null || f.call(t, br({ rect: g, e: n }));
    },
    onMove: (n, i, l) => {
      var a;
      if (!tr.currentRect)
        return;
      const g = { ...tr.currentRect };
      g.angle = qd(n), g.left += i, g.top += l, (a = t.onRotate) == null || a.call(t, br({ rect: g, e: n, deltaX: i, deltaY: l })), tr.currentRect = g;
    },
    onMoveEnd: (n) => {
      var i;
      tr.currentRect && ((i = t.onRotateEnd) == null || i.call(t, br({ rect: tr.currentRect, e: n }))), Kd();
    }
  }, { domProps: r } = za(e);
  return { rotateProps: r };
}
function qd(t) {
  const e = {
    x: tr.centerX || 0,
    y: tr.centerY || 0
  };
  return Math.atan2(e.y - t.pageY, e.x - t.pageX) - (tr.startAngle || 0);
}
const Kd = (t = {}) => {
  wi(null), tr = t;
};
function YP() {
  const t = ge(null), e = ge(null), r = fe((h) => h.objects.active.id), n = fe((h) => h.objects.isEditingText), i = fe((h) => h.zoom), l = GP(), g = ge(null), a = Me(() => {
    g.current ? (clearTimeout(g.current), g.current = null, UP()) : g.current = setTimeout(() => {
      g.current = null;
    }, 300);
  }, []);
  let { moveProps: s } = db({
    boundaryRef: O().canvasRef,
    restrictWithinBoundary: !1,
    onMoveEnd: () => {
      O().objects.setActiveIsMoving(!1);
    },
    onMove: (h) => {
      O().objects.setActiveIsMoving(!0), VP(h);
    }
  });
  l.lockMovement && (s = {});
  const { resizeProps: c } = fb({
    minWidth: 50,
    minHeight: 50,
    aspectRatio: l.unlockAspectRatio ? null : "initial",
    boundaryRef: O().canvasRef,
    restrictWithinBoundary: !1,
    onResizeEnd: () => {
      O().objects.setActiveIsMoving(!1);
    },
    onResize: (h) => {
      O().objects.setActiveIsMoving(!0), HP(h);
    }
  }), { rotateProps: f } = XP({
    boundaryRef: O().canvasRef,
    onRotateEnd: () => {
      O().objects.setActiveIsMoving(!1);
    },
    onRotate: (h) => {
      O().objects.setActiveIsMoving(!0), $P(h);
    }
  });
  return ke(() => {
    de() && O().editor.on("object:modified", (h) => {
      h.sizeOrPositionChanged && Gd(t, e);
    });
  }, []), ke(() => {
    Gd(t, e);
  }, [r, i, n]), /* @__PURE__ */ oe("div", { className: r && !n ? "block" : "hidden", children: [
    /* @__PURE__ */ oe(
      "div",
      {
        ref: t,
        ...Tr(f, c, s),
        onClick: a,
        className: "absolute z-obj-box border-2 border-white shadow-md cursor-move",
        children: [
          !l.hideTopLeft && /* @__PURE__ */ C(Nr, { position: At.topLeft }),
          !l.hideTopRight && /* @__PURE__ */ C(Nr, { position: At.topRight }),
          !l.hideBottomLeft && /* @__PURE__ */ C(Nr, { position: At.bottomLeft }),
          !l.hideBottomRight && /* @__PURE__ */ C(Nr, { position: At.bottomRight }),
          !l.hideRotatingPoint && /* @__PURE__ */ C(WP, {})
        ]
      }
    ),
    /* @__PURE__ */ C(NP, { ref: e })
  ] });
}
function GP() {
  const t = I().objects.getActive();
  if (!t || !t.name)
    return {};
  const e = O().config.objectControls || {}, r = t.name;
  return {
    ...e.global,
    ...e[r]
  };
}
function qP() {
  const t = fe((r) => r.activeTool === Be.CROP), e = fe((r) => r.objects.active.id);
  return /* @__PURE__ */ oe("div", { children: [
    t && /* @__PURE__ */ C(MP, {}),
    e && /* @__PURE__ */ C(YP, {})
  ] });
}
const KP = EP([fP, dP]), JP = he.forwardRef(
  (t, e) => {
    const [r, n] = Fe(!1);
    ke(() => fe.subscribe(
      (l) => l.loading,
      (l) => {
        n(!l);
      }
    ), []);
    const i = {
      visible: {
        opacity: 1,
        transition: { duration: 0.35, delay: 0.5 }
      },
      hidden: { opacity: 0, transition: { duration: 0 } }
    };
    return /* @__PURE__ */ C(ZP, { children: /* @__PURE__ */ oe(
      gt.div,
      {
        initial: { opacity: 0 },
        variants: i,
        animate: r ? "visible" : "hidden",
        className: "relative m-auto w-max",
        style: {
          backgroundImage: `url(${Dt("images/empty-canvas-bg.png")})`
        },
        children: [
          /* @__PURE__ */ C(qP, {}),
          /* @__PURE__ */ C("canvas", { ref: e })
        ]
      }
    ) });
  }
);
function ZP({ children: t }) {
  const e = ge(null), r = KP({
    onPinch: (n) => {
      if (!I().zoom.allowUserZoom || !Jd(n))
        return n.cancel();
      n.direction[0] === 1 ? I().zoom.zoomIn(0.01) : I().zoom.zoomOut(0.01), n.event.stopPropagation(), n.event.preventDefault();
    },
    onDrag: (n) => {
      if (n.pinching || !Jd(n))
        return n.cancel();
      e.current.scrollLeft -= n.delta[0], e.current.scrollTop -= n.delta[1];
    }
  });
  return /* @__PURE__ */ C(
    "div",
    {
      ref: e,
      className: "w-full h-full overflow-hidden touch-none flex",
      ...r(),
      children: t
    }
  );
}
function Jd(t) {
  return !(de().findTarget(t.event, !1) || de().isDrawingMode);
}
function hh({
  actionBtn: t,
  children: e,
  className: r
}) {
  return /* @__PURE__ */ oe("div", { className: ce(r, "flex gap-16 items-center h-full"), children: [
    t && /* @__PURE__ */ C("div", { className: "flex-shrink-0", children: t }),
    /* @__PURE__ */ C("div", { className: "w-full flex-auto", children: e }),
    t && /* @__PURE__ */ C("div", { className: "w-96" })
  ] });
}
function Fi() {
  return (Fi = Object.assign || function(t) {
    for (var e = 1; e < arguments.length; e++) {
      var r = arguments[e];
      for (var n in r)
        Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]);
    }
    return t;
  }).apply(this, arguments);
}
function Na(t, e) {
  if (t == null)
    return {};
  var r, n, i = {}, l = Object.keys(t);
  for (n = 0; n < l.length; n++)
    e.indexOf(r = l[n]) >= 0 || (i[r] = t[r]);
  return i;
}
function vs(t) {
  var e = ge(t), r = ge(function(n) {
    e.current && e.current(n);
  });
  return e.current = t, r.current;
}
var bs = function(t, e, r) {
  return e === void 0 && (e = 0), r === void 0 && (r = 1), t > r ? r : t < e ? e : t;
}, Zi = function(t) {
  return "touches" in t;
}, jc = function(t) {
  return t && t.ownerDocument.defaultView || self;
}, Zd = function(t, e, r) {
  var n = t.getBoundingClientRect(), i = Zi(e) ? function(l, g) {
    for (var a = 0; a < l.length; a++)
      if (l[a].identifier === g)
        return l[a];
    return l[0];
  }(e.touches, r) : e;
  return { left: bs((i.pageX - (n.left + jc(t).pageXOffset)) / n.width), top: bs((i.pageY - (n.top + jc(t).pageYOffset)) / n.height) };
}, Qd = function(t) {
  !Zi(t) && t.preventDefault();
}, pb = he.memo(function(t) {
  var e = t.onMove, r = t.onKey, n = Na(t, ["onMove", "onKey"]), i = ge(null), l = vs(e), g = vs(r), a = ge(null), s = ge(!1), c = Ye(function() {
    var u = function(p) {
      Qd(p), (Zi(p) ? p.touches.length > 0 : p.buttons > 0) && i.current ? l(Zd(i.current, p, a.current)) : m(!1);
    }, d = function() {
      return m(!1);
    };
    function m(p) {
      var v = s.current, b = jc(i.current), y = p ? b.addEventListener : b.removeEventListener;
      y(v ? "touchmove" : "mousemove", u), y(v ? "touchend" : "mouseup", d);
    }
    return [function(p) {
      var v = p.nativeEvent, b = i.current;
      if (b && (Qd(v), !function(w, x) {
        return x && !Zi(w);
      }(v, s.current) && b)) {
        if (Zi(v)) {
          s.current = !0;
          var y = v.changedTouches || [];
          y.length && (a.current = y[0].identifier);
        }
        b.focus(), l(Zd(b, v, a.current)), m(!0);
      }
    }, function(p) {
      var v = p.which || p.keyCode;
      v < 37 || v > 40 || (p.preventDefault(), g({ left: v === 39 ? 0.05 : v === 37 ? -0.05 : 0, top: v === 40 ? 0.05 : v === 38 ? -0.05 : 0 }));
    }, m];
  }, [g, l]), f = c[0], o = c[1], h = c[2];
  return ke(function() {
    return h;
  }, [h]), he.createElement("div", Fi({}, n, { onTouchStart: f, onMouseDown: f, className: "react-colorful__interactive", ref: i, onKeyDown: o, tabIndex: 0, role: "slider" }));
}), fh = function(t) {
  return t.filter(Boolean).join(" ");
}, gb = function(t) {
  var e = t.color, r = t.left, n = t.top, i = n === void 0 ? 0.5 : n, l = fh(["react-colorful__pointer", t.className]);
  return he.createElement("div", { className: l, style: { top: 100 * i + "%", left: 100 * r + "%" } }, he.createElement("div", { className: "react-colorful__pointer-fill", style: { backgroundColor: e } }));
}, it = function(t, e, r) {
  return e === void 0 && (e = 0), r === void 0 && (r = Math.pow(10, e)), Math.round(r * t) / r;
}, QP = function(t) {
  return iM($c(t));
}, $c = function(t) {
  return t[0] === "#" && (t = t.substring(1)), t.length < 6 ? { r: parseInt(t[0] + t[0], 16), g: parseInt(t[1] + t[1], 16), b: parseInt(t[2] + t[2], 16), a: t.length === 4 ? it(parseInt(t[3] + t[3], 16) / 255, 2) : 1 } : { r: parseInt(t.substring(0, 2), 16), g: parseInt(t.substring(2, 4), 16), b: parseInt(t.substring(4, 6), 16), a: t.length === 8 ? it(parseInt(t.substring(6, 8), 16) / 255, 2) : 1 };
}, eM = function(t) {
  return nM(rM(t));
}, tM = function(t) {
  var e = t.s, r = t.v, n = t.a, i = (200 - e) * r / 100;
  return { h: it(t.h), s: it(i > 0 && i < 200 ? e * r / 100 / (i <= 100 ? i : 200 - i) * 100 : 0), l: it(i / 2), a: it(n, 2) };
}, Vc = function(t) {
  var e = tM(t);
  return "hsl(" + e.h + ", " + e.s + "%, " + e.l + "%)";
}, rM = function(t) {
  var e = t.h, r = t.s, n = t.v, i = t.a;
  e = e / 360 * 6, r /= 100, n /= 100;
  var l = Math.floor(e), g = n * (1 - r), a = n * (1 - (e - l) * r), s = n * (1 - (1 - e + l) * r), c = l % 6;
  return { r: it(255 * [n, a, g, g, s, n][c]), g: it(255 * [s, n, n, a, g, g][c]), b: it(255 * [g, g, s, n, n, a][c]), a: it(i, 2) };
}, ao = function(t) {
  var e = t.toString(16);
  return e.length < 2 ? "0" + e : e;
}, nM = function(t) {
  var e = t.r, r = t.g, n = t.b, i = t.a, l = i < 1 ? ao(it(255 * i)) : "";
  return "#" + ao(e) + ao(r) + ao(n) + l;
}, iM = function(t) {
  var e = t.r, r = t.g, n = t.b, i = t.a, l = Math.max(e, r, n), g = l - Math.min(e, r, n), a = g ? l === e ? (r - n) / g : l === r ? 2 + (n - e) / g : 4 + (e - r) / g : 0;
  return { h: it(60 * (a < 0 ? a + 6 : a)), s: it(l ? g / l * 100 : 0), v: it(l / 255 * 100), a: i };
}, sM = he.memo(function(t) {
  var e = t.hue, r = t.onChange, n = fh(["react-colorful__hue", t.className]);
  return he.createElement("div", { className: n }, he.createElement(pb, { onMove: function(i) {
    r({ h: 360 * i.left });
  }, onKey: function(i) {
    r({ h: bs(e + 360 * i.left, 0, 360) });
  }, "aria-label": "Hue", "aria-valuenow": it(e), "aria-valuemax": "360", "aria-valuemin": "0" }, he.createElement(gb, { className: "react-colorful__hue-pointer", left: e / 360, color: Vc({ h: e, s: 100, v: 100, a: 1 }) })));
}), oM = he.memo(function(t) {
  var e = t.hsva, r = t.onChange, n = { backgroundColor: Vc({ h: e.h, s: 100, v: 100, a: 1 }) };
  return he.createElement("div", { className: "react-colorful__saturation", style: n }, he.createElement(pb, { onMove: function(i) {
    r({ s: 100 * i.left, v: 100 - 100 * i.top });
  }, onKey: function(i) {
    r({ s: bs(e.s + 100 * i.left, 0, 100), v: bs(e.v - 100 * i.top, 0, 100) });
  }, "aria-label": "Color", "aria-valuetext": "Saturation " + it(e.s) + "%, Brightness " + it(e.v) + "%" }, he.createElement(gb, { className: "react-colorful__saturation-pointer", top: 1 - e.v / 100, left: e.s / 100, color: Vc(e) })));
}), mb = function(t, e) {
  if (t === e)
    return !0;
  for (var r in t)
    if (t[r] !== e[r])
      return !1;
  return !0;
}, aM = function(t, e) {
  return t.toLowerCase() === e.toLowerCase() || mb($c(t), $c(e));
};
function lM(t, e, r) {
  var n = vs(r), i = Fe(function() {
    return t.toHsva(e);
  }), l = i[0], g = i[1], a = ge({ color: e, hsva: l });
  ke(function() {
    if (!t.equal(e, a.current.color)) {
      var c = t.toHsva(e);
      a.current = { hsva: c, color: e }, g(c);
    }
  }, [e, t]), ke(function() {
    var c;
    mb(l, a.current.hsva) || t.equal(c = t.fromHsva(l), a.current.color) || (a.current = { hsva: l, color: c }, n(c));
  }, [l, t, n]);
  var s = Me(function(c) {
    g(function(f) {
      return Object.assign({}, f, c);
    });
  }, []);
  return [l, s];
}
var cM = typeof window < "u" ? xs : ke, uM = function() {
  return typeof __webpack_nonce__ < "u" ? __webpack_nonce__ : void 0;
}, ep = /* @__PURE__ */ new Map(), hM = function(t) {
  cM(function() {
    var e = t.current ? t.current.ownerDocument : document;
    if (e !== void 0 && !ep.has(e)) {
      var r = e.createElement("style");
      r.innerHTML = `.react-colorful{position:relative;display:flex;flex-direction:column;width:200px;height:200px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.react-colorful__saturation{position:relative;flex-grow:1;border-color:transparent;border-bottom:12px solid #000;border-radius:8px 8px 0 0;background-image:linear-gradient(0deg,#000,transparent),linear-gradient(90deg,#fff,hsla(0,0%,100%,0))}.react-colorful__alpha-gradient,.react-colorful__pointer-fill{content:"";position:absolute;left:0;top:0;right:0;bottom:0;pointer-events:none;border-radius:inherit}.react-colorful__alpha-gradient,.react-colorful__saturation{box-shadow:inset 0 0 0 1px rgba(0,0,0,.05)}.react-colorful__alpha,.react-colorful__hue{position:relative;height:24px}.react-colorful__hue{background:linear-gradient(90deg,red 0,#ff0 17%,#0f0 33%,#0ff 50%,#00f 67%,#f0f 83%,red)}.react-colorful__last-control{border-radius:0 0 8px 8px}.react-colorful__interactive{position:absolute;left:0;top:0;right:0;bottom:0;border-radius:inherit;outline:none;touch-action:none}.react-colorful__pointer{position:absolute;z-index:1;box-sizing:border-box;width:28px;height:28px;transform:translate(-50%,-50%);background-color:#fff;border:2px solid #fff;border-radius:50%;box-shadow:0 2px 4px rgba(0,0,0,.2)}.react-colorful__interactive:focus .react-colorful__pointer{transform:translate(-50%,-50%) scale(1.1)}.react-colorful__alpha,.react-colorful__alpha-pointer{background-color:#fff;background-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill-opacity=".05"><path d="M8 0h8v8H8zM0 8h8v8H0z"/></svg>')}.react-colorful__saturation-pointer{z-index:3}.react-colorful__hue-pointer{z-index:2}`, ep.set(e, r);
      var n = uM();
      n && r.setAttribute("nonce", n), e.head.appendChild(r);
    }
  }, []);
}, fM = function(t) {
  var e = t.className, r = t.colorModel, n = t.color, i = n === void 0 ? r.defaultColor : n, l = t.onChange, g = Na(t, ["className", "colorModel", "color", "onChange"]), a = ge(null);
  hM(a);
  var s = lM(r, i, l), c = s[0], f = s[1], o = fh(["react-colorful", e]);
  return he.createElement("div", Fi({}, g, { ref: a, className: o }), he.createElement(oM, { hsva: c, onChange: f }), he.createElement(sM, { hue: c.h, onChange: f, className: "react-colorful__last-control" }));
}, dM = { defaultColor: "000", toHsva: QP, fromHsva: function(t) {
  return eM({ h: t.h, s: t.s, v: t.v, a: 1 });
}, equal: aM }, pM = function(t) {
  return he.createElement(fM, Fi({}, t, { colorModel: dM }));
}, gM = /^#?([0-9A-F]{3,8})$/i, mM = function(t) {
  var e = t.color, r = e === void 0 ? "" : e, n = t.onChange, i = t.onBlur, l = t.escape, g = t.validate, a = t.format, s = t.process, c = Na(t, ["color", "onChange", "onBlur", "escape", "validate", "format", "process"]), f = Fe(function() {
    return l(r);
  }), o = f[0], h = f[1], u = vs(n), d = vs(i), m = Me(function(v) {
    var b = l(v.target.value);
    h(b), g(b) && u(s ? s(b) : b);
  }, [l, s, g, u]), p = Me(function(v) {
    g(v.target.value) || h(l(r)), d(v);
  }, [r, l, g, d]);
  return ke(function() {
    h(l(r));
  }, [r, l]), he.createElement("input", Fi({}, c, { value: a ? a(o) : o, spellCheck: "false", onChange: m, onBlur: p }));
}, tp = function(t) {
  return "#" + t;
}, vM = function(t) {
  var e = t.prefixed, r = t.alpha, n = Na(t, ["prefixed", "alpha"]), i = Me(function(g) {
    return g.replace(/([^0-9A-F]+)/gi, "").substring(0, r ? 8 : 6);
  }, [r]), l = Me(function(g) {
    return function(a, s) {
      var c = gM.exec(a), f = c ? c[1].length : 0;
      return f === 3 || f === 6 || !!s && f === 4 || !!s && f === 8;
    }(g, r);
  }, [r]);
  return he.createElement(mM, Fi({}, n, { escape: i, format: e ? tp : void 0, process: tp, validate: l }));
}, vb = {};
vb = {
  alpha: "ألفا",
  black: "أسود",
  blue: "أزرق",
  "blue purple": "أرجواني مزرق",
  brightness: "السطوع",
  brown: "بني",
  "brown yellow": "أصفر بني",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "سماوي",
  "cyan blue": "أزرق سماوي",
  dark: "داكن",
  gray: "رمادي",
  grayish: "مائل للرمادي",
  green: "أخضر",
  "green cyan": "سماوي مخضر",
  hue: "درجة اللون",
  light: "فاتح",
  lightness: "الإضاءة",
  magenta: "أرجواني",
  "magenta pink": "أرجواني وردي",
  orange: "برتقالي",
  "orange yellow": "أصفر برتقالي",
  pale: "باهت",
  pink: "وردي",
  "pink red": "أحمر وردي",
  purple: "أرجواني",
  "purple magenta": "بنفسجي",
  red: "أحمر",
  "red orange": "برتقالي محمر",
  saturation: "التشبع",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} شفاف`,
  "very dark": "داكن جدًا",
  "very light": "فاتح جدًا",
  vibrant: "ساطع",
  white: "أبيض",
  yellow: "أصفر",
  "yellow green": "أخضر مصفر"
};
var bb = {};
bb = {
  alpha: "Алфа",
  black: "черно",
  blue: "Синьо",
  "blue purple": "синьо лилаво",
  brightness: "Яркост",
  brown: "кафяво",
  "brown yellow": "кафяво жълто",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "циан",
  "cyan blue": "циан синьо",
  dark: "тъмно",
  gray: "сиво",
  grayish: "сивкав",
  green: "Зелено",
  "green cyan": "зелен циан",
  hue: "Оттенък",
  light: "светло",
  lightness: "Лекота",
  magenta: "магента",
  "magenta pink": "магента розово",
  orange: "оранжево",
  "orange yellow": "оранжево жълто",
  pale: "бледо",
  pink: "розово",
  "pink red": "розово червено",
  purple: "лилаво",
  "purple magenta": "лилаво магента",
  red: "Червено",
  "red orange": "червен портокал",
  saturation: "Наситеност",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} прозрачен`,
  "very dark": "много тъмно",
  "very light": "много светло",
  vibrant: " ярко",
  white: "бяло",
  yellow: "жълто",
  "yellow green": "жълто зелен"
};
var yb = {};
yb = {
  alpha: "Alfa",
  black: "černá",
  blue: "Modrá",
  "blue purple": "modrofialová",
  brightness: "Jas",
  brown: "hnědá",
  "brown yellow": "hnědožlutá",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "tyrkysová",
  "cyan blue": "tyrkysovomodrá",
  dark: "tmavá",
  gray: "šedá",
  grayish: "našedlá",
  green: "Zelená",
  "green cyan": "zelenotyrkysová",
  hue: "Odstín",
  light: "světlá",
  lightness: "Světlost",
  magenta: "purpurová",
  "magenta pink": "purpurově růžová",
  orange: "oranžová",
  "orange yellow": "oranžovožlutá",
  pale: "bledá",
  pink: "růžová",
  "pink red": "růžovočervená",
  purple: "fialová",
  "purple magenta": "fialově purpurová",
  red: "Červená",
  "red orange": "červenooranžová",
  saturation: "Sytost",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} průhledné`,
  "very dark": "velmi tmavá",
  "very light": "velmi světlá",
  vibrant: "zářivá",
  white: "bílá",
  yellow: "žlutá",
  "yellow green": "žlutozelená"
};
var wb = {};
wb = {
  alpha: "Alfa",
  black: "sort",
  blue: "Blå",
  "blue purple": "blålilla",
  brightness: "Lysstyrke",
  brown: "brun",
  "brown yellow": "brungul",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "cyan",
  "cyan blue": "cyan blå",
  dark: "mørk",
  gray: "grå",
  grayish: "grålig",
  green: "Grøn",
  "green cyan": "grøn cyan",
  hue: "Tone",
  light: "lys",
  lightness: "Lyshed",
  magenta: "magenta",
  "magenta pink": "magenta pink",
  orange: "orange",
  "orange yellow": "orangegul",
  pale: "bleg",
  pink: "lyserød",
  "pink red": "lyserødlig rød",
  purple: "lilla",
  "purple magenta": "lilla magenta",
  red: "Rød",
  "red orange": "rødorange",
  saturation: "Farvemætning",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} gennemsigtig`,
  "very dark": "meget mørk",
  "very light": "meget lys",
  vibrant: "klar",
  white: "hvid",
  yellow: "gul",
  "yellow green": "gulgrøn"
};
var xb = {};
xb = {
  alpha: "Alpha",
  black: "Schwarz",
  blue: "Blau",
  "blue purple": "Blaulila",
  brightness: "Helligkeit",
  brown: "Braun",
  "brown yellow": "Braungelb",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "Cyan",
  "cyan blue": "Cyanblau",
  dark: "dunkles",
  gray: "Grau",
  grayish: "gräuliches",
  green: "Grün",
  "green cyan": "Grüncyan",
  hue: "Farbton",
  light: "helles",
  lightness: "Leuchtkraft",
  magenta: "Magenta",
  "magenta pink": "Magentarosa",
  orange: "Orange",
  "orange yellow": "Orangegelb",
  pale: "blasses",
  pink: "Rosa",
  "pink red": "Rosarot",
  purple: "Lila",
  "purple magenta": "Lilamagenta",
  red: "Rot",
  "red orange": "Rotorange",
  saturation: "Sättigung",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, zu ${t.percentTransparent} transparent`,
  "very dark": "sehr dunkles",
  "very light": "sehr helles",
  vibrant: "lebhaftes",
  white: "Weiß",
  yellow: "Gelb",
  "yellow green": "Gelbgrün"
};
var Cb = {};
Cb = {
  alpha: "Άλφα",
  black: "μαύρο",
  blue: "Μπλε",
  "blue purple": "μπλε μωβ",
  brightness: "Φωτεινότητα",
  brown: "καφέ",
  "brown yellow": "καφέ κίτρινο",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "κυανό",
  "cyan blue": "κυανό μπλε",
  dark: "σκούρο",
  gray: "γκρι",
  grayish: "γκριζωπό",
  green: "Πράσινο",
  "green cyan": "πράσινο κυανό",
  hue: "Τόνος",
  light: "ανοιχτό",
  lightness: "Φωτεινότητα",
  magenta: "ματζέντα",
  "magenta pink": "ματζέντα ροζ",
  orange: "πορτοκαλί",
  "orange yellow": "πορτοκαλί κίτρινο",
  pale: "ανοιχτό",
  pink: "ροζ",
  "pink red": "ροζ κόκκινο",
  purple: "μωβ",
  "purple magenta": "μωβ ματζέντα",
  red: "Κόκκινο",
  "red orange": "κόκκινο πορτοκαλί",
  saturation: "Κορεσμός",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} διαφανές`,
  "very dark": "πολύ σκούρο",
  "very light": "πολύ ανοιχτό",
  vibrant: "έντονο",
  white: "λευκό",
  yellow: "κίτρινο",
  "yellow green": "κίτρινο πράσινο"
};
var _b = {};
_b = {
  hue: "Hue",
  saturation: "Saturation",
  lightness: "Lightness",
  brightness: "Brightness",
  red: "Red",
  green: "Green",
  blue: "Blue",
  alpha: "Alpha",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} transparent`,
  "very dark": "very dark",
  dark: "dark",
  light: "light",
  "very light": "very light",
  pale: "pale",
  grayish: "grayish",
  vibrant: "vibrant",
  black: "black",
  white: "white",
  gray: "gray",
  pink: "pink",
  "pink red": "pink red",
  "red orange": "red orange",
  brown: "brown",
  orange: "orange",
  "orange yellow": "orange yellow",
  "brown yellow": "brown yellow",
  yellow: "yellow",
  "yellow green": "yellow green",
  "green cyan": "green cyan",
  cyan: "cyan",
  "cyan blue": "cyan blue",
  "blue purple": "blue purple",
  purple: "purple",
  "purple magenta": "purple magenta",
  magenta: "magenta",
  "magenta pink": "magenta pink"
};
var Sb = {};
Sb = {
  alpha: "Alpha",
  black: "negro",
  blue: "Azul",
  "blue purple": "púrpura azulado",
  brightness: "Brillo",
  brown: "marrón",
  "brown yellow": "amarillo amarronado",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "cian",
  "cyan blue": "azul cian",
  dark: "oscuro",
  gray: "gris",
  grayish: "grisáceo",
  green: "Verde",
  "green cyan": "cian verdoso",
  hue: "Tono",
  light: "claro",
  lightness: "Luminosidad",
  magenta: "magenta",
  "magenta pink": "rosa magenta",
  orange: "naranja",
  "orange yellow": "amarillo anaranjado",
  pale: "pálido",
  pink: "rosa",
  "pink red": "rojo rosado",
  purple: "morado",
  "purple magenta": "magenta violáceo",
  red: "Rojo",
  "red orange": "naranja rojizo",
  saturation: "Saturación",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} transparente`,
  "very dark": "muy oscuro",
  "very light": "muy claro",
  vibrant: "intenso",
  white: "blanco",
  yellow: "amarillo",
  "yellow green": "verde amarillento"
};
var Tb = {};
Tb = {
  alpha: "Alfa",
  black: "must",
  blue: "Sinine",
  "blue purple": "sinakaslilla",
  brightness: "Heledus",
  brown: "pruun",
  "brown yellow": "pruunikaskollane",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "tsüaan",
  "cyan blue": "tsüaansinine",
  dark: "tume",
  gray: "hall",
  grayish: "hallikas",
  green: "Roheline",
  "green cyan": "tsüaanroheline",
  hue: "Värv",
  light: "valgus",
  lightness: "Valgus",
  magenta: "magentapunane",
  "magenta pink": "magentaroosa",
  orange: "oranž",
  "orange yellow": "oranžikaskollane",
  pale: "kahvatu",
  pink: "roosa",
  "pink red": "vaarikapunane",
  purple: "lilla",
  "purple magenta": "purpurne magenta",
  red: "Punane",
  "red orange": "punakasoranž",
  saturation: "Küllastus",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} läbipaistev`,
  "very dark": "väga tume",
  "very light": "väga hele",
  vibrant: "ere",
  white: "valge",
  yellow: "kollane",
  "yellow green": "kollakasroheline"
};
var Eb = {};
Eb = {
  alpha: "Alpha",
  black: "musta",
  blue: "Sininen",
  "blue purple": "sinivioletti",
  brightness: "Kirkkaus",
  brown: "ruskea",
  "brown yellow": "ruskeankeltainen",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "syaani",
  "cyan blue": "syaaninsininen",
  dark: "tumma",
  gray: "harmaa",
  grayish: "harmahtava",
  green: "Vihreä",
  "green cyan": "vihreänsyaani",
  hue: "Sävy",
  light: "vaalea",
  lightness: "Valomäärä",
  magenta: "magenta",
  "magenta pink": "magentapinkki",
  orange: "oranssi",
  "orange yellow": "oranssinkeltainen",
  pale: "vaalea",
  pink: "pinkki",
  "pink red": "vaaleanpunainen",
  purple: "violetti",
  "purple magenta": "violettimagenta",
  red: "Punainen",
  "red orange": "punaoranssi",
  saturation: "Värikylläisyys",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} läpinäkyvä`,
  "very dark": "hyvin tumma",
  "very light": "erittäin vaalea",
  vibrant: "eloisa",
  white: "valkea",
  yellow: "keltainen",
  "yellow green": "keltavihreä"
};
var kb = {};
kb = {
  alpha: "Alpha",
  black: "Noir",
  blue: "Bleu",
  "blue purple": "Violet bleu",
  brightness: "Luminosité",
  brown: "Brun",
  "brown yellow": "Jaune brun",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "Cyan",
  "cyan blue": "Bleu cyan",
  dark: "Sombre",
  gray: "Gris",
  grayish: "Grisâtre",
  green: "Vert",
  "green cyan": "Cyan vert",
  hue: "Teinte",
  light: "Clair",
  lightness: "Luminosité",
  magenta: "Magenta",
  "magenta pink": "Rose magenta",
  orange: "Orange",
  "orange yellow": "Jaune orangé",
  pale: "Pâle",
  pink: "Rose",
  "pink red": "Rouge rosé",
  purple: "Violet",
  "purple magenta": "Magenta violet",
  red: "Rouge",
  "red orange": "Orange rouge",
  saturation: "Saturation",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} transparent`,
  "very dark": "Très sombre",
  "very light": "Très clair",
  vibrant: "Vif",
  white: "Blanc",
  yellow: "Jaune",
  "yellow green": "Vert jaune"
};
var Ob = {};
Ob = {
  alpha: "אלפא",
  black: "שחור",
  blue: "כחול",
  "blue purple": "כחול סגול",
  brightness: "בהירות",
  brown: "חום",
  "brown yellow": "חום צהוב",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "טורקיז",
  "cyan blue": "כחול ציאן",
  dark: "כהה",
  gray: "אפור",
  grayish: "אפרפר",
  green: "ירוק",
  "green cyan": "ציאן ירוק",
  hue: "גוון",
  light: "אור",
  lightness: "כמות אור",
  magenta: "מג'נטה",
  "magenta pink": "ורוד מג'נטה",
  orange: "כתום",
  "orange yellow": "כתום צהוב",
  pale: "חיוור",
  pink: "ורוד",
  "pink red": "ורוד אדום",
  purple: "סגול",
  "purple magenta": "מג'נטה סגול",
  red: "אדום",
  "red orange": "כתום אדום",
  saturation: "רוויה",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} שקוף`,
  "very dark": "כהה מאוד",
  "very light": "בהיר מאוד",
  vibrant: "תוסס",
  white: "לבן",
  yellow: "צהוב",
  "yellow green": "צהוב ירוק"
};
var Ab = {};
Ab = {
  alpha: "Alfa",
  black: "crno",
  blue: "Plava",
  "blue purple": "plavo ljubičasta",
  brightness: "Svjetlina",
  brown: "smeđa",
  "brown yellow": "smeđe žuta",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "cijan",
  "cyan blue": "cijan plava",
  dark: "tamno",
  gray: "siva",
  grayish: "sivkasto",
  green: "Zelena",
  "green cyan": "zelena cijan",
  hue: "Nijansa",
  light: "svjetlo",
  lightness: "Osvijetljenost",
  magenta: "magenta",
  "magenta pink": "magentno ružičasta",
  orange: "narančasta",
  "orange yellow": "narančasto žuta",
  pale: "blijeda",
  pink: "ružičasta",
  "pink red": "ružičasto crvena",
  purple: "ljubičasta",
  "purple magenta": "ljubičasta magenta",
  red: "Crvena",
  "red orange": "crveno narančasta",
  saturation: "Zasićenost",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} prozirnosti`,
  "very dark": "jako tamna",
  "very light": "vrlo svijetlo",
  vibrant: "vibrantna",
  white: "bijela",
  yellow: "žuto",
  "yellow green": "žuto zelena"
};
var Db = {};
Db = {
  alpha: "Alfa",
  black: "fekete",
  blue: "Kék",
  "blue purple": "kék lila",
  brightness: "Fényesség",
  brown: "barna",
  "brown yellow": "barna sárga",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "ciánkék",
  "cyan blue": "ciánkék",
  dark: "sötét",
  gray: "szürke",
  grayish: "szürkés",
  green: "Zöld",
  "green cyan": "zöld ciánkék",
  hue: "Színárnyalat",
  light: "világos",
  lightness: "Világosság",
  magenta: "bíbor",
  "magenta pink": "bíbor rózsaszín",
  orange: "narancs",
  "orange yellow": "narancssárga",
  pale: "halvány",
  pink: "rózsaszín",
  "pink red": "rózsaszín piros",
  purple: "lila",
  "purple magenta": "lila bíbor",
  red: "Piros",
  "red orange": "piros narancs",
  saturation: "Telítettség",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} átlátszó`,
  "very dark": "nagyon sötét",
  "very light": "nagyon világos",
  vibrant: "élénk",
  white: "fehér",
  yellow: "sárga",
  "yellow green": "sárga zöld"
};
var Pb = {};
Pb = {
  alpha: "Alfa",
  black: "nero",
  blue: "Blu",
  "blue purple": "blu viola",
  brightness: "Luminosità",
  brown: "marrone",
  "brown yellow": "giallo bruno",
  colorName: (t) => `${t.hue} ${t.chroma} ${t.lightness}`,
  cyan: "ciano",
  "cyan blue": "blu ciano",
  dark: "scuro",
  gray: "grigio",
  grayish: "grigiastro",
  green: "Verde",
  "green cyan": "verde ciano",
  hue: "Tonalità",
  light: "chiaro",
  lightness: "Luminosità",
  magenta: "magenta",
  "magenta pink": "rosa magenta",
  orange: "arancio",
  "orange yellow": "giallo arancio",
  pale: "tenue",
  pink: "rosa",
  "pink red": "rosa rosso",
  purple: "viola",
  "purple magenta": "viola magenta",
  red: "Rosso",
  "red orange": "rosso arancio",
  saturation: "Saturazione",
  transparentColorName: (t) => `${t.hue} ${t.chroma} ${t.lightness}, trasparenza ${t.percentTransparent}`,
  "very dark": "molto scuro",
  "very light": "molto chiaro",
  vibrant: "vivace",
  white: "bianco",
  yellow: "giallo",
  "yellow green": "giallo verde"
};
var Mb = {};
Mb = {
  alpha: "アルファ",
  black: "ブラック",
  blue: "青",
  "blue purple": "ブルーパープル",
  brightness: "明るさ",
  brown: "ブラウン",
  "brown yellow": "ブラウンイエロー",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "シアン",
  "cyan blue": "シアンブルー",
  dark: "ダーク",
  gray: "グレー",
  grayish: "グレイッシュ",
  green: "緑",
  "green cyan": "グリーンシアン",
  hue: "色相",
  light: "ライト",
  lightness: "明度",
  magenta: "マゼンタ",
  "magenta pink": "マゼンタピンク",
  orange: "オレンジ",
  "orange yellow": "オレンジイエロー",
  pale: "ペール",
  pink: "ピンク",
  "pink red": "ピンクレッド",
  purple: "パープル",
  "purple magenta": "パープルマゼンタ",
  red: "赤",
  "red orange": "レッドオレンジ",
  saturation: "彩度",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} 透明`,
  "very dark": "最も暗い",
  "very light": "ベリーライト",
  vibrant: "鮮やか",
  white: "ホワイト",
  yellow: "イエロー",
  "yellow green": "イエローグリーン"
};
var Fb = {};
Fb = {
  alpha: "알파",
  black: "검은색",
  blue: "파랑",
  "blue purple": "청자색",
  brightness: "명도",
  brown: "갈색",
  "brown yellow": "황갈색",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "청록색",
  "cyan blue": "청록색",
  dark: "다크",
  gray: "회색",
  grayish: "회갈색",
  green: "초록",
  "green cyan": "청록색",
  hue: "색조",
  light: "라이트",
  lightness: "밝기",
  magenta: "자홍색",
  "magenta pink": "마젠타 핑크",
  orange: "주황색",
  "orange yellow": "불그스름한 노랑",
  pale: "흙색",
  pink: "분홍색",
  "pink red": "핑크 레드",
  purple: "자주색",
  "purple magenta": "보라빛 자홍색",
  red: "빨강",
  "red orange": "붉은 주황색",
  saturation: "채도",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} 투명도`,
  "very dark": "매우 어두운",
  "very light": "매우 연함",
  vibrant: "강렬한",
  white: "흰색",
  yellow: "노란색",
  "yellow green": "연두색"
};
var Rb = {};
Rb = {
  alpha: "Alfa",
  black: "juoda",
  blue: "Mėlyna",
  "blue purple": "melsvai violetinė",
  brightness: "Ryškumas",
  brown: "ruda",
  "brown yellow": "rusvai geltona",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "žalsvai mėlyna",
  "cyan blue": "žalsvai mėlyna",
  dark: "tamsi",
  gray: "pilka",
  grayish: "pilkšva",
  green: "Žalia",
  "green cyan": "žalsvai mėlyna",
  hue: "Atspalvis",
  light: "šviesi",
  lightness: "Šviesumas",
  magenta: "rausvai raudona",
  "magenta pink": "purpurinė",
  orange: "oranžinė",
  "orange yellow": "oranžinio atspalvio geltona",
  pale: "blyški",
  pink: "rožinė",
  "pink red": "rožinė raudona",
  purple: "violetinė",
  "purple magenta": "purpurinė rausvai raudona",
  red: "Raudona",
  "red orange": "rausvai oranžinė",
  saturation: "Įsotinimas",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} skaidri`,
  "very dark": "labai tamsi",
  "very light": "labai šviesi",
  vibrant: "ryški",
  white: "balta",
  yellow: "geltona",
  "yellow green": "gelsvai žalia"
};
var Ib = {};
Ib = {
  alpha: "Alfa",
  black: "melns",
  blue: "Zila",
  "blue purple": "zili violets",
  brightness: "Spilgtums",
  brown: "brūns",
  "brown yellow": "brūni dzeltens",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "ciāns",
  "cyan blue": "ciāna zils",
  dark: "tumšs",
  gray: "pelēks",
  grayish: "pelēcīgs",
  green: "Zaļa",
  "green cyan": "zaļš ciāns",
  hue: "Nokrāsa",
  light: "gaišs",
  lightness: "Gaišums",
  magenta: "fuksiju",
  "magenta pink": "fuksiju rozā",
  orange: "oranžs",
  "orange yellow": "oranži dzeltens",
  pale: "bāls",
  pink: "rozā",
  "pink red": "rozīgi sarkans",
  purple: "violets",
  "purple magenta": "violets fuksiju",
  red: "Sarkana",
  "red orange": "sarkanīgi oranžs",
  saturation: "Piesātinājums",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} caurspīdīgs`,
  "very dark": "ļoti tumšs",
  "very light": "ļoti gaišs",
  vibrant: "košs",
  white: "balts",
  yellow: "dzeltens",
  "yellow green": "dzelteni zaļš"
};
var Lb = {};
Lb = {
  alpha: "Alfa",
  black: "svart",
  blue: "Blå",
  "blue purple": "blålilla",
  brightness: "Lysstyrke",
  brown: "brun",
  "brown yellow": "brungul",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "cyan",
  "cyan blue": "cyanblå",
  dark: "mørk",
  gray: "grå",
  grayish: "gråaktig",
  green: "Grønn",
  "green cyan": "grønncyan",
  hue: "Fargetone",
  light: "lys",
  lightness: "Lyshet",
  magenta: "magenta",
  "magenta pink": "magentarosa",
  orange: "oransje",
  "orange yellow": "oransjegul",
  pale: "blek",
  pink: "rosa",
  "pink red": "rosarød",
  purple: "lilla",
  "purple magenta": "lillamagenta",
  red: "Rød",
  "red orange": "rødoransje",
  saturation: "Metning",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} gjennomsiktig`,
  "very dark": "svært mørk",
  "very light": "svært lys",
  vibrant: "levende",
  white: "hvit",
  yellow: "gul",
  "yellow green": "gulgrønn"
};
var Bb = {};
Bb = {
  alpha: "Alfa",
  black: "zwart",
  blue: "Blauw",
  "blue purple": "paarsblauw",
  brightness: "Helderheid",
  brown: "bruin",
  "brown yellow": "bruingeel",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "cyaan",
  "cyan blue": "cyaanblauw",
  dark: "donker",
  gray: "grijs",
  grayish: "grijsachtig",
  green: "Groen",
  "green cyan": "cyaangroen",
  hue: "Kleurtoon",
  light: "licht",
  lightness: "Lichtsterkte",
  magenta: "magenta",
  "magenta pink": "magentaroze",
  orange: "oranje",
  "orange yellow": "oranjegeel",
  pale: "bleek",
  pink: "roze",
  "pink red": "rozerood",
  purple: "paars",
  "purple magenta": "magentapaars",
  red: "Rood",
  "red orange": "roodoranje",
  saturation: "Verzadiging",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} transparant`,
  "very dark": "heel donker",
  "very light": "heel licht",
  vibrant: "levendig",
  white: "wit",
  yellow: "geel",
  "yellow green": "geelgroen"
};
var zb = {};
zb = {
  alpha: "Alfa",
  black: "czarny",
  blue: "Niebieski",
  "blue purple": "niebiesko-fioletowy",
  brightness: "Jasność",
  brown: "brązowy",
  "brown yellow": "brązowo-żółty",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "cyjanowy",
  "cyan blue": "cyjanowo-niebieski",
  dark: "ciemny",
  gray: "szary",
  grayish: "szarawy",
  green: "Zielony",
  "green cyan": "zielono-cyjanowy",
  hue: "Odcień",
  light: "jasny",
  lightness: "Jaskrawość",
  magenta: "purpurowy",
  "magenta pink": "purpurowo-różowy",
  orange: "pomarańczowy",
  "orange yellow": "pomarańczowo-żółty",
  pale: "blady",
  pink: "różowy",
  "pink red": "różowo-czerwony",
  purple: "fioletowy",
  "purple magenta": "fioletowo-purpurowy",
  red: "Czerwony",
  "red orange": "czerwono-pomarańczowy",
  saturation: "Nasycenie",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} przezroczystości`,
  "very dark": "bardzo ciemny",
  "very light": "bardzo jasny",
  vibrant: "intensywny",
  white: "biały",
  yellow: "żółty",
  "yellow green": "żółto-zielony"
};
var Nb = {};
Nb = {
  alpha: "Alfa",
  black: "preto",
  blue: "Azul",
  "blue purple": "roxo azulado",
  brightness: "Brilho",
  brown: "marrom",
  "brown yellow": "marrom amarelado",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "ciano",
  "cyan blue": "azul-ciano",
  dark: "escuro",
  gray: "cinza",
  grayish: "acinzentado",
  green: "Verde",
  "green cyan": "verde-ciano",
  hue: "Matiz",
  light: "claro",
  lightness: "Luminosidade",
  magenta: "magenta",
  "magenta pink": "rosa-magenta",
  orange: "laranja",
  "orange yellow": "amarelo alaranjado",
  pale: "pálido",
  pink: "rosa",
  "pink red": "rosa avermelhado",
  purple: "roxo",
  "purple magenta": "roxo-magenta",
  red: "Vermelho",
  "red orange": "laranja avermelhado",
  saturation: "Saturação",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} transparente`,
  "very dark": "muito escuro",
  "very light": "muito claro",
  vibrant: "vibrante",
  white: "branco",
  yellow: "amarelo",
  "yellow green": "verde amarelado"
};
var jb = {};
jb = {
  alpha: "Alfa",
  black: "preto",
  blue: "Azul",
  "blue purple": "azul-púrpura",
  brightness: "Luminosidade",
  brown: "castanho",
  "brown yellow": "amarelo-castanho",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "ciano",
  "cyan blue": "azul-ciano",
  dark: "escuro",
  gray: "cinzento",
  grayish: "acinzentado",
  green: "Verde",
  "green cyan": "verde-ciano",
  hue: "Tonalidade",
  light: "claro",
  lightness: "Claridade",
  magenta: "magenta",
  "magenta pink": "rosa-magenta",
  orange: "laranja",
  "orange yellow": "amarelo-laranja",
  pale: "pálido",
  pink: "cor-de-rosa",
  "pink red": "vermelho-rosa",
  purple: "púrpura",
  "purple magenta": "púrpura-magenta",
  red: "Vermelho",
  "red orange": "laranja-vermelho",
  saturation: "Saturação",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} transparente`,
  "very dark": "muito escuro",
  "very light": "muito claro",
  vibrant: "vibrante",
  white: "branco",
  yellow: "amarelo",
  "yellow green": "verde-amarelo"
};
var $b = {};
$b = {
  alpha: "Alfa",
  black: "negru",
  blue: "Albastru",
  "blue purple": "albastru-violet",
  brightness: "Luminozitate",
  brown: "maro",
  "brown yellow": "galben maro",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "bleu",
  "cyan blue": "albastru-bleu",
  dark: "închis",
  gray: "gri",
  grayish: "cenușiu",
  green: "Verde",
  "green cyan": "verde bleu",
  hue: "Nuanță",
  light: "deschis",
  lightness: "Luminozitate",
  magenta: "fucsia",
  "magenta pink": "roz-fucsia",
  orange: "portocaliu",
  "orange yellow": "galben-portocaliu",
  pale: "pal",
  pink: "roz",
  "pink red": "roz-roșu",
  purple: "violet",
  "purple magenta": "violet-fucsia",
  red: "Roșu",
  "red orange": "portocaliu-roșu",
  saturation: "Saturație",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} transparent`,
  "very dark": "foarte închis",
  "very light": "foarte deschis",
  vibrant: "plin de viață",
  white: "alb",
  yellow: "galben",
  "yellow green": "galben-verde"
};
var Vb = {};
Vb = {
  alpha: "Альфа",
  black: "черный",
  blue: "Синий",
  "blue purple": "сине-фиолетовый",
  brightness: "Яркость",
  brown: "коричневый",
  "brown yellow": "коричнево-желтый",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "голубой",
  "cyan blue": "цвет морской волны",
  dark: "темный",
  gray: "серый",
  grayish: "сероватый",
  green: "Зеленый",
  "green cyan": "сине-зеленый",
  hue: "Оттенок",
  light: "светлый",
  lightness: "Освещенность",
  magenta: "пурпурный",
  "magenta pink": "пурпурно-розовый",
  orange: "оранжевый",
  "orange yellow": "оранжево-желтый",
  pale: "бледный",
  pink: "розовый",
  "pink red": "розово-красный",
  purple: "фиолетовый",
  "purple magenta": "фиолетово-пурпурный",
  red: "Красный",
  "red orange": "красно-оранжевый",
  saturation: "Насыщенность",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, прозрачный на ${t.percentTransparent}`,
  "very dark": "очень темный",
  "very light": "очень светлый",
  vibrant: "яркий",
  white: "белый",
  yellow: "желтый",
  "yellow green": "желто-зеленый"
};
var Hb = {};
Hb = {
  alpha: "Alfa",
  black: "čierna",
  blue: "Modrá",
  "blue purple": "modrofialová",
  brightness: "Jas",
  brown: "hnedá",
  "brown yellow": "hnedožltá",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "azúrová",
  "cyan blue": "azúrová modrá",
  dark: "tmavá",
  gray: "sivá",
  grayish: "sivastá",
  green: "Zelená",
  "green cyan": "zelená azúrová",
  hue: "Odtieň",
  light: "svetlá",
  lightness: "Svetlosť",
  magenta: "purpurová",
  "magenta pink": "ružová purpurová",
  orange: "oranžová",
  "orange yellow": "oranžovožltá",
  pale: "bledá",
  pink: "ružová",
  "pink red": "ružovočervená",
  purple: "fialová",
  "purple magenta": "fialová purpurová",
  red: "Červená",
  "red orange": "červenooranžová",
  saturation: "Sýtosť",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} priehľadná`,
  "very dark": "veľmi tmavá",
  "very light": "veľmi svetlá",
  vibrant: "energická",
  white: "biela",
  yellow: "žltá",
  "yellow green": "žltozelená"
};
var Ub = {};
Ub = {
  alpha: "Alfa",
  black: "črna",
  blue: "Modra",
  "blue purple": "modro vijolična",
  brightness: "Svetlost",
  brown: "rjava",
  "brown yellow": "rjavo rumena",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "cian",
  "cyan blue": "cian modra",
  dark: "temna",
  gray: "siva",
  grayish: "sivkasta",
  green: "Zelena",
  "green cyan": "zelena cian",
  hue: "Barva",
  light: "svetla",
  lightness: "Lahkost",
  magenta: "škrlatna",
  "magenta pink": "škrlatno roza",
  orange: "oranžna",
  "orange yellow": "oranžno rumena",
  pale: "bleda",
  pink: "roza",
  "pink red": "roza rdeča",
  purple: "vijolična",
  "purple magenta": "vijolično škrlatna",
  red: "Rdeča",
  "red orange": "rdeče oranžna",
  saturation: "Nasičenost",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} prozorna`,
  "very dark": "zelo temna",
  "very light": "zelo svetla",
  vibrant: "živahna",
  white: "bela",
  yellow: "rumena",
  "yellow green": "rumeno zelena"
};
var Wb = {};
Wb = {
  alpha: "Alfa",
  black: "crno",
  blue: "Plava",
  "blue purple": "plavoljubičasta",
  brightness: "Osvetljenost",
  brown: "smeđa",
  "brown yellow": "smeđežuta",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "cijan",
  "cyan blue": "cijan plava",
  dark: "tamno",
  gray: "siva",
  grayish: "sivkasta",
  green: "Zelena",
  "green cyan": "zeleno cijan",
  hue: "Nijansa",
  light: "svetla",
  lightness: "Osvetljenje",
  magenta: "purpurnocrvena",
  "magenta pink": "magenta ružičasta",
  orange: "narandžasta",
  "orange yellow": "narandžastožuta",
  pale: "bledo",
  pink: "ružičasta",
  "pink red": "ružičastocrvena",
  purple: "ljubičasta",
  "purple magenta": "ljubičasta magenta",
  red: "Crvena",
  "red orange": "crvenonarandžasta",
  saturation: "Zasićenje",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} prozirna`,
  "very dark": "veoma tamno",
  "very light": "vrlo svetlo",
  vibrant: "živopisna",
  white: "bela",
  yellow: "žuto",
  "yellow green": "žutozelena"
};
var Xb = {};
Xb = {
  alpha: "Alfa",
  black: "svart",
  blue: "Blått",
  "blue purple": "blålila",
  brightness: "Ljusstyrka",
  brown: "brun",
  "brown yellow": "brungul",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "cyan",
  "cyan blue": "cyanblå",
  dark: "mörk",
  gray: "grå",
  grayish: "gråaktig",
  green: "Grönt",
  "green cyan": "grön cyan",
  hue: "Nyans",
  light: "ljus",
  lightness: "Ljushet",
  magenta: "magenta",
  "magenta pink": "magentarosa",
  orange: "orange",
  "orange yellow": "orangegul",
  pale: "blek",
  pink: "rosa",
  "pink red": "rosaröd",
  purple: "lila",
  "purple magenta": "lila magenta",
  red: "Rött",
  "red orange": "rödorange",
  saturation: "Mättnad",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} genomskinlig`,
  "very dark": "mycket mörk",
  "very light": "mycket ljus",
  vibrant: "livfull",
  white: "vit",
  yellow: "gul",
  "yellow green": "gulgrön"
};
var Yb = {};
Yb = {
  alpha: "Alfa",
  black: "siyah",
  blue: "Mavi",
  "blue purple": "mavi mor",
  brightness: "Parlaklık",
  brown: "kahverengi",
  "brown yellow": "kahverengi sarı",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "camgöbeği",
  "cyan blue": "camgöbeği mavi",
  dark: "koyu",
  gray: "gri",
  grayish: "grimsi",
  green: "Yeşil",
  "green cyan": "yeşil camgöbeği",
  hue: "Ton",
  light: "açık",
  lightness: "Canlılık",
  magenta: "eflatun",
  "magenta pink": "eflatun pembe",
  orange: "turuncu",
  "orange yellow": "turuncu sarı",
  pale: "solgun",
  pink: "pembe",
  "pink red": "pembe kırmızı",
  purple: "mor",
  "purple magenta": "mor eflatun",
  red: "Kırmızı",
  "red orange": "kırmızı portakal",
  saturation: "Doygunluk",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} saydam`,
  "very dark": "çok koyu",
  "very light": "çok açık",
  vibrant: "canlı",
  white: "beyaz",
  yellow: "sarı",
  "yellow green": "sarı yeşil"
};
var Gb = {};
Gb = {
  alpha: "Альфа",
  black: "чорний",
  blue: "Синій",
  "blue purple": "синьо-фіолетовий",
  brightness: "Яскравість",
  brown: "коричневий",
  "brown yellow": "коричнево-жовтий",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "блакитний",
  "cyan blue": "синьо-блакитний",
  dark: "темний",
  gray: "сірий",
  grayish: "сіруватий",
  green: "Зелений",
  "green cyan": "зелено-блакитний",
  hue: "Тон",
  light: "світлий",
  lightness: "Освітленість",
  magenta: "пурпуровий",
  "magenta pink": "пурпурово-рожевий",
  orange: "помаранчевий",
  "orange yellow": "помаранчево-жовтий",
  pale: "блідий",
  pink: "рожевий",
  "pink red": "рожево-червоний",
  purple: "фіолетовий",
  "purple magenta": "фіолетово-пурпуровий",
  red: "Червоний",
  "red orange": "червоно-помаранчевий",
  saturation: "Насиченість",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, прозорий на ${t.percentTransparent}`,
  "very dark": "дуже темний",
  "very light": "дуже світлий",
  vibrant: "яскравий",
  white: "білий",
  yellow: "жовтий",
  "yellow green": "жовто-зелений"
};
var qb = {};
qb = {
  alpha: "Alpha",
  black: "黑色",
  blue: "蓝色",
  "blue purple": "蓝紫色",
  brightness: "亮度",
  brown: "棕色的",
  "brown yellow": "棕黄色",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "蓝绿色",
  "cyan blue": "青蓝色",
  dark: "深色",
  gray: "灰色",
  grayish: "浅灰色的",
  green: "绿色",
  "green cyan": "绿青色",
  hue: "色相",
  light: "浅色",
  lightness: "明亮度",
  magenta: "紫红色",
  "magenta pink": "紫粉色",
  orange: "橙色",
  "orange yellow": "橙黄色",
  pale: "苍白的",
  pink: "粉色",
  "pink red": "粉红色",
  purple: "紫色",
  "purple magenta": "紫洋红色",
  red: "红色",
  "red orange": "红橙色",
  saturation: "饱和度",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} 透明`,
  "very dark": "很暗",
  "very light": "很浅",
  vibrant: "生机勃勃",
  white: "白色",
  yellow: "黄色",
  "yellow green": "黄色/绿色"
};
var Kb = {};
Kb = {
  alpha: "Alpha",
  black: "黑",
  blue: "藍色",
  "blue purple": "藍紫",
  brightness: "亮度",
  brown: "棕",
  "brown yellow": "棕黃",
  colorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}`,
  cyan: "青",
  "cyan blue": "青藍",
  dark: "暗",
  gray: "灰",
  grayish: "偏灰",
  green: "綠色",
  "green cyan": "青綠",
  hue: "色相",
  light: "淺",
  lightness: "明亮",
  magenta: "洋紅",
  "magenta pink": "淺洋紅",
  orange: "橙",
  "orange yellow": "橙黃",
  pale: "淡",
  pink: "粉紅",
  "pink red": "粉紅",
  purple: "紫",
  "purple magenta": "紫洋紅",
  red: "紅色",
  "red orange": "橙紅",
  saturation: "飽和度",
  transparentColorName: (t) => `${t.lightness} ${t.chroma} ${t.hue}, ${t.percentTransparent} 透明`,
  "very dark": "很暗",
  "very light": "很淺",
  vibrant: "鮮豔",
  white: "白",
  yellow: "黃",
  "yellow green": "黃綠"
};
var Jb = {};
Jb = {
  "ar-AE": vb,
  "bg-BG": bb,
  "cs-CZ": yb,
  "da-DK": wb,
  "de-DE": xb,
  "el-GR": Cb,
  "en-US": _b,
  "es-ES": Sb,
  "et-EE": Tb,
  "fi-FI": Eb,
  "fr-FR": kb,
  "he-IL": Ob,
  "hr-HR": Ab,
  "hu-HU": Db,
  "it-IT": Pb,
  "ja-JP": Mb,
  "ko-KR": Fb,
  "lt-LT": Rb,
  "lv-LV": Ib,
  "nb-NO": Lb,
  "nl-NL": Bb,
  "pl-PL": zb,
  "pt-BR": Nb,
  "pt-PT": jb,
  "ro-RO": $b,
  "ru-RU": Vb,
  "sk-SK": Hb,
  "sl-SI": Ub,
  "sr-SP": Wb,
  "sv-SE": Xb,
  "tr-TR": Yb,
  "uk-UA": Gb,
  "zh-CN": qb,
  "zh-TW": Kb
};
const bM = Symbol.for("react-aria.i18n.locale"), yM = Symbol.for("react-aria.i18n.strings");
let Hn;
class ei {
  /** Returns a localized string for the given key and locale. */
  getStringForLocale(e, r) {
    let i = this.getStringsForLocale(r)[e];
    if (!i)
      throw new Error(`Could not find intl message ${e} in ${r} locale`);
    return i;
  }
  /** Returns all localized strings for the given locale. */
  getStringsForLocale(e) {
    let r = this.strings[e];
    return r || (r = wM(e, this.strings, this.defaultLocale), this.strings[e] = r), r;
  }
  static getGlobalDictionaryForPackage(e) {
    if (typeof window > "u")
      return null;
    let r = window[bM];
    if (Hn === void 0) {
      let i = window[yM];
      if (!i)
        return null;
      Hn = {};
      for (let l in i)
        Hn[l] = new ei({
          [r]: i[l]
        }, r);
    }
    let n = Hn == null ? void 0 : Hn[e];
    if (!n)
      throw new Error(`Strings for package "${e}" were not included by LocalizedStringProvider. Please add it to the list passed to createLocalizedStringDictionary.`);
    return n;
  }
  constructor(e, r = "en-US") {
    this.strings = Object.fromEntries(Object.entries(e).filter(([, n]) => n)), this.defaultLocale = r;
  }
}
function wM(t, e, r = "en-US") {
  if (e[t])
    return e[t];
  let n = xM(t);
  if (e[n])
    return e[n];
  for (let i in e)
    if (i.startsWith(n + "-"))
      return e[i];
  return e[r];
}
function xM(t) {
  return Intl.Locale ? new Intl.Locale(t).language : t.split("-")[0];
}
const rp = /* @__PURE__ */ new Map(), np = /* @__PURE__ */ new Map();
class CM {
  /** Formats a localized string for the given key with the provided variables. */
  format(e, r) {
    let n = this.strings.getStringForLocale(e, this.locale);
    return typeof n == "function" ? n(r, this) : n;
  }
  plural(e, r, n = "cardinal") {
    let i = r["=" + e];
    if (i)
      return typeof i == "function" ? i() : i;
    let l = this.locale + ":" + n, g = rp.get(l);
    g || (g = new Intl.PluralRules(this.locale, {
      type: n
    }), rp.set(l, g));
    let a = g.select(e);
    return i = r[a] || r.other, typeof i == "function" ? i() : i;
  }
  number(e) {
    let r = np.get(this.locale);
    return r || (r = new Intl.NumberFormat(this.locale), np.set(this.locale, r)), r.format(e);
  }
  select(e, r) {
    let n = e[r] || e.other;
    return typeof n == "function" ? n() : n;
  }
  constructor(e, r) {
    this.locale = e, this.strings = r;
  }
}
let _l = /* @__PURE__ */ new Map(), Hc = !1;
try {
  Hc = new Intl.NumberFormat("de-DE", {
    signDisplay: "exceptZero"
  }).resolvedOptions().signDisplay === "exceptZero";
} catch {
}
let qo = !1;
try {
  qo = new Intl.NumberFormat("de-DE", {
    style: "unit",
    unit: "degree"
  }).resolvedOptions().style === "unit";
} catch {
}
const Zb = {
  degree: {
    narrow: {
      default: "°",
      "ja-JP": " 度",
      "zh-TW": "度",
      "sl-SI": " °"
    }
  }
};
class Ns {
  /** Formats a number value as a string, according to the locale and options provided to the constructor. */
  format(e) {
    let r = "";
    if (!Hc && this.options.signDisplay != null ? r = SM(this.numberFormatter, this.options.signDisplay, e) : r = this.numberFormatter.format(e), this.options.style === "unit" && !qo) {
      var n;
      let { unit: i, unitDisplay: l = "short", locale: g } = this.resolvedOptions();
      if (!i)
        return r;
      let a = (n = Zb[i]) === null || n === void 0 ? void 0 : n[l];
      r += a[g] || a.default;
    }
    return r;
  }
  /** Formats a number to an array of parts such as separators, digits, punctuation, and more. */
  formatToParts(e) {
    return this.numberFormatter.formatToParts(e);
  }
  /** Formats a number range as a string. */
  formatRange(e, r) {
    if (typeof this.numberFormatter.formatRange == "function")
      return this.numberFormatter.formatRange(e, r);
    if (r < e)
      throw new RangeError("End date must be >= start date");
    return `${this.format(e)} – ${this.format(r)}`;
  }
  /** Formats a number range as an array of parts. */
  formatRangeToParts(e, r) {
    if (typeof this.numberFormatter.formatRangeToParts == "function")
      return this.numberFormatter.formatRangeToParts(e, r);
    if (r < e)
      throw new RangeError("End date must be >= start date");
    let n = this.numberFormatter.formatToParts(e), i = this.numberFormatter.formatToParts(r);
    return [
      ...n.map((l) => ({
        ...l,
        source: "startRange"
      })),
      {
        type: "literal",
        value: " – ",
        source: "shared"
      },
      ...i.map((l) => ({
        ...l,
        source: "endRange"
      }))
    ];
  }
  /** Returns the resolved formatting options based on the values passed to the constructor. */
  resolvedOptions() {
    let e = this.numberFormatter.resolvedOptions();
    return !Hc && this.options.signDisplay != null && (e = {
      ...e,
      signDisplay: this.options.signDisplay
    }), !qo && this.options.style === "unit" && (e = {
      ...e,
      style: "unit",
      unit: this.options.unit,
      unitDisplay: this.options.unitDisplay
    }), e;
  }
  constructor(e, r = {}) {
    this.numberFormatter = _M(e, r), this.options = r;
  }
}
function _M(t, e = {}) {
  let { numberingSystem: r } = e;
  if (r && t.includes("-nu-") && (t.includes("-u-") || (t += "-u-"), t += `-nu-${r}`), e.style === "unit" && !qo) {
    var n;
    let { unit: g, unitDisplay: a = "short" } = e;
    if (!g)
      throw new Error('unit option must be provided with style: "unit"');
    if (!(!((n = Zb[g]) === null || n === void 0) && n[a]))
      throw new Error(`Unsupported unit ${g} with unitDisplay = ${a}`);
    e = {
      ...e,
      style: "decimal"
    };
  }
  let i = t + (e ? Object.entries(e).sort((g, a) => g[0] < a[0] ? -1 : 1).join() : "");
  if (_l.has(i))
    return _l.get(i);
  let l = new Intl.NumberFormat(t, e);
  return _l.set(i, l), l;
}
function SM(t, e, r) {
  if (e === "auto")
    return t.format(r);
  if (e === "never")
    return t.format(Math.abs(r));
  {
    let n = !1;
    if (e === "always" ? n = r > 0 || Object.is(r, 0) : e === "exceptZero" && (Object.is(r, -0) || Object.is(r, 0) ? r = Math.abs(r) : n = r > 0), n) {
      let i = t.format(-r), l = t.format(r), g = i.replace(l, "").replace(/\u200e|\u061C/, "");
      return [
        ...g
      ].length !== 1 && console.warn("@react-aria/i18n polyfill for NumberFormat signDisplay: Unsupported case"), i.replace(l, "!!!").replace(g, "+").replace("!!!", l);
    } else
      return t.format(r);
  }
}
function TM(t) {
  return t && t.__esModule ? t.default : t;
}
let Sl = new ei(TM(Jb));
function EM(t) {
  let e = Vr.parse(t) || Hr.parse(t) || Ur.parse(t);
  if (e)
    return e;
  throw new Error("Invalid color value: " + t);
}
const ip = 0.68, kM = 0.85, sp = 0.55, op = 1e-3, Tl = [
  [
    0,
    "pink"
  ],
  [
    15,
    "red"
  ],
  [
    48,
    "orange"
  ],
  [
    94,
    "yellow"
  ],
  [
    135,
    "green"
  ],
  [
    175,
    "cyan"
  ],
  [
    264,
    "blue"
  ],
  [
    284,
    "purple"
  ],
  [
    320,
    "magenta"
  ],
  [
    349,
    "pink"
  ]
];
class dh {
  toHexInt() {
    return this.toFormat("rgb").toHexInt();
  }
  getChannelValue(e) {
    if (e in this)
      return this[e];
    throw new Error("Unsupported color channel: " + e);
  }
  withChannelValue(e, r) {
    if (e in this) {
      let n = this.clone();
      return n[e] = r, n;
    }
    throw new Error("Unsupported color channel: " + e);
  }
  getChannelName(e, r) {
    return (ei.getGlobalDictionaryForPackage("@react-stately/color") || Sl).getStringForLocale(e, r);
  }
  getColorSpaceAxes(e) {
    let { xChannel: r, yChannel: n } = e, i = r || this.getColorChannels().find((a) => a !== n), l = n || this.getColorChannels().find((a) => a !== i), g = this.getColorChannels().find((a) => a !== i && a !== l);
    return {
      xChannel: i,
      yChannel: l,
      zChannel: g
    };
  }
  getColorName(e) {
    let [r, n, i] = ap(this), l = ei.getGlobalDictionaryForPackage("@react-stately/color") || Sl;
    if (r > 0.999)
      return l.getStringForLocale("white", e);
    if (r < 1e-3)
      return l.getStringForLocale("black", e);
    let g;
    [g, r] = this.getOklchHue(r, n, i, e);
    let a = "", s = "";
    n <= 0.1 && n >= op ? r >= 0.7 ? s = "pale" : s = "grayish" : n >= 0.15 && (s = "vibrant"), r < 0.3 ? a = "very dark" : r < sp ? a = "dark" : r < 0.7 || (r < 0.85 ? a = "light" : a = "very light"), s && (s = l.getStringForLocale(s, e)), a && (a = l.getStringForLocale(a, e));
    let c = this.getChannelValue("alpha"), f = new CM(e, l);
    if (c < 1) {
      let o = new Ns(e, {
        style: "percent"
      }).format(1 - c);
      return f.format("transparentColorName", {
        lightness: a,
        chroma: s,
        hue: g,
        percentTransparent: o
      }).replace(/\s+/g, " ").trim();
    } else
      return f.format("colorName", {
        lightness: a,
        chroma: s,
        hue: g
      }).replace(/\s+/g, " ").trim();
  }
  getOklchHue(e, r, n, i) {
    let l = ei.getGlobalDictionaryForPackage("@react-stately/color") || Sl;
    if (r < op)
      return [
        l.getStringForLocale("gray", i),
        e
      ];
    for (let g = 0; g < Tl.length; g++) {
      let [a, s] = Tl[g], [c, f] = Tl[g + 1] || [
        360,
        "pink"
      ];
      if (n >= a && n < c)
        return s === "orange" && (e < ip ? s = "brown" : e = e - ip + sp), n > a + (c - a) / 2 && s !== f ? s = `${s} ${f}` : s === "yellow" && e < kM && (s = "yellow green"), [
          l.getStringForLocale(s, i).toLocaleLowerCase(i),
          e
        ];
    }
    throw new Error("Unexpected hue");
  }
  getHueName(e) {
    let [r, n, i] = ap(this), [l] = this.getOklchHue(r, n, i, e);
    return l;
  }
}
class Vr extends dh {
  static parse(e) {
    let r = [];
    if (/^#[\da-f]+$/i.test(e) && [
      4,
      5,
      7,
      9
    ].includes(e.length)) {
      const l = (e.length < 6 ? e.replace(/[^#]/gi, "$&$&") : e).slice(1).split("");
      for (; l.length > 0; )
        r.push(parseInt(l.splice(0, 2).join(""), 16));
      r[3] = r[3] !== void 0 ? r[3] / 255 : void 0;
    }
    const n = e.match(/^rgba?\((.*)\)$/);
    n != null && n[1] && (r = n[1].split(",").map((l) => Number(l.trim())), r = r.map((l, g) => wn(l, 0, g < 3 ? 255 : 1)));
    var i;
    return r.length < 3 ? void 0 : new Vr(r[0], r[1], r[2], (i = r[3]) !== null && i !== void 0 ? i : 1);
  }
  toString(e = "css") {
    switch (e) {
      case "hex":
        return "#" + (this.red.toString(16).padStart(2, "0") + this.green.toString(16).padStart(2, "0") + this.blue.toString(16).padStart(2, "0")).toUpperCase();
      case "hexa":
        return "#" + (this.red.toString(16).padStart(2, "0") + this.green.toString(16).padStart(2, "0") + this.blue.toString(16).padStart(2, "0") + Math.round(this.alpha * 255).toString(16).padStart(2, "0")).toUpperCase();
      case "rgb":
        return `rgb(${this.red}, ${this.green}, ${this.blue})`;
      case "css":
      case "rgba":
        return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;
      default:
        return this.toFormat(e).toString(e);
    }
  }
  toFormat(e) {
    switch (e) {
      case "hex":
      case "hexa":
      case "rgb":
      case "rgba":
        return this;
      case "hsb":
      case "hsba":
        return this.toHSB();
      case "hsl":
      case "hsla":
        return this.toHSL();
      default:
        throw new Error("Unsupported color conversion: rgb -> " + e);
    }
  }
  toHexInt() {
    return this.red << 16 | this.green << 8 | this.blue;
  }
  /**
  * Converts an RGB color value to HSB.
  * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB.
  * @returns An HSBColor object.
  */
  toHSB() {
    const e = this.red / 255, r = this.green / 255, n = this.blue / 255, i = Math.min(e, r, n), l = Math.max(e, r, n), g = l - i, a = l === 0 ? 0 : g / l;
    let s = 0;
    if (g !== 0) {
      switch (l) {
        case e:
          s = (r - n) / g + (r < n ? 6 : 0);
          break;
        case r:
          s = (n - e) / g + 2;
          break;
        case n:
          s = (e - r) / g + 4;
          break;
      }
      s /= 6;
    }
    return new Hr(Ze(s * 360, 2), Ze(a * 100, 2), Ze(l * 100, 2), this.alpha);
  }
  /**
  * Converts an RGB color value to HSL.
  * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB.
  * @returns An HSLColor object.
  */
  toHSL() {
    const e = this.red / 255, r = this.green / 255, n = this.blue / 255, i = Math.min(e, r, n), l = Math.max(e, r, n), g = (l + i) / 2, a = l - i;
    let s, c;
    if (a === 0)
      s = c = 0;
    else {
      switch (c = a / (g < 0.5 ? l + i : 2 - l - i), l) {
        case e:
          s = (r - n) / a + (r < n ? 6 : 0);
          break;
        case r:
          s = (n - e) / a + 2;
          break;
        case n:
          s = (e - r) / a + 4;
          break;
      }
      s /= 6;
    }
    return new Ur(Ze(s * 360, 2), Ze(c * 100, 2), Ze(g * 100, 2), this.alpha);
  }
  clone() {
    return new Vr(this.red, this.green, this.blue, this.alpha);
  }
  getChannelRange(e) {
    switch (e) {
      case "red":
      case "green":
      case "blue":
        return {
          minValue: 0,
          maxValue: 255,
          step: 1,
          pageSize: 17
        };
      case "alpha":
        return {
          minValue: 0,
          maxValue: 1,
          step: 0.01,
          pageSize: 0.1
        };
      default:
        throw new Error("Unknown color channel: " + e);
    }
  }
  getChannelFormatOptions(e) {
    switch (e) {
      case "red":
      case "green":
      case "blue":
        return {
          style: "decimal"
        };
      case "alpha":
        return {
          style: "percent"
        };
      default:
        throw new Error("Unknown color channel: " + e);
    }
  }
  formatChannelValue(e, r) {
    let n = this.getChannelFormatOptions(e), i = this.getChannelValue(e);
    return new Ns(r, n).format(i);
  }
  getColorSpace() {
    return "rgb";
  }
  getColorChannels() {
    return Vr.colorChannels;
  }
  constructor(e, r, n, i) {
    super(), this.red = e, this.green = r, this.blue = n, this.alpha = i;
  }
}
Vr.colorChannels = [
  "red",
  "green",
  "blue"
];
const OM = /hsb\(([-+]?\d+(?:.\d+)?\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d+(?:.\d+)?%)\)|hsba\(([-+]?\d+(?:.\d+)?\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d(.\d+)?)\)/;
class Hr extends dh {
  static parse(e) {
    let r;
    if (r = e.match(OM)) {
      var n;
      const [i, l, g, a] = ((n = r[1]) !== null && n !== void 0 ? n : r[2]).split(",").map((s) => Number(s.trim().replace("%", "")));
      return new Hr(Qb(i, 360), wn(l, 0, 100), wn(g, 0, 100), wn(a ?? 1, 0, 1));
    }
  }
  toString(e = "css") {
    switch (e) {
      case "css":
        return this.toHSL().toString("css");
      case "hex":
        return this.toRGB().toString("hex");
      case "hexa":
        return this.toRGB().toString("hexa");
      case "hsb":
        return `hsb(${this.hue}, ${Ze(this.saturation, 2)}%, ${Ze(this.brightness, 2)}%)`;
      case "hsba":
        return `hsba(${this.hue}, ${Ze(this.saturation, 2)}%, ${Ze(this.brightness, 2)}%, ${this.alpha})`;
      default:
        return this.toFormat(e).toString(e);
    }
  }
  toFormat(e) {
    switch (e) {
      case "hsb":
      case "hsba":
        return this;
      case "hsl":
      case "hsla":
        return this.toHSL();
      case "rgb":
      case "rgba":
        return this.toRGB();
      default:
        throw new Error("Unsupported color conversion: hsb -> " + e);
    }
  }
  /**
  * Converts a HSB color to HSL.
  * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL.
  * @returns An HSLColor object.
  */
  toHSL() {
    let e = this.saturation / 100, r = this.brightness / 100, n = r * (1 - e / 2);
    return e = n === 0 || n === 1 ? 0 : (r - n) / Math.min(n, 1 - n), new Ur(Ze(this.hue, 2), Ze(e * 100, 2), Ze(n * 100, 2), this.alpha);
  }
  /**
  * Converts a HSV color value to RGB.
  * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_RGB_alternative.
  * @returns An RGBColor object.
  */
  toRGB() {
    let e = this.hue, r = this.saturation / 100, n = this.brightness / 100, i = (l, g = (l + e / 60) % 6) => n - r * n * Math.max(Math.min(g, 4 - g, 1), 0);
    return new Vr(Math.round(i(5) * 255), Math.round(i(3) * 255), Math.round(i(1) * 255), this.alpha);
  }
  clone() {
    return new Hr(this.hue, this.saturation, this.brightness, this.alpha);
  }
  getChannelRange(e) {
    switch (e) {
      case "hue":
        return {
          minValue: 0,
          maxValue: 360,
          step: 1,
          pageSize: 15
        };
      case "saturation":
      case "brightness":
        return {
          minValue: 0,
          maxValue: 100,
          step: 1,
          pageSize: 10
        };
      case "alpha":
        return {
          minValue: 0,
          maxValue: 1,
          step: 0.01,
          pageSize: 0.1
        };
      default:
        throw new Error("Unknown color channel: " + e);
    }
  }
  getChannelFormatOptions(e) {
    switch (e) {
      case "hue":
        return {
          style: "unit",
          unit: "degree",
          unitDisplay: "narrow"
        };
      case "saturation":
      case "brightness":
      case "alpha":
        return {
          style: "percent"
        };
      default:
        throw new Error("Unknown color channel: " + e);
    }
  }
  formatChannelValue(e, r) {
    let n = this.getChannelFormatOptions(e), i = this.getChannelValue(e);
    return (e === "saturation" || e === "brightness") && (i /= 100), new Ns(r, n).format(i);
  }
  getColorSpace() {
    return "hsb";
  }
  getColorChannels() {
    return Hr.colorChannels;
  }
  constructor(e, r, n, i) {
    super(), this.hue = e, this.saturation = r, this.brightness = n, this.alpha = i;
  }
}
Hr.colorChannels = [
  "hue",
  "saturation",
  "brightness"
];
const AM = /hsl\(([-+]?\d+(?:.\d+)?\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d+(?:.\d+)?%)\)|hsla\(([-+]?\d+(?:.\d+)?\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d(.\d+)?)\)/;
function Qb(t, e) {
  return (t % e + e) % e;
}
class Ur extends dh {
  static parse(e) {
    let r;
    if (r = e.match(AM)) {
      var n;
      const [i, l, g, a] = ((n = r[1]) !== null && n !== void 0 ? n : r[2]).split(",").map((s) => Number(s.trim().replace("%", "")));
      return new Ur(Qb(i, 360), wn(l, 0, 100), wn(g, 0, 100), wn(a ?? 1, 0, 1));
    }
  }
  toString(e = "css") {
    switch (e) {
      case "hex":
        return this.toRGB().toString("hex");
      case "hexa":
        return this.toRGB().toString("hexa");
      case "hsl":
        return `hsl(${this.hue}, ${Ze(this.saturation, 2)}%, ${Ze(this.lightness, 2)}%)`;
      case "css":
      case "hsla":
        return `hsla(${this.hue}, ${Ze(this.saturation, 2)}%, ${Ze(this.lightness, 2)}%, ${this.alpha})`;
      default:
        return this.toFormat(e).toString(e);
    }
  }
  toFormat(e) {
    switch (e) {
      case "hsl":
      case "hsla":
        return this;
      case "hsb":
      case "hsba":
        return this.toHSB();
      case "rgb":
      case "rgba":
        return this.toRGB();
      default:
        throw new Error("Unsupported color conversion: hsl -> " + e);
    }
  }
  /**
  * Converts a HSL color to HSB.
  * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV.
  * @returns An HSBColor object.
  */
  toHSB() {
    let e = this.saturation / 100, r = this.lightness / 100, n = r + e * Math.min(r, 1 - r);
    return e = n === 0 ? 0 : 2 * (1 - r / n), new Hr(Ze(this.hue, 2), Ze(e * 100, 2), Ze(n * 100, 2), this.alpha);
  }
  /**
  * Converts a HSL color to RGB.
  * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative.
  * @returns An RGBColor object.
  */
  toRGB() {
    let e = this.hue, r = this.saturation / 100, n = this.lightness / 100, i = r * Math.min(n, 1 - n), l = (g, a = (g + e / 30) % 12) => n - i * Math.max(Math.min(a - 3, 9 - a, 1), -1);
    return new Vr(Math.round(l(0) * 255), Math.round(l(8) * 255), Math.round(l(4) * 255), this.alpha);
  }
  clone() {
    return new Ur(this.hue, this.saturation, this.lightness, this.alpha);
  }
  getChannelRange(e) {
    switch (e) {
      case "hue":
        return {
          minValue: 0,
          maxValue: 360,
          step: 1,
          pageSize: 15
        };
      case "saturation":
      case "lightness":
        return {
          minValue: 0,
          maxValue: 100,
          step: 1,
          pageSize: 10
        };
      case "alpha":
        return {
          minValue: 0,
          maxValue: 1,
          step: 0.01,
          pageSize: 0.1
        };
      default:
        throw new Error("Unknown color channel: " + e);
    }
  }
  getChannelFormatOptions(e) {
    switch (e) {
      case "hue":
        return {
          style: "unit",
          unit: "degree",
          unitDisplay: "narrow"
        };
      case "saturation":
      case "lightness":
      case "alpha":
        return {
          style: "percent"
        };
      default:
        throw new Error("Unknown color channel: " + e);
    }
  }
  formatChannelValue(e, r) {
    let n = this.getChannelFormatOptions(e), i = this.getChannelValue(e);
    return (e === "saturation" || e === "lightness") && (i /= 100), new Ns(r, n).format(i);
  }
  getColorSpace() {
    return "hsl";
  }
  getColorChannels() {
    return Ur.colorChannels;
  }
  constructor(e, r, n, i) {
    super(), this.hue = e, this.saturation = r, this.lightness = n, this.alpha = i;
  }
}
Ur.colorChannels = [
  "hue",
  "saturation",
  "lightness"
];
function ap(t) {
  let e = t.toFormat("rgb"), r = e.getChannelValue("red") / 255, n = e.getChannelValue("green") / 255, i = e.getChannelValue("blue") / 255;
  [r, n, i] = PM(r, n, i);
  let [l, g, a] = MM(r, n, i), [s, c, f] = FM(l, g, a);
  return DM(s, c, f);
}
function DM(t, e, r) {
  var n = Math.atan2(r, e) * 180 / Math.PI;
  return [
    t,
    Math.sqrt(e ** 2 + r ** 2),
    n >= 0 ? n : n + 360
    // Hue, in degrees [0 to 360)
  ];
}
function PM(t, e, r) {
  return [
    El(t),
    El(e),
    El(r)
  ];
}
function El(t) {
  let e = t < 0 ? -1 : 1, r = Math.abs(t);
  return r <= 0.04045 ? t / 12.92 : e * Math.pow((r + 0.055) / 1.055, 2.4);
}
function MM(t, e, r) {
  return Uc([
    0.4123907992659595,
    0.35758433938387796,
    0.1804807884018343,
    0.21263900587151036,
    0.7151686787677559,
    0.07219231536073371,
    0.01933081871559185,
    0.11919477979462599,
    0.9505321522496606
  ], t, e, r);
}
function FM(t, e, r) {
  const n = [
    0.819022437996703,
    0.3619062600528904,
    -0.1288737815209879,
    0.0329836539323885,
    0.9292868615863434,
    0.0361446663506424,
    0.0481771893596242,
    0.2642395317527308,
    0.6335478284694309
  ], i = [
    0.210454268309314,
    0.7936177747023054,
    -0.0040720430116193,
    1.9779985324311684,
    -2.42859224204858,
    0.450593709617411,
    0.0259040424655478,
    0.7827717124575296,
    -0.8086757549230774
  ];
  let [l, g, a] = Uc(n, t, e, r);
  return Uc(i, Math.cbrt(l), Math.cbrt(g), Math.cbrt(a));
}
function Uc(t, e, r, n) {
  let i = t[0] * e + t[1] * r + t[2] * n, l = t[3] * e + t[4] * r + t[5] * n, g = t[6] * e + t[7] * r + t[8] * n;
  return [
    i,
    l,
    g
  ];
}
function RM({ onChange: t, value: e, colors: r }) {
  const n = r.map((i) => {
    const l = e === i;
    return /* @__PURE__ */ C(
      Er,
      {
        onClick: () => {
          t == null || t(i);
        },
        className: ce(
          "relative block flex-shrink-0 w-26 h-26 border rounded",
          l && "shadow-md"
        ),
        style: { backgroundColor: i },
        children: l && /* @__PURE__ */ C("span", { className: "absolute inset-0 m-auto rounded-full w-8 h-8 bg-white" })
      },
      i
    );
  });
  return /* @__PURE__ */ C("div", { className: "flex flex-wrap gap-6", children: n });
}
const IM = [
  {
    color: "rgb(255, 255, 255)",
    name: le("White")
  },
  {
    color: "rgb(239,245,245)",
    name: le("Solitude")
  },
  {
    color: "rgb(245,213,174)",
    name: le("Wheat")
  },
  {
    color: "rgb(253,227,167)",
    name: le("Cape Honey")
  },
  {
    color: "rgb(242,222,186)",
    name: le("Milk punch")
  },
  {
    color: "rgb(97,118,75)",
    name: le("Dingy"),
    foreground: "rgb(255, 255, 255)"
  },
  {
    color: "rgb(4, 147, 114)",
    name: le("Aquamarine"),
    foreground: "rgb(255, 255, 255)"
  },
  {
    color: "rgb(222,245,229)",
    name: le("Cosmic Latte")
  },
  {
    color: "rgb(233,119,119)",
    name: le("Geraldine"),
    foreground: "rgb(90,14,14)"
  },
  {
    color: "rgb(247,164,164)",
    name: le("Sundown")
  },
  {
    color: "rgb(30,139,195)",
    name: le("Pelorous"),
    foreground: "rgb(255, 255, 255)"
  },
  {
    color: "rgb(142,68,173)",
    name: le("Deep Lilac"),
    foreground: "rgb(255, 255, 255)"
  },
  {
    color: "rgb(108,74,182)",
    name: le("Blue marguerite"),
    foreground: "rgb(255, 255, 255)"
  },
  {
    color: "rgb(139,126,116)",
    name: le("Americano"),
    foreground: "rgb(255, 255, 255)"
  },
  {
    color: "rgb(0,0,0)",
    name: le("Black"),
    foreground: "rgb(255, 255, 255)"
  },
  {
    color: "rgb(64,66,88)",
    name: le("Blue zodiac"),
    foreground: "rgb(255, 255, 255)"
  },
  {
    color: "rgb(101,100,124)",
    name: le("Comet"),
    foreground: "rgb(255, 255, 255)"
  }
], LM = IM.map(({ color: t }) => t).slice(0, 14);
function BM({
  defaultValue: t,
  onChange: e,
  colorPresets: r,
  showInput: n
}) {
  const [i, l] = Fe(t), g = r || LM, a = Bn({ size: "sm" });
  return /* @__PURE__ */ oe("div", { children: [
    /* @__PURE__ */ C(
      pM,
      {
        className: "!w-auto",
        color: i,
        onChange: (s) => {
          e == null || e(s), l(s);
        }
      }
    ),
    /* @__PURE__ */ oe("div", { className: "py-20 px-12", children: [
      g && /* @__PURE__ */ C(
        RM,
        {
          colors: g,
          onChange: (s) => {
            if (s) {
              const c = EM(s).toString("hex");
              e == null || e(c), l(c);
            }
          },
          value: i
        }
      ),
      n && /* @__PURE__ */ C("div", { className: "pt-20", children: /* @__PURE__ */ C(
        vM,
        {
          autoComplete: "off",
          role: "textbox",
          autoCorrect: "off",
          spellCheck: "false",
          required: !0,
          "aria-label": "Hex color",
          prefixed: !0,
          className: a.input,
          color: i,
          onChange: (s) => {
            e == null || e(s), l(s);
          }
        }
      ) })
    ] })
  ] });
}
const ja = he.createContext(null);
function ey() {
  return Ve(ja);
}
function rn() {
  const { lines: t, localeCode: e } = Fa();
  return { trans: Me(
    (n) => zM({ ...n, lines: t, localeCode: e }),
    [t, e]
  ) };
}
const zM = Fs(
  (t) => {
    let { lines: e, message: r, values: n, localeCode: i } = t;
    return r == null ? "" : (r = (e == null ? void 0 : e[r]) || (e == null ? void 0 : e[r.toLowerCase()]) || r, n && (r = Yv(i, t), Object.entries(n).forEach(([l, g]) => {
      r = r.replace(`:${l}`, `${g}`);
    })), r);
  },
  { equals: Rc, callTimeout: 0 }
);
function NM({ onDismiss: t }) {
  const { trans: e } = rn(), r = () => {
    t && t();
  };
  return /* @__PURE__ */ C(
    "button",
    {
      className: "sr-only",
      "aria-label": e(le("Dismiss")),
      tabIndex: -1,
      onClick: r
    }
  );
}
function $a(t) {
  const {
    type: e = "modal",
    dialogProps: r,
    ...n
  } = Ve(ja), {
    children: i,
    className: l,
    size: g = "md",
    background: a,
    radius: s = "rounded",
    maxWidth: c = "max-w-dialog",
    ...f
  } = t;
  let o = null;
  (e === "popover" || e === "tray") && (o = /* @__PURE__ */ C(NM, { onDismiss: n.close }));
  const h = g === "fullscreenTakeover" || e === "tray", u = ce(
    "mx-auto pointer-events-auto outline-none flex flex-col overflow-hidden",
    a || "bg",
    e !== "tray" && jM(g),
    e === "tray" && "rounded-t border-b-bg",
    g !== "fullscreenTakeover" && "shadow-2xl border max-h-dialog",
    !h && `${s} ${c}`,
    l
  );
  return /* @__PURE__ */ oe(
    "div",
    {
      ...Tr({ role: "dialog", tabIndex: -1 }, r, f),
      style: { ...t.style, "--be-dialog-padding": "24px" },
      "aria-modal": !0,
      className: u,
      children: [
        Wr.toArray(i).map((d) => xr(d) ? xt(d, {
          size: d.props.size ?? g
        }) : d),
        o
      ]
    }
  );
}
function jM(t) {
  switch (t) {
    case "2xs":
      return "w-256";
    case "xs":
      return "w-320";
    case "sm":
      return "w-384";
    case "md":
      return "w-440";
    case "lg":
      return "w-620";
    case "xl":
      return "w-780";
    case "2xl":
      return "w-850";
    case "fullscreen":
      return "w-1280";
    case "fullscreenTakeover":
      return "w-full h-full";
    default:
      return t;
  }
}
const ph = we(
  /* @__PURE__ */ C("path", { d: "M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z" }),
  "KeyboardArrowDownOutlined"
), $M = st(
  ({
    children: t,
    autoFocus: e = !1,
    restoreFocus: r = !0,
    isDismissable: n = !0,
    isOpen: i = !1,
    placement: l = "center",
    onClose: g
  }, a) => {
    const s = th(), c = Ln(a);
    return /* @__PURE__ */ oe(
      "div",
      {
        className: "fixed inset-0 isolate z-modal",
        style: s,
        onKeyDown: (f) => {
          f.key === "Escape" && (f.stopPropagation(), f.preventDefault(), g());
        },
        children: [
          /* @__PURE__ */ C(
            sh,
            {
              onClick: () => {
                n && g();
              }
            },
            "modal-underlay"
          ),
          /* @__PURE__ */ C(
            gt.div,
            {
              ref: c,
              className: ce(
                "pointer-events-none absolute inset-0 z-20 flex h-full w-full",
                l === "center" && "items-center justify-center",
                l === "top" && "items-start justify-center pt-40"
              ),
              role: "presentation",
              initial: { opacity: 0, scale: l === "top" ? 1 : 0.7 },
              animate: { opacity: 1, scale: 1 },
              exit: { opacity: 0, scale: 1 },
              transition: { duration: 0.1 },
              children: /* @__PURE__ */ C(Ma, { restoreFocus: r, autoFocus: e, contain: !0, children: t })
            }
          )
        ]
      }
    );
  }
);
function VM({ x: t, y: e }, r) {
  return {
    getBoundingClientRect() {
      return {
        x: t,
        y: e,
        width: 0,
        height: 0,
        top: e,
        right: t,
        bottom: e,
        left: t
      };
    },
    contextElement: r
  };
}
function HM(t) {
  const e = ge(t);
  return ke(() => {
    e.current = t;
  }), Ye(() => (...r) => {
    var n;
    return (n = e.current) == null ? void 0 : n.call(e, ...r);
  }, []);
}
function Va(t) {
  let {
    children: e,
    type: r,
    disableInitialTransition: n,
    isDismissable: i = !0,
    moveFocusToDialog: l = !0,
    returnFocusToTrigger: g = !0,
    triggerOnHover: a = !1,
    triggerOnContextMenu: s = !1,
    usePortal: c = !0,
    mobileType: f,
    alwaysReturnCurrentValueOnClose: o
  } = t;
  const h = ge(null), u = s && !t.triggerRef ? h : t.triggerRef, d = ge(t.value), [m, p] = Gr(
    t.isOpen,
    t.defaultIsOpen,
    t.onOpenChange
  ), [v, b] = Gr(
    t.value,
    t.defaultValue,
    t.onValueChange
  );
  Ra() && r === "popover" && (r = f || "modal");
  const w = ge(null), { x, y: _, reference: S, strategy: k, refs: F } = Wu({
    ...t,
    disablePositioning: r === "modal"
  }), L = r === "popover" ? {
    position: k,
    top: _ ?? "",
    left: x ?? ""
  } : {}, j = qt(), G = `${j}-label`, te = `${j}-description`, U = `${j}-form`, K = HM(t.onClose), re = Me(
    (H) => {
      typeof H > "u" && o && (H = v);
      const V = typeof H < "u" ? H : d.current;
      K == null || K(V, {
        initialValue: d.current,
        valueChanged: V !== d.current
      }), p(!1);
    },
    [K, p, v, o]
  ), ne = Me(() => {
    p(!0), d.current = t.value;
  }, [t.value, p]);
  Ot(() => {
    u != null && u.current && F.reference.current !== u.current && S(u.current);
  }, [S, u == null ? void 0 : u.current, F]);
  const se = Ye(() => ({
    "aria-labelledby": G,
    "aria-describedby": te
  }), [G, te]);
  let T;
  r === "modal" ? T = $M : r === "tray" ? T = Wv : T = go;
  const P = Ye(() => ({
    dialogProps: se,
    type: r,
    labelId: G,
    descriptionId: te,
    isDismissable: i,
    close: re,
    value: v,
    initialValue: d.current,
    setValue: b,
    formId: U
  }), [
    re,
    te,
    se,
    U,
    G,
    r,
    i,
    v,
    b
  ]);
  a = a && r === "popover";
  const D = {
    onPointerEnter: wt((H) => {
      ne();
    }),
    onPointerLeave: wt((H) => {
      w.current = setTimeout(() => {
        re();
      }, 150);
    })
  }, M = {
    onPointerEnter: wt((H) => {
      w.current && clearTimeout(w.current);
    }),
    onPointerLeave: wt((H) => {
      re();
    })
  }, $ = {
    onContextMenu: wt((H) => {
      H.preventDefault(), h.current = VM(
        { x: H.clientX, y: H.clientY },
        H.currentTarget
      ), ne();
    })
  }, A = {
    onClick: wt((H) => {
      H.stopPropagation(), m ? re() : ne();
    })
  }, { dialogTrigger: E, dialog: R } = UM(e, P), N = /* @__PURE__ */ C(Sr, { initial: !n, children: m && /* @__PURE__ */ C(ja.Provider, { value: P, children: /* @__PURE__ */ C(
    T,
    {
      ...a ? M : {},
      ref: F.setFloating,
      triggerRef: F.reference,
      style: L,
      restoreFocus: g,
      autoFocus: l,
      isOpen: m,
      onClose: re,
      isDismissable: i,
      isContextMenu: s,
      placement: t.placement,
      children: R
    }
  ) }) });
  return /* @__PURE__ */ oe(gr, { children: [
    E && xt(
      E,
      Tr(
        {
          // make sure ref specified on trigger element is not overwritten
          ...!u && !s ? { ref: S } : {},
          ...s ? {} : A,
          ...a ? D : {},
          ...s ? $ : {}
        },
        {
          ...E.props
        }
      )
    ),
    c ? En && qc(N, En) : N
  ] });
}
function UM(t, e) {
  const r = Array.isArray(t) ? t : Wr.toArray(t);
  let n = r.length === 2 ? r[1] : r[0];
  return n = typeof n == "function" ? n(e) : n, r.length === 2 ? {
    dialogTrigger: r[0],
    dialog: n
  } : { dialog: n };
}
function zn(t) {
  const { label: e, className: r, value: n, onChange: i, size: l, width: g = "w-max" } = t, a = fe((d) => {
    var m, p;
    return (p = (m = d.config.ui) == null ? void 0 : m.colorPresets) == null ? void 0 : p.items;
  }) || [], s = Bn({ size: l }), [c, f] = Fe(n), [o, h] = Fe(!1), u = (d) => {
    f(d), i == null || i(d);
  };
  return /* @__PURE__ */ oe("div", { className: ce(r, g), children: [
    e && /* @__PURE__ */ C("span", { className: s.label, children: e }),
    /* @__PURE__ */ oe(Va, { type: "popover", isOpen: o, onOpenChange: h, children: [
      /* @__PURE__ */ oe(
        Er,
        {
          className: ce(s.input, "inline-flex items-center"),
          "aria-label": t["aria-label"],
          children: [
            /* @__PURE__ */ C(
              "span",
              {
                className: "block flex-shrink-0 mr-5 border rounded h-2/4 aspect-square",
                style: { backgroundColor: c }
              }
            ),
            /* @__PURE__ */ C(WM, { isActive: o, className: s.adornment })
          ]
        }
      ),
      /* @__PURE__ */ C($a, { size: "auto", children: /* @__PURE__ */ C(
        BM,
        {
          onChange: u,
          defaultValue: c,
          colorPresets: a
        }
      ) })
    ] })
  ] });
}
function WM({ isActive: t, className: e }) {
  return /* @__PURE__ */ C(
    ph,
    {
      size: "sm",
      className: `transition-transform ml-auto flex-shrink-0 ${t ? "rotate-180" : "rotate-0"} ${e}`
    }
  );
}
function XM(t) {
  const {
    size: e = "md",
    inline: r,
    label: n,
    showValueLabel: i = !!n,
    className: l,
    width: g = "w-full",
    slider: a,
    children: s,
    trackColor: c = "primary",
    fillColor: f = "primary"
  } = t, {
    domProps: o,
    trackRef: h,
    getThumbPercent: u,
    getThumbValueLabel: d,
    labelId: m,
    groupId: p,
    thumbIds: v,
    isDisabled: b,
    numberFormatter: y,
    minValue: w,
    maxValue: x,
    step: _,
    values: S,
    getValueLabel: k
  } = a;
  let F = "", L = Math.max(
    [...y.format(w)].length,
    [...y.format(x)].length,
    [...y.format(_)].length
  );
  k ? F = k(S[0]) : S.length === 1 ? F = d(0) : S.length === 2 && (F = `${d(0)} – ${d(1)}`, L = 3 + 2 * Math.max(
    L,
    [...y.format(w)].length,
    [...y.format(x)].length
  ));
  const j = Bn({
    size: e,
    disabled: b,
    labelDisplay: "flex"
  }), G = ce("touch-none", l, g, {
    "flex items-center": r
  });
  return /* @__PURE__ */ oe("div", { className: G, role: "group", id: p, children: [
    (n || i) && /* @__PURE__ */ oe("div", { className: ce(j.label, "select-none"), children: [
      n && /* @__PURE__ */ C(
        "label",
        {
          onClick: () => {
            var te;
            (te = document.getElementById(v[0])) == null || te.focus();
          },
          id: m,
          htmlFor: p,
          children: n
        }
      ),
      i && /* @__PURE__ */ C(
        "output",
        {
          htmlFor: v[0],
          className: "ml-auto text-right",
          "aria-live": "off",
          style: L ? {
            width: `${L}ch`,
            minWidth: `${L}ch`
          } : void 0,
          children: F
        }
      )
    ] }),
    /* @__PURE__ */ oe(
      "div",
      {
        ref: h,
        className: ce("relative", YM(t)),
        ...o,
        role: "presentation",
        children: [
          /* @__PURE__ */ C(
            "div",
            {
              className: ce(
                "absolute inset-0 m-auto rounded",
                GM(c, b),
                lp(e)
              )
            }
          ),
          /* @__PURE__ */ C(
            "div",
            {
              className: ce(
                "absolute inset-0 my-auto rounded",
                qM(f, b),
                lp(e)
              ),
              style: { width: `${Math.max(u(0) * 100, 0)}%` }
            }
          ),
          s
        ]
      }
    )
  ] });
}
function YM({ size: t, wrapperHeight: e }) {
  if (e)
    return e;
  switch (t) {
    case "xs":
      return "h-14";
    case "sm":
      return "h-20";
    default:
      return "h-30";
  }
}
function lp(t) {
  switch (t) {
    case "xs":
      return "h-2";
    case "sm":
      return "h-3";
    default:
      return "h-4";
  }
}
function GM(t, e) {
  switch (e && (t = "disabled"), t) {
    case "disabled":
      return "bg-slider-disabled/60";
    case "primary":
      return "bg-primary-light";
    case "neutral":
      return "bg-divider";
    default:
      return t;
  }
}
function qM(t, e) {
  switch (e && (t = "disabled"), t) {
    case "disabled":
      return "bg-slider-disabled";
    case "primary":
      return "bg-primary";
    default:
      return t;
  }
}
function ty(t = {}) {
  const { localeCode: e } = Fa();
  return Ye(
    () => new Ns(e, t),
    [e, t]
  );
}
function ry({
  minValue: t = 0,
  maxValue: e = 100,
  isDisabled: r = !1,
  step: n = 1,
  formatOptions: i,
  onChangeEnd: l,
  onPointerDown: g,
  label: a,
  getValueLabel: s,
  showThumbOnHoverOnly: c,
  thumbSize: f,
  onPointerMove: o,
  ...h
}) {
  const [u, d] = Fe(!1), m = ty(i), { addGlobalListener: p, removeGlobalListener: v } = Mu(), b = ge(null), [y, w] = Gr(
    h.value ? h.value : void 0,
    h.defaultValue ?? [t],
    h.onChange
  ), x = ge(null);
  x.current = y;
  const [_, S] = Fe(
    new Array(y.length).fill(!1)
  ), k = ge(null);
  k.current = _;
  function F(z) {
    return m.format(z);
  }
  const L = (z) => {
    var Y;
    return ((Y = k.current) == null ? void 0 : Y[z]) || !1;
  }, j = (z) => F(y[z]), G = (z) => z === 0 ? t : y[z - 1], te = (z) => z === y.length - 1 ? e : y[z + 1], U = (z, Y) => {
    if (r || !A(z) || !x.current)
      return;
    const ae = G(z), ye = te(z);
    Y = I3(Y, ae, ye, n), x.current = cp(x.current, z, Y), w(x.current);
  }, K = (z, Y) => {
    var ye;
    if (r || !A(z))
      return;
    const ae = (ye = k.current) == null ? void 0 : ye[z];
    k.current = cp(
      k.current || [],
      z,
      Y
    ), S(k.current), l && ae && !k.current.some(Boolean) && l(x.current || []);
  }, [re, ne] = Fe(
    void 0
  ), se = (z) => {
    const Y = Math.min(1, (z - t) / (e - t));
    return isNaN(Y) ? 0 : Y;
  }, T = (z) => se(x.current[z]), P = (z, Y) => {
    U(z, M(Y));
  }, D = (z) => Math.round((z - t) / n) * n + t, M = (z) => {
    const Y = z * (e - t) + t;
    return ms(D(Y), t, e);
  }, $ = ge(
    new Array(y.length).fill(!0)
  ), A = (z) => $.current[z], E = (z, Y) => {
    $.current[z] = Y;
  }, R = ge(null), N = ge(void 0), H = (z) => {
    if (!(z.pointerType === "mouse" && (z.button !== 0 || z.altKey || z.ctrlKey || z.metaKey)) && (g == null || g(), b.current && !r && y.every((Y, ae) => !_[ae]))) {
      const Y = b.current.offsetWidth, ae = b.current.getBoundingClientRect().left, me = (z.clientX - ae) / Y, J = M(me);
      let pe;
      const _e = y.findIndex((De) => J - De < 0);
      if (_e === 0)
        pe = _e;
      else if (_e === -1)
        pe = y.length - 1;
      else {
        const De = y[_e - 1], je = y[_e];
        Math.abs(De - J) < Math.abs(je - J) ? pe = _e - 1 : pe = _e;
      }
      pe >= 0 && A(pe) ? (z.preventDefault(), R.current = pe, ne(pe), N.current = z.pointerId, K(R.current, !0), U(pe, J), p(window, "pointerup", ue, !1)) : R.current = null;
    }
  }, V = ge(null), { domProps: Z } = za({
    onPointerDown: H,
    onMoveStart() {
      V.current = null;
    },
    onMove(z, Y) {
      var ye;
      const ae = ((ye = b.current) == null ? void 0 : ye.offsetWidth) || 0;
      if (V.current == null && (V.current = T(R.current || 0) * ae), V.current += Y, R.current != null && b.current) {
        const me = ms(V.current / ae, 0, 1);
        P(R.current, me);
      }
    },
    onMoveEnd() {
      R.current != null && (K(R.current, !1), R.current = null);
    }
  }), ee = Tr(Z, {
    onPointerEnter: () => {
      d(!0);
    },
    onPointerLeave: () => {
      d(!1);
    },
    onPointerMove: (z) => {
      o == null || o(z);
    }
  }), ue = (z) => {
    z.pointerId === N.current && (R.current != null && (K(R.current, !1), R.current = null), v(window, "pointerup", ue, !1));
  }, W = qt(), B = a ? `${W}-label` : void 0, X = `${W}-group`, Q = [...Array(y.length)].map((z, Y) => `${W}-thumb-${Y}`);
  return {
    domProps: ee,
    trackRef: b,
    isDisabled: r,
    step: n,
    values: y,
    minValue: t,
    maxValue: e,
    focusedThumb: re,
    labelId: B,
    groupId: X,
    thumbIds: Q,
    numberFormatter: m,
    getThumbPercent: T,
    getThumbMinValue: G,
    getThumbMaxValue: te,
    getThumbValueLabel: j,
    isThumbDragging: L,
    setThumbValue: U,
    updateDraggedThumbs: K,
    setThumbEditable: E,
    setFocusedThumb: ne,
    getValueLabel: s,
    isPointerOver: u,
    showThumbOnHoverOnly: c,
    thumbSize: f
  };
}
function cp(t, e, r) {
  return t[e] === r ? t : [...t.slice(0, e), r, ...t.slice(e + 1)];
}
function KM({
  index: t,
  slider: e,
  isDisabled: r,
  ariaLabel: n,
  inputRef: i,
  onBlur: l,
  fillColor: g = "primary"
}) {
  const a = Ln(i), { addGlobalListener: s, removeGlobalListener: c } = Mu(), {
    step: f,
    values: o,
    focusedThumb: h,
    labelId: u,
    thumbIds: d,
    isDisabled: m,
    getThumbPercent: p,
    getThumbMinValue: v,
    getThumbMaxValue: b,
    getThumbValueLabel: y,
    setThumbValue: w,
    updateDraggedThumbs: x,
    isThumbDragging: _,
    setThumbEditable: S,
    setFocusedThumb: k,
    isPointerOver: F,
    showThumbOnHoverOnly: L,
    thumbSize: j = "w-18 h-18"
  } = e, G = _(t), te = o[t];
  S(t, !r);
  const U = r || m, K = Me(() => {
    a.current && a.current.focus({ preventScroll: !0 });
  }, [a]), re = h === t;
  ke(() => {
    re && K();
  }, [re, K]);
  const ne = ge(void 0), se = (P) => {
    P.pointerId === ne.current && (K(), x(t, !1), c(window, "pointerup", se, !1));
  }, T = ce(
    "outline-none rounded-full top-1/2 -translate-y-1/2 -translate-x-1/2 absolute inset-0 transition-button duration-200",
    j,
    !U && "shadow-md",
    JM({ fillColor: g, isDisabled: U, isDragging: G }),
    // show thumb on hover and while dragging, otherwise "blur" event will fire on thumb and dragging will stop
    !L || L && G || F ? "visible" : "invisible"
  );
  return /* @__PURE__ */ C(
    "div",
    {
      role: "presentation",
      className: T,
      style: {
        left: `${Math.max(p(t) * 100, 0)}%`
      },
      onPointerDown: (P) => {
        P.button !== 0 || P.altKey || P.ctrlKey || P.metaKey || (K(), ne.current = P.pointerId, x(t, !0), s(window, "pointerup", se, !1));
      },
      children: /* @__PURE__ */ C(
        "input",
        {
          id: d[t],
          onKeyDown: wt(() => {
            x(t, !0);
          }),
          onKeyUp: wt(() => {
            x(t, !1);
          }),
          ref: a,
          tabIndex: U ? void 0 : 0,
          min: v(t),
          max: b(t),
          step: f,
          value: te,
          disabled: U,
          "aria-label": n,
          "aria-labelledby": u,
          "aria-orientation": "horizontal",
          "aria-valuetext": y(t),
          onFocus: () => {
            k(t);
          },
          onBlur: (P) => {
            k(void 0), x(t, !1), l == null || l(P);
          },
          onChange: (P) => {
            w(t, parseFloat(P.target.value));
          },
          type: "range",
          className: "sr-only"
        }
      )
    }
  );
}
function JM({
  isDisabled: t,
  isDragging: e,
  fillColor: r
}) {
  return t ? "bg-slider-disabled cursor-default" : r && r !== "primary" ? r : ce(
    "hover:bg-primary-dark",
    e ? "bg-primary-dark" : "bg-primary"
  );
}
function Nn({ inputRef: t, onBlur: e, ...r }) {
  const { onChange: n, onChangeEnd: i, value: l, defaultValue: g, ...a } = r, s = {
    ...a,
    // Normalize `value: number[]` to `value: number`
    value: l != null ? [l] : void 0,
    defaultValue: g != null ? [g] : void 0,
    onChange: (f) => {
      n == null || n(f[0]);
    },
    onChangeEnd: (f) => {
      i == null || i(f[0]);
    }
  }, c = ry(s);
  return /* @__PURE__ */ C(XM, { ...s, slider: c, children: /* @__PURE__ */ C(
    KM,
    {
      fillColor: r.fillColor,
      index: 0,
      slider: c,
      inputRef: t,
      onBlur: e
    }
  ) });
}
const ny = he.forwardRef((t, e) => {
  let {
    value: r = 0,
    minValue: n = 0,
    maxValue: i = 100,
    size: l = "md",
    isIndeterminate: g = !1,
    className: a,
    position: s = "relative",
    trackColor: c,
    fillColor: f = "border-primary",
    ...o
  } = t;
  r = ms(r, n, i);
  const h = ZM(l), u = (r - n) / (i - n), d = ty({ style: "percent" });
  let m = "";
  !g && !m && (m = d.format(u));
  const p = {}, v = {};
  if (!g) {
    const b = (r - n) / (i - n) * 100;
    let y;
    b > 0 && b <= 50 ? (y = -180 + b / 50 * 180, p.transform = `rotate(${y}deg)`, v.transform = "rotate(-180deg)") : b > 50 && (y = -180 + (b - 50) / 50 * 180, p.transform = "rotate(0deg)", v.transform = `rotate(${y}deg)`);
  }
  return /* @__PURE__ */ oe(
    "div",
    {
      ...o,
      "aria-valuenow": g ? void 0 : r,
      "aria-valuemin": n,
      "aria-valuemax": i,
      "aria-valuetext": g ? void 0 : m,
      role: "progressbar",
      ref: e,
      className: ce(
        "progress-circle",
        s,
        h,
        g && "indeterminate",
        a
      ),
      children: [
        /* @__PURE__ */ C("div", { className: ce(h, c, "rounded-full border-4") }),
        /* @__PURE__ */ oe(
          "div",
          {
            className: ce(
              "fills absolute left-0 top-0 h-full w-full",
              g && "progress-circle-fills-animate"
            ),
            children: [
              /* @__PURE__ */ C(
                up,
                {
                  circleSize: h,
                  subMaskStyle: p,
                  isIndeterminate: g,
                  className: "rotate-180",
                  fillColor: f,
                  subMaskClassName: ce(
                    g && "progress-circle-fill-submask-1-animate"
                  )
                }
              ),
              /* @__PURE__ */ C(
                up,
                {
                  circleSize: h,
                  subMaskStyle: v,
                  isIndeterminate: g,
                  fillColor: f,
                  subMaskClassName: ce(
                    g && "progress-circle-fill-submask-2-animate"
                  )
                }
              )
            ]
          }
        )
      ]
    }
  );
});
function up({
  subMaskStyle: t,
  subMaskClassName: e,
  className: r,
  circleSize: n,
  isIndeterminate: i,
  fillColor: l
}) {
  return /* @__PURE__ */ C(
    "div",
    {
      className: ce(
        "absolute h-full w-1/2 origin-[100%] overflow-hidden",
        r
      ),
      children: /* @__PURE__ */ C(
        "div",
        {
          className: ce(
            "h-full w-full origin-[100%] rotate-180 overflow-hidden",
            !i && "transition-transform duration-100",
            e
          ),
          style: t,
          children: /* @__PURE__ */ C("div", { className: ce(n, l, "rounded-full border-4") })
        }
      )
    }
  );
}
function ZM(t) {
  switch (t) {
    case "xs":
      return "w-20 h-20";
    case "sm":
      return "w-24 h-24";
    case "md":
      return "w-32 h-32";
    case "lg":
      return "w-42 h-42";
    default:
      return t;
  }
}
function QM({ isLoading: t, icon: e }) {
  const r = ge(null), { trans: n } = rn(), [i, l] = Fe(!1), {
    state: { isOpen: g, inputValue: a }
  } = Xu(), s = ge(a);
  return ke(() => {
    t && !i ? (r.current === null && (r.current = setTimeout(() => {
      l(!0);
    }, 500)), a !== s.current && (clearTimeout(r.current), r.current = setTimeout(() => {
      l(!0);
    }, 500))) : t || (l(!1), clearTimeout(r.current), r.current = null), s.current = a;
  }, [t, i, a]), i && (g || t) ? /* @__PURE__ */ C(
    ny,
    {
      "aria-label": n({ message: "Loading" }),
      size: "sm",
      isIndeterminate: !0
    }
  ) : e || /* @__PURE__ */ C(ph, {});
}
function e6(t, e) {
  const r = Ra(), {
    hideCaret: n,
    placeholder: i = /* @__PURE__ */ C(xe, { message: "Select an option..." }),
    selectedValue: l,
    onItemSelected: g,
    onOpenChange: a,
    onInputValueChange: s,
    onSelectionChange: c,
    selectionMode: f,
    minWidth: o = "min-w-128",
    children: h,
    searchPlaceholder: u,
    showEmptyMessage: d,
    showSearchField: m,
    defaultInputValue: p,
    inputValue: v,
    isLoading: b,
    isAsync: y,
    valueClassName: w,
    floatingWidth: x = r ? "auto" : "matchTrigger",
    ..._
  } = t, S = nv(
    {
      ...t,
      clearInputOnItemSelection: !0,
      showEmptyMessage: d || m,
      floatingWidth: x,
      selectionMode: "single",
      role: "listbox",
      virtualFocus: m
    },
    e
  ), {
    state: {
      selectedValues: k,
      isOpen: F,
      setIsOpen: L,
      activeIndex: j,
      setSelectedIndex: G,
      inputValue: te,
      setInputValue: U
    },
    collections: K,
    focusItem: re,
    listboxId: ne,
    reference: se,
    refs: T,
    listContent: P,
    onInputChange: D
  } = S, { fieldProps: M, inputProps: $ } = ib({
    ..._,
    focusRef: T.reference
  }), A = K.collection.get(k[0]), E = A ? /* @__PURE__ */ oe("span", { className: "flex items-center gap-10", children: [
    A.element.props.startIcon,
    /* @__PURE__ */ C(
      "span",
      {
        className: ce(
          "overflow-hidden overflow-ellipsis whitespace-nowrap",
          w
        ),
        children: A.element.props.children
      }
    )
  ] }) : /* @__PURE__ */ C("span", { className: "italic", children: i }), R = Bn({
    ...t,
    endAdornment: !0
  }), {
    handleTriggerKeyDown: N,
    handleListboxKeyboardNavigation: H,
    handleListboxSearchFieldKeydown: V
  } = qv(S), { findMatchingItem: Z } = Kv(), ee = (W) => {
    if (!F)
      return;
    const B = Z(W, P, j);
    B != null && re("increment", B);
  }, ue = (W) => {
    if (F)
      return;
    const B = Z(W, P, j);
    B != null && G(B);
  };
  return /* @__PURE__ */ C(
    Gv,
    {
      listbox: S,
      onKeyDownCapture: m ? void 0 : ee,
      onKeyDown: H,
      onClose: m ? () => U("") : void 0,
      isLoading: b,
      searchField: m && /* @__PURE__ */ C(
        Cr,
        {
          size: t.size === "xs" || t.size === "sm" ? "xs" : "sm",
          placeholder: u,
          startAdornment: /* @__PURE__ */ C(Jv, {}),
          className: "flex-shrink-0 px-8 pb-8 pt-4",
          autoFocus: !0,
          "aria-expanded": F ? "true" : "false",
          "aria-haspopup": "listbox",
          "aria-controls": F ? ne : void 0,
          "aria-autocomplete": "list",
          autoComplete: "off",
          autoCorrect: "off",
          spellCheck: "false",
          value: te,
          onChange: D,
          onKeyDown: (W) => {
            V(W);
          }
        }
      ),
      children: /* @__PURE__ */ C(
        nb,
        {
          fieldClassNames: R,
          ...M,
          endAdornment: !n && /* @__PURE__ */ C(QM, { isLoading: b }),
          children: /* @__PURE__ */ C(
            "button",
            {
              ...$,
              type: "button",
              "data-selected-value": A == null ? void 0 : A.value,
              "aria-expanded": F ? "true" : "false",
              "aria-haspopup": "listbox",
              "aria-controls": F ? ne : void 0,
              ref: se,
              onKeyDown: N,
              onKeyDownCapture: m ? void 0 : ue,
              disabled: _.disabled,
              onClick: () => {
                L(!F);
              },
              className: ce(
                R.input,
                !M.unstyled && o
              ),
              children: E
            }
          )
        }
      )
    }
  );
}
const gh = he.forwardRef(e6);
function t6() {
  const t = fe((g) => g.filter.selected);
  if (!t)
    return null;
  const e = I().filter.getByName(t).options, r = (g, a) => {
    var s;
    (s = I().filter) == null || s.applyValue(t, g, a), O().setDirty(!0);
  }, n = I().canvas.getMainImage().filters, i = I().filter.findFilterIndex(t, n), l = n == null ? void 0 : n[i];
  if (e) {
    const g = Object.entries(e).map(([a, s]) => {
      let c;
      const f = l ? l[a] : s.current;
      return s.type === "slider" ? c = /* @__PURE__ */ C(
        Nn,
        {
          label: /* @__PURE__ */ C("span", { className: "capitalize", children: /* @__PURE__ */ C(xe, { ...fl[a] }) }),
          minValue: s.min,
          maxValue: s.max,
          step: s.step,
          defaultValue: f,
          formatOptions: { style: "percent" },
          size: "sm",
          onChange: (o) => {
            r(a, o);
          }
        }
      ) : s.type === "colorPicker" ? c = /* @__PURE__ */ C(
        zn,
        {
          label: /* @__PURE__ */ C(xe, { ...fl[a] }),
          size: "sm",
          width: "w-full",
          value: f,
          onChange: (o) => {
            r(a, o);
          }
        }
      ) : s.type === "select" && (c = /* @__PURE__ */ C(
        gh,
        {
          selectionMode: "single",
          size: "sm",
          label: /* @__PURE__ */ C(xe, { ...fl[a] }),
          defaultValue: f,
          onSelectionChange: (o) => {
            r(a, o);
          },
          children: s.available.map((o) => /* @__PURE__ */ C(xa, { value: o.key, children: /* @__PURE__ */ C("span", { className: "capitalize", children: /* @__PURE__ */ C(xe, { message: o.key }) }) }, o.key))
        }
      )), /* @__PURE__ */ C("div", { className: "pb-10", children: c }, a);
    });
    return /* @__PURE__ */ C(hh, { children: /* @__PURE__ */ C("div", { className: "max-w-240 pt-10 mx-auto", children: g }) });
  }
  return null;
}
function r6() {
  const t = fe((n) => n.frame.active), e = (t == null ? void 0 : t.mode) === "basic", r = Me((n) => `${n}%`, []);
  return /* @__PURE__ */ C(hh, { className: "pb-18 pt-6", children: /* @__PURE__ */ oe("div", { className: "max-w-288 m-auto", children: [
    e && /* @__PURE__ */ C(
      zn,
      {
        className: "mb-20",
        width: "w-full",
        size: "sm",
        label: /* @__PURE__ */ C(xe, { message: "Color" }),
        value: I().frame.builder.defaultColor,
        onChange: (n) => {
          I().frame.active.changeColor(n);
        }
      }
    ),
    /* @__PURE__ */ C(
      Nn,
      {
        size: "sm",
        label: /* @__PURE__ */ C(xe, { message: "Size" }),
        step: 1,
        minValue: I().frame.active.getMinSize(),
        maxValue: I().frame.active.getMaxSize(),
        defaultValue: I().frame.active.currentSizeInPercent,
        getValueLabel: r,
        onChange: (n) => {
          I().frame.resize(n);
        }
      }
    )
  ] }) });
}
const js = he.createContext(null);
function n6() {
  const { tabsRef: t, selectedTab: e } = Ve(js), [r, n] = Fe({
    width: void 0,
    transform: void 0,
    className: void 0
  });
  return Ot(() => {
    if (e != null && t.current) {
      const i = t.current[e];
      if (!i)
        return;
      n((l) => ({
        width: `${i.offsetWidth}px`,
        transform: `translateX(${i.offsetLeft}px)`,
        // disable initial transition for tabline
        className: l.width === void 0 ? "" : "transition-all"
      }));
    }
  }, [n, e, t]), /* @__PURE__ */ C(
    "div",
    {
      className: ce(
        "absolute bottom-0 left-0 h-2 bg-primary",
        r.className
      ),
      role: "presentation",
      style: { width: r.width, transform: r.transform }
    }
  );
}
function i6({ children: t, center: e, expand: r, className: n }) {
  const i = Wr.toArray(t);
  return /* @__PURE__ */ C(Ma, { children: /* @__PURE__ */ oe(
    "div",
    {
      className: ce(
        // hide scrollbar completely on mobile, show compact one on desktop
        "flex relative max-w-full overflow-auto border-b max-sm:hidden-scrollbar md:compact-scrollbar",
        n
      ),
      role: "tablist",
      "aria-orientation": "horizontal",
      children: [
        i.map((l, g) => xr(l) ? xt(l, {
          index: g,
          className: ce(
            l.props.className,
            r && "flex-auto",
            e && g === 0 && "ml-auto",
            e && g === i.length - 1 && "mr-auto"
          )
        }) : null),
        /* @__PURE__ */ C(n6, {})
      ]
    }
  ) });
}
function s6(t) {
  const {
    size: e = "md",
    children: r,
    className: n,
    isLazy: i,
    overflow: l = "overflow-hidden"
  } = t, g = ge([]), a = qt(), [s, c] = Gr(
    t.selectedTab,
    t.defaultSelectedTab || 0,
    t.onTabChange
  ), f = Ye(() => ({
    selectedTab: s,
    setSelectedTab: c,
    tabsRef: g,
    size: e,
    isLazy: i,
    id: a
  }), [s, a, i, c, e]);
  return /* @__PURE__ */ C(js.Provider, { value: f, children: /* @__PURE__ */ C("div", { className: ce(n, l, "max-w-full"), children: r }) });
}
const o6 = we(
  /* @__PURE__ */ C("path", { d: "M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z" }),
  "FormatUnderlinedOutlined"
), a6 = we(
  /* @__PURE__ */ C("path", { d: "M10 19h4v-3h-4v3zM5 4v3h5v3h4V7h5V4H5zM3 14h18v-2H3v2z" }),
  "FormatStrikethroughOutlined"
), l6 = we(
  /* @__PURE__ */ C("path", { d: "M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z" }),
  "FormatItalicOutlined"
), c6 = we(
  /* @__PURE__ */ C("path", { d: "M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z" }),
  "FormatAlignRightOutlined"
), u6 = we(
  /* @__PURE__ */ C("path", { d: "M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z" }),
  "FormatAlignLeftOutlined"
), h6 = we(
  /* @__PURE__ */ C("path", { d: "M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z" }),
  "FormatAlignCenterOutlined"
);
function f6() {
  return /* @__PURE__ */ oe("div", { className: "flex gap-20 justify-center", children: [
    /* @__PURE__ */ C(d6, {}),
    /* @__PURE__ */ C(p6, {}),
    /* @__PURE__ */ C(g6, {})
  ] });
}
function d6() {
  const t = fe((r) => r.objects.active.editableProps.fontSize) ?? 40, { trans: e } = rn();
  return /* @__PURE__ */ C(
    Cr,
    {
      type: "number",
      size: "xs",
      "aria-label": e({ message: "Font Size" }),
      min: 1,
      max: 300,
      className: "w-64 flex-shrink-0",
      value: t,
      onChange: (r) => {
        I().objects.setValues({
          fontSize: r.target.valueAsNumber
        }), O().setDirty(!0);
      }
    }
  );
}
function p6() {
  const t = fe((l) => l.objects.active.editableProps.fontStyle), e = fe((l) => l.objects.active.editableProps.underline), r = fe((l) => l.objects.active.editableProps.linethrough), [n, i] = Fe([
    t,
    e && "underline",
    r && "linethrough"
  ]);
  return /* @__PURE__ */ oe(
    Ia,
    {
      size: "xs",
      variant: "outline",
      radius: "rounded",
      value: n,
      multiple: !0,
      onChange: (l) => {
        i(l), I().objects.setValues({
          underline: l.includes("underline"),
          linethrough: l.includes("linethrough"),
          fontStyle: l.includes("italic") ? "italic" : ""
        }), O().setDirty(!0);
      },
      children: [
        /* @__PURE__ */ C(ze, { value: "underline", children: /* @__PURE__ */ C(o6, {}) }),
        /* @__PURE__ */ C(ze, { value: "linethrough", children: /* @__PURE__ */ C(a6, {}) }),
        /* @__PURE__ */ C(ze, { value: "italic", children: /* @__PURE__ */ C(l6, {}) })
      ]
    }
  );
}
function g6() {
  const t = fe((e) => e.objects.active.editableProps.textAlign);
  return /* @__PURE__ */ oe(
    Ia,
    {
      size: "xs",
      variant: "outline",
      radius: "rounded",
      value: t,
      onChange: (e) => {
        I().objects.setValues({
          textAlign: e
        }), O().setDirty(!0);
      },
      children: [
        /* @__PURE__ */ C(ze, { value: "left", children: /* @__PURE__ */ C(u6, {}) }),
        /* @__PURE__ */ C(ze, { value: "center", children: /* @__PURE__ */ C(h6, {}) }),
        /* @__PURE__ */ C(ze, { value: "right", children: /* @__PURE__ */ C(c6, {}) })
      ]
    }
  );
}
function m6({ children: t, className: e }) {
  const { selectedTab: r, isLazy: n } = Ve(js), i = Wr.toArray(t).filter((g) => !!g);
  let l;
  if (n) {
    const g = i[r];
    l = xr(g) ? xt(i[r], {
      index: r
    }) : null;
  } else
    l = i.map((g, a) => {
      if (xr(g)) {
        const s = a === r;
        return xt(g, {
          index: a,
          "aria-hidden": !s,
          className: s ? g.props.className : ce(g.props.className, "hidden")
        });
      }
      return null;
    });
  return /* @__PURE__ */ C("div", { className: e, children: l });
}
function on({
  className: t,
  children: e,
  index: r,
  ...n
}) {
  const { id: i } = Ve(js), [l, g] = Fe(0), a = ge(null);
  return Ot(() => {
    if (a != null && a.current) {
      const s = () => {
        const f = pr(a.current, { tabbable: !0 });
        g(f.nextNode() ? void 0 : 0);
      };
      s();
      const c = new MutationObserver(s);
      return c.observe(a.current, {
        subtree: !0,
        childList: !0,
        attributes: !0,
        attributeFilter: ["tabIndex", "disabled"]
      }), () => {
        c.disconnect();
      };
    }
  }, [a]), /* @__PURE__ */ C(
    "div",
    {
      tabIndex: l,
      ref: a,
      id: `${i}-${r}-tabpanel`,
      "aria-labelledby": `${i}-${r}-tab`,
      className: ce(t, "focus-visible:outline-primary-light"),
      role: "tabpanel",
      ...n,
      children: e
    }
  );
}
const hp = [
  {
    type: "linear",
    coords: {
      x1: -80,
      y1: 0,
      x2: 80,
      y2: 0
    },
    colorStops: [
      { color: "#ffe47b", offset: 0 },
      { color: "rgb(111,154,211)", offset: 1 }
    ]
  },
  {
    type: "linear",
    coords: {
      x1: 0,
      y1: -120,
      x2: 0,
      y2: 120
    },
    colorStops: [
      { color: "#ff4040", offset: 0 },
      { color: "#e6399b", offset: 1 }
    ]
  },
  {
    type: "linear",
    coords: {
      x1: -90,
      y1: -90,
      x2: 90,
      y2: 90
    },
    colorStops: [
      { offset: 0, color: "rgb(166,111,213)" },
      { offset: 0.5, color: "rgba(106, 72, 215, 0.5)" },
      { offset: 1, color: "#200772" }
    ]
  },
  {
    type: "radial",
    coords: {
      r1: 100,
      r2: 10,
      x1: 0,
      y1: 0,
      x2: 0,
      y2: 0
    },
    colorStops: [
      { offset: 0, color: "#FF4F4F" },
      { offset: 1, color: "rgb(255, 239, 64)" }
    ]
  },
  {
    type: "radial",
    coords: {
      r1: 100,
      r2: 10,
      x1: 0,
      y1: 0,
      x2: 20,
      y2: 20
    },
    colorStops: [
      { offset: 0, color: "#ffe47b" },
      { offset: 0.5, color: "rgb(111,154,211)" },
      { offset: 1, color: "rgb(166,111,213)" }
    ]
  },
  {
    type: "radial",
    coords: {
      r1: 50,
      r2: 80,
      x1: 45,
      y1: 45,
      x2: 52,
      y2: 50
    },
    colorStops: [
      { offset: 0, color: "rgb(155, 237, 0)" },
      { offset: 1, color: "rgba(0, 164, 128,0.4)" }
    ]
  },
  {
    type: "linear",
    coords: {
      x1: -90,
      y1: -90,
      x2: 90,
      y2: 90
    },
    colorStops: [
      { offset: 0, color: "#9ecb2d" },
      { offset: 0.5, color: "#72aa00" },
      { offset: 1, color: "#bfd255" }
    ]
  },
  {
    type: "radial",
    coords: {
      r1: 100,
      r2: 50,
      x1: 30,
      y1: 0,
      x2: 0,
      y2: 0
    },
    colorStops: [
      { offset: 0, color: "#aebcbf" },
      { offset: 1, color: "#0a0809" }
    ]
  },
  {
    type: "linear",
    coords: {
      x1: -80,
      y1: 0,
      x2: 80,
      y2: 0
    },
    colorStops: [
      { offset: 0, color: "#ffffff" },
      { offset: 1, color: "#f6f6f6" }
    ]
  },
  {
    type: "linear",
    coords: {
      x1: 0,
      y1: -120,
      x2: 0,
      y2: 120
    },
    colorStops: [
      { offset: 0, color: "#fefcea" },
      { offset: 1, color: "#f1da36" }
    ]
  },
  {
    type: "linear",
    coords: {
      x1: -90,
      y1: -90,
      x2: 90,
      y2: 90
    },
    colorStops: [
      { offset: 0, color: "rgb(166,111,213)" },
      { offset: 0.5, color: "rgba(106, 72, 215, 0.5)" },
      { offset: 1, color: "#ff1a00" }
    ]
  },
  {
    type: "linear",
    coords: {
      x1: 0,
      y1: -120,
      x2: 0,
      y2: 120
    },
    colorStops: [
      { offset: 0, color: "#b7deed" },
      { offset: 1, color: "#21b4e2" }
    ]
  },
  {
    type: "linear",
    coords: {
      x1: -80,
      y1: 100,
      x2: 80,
      y2: -100
    },
    colorStops: [
      { offset: 0, color: "#ffe47b" },
      { offset: 1, color: "rgb(111,154,211)" }
    ]
  }
], v6 = we(
  /* @__PURE__ */ C("path", { d: "M19.51 3.08 3.08 19.51c.09.34.27.65.51.9.25.24.56.42.9.51L20.93 4.49c-.19-.69-.73-1.23-1.42-1.41zM11.88 3 3 11.88v2.83L14.71 3h-2.83zM5 3c-1.1 0-2 .9-2 2v2l4-4H5zm14 18c.55 0 1.05-.22 1.41-.59.37-.36.59-.86.59-1.41v-2l-4 4h2zm-9.71 0h2.83L21 12.12V9.29L9.29 21z" }),
  "TextureOutlined"
), b6 = we(
  /* @__PURE__ */ C("path", { d: "M11 9h2v2h-2V9zm-2 2h2v2H9v-2zm4 0h2v2h-2v-2zm2-2h2v2h-2V9zM7 9h2v2H7V9zm12-6H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 18H7v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2zm2-7h-2v2h2v2h-2v-2h-2v2h-2v-2h-2v2H9v-2H7v2H5v-2h2v-2H5V5h14v6z" }),
  "GradientOutlined"
), y6 = we(
  /* @__PURE__ */ C("path", { d: "M18 20H4V6h9V4H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-9h-2v9zm-7.79-3.17-1.96-2.36L5.5 18h11l-3.54-4.71zM20 4V1h-2v3h-3c.01.01 0 2 0 2h3v2.99c.01.01 2 0 2 0V6h3V4h-3z" }),
  "AddPhotoAlternateOutlined"
);
function fp({ property: t }) {
  const { trans: e } = rn(), r = fe((n) => n.objects.active.editableProps[t]);
  return /* @__PURE__ */ oe("div", { className: "flex items-center justify-center gap-14", children: [
    /* @__PURE__ */ C(
      zn,
      {
        className: "flex-shrink-0",
        size: "xs",
        "aria-label": e({ message: "Color" }),
        value: typeof r == "string" ? r : cu.fill,
        onChange: (n) => {
          I().objects.setValues({ [t]: n }), O().setDirty(!0);
        }
      }
    ),
    /* @__PURE__ */ C(dp, { type: "gradient", property: t }),
    /* @__PURE__ */ C(dp, { type: "texture", property: t })
  ] });
}
function dp({ type: t, property: e }) {
  const r = t === "texture" ? /* @__PURE__ */ C(v6, {}) : /* @__PURE__ */ C(b6, {});
  return /* @__PURE__ */ C(gr, { children: /* @__PURE__ */ oe(Va, { type: "popover", children: [
    /* @__PURE__ */ C(
      pt,
      {
        className: "flex-shrink-0",
        id: `${t}-panel-trigger`,
        variant: "outline",
        size: "xs",
        startIcon: r,
        endIcon: /* @__PURE__ */ C(ph, {}),
        children: /* @__PURE__ */ C("span", { className: "capitalize", children: t === "gradient" ? /* @__PURE__ */ C(xe, { message: "Gradient" }) : /* @__PURE__ */ C(xe, { message: "Texture" }) })
      }
    ),
    /* @__PURE__ */ C($a, { size: "auto", children: /* @__PURE__ */ C("div", { className: "grid gap-8 grid-cols-5-min-content p-10 bg-paper rounded shadow-md", children: /* @__PURE__ */ C(w6, { property: e, type: t }) }) })
  ] }) });
}
function w6({ type: t, property: e }) {
  const { close: r } = ey(), n = Array.from(
    Array(t === "gradient" ? hp.length : 28).keys()
  ), i = "w-56 h-56 bg border shadow-sm hover:scale-110", l = n.map((g) => {
    const a = Dt(`images/${t}s/${g}.png`);
    return /* @__PURE__ */ C(
      Er,
      {
        radius: "rounded",
        className: i,
        style: { backgroundImage: `url(${a})` },
        "aria-label": `Select ${t} #${g}`,
        onClick: async () => {
          r();
          const s = t === "gradient" ? new Ce.fabric.Gradient(hp[g]) : await iy(a);
          I().objects.setValues({ [e]: s }), O().setDirty(!0);
        }
      },
      g
    );
  });
  return t === "texture" && l.unshift(
    /* @__PURE__ */ C(
      x6,
      {
        property: e,
        className: i
      },
      "upload-btn"
    )
  ), /* @__PURE__ */ C(gr, { children: l });
}
function x6({ className: t, property: e }) {
  const { close: r } = ey();
  return /* @__PURE__ */ C(
    Er,
    {
      radius: "rounded",
      className: t,
      "aria-label": "Upload an image",
      onClick: async () => {
        const n = await I().import.openUploadWindow();
        if (r(), n) {
          const i = await iy(await n.data);
          I().objects.setValues({ [e]: i });
        }
      },
      children: /* @__PURE__ */ C(y6, { className: "icon-md" })
    }
  );
}
function iy(t) {
  return new Promise((e) => {
    Ce.fabric.util.loadImage(t, (r) => {
      const n = new Ce.fabric.Pattern({
        source: r,
        repeat: "repeat"
      });
      e(n);
    });
  });
}
function C6() {
  const t = fe((e) => e.objects.active.editableProps.opacity);
  return /* @__PURE__ */ C(
    Nn,
    {
      className: "max-w-240 w-full mx-auto",
      "aria-label": "Opacity",
      value: t,
      minValue: 0.1,
      step: 0.1,
      maxValue: 1,
      onChange: (e) => {
        I().objects.setValues({ opacity: e }), O().setDirty(!0);
      }
    }
  );
}
function _6() {
  const { trans: t } = rn(), e = fe((n) => n.objects.active.editableProps.stroke), r = fe(
    (n) => n.objects.active.editableProps.strokeWidth
  );
  return /* @__PURE__ */ oe("div", { className: "flex items-center gap-40", children: [
    /* @__PURE__ */ C(
      zn,
      {
        className: "ml-auto flex-shrink-0",
        size: "xs",
        value: e,
        "aria-label": t({ message: "Outline Color" }),
        onChange: (n) => {
          I().objects.setValues({ stroke: n }), O().setDirty(!0);
        }
      }
    ),
    /* @__PURE__ */ C(
      Nn,
      {
        "aria-label": "Outline Width",
        className: "max-w-240 mr-auto flex-shrink-0",
        value: r,
        onChange: (n) => {
          I().objects.setValues({ strokeWidth: n }), O().setDirty(!0);
        }
      }
    )
  ] });
}
const S6 = we(
  /* @__PURE__ */ C("path", { d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4.86 8.86-3 3.87L9 13.14 6 17h12l-3.86-5.14z" }),
  "ImageOutlined"
);
function T6() {
  return /* @__PURE__ */ C("div", { className: "flex justify-center", children: /* @__PURE__ */ C(
    pt,
    {
      type: "button",
      variant: "outline",
      size: "xs",
      startIcon: /* @__PURE__ */ C(S6, {}),
      radius: "rounded-full",
      onClick: async () => {
        const t = await I().import.openUploadWindow();
        if (t) {
          const e = I().objects.getActive();
          if (e && "setSrc" in e) {
            const r = await t.data;
            e.setSrc(r, () => {
              N0({
                src: r
              }), I().canvas.render();
            });
          }
        }
      },
      children: /* @__PURE__ */ C(xe, { message: "Replace Image" })
    }
  ) });
}
const sy = {
  color: "rgba(0, 0, 0, 0.6)",
  blur: 3,
  offsetX: -1,
  offsetY: 0
};
function E6() {
  const { trans: t } = rn(), e = fe((r) => r.objects.active.editableProps.shadow) || sy;
  return /* @__PURE__ */ oe("div", { className: "flex items-center gap-40", children: [
    /* @__PURE__ */ C(
      zn,
      {
        className: "ml-auto flex-shrink-0",
        value: e.color,
        size: "xs",
        "aria-label": t({ message: "Shadow Color" }),
        onChange: (r) => {
          I().objects.setValues({ shadow: pp({ color: r }) }), O().setDirty(!0);
        }
      }
    ),
    /* @__PURE__ */ C(
      Nn,
      {
        "aria-label": "Shadow Blur",
        className: "max-w-240 mr-auto flex-shrink-0",
        defaultValue: e.blur,
        onChange: (r) => {
          I().objects.setValues({
            shadow: pp({ blur: r })
          }), O().setDirty(!0);
        }
      }
    )
  ] });
}
function pp(t) {
  var r;
  const e = (r = I().objects.getActive()) == null ? void 0 : r.shadow;
  return e ? (Object.entries(t).forEach(([n, i]) => {
    e[n] = i;
  }), e) : new Ce.fabric.Shadow({
    ...sy,
    ...t
  });
}
function an({
  index: t,
  className: e,
  isDisabled: r,
  children: n,
  padding: i,
  elementType: l = "button",
  to: g,
  relative: a,
  width: s = "min-w-min"
}) {
  const {
    selectedTab: c,
    setSelectedTab: f,
    tabsRef: o,
    size: h = "md",
    id: u
  } = Ve(js), d = t === c, m = hA(), p = i || (h === "sm" ? "px-12" : "px-18"), v = ce(
    "tracking-wide overflow-hidden capitalize text-sm flex items-center justify-center outline-none transition-colors",
    "focus-visible:ring focus-visible:ring-2 ring-inset rounded whitespace-nowrap cursor-pointer",
    s,
    k6({ isDisabled: r, isSelected: d }),
    e,
    h === "md" && `${p} h-48`,
    h === "sm" && `${p} h-32`,
    r && "pointer-events-none"
  ), b = (x) => {
    switch (x.key) {
      case "ArrowLeft":
        m == null || m.focusPrevious();
        break;
      case "ArrowRight":
        m == null || m.focusNext();
        break;
      case "Home":
        m == null || m.focusFirst();
        break;
      case "End":
        m == null || m.focusLast();
        break;
    }
  }, y = d ? 0 : -1;
  return /* @__PURE__ */ C(
    l,
    {
      disabled: r,
      id: `${u}-${t}-tab`,
      "aria-controls": `${u}-${t}-tabpanel`,
      type: "button",
      role: "tab",
      "aria-selected": d,
      tabIndex: r ? void 0 : y,
      onKeyDown: b,
      onClick: () => {
        f(t);
      },
      to: g,
      relative: a,
      className: v,
      ref: (x) => {
        o.current && x && (o.current[t] = x);
      },
      children: n
    }
  );
}
function k6({ isDisabled: t, isSelected: e }) {
  return t ? "text-disabled cursor-default" : e ? "text-primary" : "text-muted hover:text-main";
}
function oy() {
  const t = fe((e) => e.objects.active);
  return /* @__PURE__ */ oe(s6, { size: "sm", className: "pb-18 pt-6", children: [
    /* @__PURE__ */ oe(i6, { center: !0, children: [
      t.isText && /* @__PURE__ */ C(an, { children: /* @__PURE__ */ C(xe, { message: "Font" }) }),
      !t.isImage && /* @__PURE__ */ C(an, { children: /* @__PURE__ */ C(xe, { message: "Color" }) }),
      !t.isImage && /* @__PURE__ */ C(an, { children: /* @__PURE__ */ C(xe, { message: "Background" }) }),
      t.isImage && /* @__PURE__ */ C(an, { children: /* @__PURE__ */ C(xe, { message: "Image" }) }),
      /* @__PURE__ */ C(an, { children: /* @__PURE__ */ C(xe, { message: "Opacity" }) }),
      /* @__PURE__ */ C(an, { children: /* @__PURE__ */ C(xe, { message: "Outline" }) }),
      /* @__PURE__ */ C(an, { children: /* @__PURE__ */ C(xe, { message: "Shadow" }) })
    ] }),
    /* @__PURE__ */ oe(m6, { className: "pt-16 h-50", children: [
      t.isText && /* @__PURE__ */ C(on, { children: /* @__PURE__ */ C(f6, {}) }, "font"),
      !t.isImage && /* @__PURE__ */ C(on, { children: /* @__PURE__ */ C(fp, { property: "fill" }) }),
      !t.isImage && /* @__PURE__ */ C(on, { children: /* @__PURE__ */ C(fp, { property: "backgroundColor" }) }),
      t.isImage && /* @__PURE__ */ C(on, { children: /* @__PURE__ */ C(T6, {}) }),
      /* @__PURE__ */ C(on, { children: /* @__PURE__ */ C(C6, {}) }),
      /* @__PURE__ */ C(on, { children: /* @__PURE__ */ C(_6, {}) }),
      /* @__PURE__ */ C(on, { children: /* @__PURE__ */ C(E6, {}) })
    ] })
  ] });
}
function O6() {
  const e = !Ra() && /* @__PURE__ */ C(
    pt,
    {
      size: "sm",
      color: "primary",
      variant: "outline",
      onClick: () => {
        I().text.add(), O().setDirty(!0);
      },
      children: /* @__PURE__ */ C(xe, { message: "New Text" })
    }
  );
  return /* @__PURE__ */ C(hh, { actionBtn: e, children: /* @__PURE__ */ C(oy, {}) });
}
const A6 = we(
  /* @__PURE__ */ C("path", { d: "m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z" }),
  "ArrowDownwardOutlined"
), gp = 500, nr = {};
let ji = !1, lr = null, ln = null;
const mp = (t) => {
  var e;
  for (const r in nr)
    r !== t && ((e = nr[r]) == null || e.call(nr, !0), delete nr[r]);
}, D6 = st(
  ({
    children: t,
    label: e,
    placement: r = "top",
    offset: n = 10,
    variant: i = "neutral",
    delay: l = 1500,
    isDisabled: g,
    usePortal: a = !0,
    ...s
  }, c) => {
    const { x: f, y: o, reference: h, strategy: u, arrowRef: d, arrowStyle: m, refs: p } = Wu({
      placement: r,
      offset: n,
      ref: c,
      showArrow: !0
    }), [v, b] = Fe(!1), y = qt(), w = ge(), x = () => {
      clearTimeout(w.current), w.current = void 0, mp(y), nr[y] = _, ji = !0, b(!0), lr && (clearTimeout(lr), lr = null), ln && (clearTimeout(ln), ln = null);
    }, _ = Me(
      (L) => {
        L ? (clearTimeout(w.current), w.current = void 0, b(!1)) : w.current || (w.current = setTimeout(() => {
          w.current = void 0, b(!1);
        }, gp)), lr && (clearTimeout(lr), lr = null), ji && (ln && clearTimeout(ln), ln = setTimeout(() => {
          delete nr[y], ln = null, ji = !1;
        }, gp));
      },
      [y]
    ), S = () => {
      mp(y), nr[y] = _, !v && !lr && !ji ? lr = setTimeout(() => {
        lr = null, ji = !0, x();
      }, l) : v || x();
    }, k = (L) => {
      !L && l > 0 && !w.current ? S() : x();
    };
    ke(() => () => {
      clearTimeout(w.current), nr[y] && delete nr[y];
    }, [y]), ke(() => {
      const L = (j) => {
        j.key === "Escape" && _(!0);
      };
      if (v)
        return document.addEventListener("keydown", L, !0), () => {
          document.removeEventListener("keydown", L, !0);
        };
    }, [v, _]);
    const F = /* @__PURE__ */ C(Sr, { children: v && /* @__PURE__ */ oe(
      gt.div,
      {
        ...Pa,
        ref: p.setFloating,
        id: y,
        role: "tooltip",
        onPointerEnter: () => {
          k(!0);
        },
        onPointerLeave: () => {
          _();
        },
        className: ce(
          "z-tooltip my-4 max-w-240 break-words rounded px-8 py-4 text-xs text-white shadow",
          i === "positive" && "bg-positive",
          i === "danger" && "bg-danger",
          i === "neutral" && "bg-toast"
        ),
        style: {
          position: u,
          top: o ?? "",
          left: f ?? ""
        },
        children: [
          /* @__PURE__ */ C(
            "div",
            {
              ref: d,
              className: "absolute h-8 w-8 rotate-45 bg-inherit",
              style: m
            }
          ),
          e
        ]
      }
    ) });
    return /* @__PURE__ */ oe(gr, { children: [
      xt(
        t,
        // pass dom props down to child element, in case tooltip is wrapped in menu trigger
        Tr(
          {
            "aria-describedby": v ? y : void 0,
            ref: h,
            onPointerEnter: (L) => {
              L.pointerType === "mouse" && k();
            },
            onFocus: (L) => {
              L.target.matches(":focus-visible") && k(!0);
            },
            onPointerLeave: (L) => {
              L.pointerType === "mouse" && _();
            },
            onPointerDown: () => {
              _(!0);
            },
            onBlur: () => {
              _();
            },
            "aria-label": typeof e == "string" ? e : e.props.message
          },
          s
        )
      ),
      a ? En && qc(F, En) : F
    ] });
  }
);
function P6() {
  const t = fe((l) => l.activeToolOverlay), e = fe((l) => l.objects.active.id), r = M6(t, e), [n, i] = Fe(!0);
  return /* @__PURE__ */ oe("div", { className: "relative z-tool-overlay text-sm", children: [
    r && /* @__PURE__ */ C(
      "div",
      {
        className: ce(
          "absolute right-16 text-muted z-50 transition-all",
          !n && "rotate-180",
          n ? "-top-144" : "-top-40"
        ),
        children: /* @__PURE__ */ C(
          D6,
          {
            label: n ? /* @__PURE__ */ C(xe, { message: "Hide options" }) : /* @__PURE__ */ C(xe, { message: "Show options" }),
            children: /* @__PURE__ */ C(
              ze,
              {
                variant: "outline",
                radius: "rounded-lg",
                size: "xs",
                onClick: () => {
                  i(!n);
                },
                children: /* @__PURE__ */ C(A6, {})
              }
            )
          }
        )
      }
    ),
    /* @__PURE__ */ C(Sr, { children: r && n && /* @__PURE__ */ C(
      gt.div,
      {
        initial: { y: 0, opacity: 0 },
        animate: { y: "-100%", opacity: 1 },
        exit: { y: 0, opacity: 0 },
        transition: { type: "tween", duration: 0.15 },
        className: "absolute inset-x-0 gap-16 px-5vw bg bg-opacity-95 border-t",
        children: r
      },
      "tool-controls-overlay"
    ) })
  ] });
}
function M6(t, e) {
  switch (t) {
    case Nt.Filter:
      return /* @__PURE__ */ C(t6, {});
    case Nt.Frame:
      return /* @__PURE__ */ C(r6, {});
    case Nt.Text:
      return e && /* @__PURE__ */ C(O6, {});
    case Nt.ActiveObject:
      return e && /* @__PURE__ */ C(oy, {});
    default:
      return null;
  }
}
const Wc = we(
  /* @__PURE__ */ C("path", { d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3.59-13L12 10.59 8.41 7 7 8.41 10.59 12 7 15.59 8.41 17 12 13.41 15.59 17 17 15.59 13.41 12 17 8.41z" }),
  "CancelOutlined"
);
function F6({ filter: t }) {
  const e = fe((g) => g.filter.applied.includes(t)), r = I().filter.hasOptions(t), n = ce("block flex-shrink-0 rounded", {
    "text-primary border-primary": e
  }), i = eT[t], l = /* @__PURE__ */ oe(gr, { children: [
    /* @__PURE__ */ oe("div", { className: "relative", children: [
      /* @__PURE__ */ C(R6, { filter: t }),
      e && /* @__PURE__ */ C(I6, { filter: t, hasOptions: r })
    ] }),
    /* @__PURE__ */ C("div", { className: "mt-4 text-center text-xs capitalize", children: i ? /* @__PURE__ */ C(xe, { ...i }) : t })
  ] });
  return e && r ? /* @__PURE__ */ C("div", { className: n, children: l }) : /* @__PURE__ */ C(
    Er,
    {
      className: n,
      onClick: () => {
        e ? I().filter.remove(t) : I().filter.apply(t);
      },
      children: l
    }
  );
}
function R6({ filter: t }) {
  const e = fe((n) => n.filter.selected === t), r = ce("m-auto w-96 h-56 border rounded object-cover", {
    shadow: e
  });
  return /* @__PURE__ */ C(
    "img",
    {
      src: Dt(`images/filter/${t}.jpg`),
      className: r,
      alt: ""
    }
  );
}
function I6({ filter: t, hasOptions: e }) {
  return /* @__PURE__ */ oe("div", { className: "flex items-center justify-center bg-background/70 absolute inset-0 border-2 border-primary rounded", children: [
    e ? /* @__PURE__ */ C(
      ze,
      {
        color: "primary",
        size: "md",
        onClick: () => {
          I().filter.remove(t);
        },
        children: /* @__PURE__ */ C(Wc, {})
      }
    ) : /* @__PURE__ */ C(Wc, { className: "svg-icon icon-md" }),
    e && /* @__PURE__ */ C(L6, { filter: t, hasOptions: e })
  ] });
}
function L6({ filter: t, hasOptions: e }) {
  return /* @__PURE__ */ C(
    ze,
    {
      color: "primary",
      size: "md",
      onClick: () => {
        O().activeToolOverlay === Nt.Filter && O().filter.selected === t ? O().setActiveTool(O().activeTool, null) : O().filter.select(t, e);
      },
      children: /* @__PURE__ */ C(Kg, {})
    }
  );
}
const jn = st(
  ({ children: t, className: e, gap: r = "gap-10" }, n) => {
    const i = he.Children.map(t, (l, g) => he.isValidElement(l) ? he.cloneElement(l, {
      isFirst: g === 0,
      isLast: he.Children.count(t) === g + 1
    }) : l);
    return /* @__PURE__ */ C(
      "div",
      {
        ref: n,
        className: ce(
          "tiny-scrollbar pb-4 overflow-x-auto relative flex items-center",
          r,
          e
        ),
        children: i
      }
    );
  }
);
function yr({
  isFirst: t,
  isLast: e,
  children: r,
  className: n
}) {
  const i = ce(n, "flex-shrink-0", {
    "ml-auto": t,
    "mr-auto": e
  });
  return /* @__PURE__ */ C("div", { className: i, children: r });
}
function B6() {
  const t = fe((r) => {
    var n, i;
    return (i = (n = r.config.tools) == null ? void 0 : n.filter) == null ? void 0 : i.items;
  }) || [];
  ke(() => {
    I().filter.syncState();
  }, []);
  const e = t.map((r) => /* @__PURE__ */ C(yr, { children: /* @__PURE__ */ C(F6, { filter: r }) }, r));
  return /* @__PURE__ */ C(jn, { children: e });
}
const z6 = we(
  /* @__PURE__ */ C("path", { d: "M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z" }),
  "LockOutlined"
), N6 = we(
  /* @__PURE__ */ C("path", { d: "M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h2c0-1.66 1.34-3 3-3s3 1.34 3 3v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z" }),
  "LockOpenOutlined"
), j6 = we(
  /* @__PURE__ */ C("path", { d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z" }),
  "CheckBoxOutlineBlankOutlined"
), $6 = we(
  /* @__PURE__ */ C("path", { d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z" }),
  "CheckBox"
), vp = we(
  /* @__PURE__ */ C("path", { d: "M19,3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.1,3,19,3z M17,13H7v-2h10V13z" }),
  "CheckBox"
), V6 = st(
  (t, e) => {
    const {
      size: r = "md",
      children: n,
      className: i,
      icon: l,
      checkedIcon: g,
      disabled: a,
      isIndeterminate: s,
      errorMessage: c,
      invalid: f,
      orientation: o = "horizontal",
      onChange: h,
      autoFocus: u,
      required: d,
      value: m,
      name: p,
      inputTestId: v
    } = t, b = Bn({ ...t, label: n }), y = l || j6, w = g || (s ? vp : $6), x = Ln(e);
    lh({ autoFocus: u }, x), ke(() => {
      x.current && (x.current.indeterminate = s || !1);
    });
    const [_, S] = Gr(
      t.checked,
      t.defaultChecked || !1
    ), k = Me(
      (G) => {
        h == null || h(G), S(G.target.checked);
      },
      [h, S]
    ), F = ce(
      "select-none",
      i,
      f && "text-danger",
      !f && a && "text-disabled"
    );
    let L, j = f ? "text-danger" : null;
    return s ? (L = vp, j = j || "text-primary") : _ ? (L = w, j = j || "text-primary") : (L = y, j = j || "text-muted"), /* @__PURE__ */ oe("div", { children: [
      /* @__PURE__ */ C("label", { className: F, children: /* @__PURE__ */ oe(
        "div",
        {
          className: ce(
            "relative flex items-center",
            o === "vertical" && "flex-col flex-col-reverse"
          ),
          children: [
            /* @__PURE__ */ C(
              "input",
              {
                className: "absolute left-0 top-0 h-24 w-24 appearance-none overflow-hidden rounded outline-none ring-inset transition-shadow focus-visible:ring",
                type: "checkbox",
                "aria-checked": s ? "mixed" : _,
                "aria-invalid": f || void 0,
                onChange: k,
                ref: x,
                required: d,
                disabled: a,
                value: m,
                name: p,
                "data-testid": v
              }
            ),
            /* @__PURE__ */ C(
              L,
              {
                size: r,
                className: ce(
                  "pointer-events-none",
                  a ? "text-disabled" : j
                )
              }
            ),
            n && /* @__PURE__ */ C(
              "div",
              {
                className: ce(
                  "first-letter:capitalize",
                  b.size.font,
                  o === "vertical" ? "mb-6" : "ml-6"
                ),
                children: n
              }
            )
          ]
        }
      ) }),
      c && /* @__PURE__ */ C("div", { className: b.error, children: c })
    ] });
  }
);
function H6() {
  const { trans: t } = rn(), {
    minWidth: e = 50,
    minHeight: r = 50,
    maxHeight: n = 2400,
    maxWidth: i = 2400
  } = fe((o) => {
    var h;
    return (h = o.config.tools) == null ? void 0 : h.resize;
  }) || {}, l = fe((o) => o.original), g = fe((o) => o.resize.formValue);
  ke(() => {
    O().resize.setFormValue({ ...l });
  }, [l]), ke(() => {
    O().setDirty(!0);
  }, []);
  const a = (o) => {
    const h = { ...g, width: o };
    g.maintainAspect && (h.height = Lo(o, g.usePercentages)), O().resize.setFormValue(h);
  }, s = (o) => {
    const h = { ...g, height: o };
    o && g.maintainAspect && (h.width = vc(o, g.usePercentages)), O().resize.setFormValue(h);
  }, c = (o) => {
    const h = { ...g, maintainAspect: o };
    o && (h.height = Lo(h.width, h.usePercentages)), O().resize.setFormValue(h);
  };
  return /* @__PURE__ */ oe(
    "form",
    {
      className: "flex items-center justify-center gap-16 w-full",
      onSubmit: (o) => {
        o.preventDefault(), O().applyChanges();
      },
      children: [
        /* @__PURE__ */ C(
          Cr,
          {
            type: "number",
            min: e,
            max: i,
            size: "sm",
            className: "w-full max-w-112",
            label: /* @__PURE__ */ C(xe, { message: "Width" }),
            value: g.width,
            onChange: (o) => {
              a(o.target.valueAsNumber);
            }
          }
        ),
        /* @__PURE__ */ C("div", { className: "mt-24", children: /* @__PURE__ */ C(
          V6,
          {
            size: "md",
            checked: g.maintainAspect,
            onChange: (o) => {
              c(!g.maintainAspect);
            },
            "aria-label": t({ message: "Maintain aspect ratio" }),
            checkedIcon: z6,
            icon: N6
          }
        ) }),
        /* @__PURE__ */ C(
          Cr,
          {
            type: "number",
            min: r,
            max: n,
            size: "sm",
            className: "w-full max-w-112",
            label: /* @__PURE__ */ C(xe, { message: "Height" }),
            value: g.height,
            onChange: (o) => {
              s(o.target.valueAsNumber);
            }
          }
        ),
        /* @__PURE__ */ C("button", { type: "submit", className: "hidden", children: /* @__PURE__ */ C(xe, { message: "Resize" }) })
      ]
    }
  );
}
function U6() {
  const t = fe((i) => {
    var l, g;
    return (g = (l = i.config.tools) == null ? void 0 : l.crop) == null ? void 0 : g.presets;
  }) || [], e = fe((i) => i.crop.selectedAspectRatio), r = fe((i) => {
    var l, g;
    return (g = (l = i.config.tools) == null ? void 0 : l.crop) == null ? void 0 : g.allowCustomRatio;
  }) ?? !0, n = t.filter((i) => i.ratio || !i.ratio && r).map((i) => /* @__PURE__ */ C(yr, { children: /* @__PURE__ */ oe(
    Er,
    {
      onClick: () => I().crop.resetCropzone(i.ratio),
      className: "flex flex-col items-center justify-between cursor-pointer h-56",
      children: [
        /* @__PURE__ */ C(W6, { preset: i, selectedRatio: e }),
        /* @__PURE__ */ C(X6, { preset: i, selectedRatio: e })
      ]
    }
  ) }, i.ratio || i.name));
  return /* @__PURE__ */ C(jn, { gap: "gap-18", children: n });
}
function W6({ preset: t, selectedRatio: e }) {
  let r = 40, n = 30;
  if (t.ratio) {
    const l = Lu(t.ratio);
    ({ width: r, height: n } = Iu(l, r, n));
  }
  const i = ce("border-2", {
    "border-dotted": t.ratio === null,
    "border-primary": e === t.ratio
  });
  return /* @__PURE__ */ C(
    "div",
    {
      style: { width: `${r}px`, height: `${n}px` },
      className: i
    }
  );
}
function X6({ preset: t, selectedRatio: e }) {
  const r = ce("mt-4 text-center text-xs", {
    "text-primary": e === t.ratio
  });
  return /* @__PURE__ */ C("div", { className: r, children: t.name ? /* @__PURE__ */ C(xe, { message: t.name }) : t.ratio });
}
const bp = we(
  /* @__PURE__ */ C("path", { d: "M15 21h2v-2h-2v2zm4-12h2V7h-2v2zM3 5v14c0 1.1.9 2 2 2h4v-2H5V5h4V3H5c-1.1 0-2 .9-2 2zm16-2v2h2c0-1.1-.9-2-2-2zm-8 20h2V1h-2v22zm8-6h2v-2h-2v2zM15 5h2V3h-2v2zm4 8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2z" }),
  "FlipOutlined"
);
function Y6() {
  return /* @__PURE__ */ oe("div", { children: [
    /* @__PURE__ */ C(
      ze,
      {
        size: "sm",
        onClick: () => {
          I().transform.flip("vertical"), O().setDirty(!0);
        },
        children: /* @__PURE__ */ C(bp, {})
      }
    ),
    /* @__PURE__ */ C(
      ze,
      {
        size: "sm",
        onClick: () => {
          I().transform.flip("horizontal"), O().setDirty(!0);
        },
        children: /* @__PURE__ */ C(bp, { className: "rotate-90" })
      }
    )
  ] });
}
const G6 = we(
  /* @__PURE__ */ C("path", { d: "M7.11 8.53 5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47zM6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47zm1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03L7.1 18.32zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93z" }),
  "RotateLeftOutlined"
), q6 = we(
  /* @__PURE__ */ C("path", { d: "M15.55 5.55 11 1v3.07C7.06 4.56 4 7.92 4 12s3.05 7.44 7 7.93v-2.02c-2.84-.48-5-2.94-5-5.91s2.16-5.43 5-5.91V10l4.55-4.45zM19.93 11c-.17-1.39-.72-2.73-1.62-3.89l-1.42 1.42c.54.75.88 1.6 1.02 2.47h2.02zM13 17.9v2.02c1.39-.17 2.74-.71 3.9-1.61l-1.44-1.44c-.75.54-1.59.89-2.46 1.03zm3.89-2.42 1.42 1.41c.9-1.16 1.45-2.5 1.62-3.89h-2.02c-.14.87-.48 1.72-1.02 2.48z" }),
  "RotateRightOutlined"
);
function K6() {
  return /* @__PURE__ */ oe("div", { children: [
    /* @__PURE__ */ C(
      ze,
      {
        size: "sm",
        onClick: () => {
          I().transform.rotateLeft(), O().setDirty(!0);
        },
        children: /* @__PURE__ */ C(G6, {})
      }
    ),
    /* @__PURE__ */ C(
      ze,
      {
        size: "sm",
        onClick: () => {
          I().transform.rotateRight(), O().setDirty(!0);
        },
        children: /* @__PURE__ */ C(q6, {})
      }
    )
  ] });
}
function J6() {
  return /* @__PURE__ */ oe("div", { className: "flex items-center justify-center gap-16", children: [
    /* @__PURE__ */ C(Y6, {}),
    /* @__PURE__ */ C(Z6, {}),
    /* @__PURE__ */ C(K6, {})
  ] });
}
function Z6() {
  const t = ge(null), { domProps: e, groupId: r, thumbIds: n, trackRef: i, getThumbValueLabel: l } = ry(
    {
      minValue: -45,
      maxValue: 45,
      step: 1,
      defaultValue: [O().crop.straightenAngle],
      onChange: (g) => {
        const a = g[0];
        I().transform.straighten(a), O().crop.setTransformAngle(a), O().setDirty(!0), t.current.style.transform = `translateX(${a}px)`;
      }
    }
  );
  return /* @__PURE__ */ C(
    "div",
    {
      id: r,
      role: "group",
      className: "flex-auto flex-shrink-0 max-w-320 touch-none isolate",
      children: /* @__PURE__ */ oe("div", { ...e, ref: i, className: "h-36 relative", children: [
        /* @__PURE__ */ oe(
          "output",
          {
            htmlFor: n[0],
            "aria-live": "off",
            className: "absolute left-1/2 top-1/2 w-40 text-center bg -translate-x-1/2 -translate-y-1/2 z-10",
            children: [
              l(0),
              "°"
            ]
          }
        ),
        /* @__PURE__ */ C(Q6, { ref: t })
      ] })
    }
  );
}
const Q6 = he.forwardRef((t, e) => {
  const r = [...Array(80).keys()], n = r.map((i) => /* @__PURE__ */ C(
    "circle",
    {
      cx: 2 + i * 10,
      cy: "20",
      r: i % 5 ? 0.75 : 2
    },
    i
  ));
  return /* @__PURE__ */ C("div", { className: "relative h-full cursor-pointer overflow-hidden", children: /* @__PURE__ */ C(
    "svg",
    {
      ref: e,
      style: { width: r.length * 10 },
      className: "absolute -left-80 h-full fill-current",
      xmlns: "http://www.w3.org/2000/svg",
      "aria-hidden": "true",
      focusable: "false",
      children: n
    }
  ) });
});
function eF() {
  return ke(() => (O().setDirty(!0), I().frame.active.hide(), () => {
    I().frame.active.show();
  }), []), /* @__PURE__ */ oe("div", { className: "pb-16", children: [
    /* @__PURE__ */ C("div", { className: "mb-10", children: /* @__PURE__ */ C(J6, {}) }),
    /* @__PURE__ */ C(U6, {})
  ] });
}
const tF = we(
  /* @__PURE__ */ C("path", { d: "M 16 6 C 12.484375 6 9.273438 7.070313 6.90625 8.84375 C 4.539063 10.617188 3 13.15625 3 16 C 3 18.84375 4.539063 21.382813 6.90625 23.15625 C 9.273438 24.929688 12.484375 26 16 26 C 19.515625 26 22.726563 24.929688 25.09375 23.15625 C 27.460938 21.382813 29 18.84375 29 16 C 29 13.15625 27.460938 10.617188 25.09375 8.84375 C 22.726563 7.070313 19.515625 6 16 6 Z M 16 8 C 19.109375 8 21.898438 8.957031 23.875 10.4375 C 25.851563 11.917969 27 13.875 27 16 C 27 18.125 25.851563 20.082031 23.875 21.5625 C 21.898438 23.042969 19.109375 24 16 24 C 12.890625 24 10.101563 23.042969 8.125 21.5625 C 6.148438 20.082031 5 18.125 5 16 C 5 13.875 6.148438 11.917969 8.125 10.4375 C 10.101563 8.957031 12.890625 8 16 8 Z " })
), rF = we(
  /* @__PURE__ */ C("path", { d: "M 16 4 C 9.382813 4 4 9.382813 4 16 C 4 22.617188 9.382813 28 16 28 C 22.617188 28 28 22.617188 28 16 C 28 9.382813 22.617188 4 16 4 Z M 16 6 C 21.535156 6 26 10.464844 26 16 C 26 21.535156 21.535156 26 16 26 C 10.464844 26 6 21.535156 6 16 C 6 10.464844 10.464844 6 16 6 Z " })
), nF = we(
  /* @__PURE__ */ C("path", { d: "M 3 6 L 3 26 L 29 26 L 29 6 Z M 5 8 L 27 8 L 27 24 L 5 24 Z " })
), iF = we(
  /* @__PURE__ */ C("path", { d: "M 16 4.90625 L 15.125 6.40625 L 4.71875 24.5 L 3.875 26 L 28.125 26 L 27.28125 24.5 L 16.875 6.40625 Z M 16 8.9375 L 24.65625 24 L 7.34375 24 Z " })
);
function sF() {
  const e = (fe((r) => {
    var n, i;
    return (i = (n = r.config.tools) == null ? void 0 : n.shapes) == null ? void 0 : i.items;
  }) || []).map((r) => /* @__PURE__ */ C(yr, { children: /* @__PURE__ */ C(
    ze,
    {
      variant: "outline",
      radius: "rounded-2xl",
      size: "xl",
      onClick: () => {
        I().shape.addBasicShape(r.name), O().setDirty(!0);
      },
      children: /* @__PURE__ */ C(oF, { shape: r })
    }
  ) }, r.name));
  return /* @__PURE__ */ C(jn, { children: e });
}
function oF({ shape: t }) {
  var e;
  return t.type === "Path" ? /* @__PURE__ */ C(
    "svg",
    {
      className: "m-auto w-36 h-36",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 -100 512 700",
      children: /* @__PURE__ */ C(
        "path",
        {
          className: "fill-transparent stroke-current",
          d: (e = t.options) == null ? void 0 : e.path,
          strokeWidth: 25
        }
      )
    }
  ) : he.cloneElement(aF[t.name], { className: "w-30 h-30" });
}
const aF = {
  circle: /* @__PURE__ */ C(rF, { viewBox: "0 0 32 32" }),
  square: /* @__PURE__ */ C(nF, { viewBox: "0 0 32 32" }),
  triangle: /* @__PURE__ */ C(iF, { viewBox: "0 0 32 32" }),
  ellipse: /* @__PURE__ */ C(tF, { viewBox: "0 0 32 32" })
};
function $i(t, e, r) {
  let n = r.initialDeps ?? [], i;
  return () => {
    var l, g, a, s;
    let c;
    r.key && ((l = r.debug) != null && l.call(r)) && (c = Date.now());
    const f = t();
    if (!(f.length !== n.length || f.some((u, d) => n[d] !== u)))
      return i;
    n = f;
    let h;
    if (r.key && ((g = r.debug) != null && g.call(r)) && (h = Date.now()), i = e(...f), r.key && ((a = r.debug) != null && a.call(r))) {
      const u = Math.round((Date.now() - c) * 100) / 100, d = Math.round((Date.now() - h) * 100) / 100, m = d / 16, p = (v, b) => {
        for (v = String(v); v.length < b; )
          v = " " + v;
        return v;
      };
      console.info(
        `%c⏱ ${p(d, 5)} /${p(u, 5)} ms`,
        `
            font-size: .6rem;
            font-weight: bold;
            color: hsl(${Math.max(
          0,
          Math.min(120 - 120 * m, 120)
        )}deg 100% 31%);`,
        r == null ? void 0 : r.key
      );
    }
    return (s = r == null ? void 0 : r.onChange) == null || s.call(r, i), i;
  };
}
function kl(t, e) {
  if (t === void 0)
    throw new Error(`Unexpected undefined${e ? `: ${e}` : ""}`);
  return t;
}
const lF = (t, e) => Math.abs(t - e) < 1, cF = (t, e, r) => {
  let n;
  return function(...i) {
    t.clearTimeout(n), n = t.setTimeout(() => e.apply(this, i), r);
  };
}, uF = (t) => t, hF = (t) => {
  const e = Math.max(t.startIndex - t.overscan, 0), r = Math.min(t.endIndex + t.overscan, t.count - 1), n = [];
  for (let i = e; i <= r; i++)
    n.push(i);
  return n;
}, fF = (t, e) => {
  const r = t.scrollElement;
  if (!r)
    return;
  const n = t.targetWindow;
  if (!n)
    return;
  const i = (g) => {
    const { width: a, height: s } = g;
    e({ width: Math.round(a), height: Math.round(s) });
  };
  if (i(r.getBoundingClientRect()), !n.ResizeObserver)
    return () => {
    };
  const l = new n.ResizeObserver((g) => {
    const a = g[0];
    if (a != null && a.borderBoxSize) {
      const s = a.borderBoxSize[0];
      if (s) {
        i({ width: s.inlineSize, height: s.blockSize });
        return;
      }
    }
    i(r.getBoundingClientRect());
  });
  return l.observe(r, { box: "border-box" }), () => {
    l.unobserve(r);
  };
}, yp = {
  passive: !0
}, dF = typeof window > "u" ? !0 : "onscrollend" in window, pF = (t, e) => {
  const r = t.scrollElement;
  if (!r)
    return;
  const n = t.targetWindow;
  if (!n)
    return;
  let i = 0;
  const l = dF ? () => {
  } : cF(
    n,
    () => {
      e(i, !1);
    },
    t.options.isScrollingResetDelay
  ), g = (c) => () => {
    i = r[t.options.horizontal ? "scrollLeft" : "scrollTop"], l(), e(i, c);
  }, a = g(!0), s = g(!1);
  return s(), r.addEventListener("scroll", a, yp), r.addEventListener("scrollend", s, yp), () => {
    r.removeEventListener("scroll", a), r.removeEventListener("scrollend", s);
  };
}, gF = (t, e, r) => {
  if (e != null && e.borderBoxSize) {
    const n = e.borderBoxSize[0];
    if (n)
      return Math.round(
        n[r.options.horizontal ? "inlineSize" : "blockSize"]
      );
  }
  return Math.round(
    t.getBoundingClientRect()[r.options.horizontal ? "width" : "height"]
  );
}, mF = (t, {
  adjustments: e = 0,
  behavior: r
}, n) => {
  var i, l;
  const g = t + e;
  (l = (i = n.scrollElement) == null ? void 0 : i.scrollTo) == null || l.call(i, {
    [n.options.horizontal ? "left" : "top"]: g,
    behavior: r
  });
};
class vF {
  constructor(e) {
    this.unsubs = [], this.scrollElement = null, this.targetWindow = null, this.isScrolling = !1, this.scrollToIndexTimeoutId = null, this.measurementsCache = [], this.itemSizeCache = /* @__PURE__ */ new Map(), this.pendingMeasuredCacheIndexes = [], this.scrollRect = null, this.scrollOffset = null, this.scrollDirection = null, this.scrollAdjustments = 0, this.elementsCache = /* @__PURE__ */ new Map(), this.observer = /* @__PURE__ */ (() => {
      let r = null;
      const n = () => r || (!this.targetWindow || !this.targetWindow.ResizeObserver ? null : r = new this.targetWindow.ResizeObserver((i) => {
        i.forEach((l) => {
          this._measureElement(l.target, l);
        });
      }));
      return {
        disconnect: () => {
          var i;
          return (i = n()) == null ? void 0 : i.disconnect();
        },
        observe: (i) => {
          var l;
          return (l = n()) == null ? void 0 : l.observe(i, { box: "border-box" });
        },
        unobserve: (i) => {
          var l;
          return (l = n()) == null ? void 0 : l.unobserve(i);
        }
      };
    })(), this.range = null, this.setOptions = (r) => {
      Object.entries(r).forEach(([n, i]) => {
        typeof i > "u" && delete r[n];
      }), this.options = {
        debug: !1,
        initialOffset: 0,
        overscan: 1,
        paddingStart: 0,
        paddingEnd: 0,
        scrollPaddingStart: 0,
        scrollPaddingEnd: 0,
        horizontal: !1,
        getItemKey: uF,
        rangeExtractor: hF,
        onChange: () => {
        },
        measureElement: gF,
        initialRect: { width: 0, height: 0 },
        scrollMargin: 0,
        gap: 0,
        indexAttribute: "data-index",
        initialMeasurementsCache: [],
        lanes: 1,
        isScrollingResetDelay: 150,
        enabled: !0,
        ...r
      };
    }, this.notify = (r, n) => {
      var i, l;
      const { startIndex: g, endIndex: a } = this.range ?? {
        startIndex: void 0,
        endIndex: void 0
      }, s = this.calculateRange();
      (r || g !== (s == null ? void 0 : s.startIndex) || a !== (s == null ? void 0 : s.endIndex)) && ((l = (i = this.options).onChange) == null || l.call(i, this, n));
    }, this.cleanup = () => {
      this.unsubs.filter(Boolean).forEach((r) => r()), this.unsubs = [], this.scrollElement = null, this.targetWindow = null, this.observer.disconnect(), this.elementsCache.clear();
    }, this._didMount = () => () => {
      this.cleanup();
    }, this._willUpdate = () => {
      var r;
      const n = this.options.enabled ? this.options.getScrollElement() : null;
      if (this.scrollElement !== n) {
        if (this.cleanup(), !n) {
          this.notify(!1, !1);
          return;
        }
        this.scrollElement = n, this.scrollElement && "ownerDocument" in this.scrollElement ? this.targetWindow = this.scrollElement.ownerDocument.defaultView : this.targetWindow = ((r = this.scrollElement) == null ? void 0 : r.window) ?? null, this._scrollToOffset(this.getScrollOffset(), {
          adjustments: void 0,
          behavior: void 0
        }), this.unsubs.push(
          this.options.observeElementRect(this, (i) => {
            this.scrollRect = i, this.notify(!1, !1);
          })
        ), this.unsubs.push(
          this.options.observeElementOffset(this, (i, l) => {
            this.scrollAdjustments = 0, this.scrollDirection = l ? this.getScrollOffset() < i ? "forward" : "backward" : null, this.scrollOffset = i;
            const g = this.isScrolling;
            this.isScrolling = l, this.notify(g !== l, l);
          })
        );
      }
    }, this.getSize = () => this.options.enabled ? (this.scrollRect = this.scrollRect ?? this.options.initialRect, this.scrollRect[this.options.horizontal ? "width" : "height"]) : (this.scrollRect = null, 0), this.getScrollOffset = () => this.options.enabled ? (this.scrollOffset = this.scrollOffset ?? (typeof this.options.initialOffset == "function" ? this.options.initialOffset() : this.options.initialOffset), this.scrollOffset) : (this.scrollOffset = null, 0), this.getFurthestMeasurement = (r, n) => {
      const i = /* @__PURE__ */ new Map(), l = /* @__PURE__ */ new Map();
      for (let g = n - 1; g >= 0; g--) {
        const a = r[g];
        if (i.has(a.lane))
          continue;
        const s = l.get(
          a.lane
        );
        if (s == null || a.end > s.end ? l.set(a.lane, a) : a.end < s.end && i.set(a.lane, !0), i.size === this.options.lanes)
          break;
      }
      return l.size === this.options.lanes ? Array.from(l.values()).sort((g, a) => g.end === a.end ? g.index - a.index : g.end - a.end)[0] : void 0;
    }, this.getMeasurementOptions = $i(
      () => [
        this.options.count,
        this.options.paddingStart,
        this.options.scrollMargin,
        this.options.getItemKey,
        this.options.enabled
      ],
      (r, n, i, l, g) => (this.pendingMeasuredCacheIndexes = [], {
        count: r,
        paddingStart: n,
        scrollMargin: i,
        getItemKey: l,
        enabled: g
      }),
      {
        key: !1
      }
    ), this.getMeasurements = $i(
      () => [this.getMeasurementOptions(), this.itemSizeCache],
      ({ count: r, paddingStart: n, scrollMargin: i, getItemKey: l, enabled: g }, a) => {
        var s;
        if (!g)
          return this.measurementsCache = [], this.itemSizeCache.clear(), [];
        this.measurementsCache.length === 0 && (this.measurementsCache = this.options.initialMeasurementsCache, this.measurementsCache.forEach((o) => {
          this.itemSizeCache.set(o.key, o.size);
        }));
        const c = this.pendingMeasuredCacheIndexes.length > 0 ? Math.min(...this.pendingMeasuredCacheIndexes) : 0;
        this.pendingMeasuredCacheIndexes = [];
        const f = this.measurementsCache.slice(0, c);
        for (let o = c; o < r; o++) {
          let h = (s = this.measurementsCache[o]) == null ? void 0 : s.measureElement;
          h || (h = (w) => {
            const x = l(o), _ = this.elementsCache.get(x);
            if (!w) {
              _ && (this.observer.unobserve(_), this.elementsCache.delete(x));
              return;
            }
            _ !== w && (_ && this.observer.unobserve(_), this.observer.observe(w), this.elementsCache.set(x, w)), w.isConnected && this.resizeItem(
              o,
              this.options.measureElement(w, void 0, this)
            );
          });
          const u = l(o), d = this.options.lanes === 1 ? f[o - 1] : this.getFurthestMeasurement(f, o), m = d ? d.end + this.options.gap : n + i, p = a.get(u), v = typeof p == "number" ? p : this.options.estimateSize(o), b = m + v, y = d ? d.lane : o % this.options.lanes;
          f[o] = {
            index: o,
            start: m,
            size: v,
            end: b,
            key: u,
            lane: y,
            measureElement: h
          };
        }
        return this.measurementsCache = f, f;
      },
      {
        key: !1,
        debug: () => this.options.debug
      }
    ), this.calculateRange = $i(
      () => [this.getMeasurements(), this.getSize(), this.getScrollOffset()],
      (r, n, i) => this.range = r.length > 0 && n > 0 ? bF({
        measurements: r,
        outerSize: n,
        scrollOffset: i
      }) : null,
      {
        key: !1,
        debug: () => this.options.debug
      }
    ), this.getIndexes = $i(
      () => [
        this.options.rangeExtractor,
        this.calculateRange(),
        this.options.overscan,
        this.options.count
      ],
      (r, n, i, l) => n === null ? [] : r({
        startIndex: n.startIndex,
        endIndex: n.endIndex,
        overscan: i,
        count: l
      }),
      {
        key: !1,
        debug: () => this.options.debug
      }
    ), this.indexFromElement = (r) => {
      const n = this.options.indexAttribute, i = r.getAttribute(n);
      return i ? parseInt(i, 10) : (console.warn(
        `Missing attribute name '${n}={index}' on measured element.`
      ), -1);
    }, this._measureElement = (r, n) => {
      const i = this.indexFromElement(r), l = this.getMeasurements()[i];
      if (!l || !r.isConnected) {
        this.elementsCache.forEach((a, s) => {
          a === r && (this.observer.unobserve(r), this.elementsCache.delete(s));
        });
        return;
      }
      const g = this.elementsCache.get(l.key);
      g !== r && (g && this.observer.unobserve(g), this.observer.observe(r), this.elementsCache.set(l.key, r)), this.resizeItem(i, this.options.measureElement(r, n, this));
    }, this.resizeItem = (r, n) => {
      const i = this.getMeasurements()[r];
      if (!i)
        return;
      const l = this.itemSizeCache.get(i.key) ?? i.size, g = n - l;
      g !== 0 && ((this.shouldAdjustScrollPositionOnItemSizeChange !== void 0 ? this.shouldAdjustScrollPositionOnItemSizeChange(i, g, this) : i.start < this.getScrollOffset() + this.scrollAdjustments) && this._scrollToOffset(this.getScrollOffset(), {
        adjustments: this.scrollAdjustments += g,
        behavior: void 0
      }), this.pendingMeasuredCacheIndexes.push(i.index), this.itemSizeCache = new Map(this.itemSizeCache.set(i.key, n)), this.notify(!0, !1));
    }, this.measureElement = (r) => {
      r && this._measureElement(r, void 0);
    }, this.getVirtualItems = $i(
      () => [this.getIndexes(), this.getMeasurements()],
      (r, n) => {
        const i = [];
        for (let l = 0, g = r.length; l < g; l++) {
          const a = r[l], s = n[a];
          i.push(s);
        }
        return i;
      },
      {
        key: !1,
        debug: () => this.options.debug
      }
    ), this.getVirtualItemForOffset = (r) => {
      const n = this.getMeasurements();
      if (n.length !== 0)
        return kl(
          n[ay(
            0,
            n.length - 1,
            (i) => kl(n[i]).start,
            r
          )]
        );
    }, this.getOffsetForAlignment = (r, n) => {
      const i = this.getSize(), l = this.getScrollOffset();
      n === "auto" && (r <= l ? n = "start" : r >= l + i ? n = "end" : n = "start"), n === "start" ? r = r : n === "end" ? r = r - i : n === "center" && (r = r - i / 2);
      const g = this.options.horizontal ? "scrollWidth" : "scrollHeight", s = (this.scrollElement ? "document" in this.scrollElement ? this.scrollElement.document.documentElement[g] : this.scrollElement[g] : 0) - i;
      return Math.max(Math.min(s, r), 0);
    }, this.getOffsetForIndex = (r, n = "auto") => {
      r = Math.max(0, Math.min(r, this.options.count - 1));
      const i = this.getMeasurements()[r];
      if (!i)
        return;
      const l = this.getSize(), g = this.getScrollOffset();
      if (n === "auto")
        if (i.end >= g + l - this.options.scrollPaddingEnd)
          n = "end";
        else if (i.start <= g + this.options.scrollPaddingStart)
          n = "start";
        else
          return [g, n];
      const a = n === "end" ? i.end + this.options.scrollPaddingEnd : i.start - this.options.scrollPaddingStart;
      return [this.getOffsetForAlignment(a, n), n];
    }, this.isDynamicMode = () => this.elementsCache.size > 0, this.cancelScrollToIndex = () => {
      this.scrollToIndexTimeoutId !== null && this.targetWindow && (this.targetWindow.clearTimeout(this.scrollToIndexTimeoutId), this.scrollToIndexTimeoutId = null);
    }, this.scrollToOffset = (r, { align: n = "start", behavior: i } = {}) => {
      this.cancelScrollToIndex(), i === "smooth" && this.isDynamicMode() && console.warn(
        "The `smooth` scroll behavior is not fully supported with dynamic size."
      ), this._scrollToOffset(this.getOffsetForAlignment(r, n), {
        adjustments: void 0,
        behavior: i
      });
    }, this.scrollToIndex = (r, { align: n = "auto", behavior: i } = {}) => {
      r = Math.max(0, Math.min(r, this.options.count - 1)), this.cancelScrollToIndex(), i === "smooth" && this.isDynamicMode() && console.warn(
        "The `smooth` scroll behavior is not fully supported with dynamic size."
      );
      const l = this.getOffsetForIndex(r, n);
      if (!l)
        return;
      const [g, a] = l;
      this._scrollToOffset(g, { adjustments: void 0, behavior: i }), i !== "smooth" && this.isDynamicMode() && this.targetWindow && (this.scrollToIndexTimeoutId = this.targetWindow.setTimeout(() => {
        if (this.scrollToIndexTimeoutId = null, this.elementsCache.has(
          this.options.getItemKey(r)
        )) {
          const [c] = kl(
            this.getOffsetForIndex(r, a)
          );
          lF(c, this.getScrollOffset()) || this.scrollToIndex(r, { align: a, behavior: i });
        } else
          this.scrollToIndex(r, { align: a, behavior: i });
      }));
    }, this.scrollBy = (r, { behavior: n } = {}) => {
      this.cancelScrollToIndex(), n === "smooth" && this.isDynamicMode() && console.warn(
        "The `smooth` scroll behavior is not fully supported with dynamic size."
      ), this._scrollToOffset(this.getScrollOffset() + r, {
        adjustments: void 0,
        behavior: n
      });
    }, this.getTotalSize = () => {
      var r;
      const n = this.getMeasurements();
      let i;
      return n.length === 0 ? i = this.options.paddingStart : i = this.options.lanes === 1 ? ((r = n[n.length - 1]) == null ? void 0 : r.end) ?? 0 : Math.max(
        ...n.slice(-this.options.lanes).map((l) => l.end)
      ), i - this.options.scrollMargin + this.options.paddingEnd;
    }, this._scrollToOffset = (r, {
      adjustments: n,
      behavior: i
    }) => {
      this.options.scrollToFn(r, { behavior: i, adjustments: n }, this);
    }, this.measure = () => {
      var r, n;
      this.itemSizeCache = /* @__PURE__ */ new Map(), (n = (r = this.options).onChange) == null || n.call(r, this, !1);
    }, this.setOptions(e);
  }
}
const ay = (t, e, r, n) => {
  for (; t <= e; ) {
    const i = (t + e) / 2 | 0, l = r(i);
    if (l < n)
      t = i + 1;
    else if (l > n)
      e = i - 1;
    else
      return i;
  }
  return t > 0 ? t - 1 : 0;
};
function bF({
  measurements: t,
  outerSize: e,
  scrollOffset: r
}) {
  const n = t.length - 1, l = ay(0, n, (a) => t[a].start, r);
  let g = l;
  for (; g < n && t[g].end < r + e; )
    g++;
  return { startIndex: l, endIndex: g };
}
const yF = typeof document < "u" ? ve.useLayoutEffect : ve.useEffect;
function wF(t) {
  const e = ve.useReducer(() => ({}), {})[1], r = {
    ...t,
    onChange: (i, l) => {
      var g;
      l ? Fy(e) : e(), (g = t.onChange) == null || g.call(t, i, l);
    }
  }, [n] = ve.useState(
    () => new vF(r)
  );
  return n.setOptions(r), ve.useEffect(() => n._didMount(), []), yF(() => n._willUpdate()), n;
}
function xF(t) {
  return wF({
    observeElementRect: fF,
    observeElementOffset: pF,
    scrollToFn: mF,
    ...t
  });
}
function ly() {
  const t = fe((e) => {
    var r;
    return (r = e.config.ui) == null ? void 0 : r.activeTheme;
  });
  return fe(
    (e) => {
      var r;
      return (((r = e.config.ui) == null ? void 0 : r.themes) || []).find((n) => n.name === t);
    }
  );
}
function CF({ category: t }) {
  const e = ly(), r = t.name, n = t.list ? t.list : Array.from(Array(t.items).keys()), i = ge(null), l = xF({
    horizontal: !0,
    count: n.length,
    getScrollElement: () => i.current,
    estimateSize: Me(() => 52, []),
    overscan: 5
  });
  return ke(() => {
    l.scrollToIndex(0);
  }, [r]), /* @__PURE__ */ C(gr, { children: /* @__PURE__ */ C(
    "div",
    {
      ref: i,
      className: "tiny-scrollbar overflow-x-auto overflow-y-hidden",
      style: { height: "52px" },
      children: /* @__PURE__ */ C(
        "div",
        {
          className: "h-full relative mx-auto",
          style: { width: `${l.getTotalSize()}px` },
          children: l.getVirtualItems().map((g) => {
            const a = `${n[g.index]}`;
            return /* @__PURE__ */ C(
              "div",
              {
                className: "absolute top-0 left-0 h-full",
                style: {
                  width: `${g.size}px`,
                  transform: `translateX(${g.start}px)`
                },
                children: /* @__PURE__ */ C(
                  pt,
                  {
                    variant: "outline",
                    radius: "rounded-xl",
                    size: "md",
                    equalWidth: !0,
                    onClick: async () => {
                      await I().shape.addSticker(t.name, a), O().setDirty(!0);
                    },
                    children: /* @__PURE__ */ C(
                      "img",
                      {
                        className: ce(
                          "m-auto m-auto w-28 h-28",
                          t.invertPreview && (e == null ? void 0 : e.isDark) && "invert"
                        ),
                        src: bc(t, a),
                        alt: a
                      }
                    )
                  }
                )
              },
              g.index
            );
          })
        }
      )
    }
  ) });
}
function _F() {
  const t = fe((i) => {
    var l, g;
    return (g = (l = i.config.tools) == null ? void 0 : l.stickers) == null ? void 0 : g.items;
  }) || [], [e, r] = Fe(t[0]), n = t.map((i) => {
    const l = e === i, g = T2[i.name];
    return /* @__PURE__ */ C(
      pt,
      {
        size: "xs",
        color: l ? "primary" : null,
        value: i,
        children: /* @__PURE__ */ C("span", { className: "capitalize", children: g ? /* @__PURE__ */ C(xe, { ...g }) : i.name })
      },
      i.name
    );
  });
  return /* @__PURE__ */ oe("div", { className: "h-92", children: [
    /* @__PURE__ */ C("div", { className: "mb-10 w-full hide-scrollbar overflow-x-auto overflow-y-hidden flex", children: /* @__PURE__ */ C(
      Ia,
      {
        value: e,
        onChange: (i) => r(i),
        variant: "outline",
        radius: "rounded-full",
        className: "mx-auto",
        children: n
      }
    ) }),
    e && /* @__PURE__ */ C(CF, { category: e })
  ] });
}
function SF() {
  const t = fe((n) => {
    var i, l;
    return (l = (i = n.config.tools) == null ? void 0 : i.frame) == null ? void 0 : l.items;
  }) || [], e = fe((n) => n.frame.active);
  ke(() => {
    O().frame.active && O().frame.showOptionsPanel();
  }, []);
  const r = t.map((n) => {
    const i = Dt(`images/frames/${n.name}/thumbnail.png`), l = (e == null ? void 0 : e.name) === n.name;
    return /* @__PURE__ */ C(yr, { children: /* @__PURE__ */ oe(
      "button",
      {
        type: "button",
        className: `border-2 overflow-hidden relative rounded border cursor-pointer ${l ? "border-primary" : ""}`,
        onClick: () => {
          O().setDirty(!0), l ? I().frame.remove() : I().frame.add(n.name);
        },
        children: [
          l && /* @__PURE__ */ C(TF, {}),
          /* @__PURE__ */ C(
            "img",
            {
              draggable: "false",
              className: "w-64 h-64",
              src: i,
              alt: n.name
            }
          )
        ]
      }
    ) }, n.name);
  });
  return /* @__PURE__ */ C(jn, { children: r });
}
function TF() {
  return /* @__PURE__ */ C("span", { className: "bg-background/70 absolute inset-0 text-primary", children: /* @__PURE__ */ C(Wc, { className: "svg-icon icon-md absolute inset-0 block m-auto" }) });
}
function EF() {
  const t = fe((r) => {
    var n, i;
    return (i = (n = r.config.tools) == null ? void 0 : n.text) == null ? void 0 : i.items;
  });
  ke(() => {
    t && j0(t, { prefixSrc: Dt, id: "pixie-fonts" }).catch(
      () => {
      }
    );
  }, [t]), ke(() => {
    I().text.selectOrAddText() && O().setDirty(!0);
  }, []);
  const e = (t || []).map((r) => /* @__PURE__ */ C(yr, { children: /* @__PURE__ */ C(kF, { fontConfig: r }) }, r.family));
  return /* @__PURE__ */ C(jn, { className: "pt-6", children: e });
}
function kF({ fontConfig: t }) {
  var n;
  const e = fe((i) => i.objects.active.editableProps.fontFamily), r = ce(
    "block px-6 w-110 h-68 text-sm bg border rounded-2xl",
    {
      "border-primary": e === t.family,
      "text-primary": e === t.family
    }
  );
  return /* @__PURE__ */ C(
    "button",
    {
      type: "button",
      className: r,
      style: {
        fontFamily: t.family.includes('"') ? t.family : `"${t.family}"`,
        fontWeight: ((n = t.descriptors) == null ? void 0 : n.weight) || "normal"
      },
      onClick: async () => {
        I().text.selectOrAddText(), O().setDirty(!0), I().objects.setValues({
          fontFamily: t.family
        });
      },
      children: t.family
    }
  );
}
const OF = we(
  /* @__PURE__ */ C("path", { d: "M290.7 57.4L57.4 290.7c-25 25-25 65.5 0 90.5l80 80c12 12 28.3 18.7 45.3 18.7H288h9.4H512c17.7 0 32-14.3 32-32s-14.3-32-32-32H387.9L518.6 285.3c25-25 25-65.5 0-90.5L381.3 57.4c-25-25-65.5-25-90.5 0zM297.4 416H288l-105.4 0-80-80L227.3 211.3 364.7 348.7 297.4 416z" }),
  "EraserFA",
  "0 0 576 512"
);
function AF() {
  return ke(() => (I().draw.enable(), () => {
    I().draw.disable();
  }), []), /* @__PURE__ */ oe(jn, { gap: "gap-16", children: [
    /* @__PURE__ */ C(yr, { children: /* @__PURE__ */ C(
      zn,
      {
        size: "sm",
        label: /* @__PURE__ */ C(xe, { message: "Brush Color" }),
        value: I().draw.currentBrush.color,
        onChange: (t) => {
          I().draw.setBrushColor(t);
        }
      }
    ) }),
    /* @__PURE__ */ C(yr, { children: /* @__PURE__ */ C(PF, {}) }),
    /* @__PURE__ */ C(yr, { children: /* @__PURE__ */ C(DF, {}) })
  ] });
}
function DF() {
  const t = fe((n) => {
    var i, l;
    return (l = (i = n.config.tools) == null ? void 0 : i.draw) == null ? void 0 : l.brushSizes;
  }) || [], [e, r] = Fe(
    I().draw.currentBrush.width
  );
  return /* @__PURE__ */ C(
    gh,
    {
      selectionMode: "single",
      selectedValue: e,
      onSelectionChange: (n) => {
        r(n), I().draw.setBrushSize(n);
      },
      size: "sm",
      label: /* @__PURE__ */ C(xe, { message: "Brush Size" }),
      children: t.map((n) => /* @__PURE__ */ C(xa, { value: n, children: /* @__PURE__ */ oe("div", { className: "flex items-center", children: [
        /* @__PURE__ */ C(
          "div",
          {
            className: "flex-shrink-0 mr-8 border-[3px] rounded-full",
            style: { width: `${n}px`, height: `${n}px` }
          }
        ),
        n
      ] }) }, n))
    }
  );
}
function PF() {
  const t = fe((i) => {
    var l, g;
    return (g = (l = i.config.tools) == null ? void 0 : l.draw) == null ? void 0 : g.brushTypes;
  }) || [], e = ly(), [r, n] = Fe(
    I().draw.currentBrush.type
  );
  return /* @__PURE__ */ C(
    gh,
    {
      selectionMode: "single",
      selectedValue: r,
      onSelectionChange: (i) => {
        n(i), I().draw.setBrushType(i);
      },
      size: "sm",
      label: /* @__PURE__ */ C(xe, { message: "Brush Type" }),
      children: t.map((i) => /* @__PURE__ */ C(xa, { value: i, children: /* @__PURE__ */ oe("div", { className: "flex items-center", children: [
        i === "EraserBrush" ? /* @__PURE__ */ C(OF, { className: "mr-8" }) : /* @__PURE__ */ C(
          "img",
          {
            className: "flex-shrink-0 mr-8 w-24 h-24",
            src: MF(i, e == null ? void 0 : e.isDark),
            alt: ""
          }
        ),
        /* @__PURE__ */ C(xe, { message: i.replace(/([A-Z])/g, " $1").trim() })
      ] }) }, i))
    }
  );
}
function MF(t, e = !1) {
  const r = t.replace("Brush", "").toLowerCase();
  return Dt(`images/brushes/${e ? "white" : "black"}/${r}.png`);
}
function FF() {
  const { trans: t } = rn(), e = fe((r) => r.corners.radius);
  return ke(() => (O().setDirty(!0), I().corners.showPreview(), () => I().corners.hidePreview()), []), /* @__PURE__ */ C("div", { className: "max-w-320 mx-auto", children: /* @__PURE__ */ C(
    Nn,
    {
      minValue: 1,
      maxValue: 300,
      label: t({ message: "Radius" }),
      getValueLabel: (r) => `${r}px`,
      onChange: (r) => {
        I().corners.updatePreview(r), O().corners.setRadius(r);
      },
      value: e
    }
  ) });
}
const cy = {
  initial: { y: "130%", opacity: 0 },
  animate: { y: 0, opacity: 1 },
  exit: {
    y: "130%",
    opacity: 0,
    left: 0,
    position: "absolute",
    overflowY: "hidden"
  },
  transition: { type: "tween", duration: 0.15 }
};
function RF({ activeTool: t }) {
  const e = IF(t);
  return /* @__PURE__ */ C(
    gt.div,
    {
      className: "relative h-full w-full text-sm bg select-none overflow-hidden",
      ...cy,
      children: e
    }
  );
}
function IF(t) {
  switch (t) {
    case Be.FILTER:
      return /* @__PURE__ */ C(B6, {});
    case Be.RESIZE:
      return /* @__PURE__ */ C(H6, {});
    case Be.CROP:
      return /* @__PURE__ */ C(eF, {});
    case Be.DRAW:
      return /* @__PURE__ */ C(AF, {});
    case Be.TEXT:
      return /* @__PURE__ */ C(EF, {});
    case Be.SHAPES:
      return /* @__PURE__ */ C(sF, {});
    case Be.STICKERS:
      return /* @__PURE__ */ C(_F, {});
    case Be.FRAME:
      return /* @__PURE__ */ C(SF, {});
    case Be.CORNERS:
      return /* @__PURE__ */ C(FF, {});
    default:
      return null;
  }
}
function wp({ className: t }) {
  const e = fe((r) => r.activeTool);
  return /* @__PURE__ */ C(
    "nav",
    {
      className: ce(
        "z-navbar min-h-86 flex-shrink-0 px-16 relative overflow-hidden",
        t
      ),
      children: /* @__PURE__ */ C(Sr, { initial: !1, children: e ? /* @__PURE__ */ C(RF, { activeTool: e }, "tool-controls") : /* @__PURE__ */ C(LF, {}, "nav-items") })
    }
  );
}
function LF() {
  const t = fe((e) => {
    var r, n;
    return (n = (r = e.config.ui) == null ? void 0 : r.nav) == null ? void 0 : n.items;
  }) || [];
  return /* @__PURE__ */ C(gt.div, { className: "w-full h-full bg-inherit", ...cy, children: /* @__PURE__ */ C(jn, { children: t.map((e) => /* @__PURE__ */ C(yr, { children: /* @__PURE__ */ C(BF, { item: e }) }, e.name)) }) });
}
function BF({ item: t }) {
  const e = () => {
    typeof t.action == "string" ? fu(t.action) : typeof t.action == "function" && t.action(O().editor);
  }, r = H2[t.name];
  return /* @__PURE__ */ oe(
    Er,
    {
      variant: "outline",
      color: "paper",
      className: "flex-col flex-shrink-0 w-68 h-68",
      radius: "rounded-2xl",
      onClick: e,
      children: [
        /* @__PURE__ */ C("div", { className: "mb-1", children: /* @__PURE__ */ C(ch, { className: "icon-md", icon: t.icon }) }),
        /* @__PURE__ */ C("div", { className: "mt-6 text-xs capitalize max-w-[90%] overflow-hidden overflow-ellipsis", children: r ? /* @__PURE__ */ C(xe, { ...r }) : t.name })
      ]
    }
  );
}
function zF() {
  const t = fe((r) => r.history.items), e = fe((r) => r.history.pointer);
  return /* @__PURE__ */ oe(
    gt.div,
    {
      ...Pa,
      className: "absolute bottom-20 right-20 w-224 max-w-[calc(100%-40px)] max-h-[calc(100%-40px)] bg-paper shadow-xl border focus:outline-none rounded overflow-hidden",
      children: [
        /* @__PURE__ */ oe("div", { className: "px-10 py-2 mb-4 font-medium text-sm border-b flex items-center", children: [
          /* @__PURE__ */ C(xe, { message: "History" }),
          /* @__PURE__ */ C(
            ze,
            {
              size: "xs",
              className: "ml-auto flex-shrink-0",
              onClick: () => {
                O().togglePanel("history", !1);
              },
              children: /* @__PURE__ */ C(Zr, {})
            }
          )
        ] }),
        /* @__PURE__ */ C("div", { className: "p-10", children: t.map((r) => {
          const n = r.id === t[e].id, i = Mr[r.name], l = i.icon && he.createElement(i.icon, { className: "icon-sm" });
          return /* @__PURE__ */ C(
            pt,
            {
              onClick: () => {
                n || I().history.load(r);
              },
              variant: "outline",
              color: n ? "primary" : null,
              size: "sm",
              className: ce("w-full mb-8", n && "pointer-events-none"),
              justify: "justify-start",
              startIcon: l,
              children: /* @__PURE__ */ C(xe, { ...i.name })
            },
            r.id
          );
        }) })
      ]
    }
  );
}
function NF(t) {
  const {
    children: e,
    className: r,
    color: n,
    onDismiss: i,
    leftAdornment: l,
    rightAdornment: g,
    hideDismissButton: a = !1,
    size: s,
    showDivider: c,
    justify: f = "justify-between",
    titleFontWeight: o = "font-semibold",
    titleTextSize: h = s === "xs" ? "text-xs" : "text-sm",
    closeButtonSize: u = s === "xs" ? "xs" : "sm",
    actions: d
  } = t, { labelId: m, isDismissable: p, close: v } = Ve(ja);
  return /* @__PURE__ */ oe(
    "div",
    {
      className: ce(
        r,
        "flex flex-shrink-0 items-center gap-10",
        o,
        c && "border-b",
        jF(t),
        n || "text-main",
        f
      ),
      children: [
        l,
        /* @__PURE__ */ C(
          "h3",
          {
            id: m,
            className: ce(h, "mr-auto leading-5 opacity-90"),
            children: e
          }
        ),
        g,
        d,
        p && !a && /* @__PURE__ */ C(
          ze,
          {
            "aria-label": "Dismiss",
            onClick: () => {
              i ? i() : v();
            },
            size: u,
            className: ce("-mr-8 text-muted", g && "sr-only"),
            children: /* @__PURE__ */ C(Zr, {})
          }
        )
      ]
    }
  );
}
function jF({ size: t, padding: e }) {
  if (e)
    return e;
  switch (t) {
    case "2xs":
    case "xs":
      return "px-14 py-4";
    case "sm":
      return "px-18 py-4";
    default:
      return "px-24 py-6";
  }
}
const uy = st(
  (t, e) => {
    const { children: r, className: n, padding: i, size: l, ...g } = t;
    return /* @__PURE__ */ C(
      "div",
      {
        ...g,
        ref: e,
        className: ce(
          n,
          $F(t),
          "overflow-y-auto overflow-x-hidden overscroll-contain text-sm flex-auto"
        ),
        children: r
      }
    );
  }
);
function $F({ size: t, padding: e }) {
  if (e)
    return e;
  switch (t) {
    case "xs":
      return "p-14";
    case "sm":
      return "p-18";
    default:
      return "px-24 py-20";
  }
}
function VF() {
  const t = fe((e) => e.openPanels.newImage);
  return /* @__PURE__ */ C(
    Va,
    {
      isOpen: t,
      disableInitialTransition: !0,
      type: "modal",
      isDismissable: !1,
      children: /* @__PURE__ */ C(HF, {})
    }
  );
}
function HF() {
  const [t, e] = Fe("default");
  return /* @__PURE__ */ oe($a, { className: "text-center max-w-max text-main", size: "auto", children: [
    /* @__PURE__ */ C(NF, { padding: "px-24 pt-24 pb-12", showDivider: !1, children: /* @__PURE__ */ C(xe, { message: "Open a photo or design to get started" }) }),
    /* @__PURE__ */ C(uy, { children: t === "default" ? /* @__PURE__ */ C(UF, { setActivePanel: e }) : /* @__PURE__ */ C(XF, { setActivePanel: e }) })
  ] });
}
function UF({ setActivePanel: t }) {
  return /* @__PURE__ */ oe(Np, { children: [
    /* @__PURE__ */ C(
      pt,
      {
        className: "mr-20",
        size: "sm",
        variant: "raised",
        color: "primary",
        onClick: () => {
          I().import.uploadAndReplaceMainImage();
        },
        children: /* @__PURE__ */ C(xe, { message: "Open Photo" })
      }
    ),
    /* @__PURE__ */ C(
      pt,
      {
        variant: "outline",
        size: "sm",
        color: "primary",
        onClick: () => {
          t("newCanvas");
        },
        children: /* @__PURE__ */ C(xe, { message: "Create New" })
      }
    ),
    /* @__PURE__ */ C(WF, {})
  ] });
}
function WF() {
  const t = fe(
    (e) => {
      var r, n;
      return (n = (r = e.config.ui) == null ? void 0 : r.openImageDialog) == null ? void 0 : n.sampleImages;
    }
  );
  return t != null && t.length ? /* @__PURE__ */ oe(Np, { children: [
    /* @__PURE__ */ oe("div", { className: "relative py-20 text-main", children: [
      /* @__PURE__ */ C("hr", { className: "absolute h-1 border-none bg-divider w-full top inset-0 m-auto" }),
      /* @__PURE__ */ C("span", { className: "text-sm bg px-6 relative", children: /* @__PURE__ */ C(xe, { message: "or use sample" }) })
    ] }),
    /* @__PURE__ */ C("ul", { className: "flex items-center gap-16", children: t.map((e) => /* @__PURE__ */ C("li", { className: "shrink-0", children: /* @__PURE__ */ C(
      "button",
      {
        type: "button",
        onClick: async () => {
          typeof e.action == "function" ? e.action() : e.url.endsWith(".json") ? (await ua(Dt(e.url)), O().togglePanel("newImage", !1)) : (await I().import.openBackgroundImage(Dt(e.url)), O().togglePanel("newImage", !1));
        },
        children: /* @__PURE__ */ C(
          "img",
          {
            className: "w-80 h-80 rounded overflow-hidden transition-shadow hover:shadow-md",
            src: Dt(e.thumbnail),
            alt: ""
          }
        )
      }
    ) }, e.url || e.thumbnail)) })
  ] }) : null;
}
function XF({ setActivePanel: t }) {
  const [e, r] = Fe({
    width: 800,
    height: 600,
    bgColor: "transparent"
  });
  return /* @__PURE__ */ oe(
    "form",
    {
      onSubmit: (n) => {
        n.preventDefault();
        const { width: i, height: l, bgColor: g } = e;
        i && l && (O().setConfig({ blankCanvasSize: { width: i, height: l } }), I().canvas.openNew(i, l, g), O().togglePanel("newImage", !1), I().history.addInitial());
      },
      children: [
        /* @__PURE__ */ C(
          Cr,
          {
            type: "number",
            label: /* @__PURE__ */ C(xe, { message: "Width" }),
            value: e.width,
            min: 1,
            required: !0,
            className: "mb-16",
            onChange: (n) => {
              r({ ...e, width: n.target.valueAsNumber });
            }
          }
        ),
        /* @__PURE__ */ C(
          Cr,
          {
            type: "number",
            label: /* @__PURE__ */ C(xe, { message: "Height" }),
            value: e.height,
            min: 1,
            required: !0,
            className: "mb-16",
            onChange: (n) => {
              r({ ...e, height: n.target.valueAsNumber });
            }
          }
        ),
        /* @__PURE__ */ C(
          zn,
          {
            onChange: (n) => {
              r({ ...e, bgColor: n });
            },
            className: "mb-16",
            value: e.bgColor,
            label: /* @__PURE__ */ C(xe, { message: "Background color" })
          }
        ),
        /* @__PURE__ */ oe("div", { className: "text-right", children: [
          /* @__PURE__ */ C(
            pt,
            {
              size: "sm",
              variant: "text",
              className: "mr-10",
              onClick: () => {
                t("default");
              },
              children: /* @__PURE__ */ C(xe, { message: "Cancel" })
            }
          ),
          /* @__PURE__ */ C(pt, { size: "sm", type: "submit", variant: "raised", color: "primary", children: /* @__PURE__ */ C(xe, { message: "Create" }) })
        ] })
      ]
    }
  );
}
const YF = st(
  (t, e) => {
    const r = Bn(t), {
      label: n,
      children: i,
      size: l,
      className: g,
      orientation: a = "horizontal",
      disabled: s,
      required: c,
      invalid: f,
      errorMessage: o,
      description: h
    } = t, u = {}, d = qt(), m = t.name || d;
    return /* @__PURE__ */ oe(
      "fieldset",
      {
        "aria-describedby": h ? `${d}-description` : void 0,
        ref: e,
        className: ce("text-left", g),
        children: [
          n && /* @__PURE__ */ C("legend", { className: r.label, ...u, children: n }),
          /* @__PURE__ */ C(
            "div",
            {
              className: ce(
                "flex",
                n ? "mt-6" : "mt-0",
                a === "vertical" ? "flex-col gap-10" : "flex-row gap-16"
              ),
              children: Wr.map(i, (p) => {
                if (xr(p))
                  return xt(p, {
                    name: m,
                    size: l,
                    invalid: p.props.invalid || f || void 0,
                    disabled: p.props.disabled || s,
                    required: p.props.required || c
                  });
              })
            }
          ),
          h && !o && /* @__PURE__ */ C("div", { className: r.description, id: `${d}-description`, children: h }),
          o && /* @__PURE__ */ C("div", { className: r.error, children: o })
        ]
      }
    );
  }
), Ol = st((t, e) => {
  const { children: r, autoFocus: n, size: i, invalid: l, isFirst: g, ...a } = t, s = Ln(e);
  lh({ autoFocus: n }, s);
  const c = GF(i);
  return /* @__PURE__ */ oe(
    "label",
    {
      className: ce(
        "inline-flex gap-8 select-none items-center whitespace-nowrap align-middle",
        c.label,
        t.disabled && "text-disabled pointer-events-none",
        t.invalid && "text-danger"
      ),
      children: [
        /* @__PURE__ */ C(
          "input",
          {
            type: "radio",
            className: ce(
              "focus-visible:ring outline-none",
              "rounded-full transition-button border-2 appearance-none",
              "border-text-muted disabled:border-disabled-fg checked:border-primary checked:hover:border-primary-dark",
              "before:bg-primary disabled:before:bg-disabled-fg before:hover:bg-primary-dark",
              "before:h-full before:w-full before:block before:rounded-full before:scale-10 before:opacity-0 before:transition before:duration-200",
              "checked:before:scale-[.65] checked:before:opacity-100",
              c.circle
            ),
            ref: s,
            ...a
          }
        ),
        r && /* @__PURE__ */ C("span", { children: r })
      ]
    }
  );
});
function GF(t) {
  switch (t) {
    case "xs":
      return { circle: "h-12 w-12", label: "text-xs" };
    case "sm":
      return { circle: "h-16 w-16", label: "text-sm" };
    case "lg":
      return { circle: "h-24 w-24", label: "text-lg" };
    default:
      return { circle: "h-20 w-20", label: "text-base" };
  }
}
function qF() {
  const t = fe((e) => e.openPanels.export);
  return /* @__PURE__ */ C(
    Va,
    {
      isOpen: t,
      onOpenChange: (e) => {
        e || O().togglePanel("export", !1);
      },
      type: "modal",
      children: /* @__PURE__ */ C(KF, {})
    }
  );
}
function KF() {
  const [t, e] = Fe(() => {
    var r, n, i, l, g, a;
    return {
      filename: ((n = (r = O().config.tools) == null ? void 0 : r.export) == null ? void 0 : n.defaultName) || "image",
      format: ((l = (i = O().config.tools) == null ? void 0 : i.export) == null ? void 0 : l.defaultFormat) || "jpeg",
      quality: ((a = (g = O().config.tools) == null ? void 0 : g.export) == null ? void 0 : a.defaultQuality) || 0.8
    };
  });
  return /* @__PURE__ */ C($a, { className: "text-center max-w-max text-main", size: "auto", children: /* @__PURE__ */ C(uy, { children: /* @__PURE__ */ oe(
    "form",
    {
      onSubmit: (r) => {
        r.preventDefault(), I().export.save(
          t.filename,
          t.format,
          t.quality
        ), O().togglePanel("export", !1);
      },
      children: [
        /* @__PURE__ */ C(
          Cr,
          {
            required: !0,
            size: "sm",
            label: /* @__PURE__ */ C(xe, { message: "Save As" }),
            value: t.filename,
            onChange: (r) => {
              e({ ...t, filename: r.target.value });
            }
          }
        ),
        /* @__PURE__ */ oe(YF, { size: "sm", className: "my-20", "aria-label": "Image format", children: [
          /* @__PURE__ */ C(
            Ol,
            {
              value: "jpeg",
              checked: t.format === "jpeg",
              onChange: (r) => {
                e({ ...t, format: r.target.value });
              },
              children: "JPEG"
            }
          ),
          /* @__PURE__ */ C(
            Ol,
            {
              value: "png",
              checked: t.format === "png",
              onChange: (r) => {
                e({ ...t, format: r.target.value });
              },
              children: "PNG"
            }
          ),
          /* @__PURE__ */ C(
            Ol,
            {
              value: "json",
              checked: t.format === "json",
              onChange: (r) => {
                e({ ...t, format: r.target.value });
              },
              children: "JSON"
            }
          )
        ] }),
        /* @__PURE__ */ C(
          Nn,
          {
            size: "sm",
            minValue: 0.1,
            step: 0.1,
            maxValue: 1,
            value: t.quality,
            onChange: (r) => {
              e({ ...t, quality: r });
            },
            formatOptions: { style: "percent" },
            label: /* @__PURE__ */ C(xe, { message: "Quality" })
          }
        ),
        /* @__PURE__ */ C(
          pt,
          {
            variant: "raised",
            color: "primary",
            type: "submit",
            className: "mt-20 w-full",
            size: "sm",
            children: /* @__PURE__ */ C(xe, { message: "Save" })
          }
        )
      ]
    }
  ) }) });
}
function JF() {
  const t = fe((r) => r.objects.all), e = fe((r) => r.objects.active.id);
  return /* @__PURE__ */ oe(
    gt.div,
    {
      ...Pa,
      className: "absolute bottom-20 right-20 w-224 max-w-[calc(100%-40px)] max-h-[calc(100%-40px)] bg-paper shadow-xl border focus:outline-none rounded overflow-hidden",
      children: [
        /* @__PURE__ */ oe("div", { className: "px-10 py-2 mb-4 font-medium text-sm border-b flex items-center", children: [
          /* @__PURE__ */ C(xe, { message: "Objects" }),
          /* @__PURE__ */ C(
            ze,
            {
              size: "xs",
              className: "ml-auto flex-shrink-0",
              onClick: () => {
                O().togglePanel("objects", !1);
              },
              children: /* @__PURE__ */ C(Zr, {})
            }
          )
        ] }),
        /* @__PURE__ */ C("div", { className: "p-8", children: t.map((r) => {
          const n = r.id === e, i = r.name;
          if (!i)
            return null;
          const l = a_[i], g = l.icon && he.createElement(l.icon, { className: "icon-sm" });
          return /* @__PURE__ */ C(
            pt,
            {
              onClick: () => {
                n || !r.selectable || I().objects.select(r.id);
              },
              variant: "outline",
              color: n ? "primary" : null,
              size: "sm",
              className: ce(
                "w-full mb-8",
                (n || !r.selectable) && "pointer-events-none"
              ),
              justify: "justify-start",
              startIcon: g,
              children: /* @__PURE__ */ C(xe, { ...l.name })
            },
            r.id
          );
        }) })
      ]
    }
  );
}
function ZF() {
  const t = fe((r) => r.openPanels.history), e = fe((r) => r.openPanels.objects);
  return /* @__PURE__ */ oe("div", { className: "z-modal", children: [
    /* @__PURE__ */ oe(Sr, { children: [
      t && /* @__PURE__ */ C(zF, {}, "historyPanel"),
      e && /* @__PURE__ */ C(JF, {}, "objListPanel")
    ] }),
    /* @__PURE__ */ C(VF, {}),
    /* @__PURE__ */ C(qF, {})
  ] });
}
/**
 * @remix-run/router v1.17.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function Xc() {
  return Xc = Object.assign ? Object.assign.bind() : function(t) {
    for (var e = 1; e < arguments.length; e++) {
      var r = arguments[e];
      for (var n in r)
        Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]);
    }
    return t;
  }, Xc.apply(this, arguments);
}
var xp;
(function(t) {
  t.Pop = "POP", t.Push = "PUSH", t.Replace = "REPLACE";
})(xp || (xp = {}));
function wr(t, e) {
  if (t === !1 || t === null || typeof t > "u")
    throw new Error(e);
}
function Cp(t) {
  let {
    pathname: e = "/",
    search: r = "",
    hash: n = ""
  } = t;
  return r && r !== "?" && (e += r.charAt(0) === "?" ? r : "?" + r), n && n !== "#" && (e += n.charAt(0) === "#" ? n : "#" + n), e;
}
function hy(t) {
  let e = {};
  if (t) {
    let r = t.indexOf("#");
    r >= 0 && (e.hash = t.substr(r), t = t.substr(0, r));
    let n = t.indexOf("?");
    n >= 0 && (e.search = t.substr(n), t = t.substr(0, n)), t && (e.pathname = t);
  }
  return e;
}
var _p;
(function(t) {
  t.data = "data", t.deferred = "deferred", t.redirect = "redirect", t.error = "error";
})(_p || (_p = {}));
function QF(t, e) {
  if (e === "/")
    return t;
  if (!t.toLowerCase().startsWith(e.toLowerCase()))
    return null;
  let r = e.endsWith("/") ? e.length - 1 : e.length, n = t.charAt(r);
  return n && n !== "/" ? null : t.slice(r) || "/";
}
function e8(t, e) {
  e === void 0 && (e = "/");
  let {
    pathname: r,
    search: n = "",
    hash: i = ""
  } = typeof t == "string" ? hy(t) : t;
  return {
    pathname: r ? r.startsWith("/") ? r : t8(r, e) : e,
    search: n8(n),
    hash: i8(i)
  };
}
function t8(t, e) {
  let r = e.replace(/\/+$/, "").split("/");
  return t.split("/").forEach((i) => {
    i === ".." ? r.length > 1 && r.pop() : i !== "." && r.push(i);
  }), r.length > 1 ? r.join("/") : "/";
}
function Al(t, e, r, n) {
  return "Cannot include a '" + t + "' character in a manually specified " + ("`to." + e + "` field [" + JSON.stringify(n) + "].  Please separate it out to the ") + ("`to." + r + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function r8(t) {
  return t.filter((e, r) => r === 0 || e.route.path && e.route.path.length > 0);
}
function fy(t, e) {
  let r = r8(t);
  return e ? r.map((n, i) => i === r.length - 1 ? n.pathname : n.pathnameBase) : r.map((n) => n.pathnameBase);
}
function dy(t, e, r, n) {
  n === void 0 && (n = !1);
  let i;
  typeof t == "string" ? i = hy(t) : (i = Xc({}, t), wr(!i.pathname || !i.pathname.includes("?"), Al("?", "pathname", "search", i)), wr(!i.pathname || !i.pathname.includes("#"), Al("#", "pathname", "hash", i)), wr(!i.search || !i.search.includes("#"), Al("#", "search", "hash", i)));
  let l = t === "" || i.pathname === "", g = l ? "/" : i.pathname, a;
  if (g == null)
    a = r;
  else {
    let o = e.length - 1;
    if (!n && g.startsWith("..")) {
      let h = g.split("/");
      for (; h[0] === ".."; )
        h.shift(), o -= 1;
      i.pathname = h.join("/");
    }
    a = o >= 0 ? e[o] : "/";
  }
  let s = e8(i, a), c = g && g !== "/" && g.endsWith("/"), f = (l || g === ".") && r.endsWith("/");
  return !s.pathname.endsWith("/") && (c || f) && (s.pathname += "/"), s;
}
const py = (t) => t.join("/").replace(/\/\/+/g, "/"), n8 = (t) => !t || t === "?" ? "" : t.startsWith("?") ? t : "?" + t, i8 = (t) => !t || t === "#" ? "" : t.startsWith("#") ? t : "#" + t, gy = ["post", "put", "patch", "delete"];
new Set(gy);
const s8 = ["get", ...gy];
new Set(s8);
/**
 * React Router v6.24.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function Yc() {
  return Yc = Object.assign ? Object.assign.bind() : function(t) {
    for (var e = 1; e < arguments.length; e++) {
      var r = arguments[e];
      for (var n in r)
        Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]);
    }
    return t;
  }, Yc.apply(this, arguments);
}
const my = /* @__PURE__ */ ve.createContext(null), $s = /* @__PURE__ */ ve.createContext(null), vy = /* @__PURE__ */ ve.createContext(null), Ha = /* @__PURE__ */ ve.createContext({
  outlet: null,
  matches: [],
  isDataRoute: !1
});
function o8(t, e) {
  let {
    relative: r
  } = e === void 0 ? {} : e;
  mh() || wr(!1);
  let {
    basename: n,
    navigator: i
  } = ve.useContext($s), {
    hash: l,
    pathname: g,
    search: a
  } = yy(t, {
    relative: r
  }), s = g;
  return n !== "/" && (s = g === "/" ? n : py([n, g])), i.createHref({
    pathname: s,
    search: a,
    hash: l
  });
}
function mh() {
  return ve.useContext(vy) != null;
}
function vh() {
  return mh() || wr(!1), ve.useContext(vy).location;
}
function by(t) {
  ve.useContext($s).static || ve.useLayoutEffect(t);
}
function a8() {
  let {
    isDataRoute: t
  } = ve.useContext(Ha);
  return t ? f8() : l8();
}
function l8() {
  mh() || wr(!1);
  let t = ve.useContext(my), {
    basename: e,
    future: r,
    navigator: n
  } = ve.useContext($s), {
    matches: i
  } = ve.useContext(Ha), {
    pathname: l
  } = vh(), g = JSON.stringify(fy(i, r.v7_relativeSplatPath)), a = ve.useRef(!1);
  return by(() => {
    a.current = !0;
  }), ve.useCallback(function(c, f) {
    if (f === void 0 && (f = {}), !a.current)
      return;
    if (typeof c == "number") {
      n.go(c);
      return;
    }
    let o = dy(c, JSON.parse(g), l, f.relative === "path");
    t == null && e !== "/" && (o.pathname = o.pathname === "/" ? e : py([e, o.pathname])), (f.replace ? n.replace : n.push)(o, f.state, f);
  }, [e, n, g, l, t]);
}
function yy(t, e) {
  let {
    relative: r
  } = e === void 0 ? {} : e, {
    future: n
  } = ve.useContext($s), {
    matches: i
  } = ve.useContext(Ha), {
    pathname: l
  } = vh(), g = JSON.stringify(fy(i, n.v7_relativeSplatPath));
  return ve.useMemo(() => dy(t, JSON.parse(g), l, r === "path"), [t, g, l, r]);
}
var wy = /* @__PURE__ */ function(t) {
  return t.UseBlocker = "useBlocker", t.UseRevalidator = "useRevalidator", t.UseNavigateStable = "useNavigate", t;
}(wy || {}), xy = /* @__PURE__ */ function(t) {
  return t.UseBlocker = "useBlocker", t.UseLoaderData = "useLoaderData", t.UseActionData = "useActionData", t.UseRouteError = "useRouteError", t.UseNavigation = "useNavigation", t.UseRouteLoaderData = "useRouteLoaderData", t.UseMatches = "useMatches", t.UseRevalidator = "useRevalidator", t.UseNavigateStable = "useNavigate", t.UseRouteId = "useRouteId", t;
}(xy || {});
function c8(t) {
  let e = ve.useContext(my);
  return e || wr(!1), e;
}
function u8(t) {
  let e = ve.useContext(Ha);
  return e || wr(!1), e;
}
function h8(t) {
  let e = u8(), r = e.matches[e.matches.length - 1];
  return r.route.id || wr(!1), r.route.id;
}
function f8() {
  let {
    router: t
  } = c8(wy.UseNavigateStable), e = h8(xy.UseNavigateStable), r = ve.useRef(!1);
  return by(() => {
    r.current = !0;
  }), ve.useCallback(function(i, l) {
    l === void 0 && (l = {}), r.current && (typeof i == "number" ? t.navigate(i) : t.navigate(i, Yc({
      fromRouteId: e
    }, l)));
  }, [t, e]);
}
new Promise(() => {
});
/**
 * React Router DOM v6.24.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function Gc() {
  return Gc = Object.assign ? Object.assign.bind() : function(t) {
    for (var e = 1; e < arguments.length; e++) {
      var r = arguments[e];
      for (var n in r)
        Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]);
    }
    return t;
  }, Gc.apply(this, arguments);
}
function d8(t, e) {
  if (t == null)
    return {};
  var r = {}, n = Object.keys(t), i, l;
  for (l = 0; l < n.length; l++)
    i = n[l], !(e.indexOf(i) >= 0) && (r[i] = t[i]);
  return r;
}
function p8(t) {
  return !!(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey);
}
function g8(t, e) {
  return t.button === 0 && // Ignore everything but left clicks
  (!e || e === "_self") && // Let browser handle "target=_blank" etc.
  !p8(t);
}
const m8 = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset", "unstable_viewTransition"], v8 = "6";
try {
  window.__reactRouterVersion = v8;
} catch {
}
const b8 = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", y8 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, w8 = /* @__PURE__ */ ve.forwardRef(function(e, r) {
  let {
    onClick: n,
    relative: i,
    reloadDocument: l,
    replace: g,
    state: a,
    target: s,
    to: c,
    preventScrollReset: f,
    unstable_viewTransition: o
  } = e, h = d8(e, m8), {
    basename: u
  } = ve.useContext($s), d, m = !1;
  if (typeof c == "string" && y8.test(c) && (d = c, b8))
    try {
      let y = new URL(window.location.href), w = c.startsWith("//") ? new URL(y.protocol + c) : new URL(c), x = QF(w.pathname, u);
      w.origin === y.origin && x != null ? c = x + w.search + w.hash : m = !0;
    } catch {
    }
  let p = o8(c, {
    relative: i
  }), v = x8(c, {
    replace: g,
    state: a,
    target: s,
    preventScrollReset: f,
    relative: i,
    unstable_viewTransition: o
  });
  function b(y) {
    n && n(y), y.defaultPrevented || v(y);
  }
  return (
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    /* @__PURE__ */ ve.createElement("a", Gc({}, h, {
      href: d || p,
      onClick: m || l ? n : b,
      ref: r,
      target: s
    }))
  );
});
var Sp;
(function(t) {
  t.UseScrollRestoration = "useScrollRestoration", t.UseSubmit = "useSubmit", t.UseSubmitFetcher = "useSubmitFetcher", t.UseFetcher = "useFetcher", t.useViewTransitionState = "useViewTransitionState";
})(Sp || (Sp = {}));
var Tp;
(function(t) {
  t.UseFetcher = "useFetcher", t.UseFetchers = "useFetchers", t.UseScrollRestoration = "useScrollRestoration";
})(Tp || (Tp = {}));
function x8(t, e) {
  let {
    target: r,
    replace: n,
    state: i,
    preventScrollReset: l,
    relative: g,
    unstable_viewTransition: a
  } = e === void 0 ? {} : e, s = a8(), c = vh(), f = yy(t, {
    relative: g
  });
  return ve.useCallback((o) => {
    if (g8(o, r)) {
      o.preventDefault();
      let h = n !== void 0 ? n : Cp(c) === Cp(f);
      s(t, {
        replace: h,
        state: i,
        preventScrollReset: l,
        relative: g,
        unstable_viewTransition: a
      });
    }
  }, [c, s, f, n, i, r, t, l, g, a]);
}
const C8 = we(
  /* @__PURE__ */ C("path", { d: "M11 15h2v2h-2v-2zm0-8h2v6h-2V7zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z" }),
  "ErrorOutlineOutlined"
), _8 = we(
  /* @__PURE__ */ C("path", { d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm4.59-12.42L10 14.17l-2.59-2.58L6 13l4 4 8-8z" }),
  "CheckCircleOutlined"
), S8 = { opacity: 0, y: 50, scale: 0.3 }, T8 = { opacity: 1, y: 0, scale: 1 }, E8 = {
  opacity: 0,
  scale: 0.5
};
function k8() {
  const t = Sm((e) => e.toasts);
  return /* @__PURE__ */ C("div", { className: "relative pointer-events-none", children: /* @__PURE__ */ C(Sr, { initial: !1, children: t.map((e) => /* @__PURE__ */ C(
    "div",
    {
      className: ce(
        "fixed mx-auto p-20 z-toast",
        e.position === "bottom-center" ? "left-0 right-0 bottom-0" : "right-0 bottom-0"
      ),
      children: /* @__PURE__ */ oe(
        gt.div,
        {
          initial: e.disableEnterAnimation ? void 0 : S8,
          animate: e.disableEnterAnimation ? void 0 : T8,
          exit: e.disableExitAnimation ? void 0 : E8,
          className: ce(
            "flex items-center gap-10 min-w-288 max-w-500 shadow-lg w-min rounded-lg pl-16 pr-6 py-6 text-sm pointer-events-auto max-h-100 bg-paper text-main bg-paper border mx-auto min-h-50"
          ),
          onPointerEnter: () => {
            var r;
            return (r = e.timer) == null ? void 0 : r.pause();
          },
          onPointerLeave: () => {
            var r;
            return (r = e.timer) == null ? void 0 : r.resume();
          },
          role: "alert",
          "aria-live": e.type === "danger" ? "assertive" : "polite",
          children: [
            e.type === "danger" && /* @__PURE__ */ C(
              C8,
              {
                className: "text-danger flex-shrink-0",
                size: "md"
              }
            ),
            e.type === "loading" && /* @__PURE__ */ C(
              ny,
              {
                size: "sm",
                className: "flex-shrink-0",
                isIndeterminate: !0
              }
            ),
            e.type === "positive" && /* @__PURE__ */ C(
              _8,
              {
                className: "text-positive flex-shrink-0",
                size: "md"
              }
            ),
            /* @__PURE__ */ C(
              "div",
              {
                className: "overflow-hidden overflow-ellipsis w-max mr-auto",
                "data-testid": "toast-message",
                children: /* @__PURE__ */ C(Bc, { value: e.message })
              }
            ),
            e.action && /* @__PURE__ */ C(
              pt,
              {
                variant: "text",
                color: "primary",
                size: "sm",
                className: "flex-shrink-0",
                onFocus: () => {
                  var r;
                  return (r = e.timer) == null ? void 0 : r.pause();
                },
                onBlur: () => {
                  var r;
                  return (r = e.timer) == null ? void 0 : r.resume();
                },
                onClick: () => vi().remove(e.id),
                elementType: w8,
                to: e.action.action,
                children: /* @__PURE__ */ C(Bc, { value: e.action.label })
              }
            ),
            e.type !== "loading" && /* @__PURE__ */ C(
              ze,
              {
                onFocus: () => {
                  var r;
                  return (r = e.timer) == null ? void 0 : r.pause();
                },
                onBlur: () => {
                  var r;
                  return (r = e.timer) == null ? void 0 : r.resume();
                },
                type: "button",
                className: "flex-shrink-0",
                onClick: () => {
                  vi().remove(e.id);
                },
                size: "sm",
                children: /* @__PURE__ */ C(Zr, {})
              }
            )
          ]
        }
      )
    },
    e.id
  )) }) });
}
function Ep(t) {
  return I0() ? t.metaKey : t.ctrlKey;
}
function O8(t) {
  switch (t.key) {
    case "z":
      Ep(t) && (t.preventDefault(), t.stopPropagation(), t.shiftKey ? I().history.redo() : I().history.undo());
      break;
    case "ArrowUp":
      t.preventDefault(), t.stopPropagation(), I().objects.move("up");
      break;
    case "ArrowRight":
      t.preventDefault(), t.stopPropagation(), I().objects.move("right");
      break;
    case "ArrowDown":
      t.preventDefault(), t.stopPropagation(), I().objects.move("down");
      break;
    case "ArrowLeft":
      t.preventDefault(), t.stopPropagation(), I().objects.move("left");
      break;
    case "Delete":
      t.preventDefault(), t.stopPropagation(), I().objects.delete();
      break;
    case "v":
      Ep(t) && (t.preventDefault(), t.stopPropagation(), A8());
      break;
  }
}
async function A8() {
  try {
    const t = await navigator.clipboard.read();
    for (const e of t)
      for (const r of e.types)
        if (r.startsWith("image/")) {
          const n = await e.getType(r), i = new FileReader();
          i.onload = (l) => {
            var g;
            (g = l.target) != null && g.result && I().import.addImageFromData(l.target.result);
          }, i.readAsDataURL(n);
          return;
        }
  } catch (t) {
    console.error(t);
  }
}
const D8 = /* @__PURE__ */ new Map(), Dl = /* @__PURE__ */ new Map(), kp = {
  status: "inactive"
};
async function* P8(t) {
  const e = [];
  for (const r of t.items)
    if (r.kind === "file") {
      const n = r.webkitGetAsEntry();
      n && e.push(n);
    }
  for (const r of e)
    if (r.isFile) {
      if (r.name === ".DS_Store")
        continue;
      const n = await _y(r);
      yield new ba(n, r.fullPath);
    } else
      r.isDirectory && (yield* Cy(r));
}
async function* Cy(t) {
  const e = t.createReader();
  let r;
  do {
    r = await new Promise((n, i) => {
      e.readEntries(n, i);
    });
    for (const n of r)
      if (n.isFile) {
        if (n.name === ".DS_Store")
          continue;
        const i = await _y(n);
        yield new ba(i, n.fullPath);
      } else
        n.isDirectory && (yield* Cy(n));
  } while (r.length > 0);
}
function _y(t) {
  return new Promise((e, r) => t.file(e, r));
}
async function M8(t) {
  const e = [];
  for await (const r of t)
    e.push(r);
  return e;
}
const F8 = 400;
function R8({
  id: t,
  disabled: e,
  ref: r,
  ...n
}) {
  const i = ge({
    dragOverElements: /* @__PURE__ */ new Set(),
    dropActivateTimer: void 0
  }).current, l = ge(n);
  l.current = n, xs(() => (Dl.set(t, {
    ...Dl.get(t),
    disabled: e,
    id: t,
    ref: r
  }), () => {
    Dl.delete(t);
  }), [t, l, e, r]);
  const g = (h) => {
    var m;
    const u = l.current, d = u.allowDragEventsFromItself || r.current !== ((m = h.ref) == null ? void 0 : m.current);
    return !!(h != null && h.type && d && u.types.includes(h.type) && (!u.acceptsDrop || u.acceptsDrop(h)));
  }, a = (h) => {
    var d, m;
    const u = Vi(h);
    u && ((m = (d = l.current).onDragLeave) == null || m.call(d, u));
  };
  return {
    droppableProps: e ? {} : {
      onDragOver: (h) => {
        var d, m;
        h.preventDefault(), h.stopPropagation();
        const u = Vi(h);
        u && g(u) && ((m = (d = l.current).onDragOver) == null || m.call(d, u, h));
      },
      onDragEnter: (h) => {
        var d, m;
        if (h.stopPropagation(), i.dragOverElements.add(h.target), i.dragOverElements.size > 1)
          return;
        const u = Vi(h);
        u && g(u) && ((m = (d = l.current).onDragEnter) == null || m.call(d, u), clearTimeout(i.dropActivateTimer), typeof l.current.onDropActivate == "function" && (i.dropActivateTimer = setTimeout(() => {
          var p, v;
          u && ((v = (p = l.current).onDropActivate) == null || v.call(p, u));
        }, F8)));
      },
      onDragLeave: (h) => {
        h.stopPropagation(), i.dragOverElements.delete(h.target);
        for (const d of i.dragOverElements)
          h.currentTarget.contains(d) || i.dragOverElements.delete(d);
        if (i.dragOverElements.size > 0)
          return;
        const u = Vi(h);
        u && g(u) && (a(h), clearTimeout(i.dropActivateTimer));
      },
      onDrop: async (h) => {
        var d, m, p, v;
        h.preventDefault(), h.stopPropagation(), i.dragOverElements.clear(), a(h), clearTimeout(i.dropActivateTimer);
        const u = Vi(h);
        u && ((m = (d = l.current).onDragLeave) == null || m.call(d, u), g(u) && ((v = (p = l.current).onDrop) == null || v.call(p, u)));
      }
    }
  };
}
function Vi(t) {
  if (kp.dragTargetId != null)
    return D8.get(kp.dragTargetId);
  if (t.dataTransfer.types.includes("Files"))
    return {
      type: "nativeFile",
      el: null,
      ref: null,
      getData: () => M8(P8(t.dataTransfer))
    };
}
function I8({
  children: t
}) {
  const e = fe((n) => n.bootstrapData), r = Ye(() => ({
    data: e,
    setBootstrapData: () => {
    },
    mergeBootstrapData: () => {
    },
    invalidateBootstrapData: () => {
    }
  }), [e]);
  return /* @__PURE__ */ C(Xv.Provider, { value: r, children: t });
}
function L8() {
  const t = fe((d) => {
    var m;
    return (m = d.config.ui) == null ? void 0 : m.visible;
  }) ?? !0, e = fe((d) => {
    var m, p;
    return (p = (m = d.config.ui) == null ? void 0 : m.nav) == null ? void 0 : p.position;
  }) ?? "bottom", r = fe((d) => {
    var m, p;
    return (p = (m = d.config.ui) == null ? void 0 : m.menubar) == null ? void 0 : p.position;
  }) ?? "top", n = fe((d) => {
    var m;
    return (m = d.config.ui) == null ? void 0 : m.allowEditorClose;
  }) ?? !0, i = ge(null), l = ge(null), { isModal: g, isMobile: a } = La(), s = Me(async (d) => {
    var p, v;
    if (O().activeTool || O().dirty || d.type !== "nativeFile")
      return;
    const m = await d.getData();
    I().import.fileIsValid(m[0]) && (((v = (p = O().config.tools) == null ? void 0 : p.import) == null ? void 0 : v.openDroppedImageAsBackground) ?? !1 ? await I().import.openBackgroundImage(m[0]) : await I().import.openUploadedFile(m[0]));
  }, []), { droppableProps: c } = R8({
    id: "pixie-root",
    ref: l,
    types: ["nativeFile"],
    onDrop: s
  });
  ke(() => {
    var p, v;
    O().fabric || (fe.setState({ canvasRef: i }), YT(i.current), (p = O().config.ui) != null && p.defaultTool && O().setActiveTool((v = O().config.ui) == null ? void 0 : v.defaultTool, null), I().canvas.loadInitialContent().then(() => {
      var b, y;
      (y = (b = O().config).onLoad) == null || y.call(b, O().editor);
    }));
    const d = Jf(l, () => {
      O().setStageSize(Zf(l.current));
    }), m = Jf(i, () => {
      O().setCanvasSize(Zf(i.current));
    });
    return () => {
      d(), m();
    };
  }, [l]);
  const f = {
    visible: {
      opacity: 1,
      scale: 1,
      display: "flex"
    },
    hidden: { opacity: 0, transitionEnd: { display: "none" } }
  }, o = ce(
    "pixie-root flex flex-col overflow-hidden bg-background text-main no-tap-highlight w-full h-full",
    {
      relative: !g,
      "fixed inset-0 w-full h-full z-20": g,
      "shadow-lg border rounded-md m-auto max-h-[calc(100vh-90px)] max-w-[calc(100vw-90px)]": g && !a
    }
  );
  return /* @__PURE__ */ C(p3, { features: g3, strict: !0, children: /* @__PURE__ */ oe(I8, { children: [
    g && t && !a && n && /* @__PURE__ */ C(
      ze,
      {
        className: "z-20 fixed right-2 top-2 text-white",
        size: "lg",
        onClick: () => {
          O().editor.close();
        },
        children: /* @__PURE__ */ C(Zr, {})
      }
    ),
    g && t && /* @__PURE__ */ C(sh, { position: "fixed", disableInitialTransition: !0 }),
    /* @__PURE__ */ oe(
      gt.div,
      {
        initial: !1,
        variants: f,
        animate: t ? "visible" : "hidden",
        className: o,
        children: [
          r === "top" && /* @__PURE__ */ C(Fd, {}),
          e === "top" && /* @__PURE__ */ C(wp, { className: "pt-14" }),
          /* @__PURE__ */ oe(
            "main",
            {
              className: "relative flex-auto my-20 overflow-hidden outline-none",
              tabIndex: -1,
              ...Tr(c, {
                onKeyDownCapture: O8
              }),
              ref: l,
              children: [
                /* @__PURE__ */ C(SD, {}),
                /* @__PURE__ */ C(JP, { ref: i })
              ]
            }
          ),
          /* @__PURE__ */ C(P6, {}),
          e === "bottom" && /* @__PURE__ */ C(wp, {}),
          r === "bottom" && /* @__PURE__ */ C(Fd, {}),
          /* @__PURE__ */ C(ZF, {}),
          /* @__PURE__ */ C(k8, {})
        ]
      }
    )
  ] }) });
}
(function() {
  fabric.Object.ENLIVEN_PROPS.push("eraser");
  var t = fabric.Object.prototype._drawClipPath, e = fabric.Object.prototype.needsItsOwnCache, r = fabric.Object.prototype.toObject, n = fabric.Object.prototype.getSvgCommons, i = fabric.Object.prototype._createBaseClipPathSVGMarkup, l = fabric.Object.prototype._createBaseSVGMarkup;
  fabric.Object.prototype.cacheProperties.push("eraser"), fabric.Object.prototype.stateProperties.push("eraser"), fabric.util.object.extend(fabric.Object.prototype, {
    /**
     * Indicates whether this object can be erased by {@link fabric.EraserBrush}
     * The `deep` option introduces fine grained control over a group's `erasable` property.
     * When set to `deep` the eraser will erase nested objects if they are erasable, leaving the group and the other objects untouched.
     * When set to `true` the eraser will erase the entire group. Once the group changes the eraser is propagated to its children for proper functionality.
     * When set to `false` the eraser will leave all objects including the group untouched.
     * @tutorial {@link http://fabricjs.com/erasing#erasable_property}
     * @type boolean | 'deep'
     * @default true
     */
    erasable: !0,
    /**
     * @tutorial {@link http://fabricjs.com/erasing#eraser}
     * @type fabric.Eraser
     */
    eraser: void 0,
    /**
     * @override
     * @returns Boolean
     */
    needsItsOwnCache: function() {
      return e.call(this) || !!this.eraser;
    },
    /**
     * draw eraser above clip path
     * @override
     * @private
     * @param {CanvasRenderingContext2D} ctx
     * @param {fabric.Object} clipPath
     */
    _drawClipPath: function(s, c) {
      if (t.call(this, s, c), this.eraser) {
        var f = this._getNonTransformedDimensions();
        this.eraser.isType("eraser") && this.eraser.set({
          width: f.x,
          height: f.y
        }), t.call(this, s, this.eraser);
      }
    },
    /**
     * Returns an object representation of an instance
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} Object representation of an instance
     */
    toObject: function(s) {
      var c = r.call(this, ["erasable"].concat(s));
      return this.eraser && !this.eraser.excludeFromExport && (c.eraser = this.eraser.toObject(s)), c;
    },
    /* _TO_SVG_START_ */
    /**
     * Returns id attribute for svg output
     * @override
     * @return {String}
     */
    getSvgCommons: function() {
      return n.call(this) + (this.eraser ? 'mask="url(#' + this.eraser.clipPathId + ')" ' : "");
    },
    /**
     * create svg markup for eraser
     * use <mask> to achieve erasing for svg, credit: https://travishorn.com/removing-parts-of-shapes-in-svg-b539a89e5649
     * must be called before object markup creation as it relies on the `clipPathId` property of the mask
     * @param {Function} [reviver]
     * @returns
     */
    _createEraserSVGMarkup: function(s) {
      return this.eraser ? (this.eraser.clipPathId = "MASK_" + fabric.Object.__uid++, [
        '<mask id="',
        this.eraser.clipPathId,
        '" >',
        this.eraser.toSVG(s),
        "</mask>",
        `
`
      ].join("")) : "";
    },
    /**
     * @private
     */
    _createBaseClipPathSVGMarkup: function(s, c) {
      return [
        this._createEraserSVGMarkup(c && c.reviver),
        i.call(this, s, c)
      ].join("");
    },
    /**
     * @private
     */
    _createBaseSVGMarkup: function(s, c) {
      return [
        this._createEraserSVGMarkup(c && c.reviver),
        l.call(this, s, c)
      ].join("");
    }
    /* _TO_SVG_END_ */
  });
  var g = fabric.Group.prototype._restoreObjectsState;
  fabric.util.object.extend(fabric.Group.prototype, {
    /**
     * @private
     * @param {fabric.Path} path
     */
    _addEraserPathToObjects: function(s) {
      this._objects.forEach(function(c) {
        fabric.EraserBrush.prototype._addPathToObjectEraser.call(
          fabric.EraserBrush.prototype,
          c,
          s
        );
      });
    },
    /**
     * Applies the group's eraser to its objects
     * @tutorial {@link http://fabricjs.com/erasing#erasable_property}
     */
    applyEraserToObjects: function() {
      var s = this, c = this.eraser;
      if (c) {
        delete this.eraser;
        var f = s.calcTransformMatrix();
        c.clone(function(o) {
          var h = s.clipPath;
          o.getObjects("path").forEach(function(u) {
            var d = fabric.util.multiplyTransformMatrices(
              f,
              u.calcTransformMatrix()
            );
            fabric.util.applyTransformToObject(u, d), h ? h.clone(function(m) {
              var p = fabric.EraserBrush.prototype.applyClipPathToPath.call(
                fabric.EraserBrush.prototype,
                u,
                m,
                f
              );
              s._addEraserPathToObjects(p);
            }, ["absolutePositioned", "inverted"]) : s._addEraserPathToObjects(u);
          });
        });
      }
    },
    /**
     * Propagate the group's eraser to its objects, crucial for proper functionality of the eraser within the group and nested objects.
     * @private
     */
    _restoreObjectsState: function() {
      return this.erasable === !0 && this.applyEraserToObjects(), g.call(this);
    }
  }), fabric.Eraser = fabric.util.createClass(fabric.Group, {
    /**
     * @readonly
     * @static
     */
    type: "eraser",
    /**
     * @default
     */
    originX: "center",
    /**
     * @default
     */
    originY: "center",
    drawObject: function(s) {
      s.save(), s.fillStyle = "black", s.fillRect(-this.width / 2, -this.height / 2, this.width, this.height), s.restore(), this.callSuper("drawObject", s);
    },
    /**
     * eraser should retain size
     * dimensions should not change when paths are added or removed
     * handled by {@link fabric.Object#_drawClipPath}
     * @override
     * @private
     */
    _getBounds: function() {
    },
    /* _TO_SVG_START_ */
    /**
     * Returns svg representation of an instance
     * use <mask> to achieve erasing for svg, credit: https://travishorn.com/removing-parts-of-shapes-in-svg-b539a89e5649
     * for masking we need to add a white rect before all paths
     *
     * @param {Function} [reviver] Method for further parsing of svg representation.
     * @return {String} svg representation of an instance
     */
    _toSVG: function(s) {
      var c = ["<g ", "COMMON_PARTS", ` >
`], f = -this.width / 2, o = -this.height / 2, h = [
        "<rect ",
        'fill="white" ',
        'x="',
        f,
        '" y="',
        o,
        '" width="',
        this.width,
        '" height="',
        this.height,
        `" />
`
      ].join("");
      c.push("		", h);
      for (var u = 0, d = this._objects.length; u < d; u++)
        c.push("		", this._objects[u].toSVG(s));
      return c.push(`</g>
`), c;
    }
    /* _TO_SVG_END_ */
  }), fabric.Eraser.fromObject = function(s, c) {
    var f = s.objects;
    fabric.util.enlivenObjects(f, function(o) {
      var h = fabric.util.object.clone(s, !0);
      delete h.objects, fabric.util.enlivenObjectEnlivables(s, h, function() {
        c && c(new fabric.Eraser(o, h, !0));
      });
    });
  };
  var a = fabric.Canvas.prototype._renderOverlay;
  fabric.util.object.extend(fabric.Canvas.prototype, {
    /**
     * Used by {@link #renderAll}
     * @returns boolean
     */
    isErasing: function() {
      return this.isDrawingMode && this.freeDrawingBrush && this.freeDrawingBrush.type === "eraser" && this.freeDrawingBrush._isErasing;
    },
    /**
     * While erasing the brush clips out the erasing path from canvas
     * so we need to render it on top of canvas every render
     * @param {CanvasRenderingContext2D} ctx
     */
    _renderOverlay: function(s) {
      a.call(this, s), this.isErasing() && !this.freeDrawingBrush.inverted && this.freeDrawingBrush._render();
    }
  }), fabric.EraserBrush = fabric.util.createClass(
    fabric.PencilBrush,
    /** @lends fabric.EraserBrush.prototype */
    {
      type: "eraser",
      /**
       * When set to `true` the brush will create a visual effect of undoing erasing
       */
      inverted: !1,
      /**
       * @private
       */
      _isErasing: !1,
      /**
       *
       * @private
       * @param {fabric.Object} object
       * @returns boolean
       */
      _isErasable: function(s) {
        return s.erasable !== !1;
      },
      /**
       * @private
       * This is designed to support erasing a collection with both erasable and non-erasable objects.
       * Iterates over collections to allow nested selective erasing.
       * Prepares the pattern brush that will draw on the top context to achieve the desired visual effect.
       * If brush is **NOT** inverted render all non-erasable objects.
       * If brush is inverted render all erasable objects that have been erased with their clip path inverted.
       * This will render the erased parts as if they were not erased.
       *
       * @param {fabric.Collection} collection
       * @param {CanvasRenderingContext2D} ctx
       * @param {{ visibility: fabric.Object[], eraser: fabric.Object[], collection: fabric.Object[] }} restorationContext
       */
      _prepareCollectionTraversal: function(s, c, f) {
        s.forEachObject(function(o) {
          o.forEachObject && o.erasable === "deep" ? this._prepareCollectionTraversal(o, c, f) : !this.inverted && o.erasable && o.visible ? (o.visible = !1, s.dirty = !0, f.visibility.push(o), f.collection.push(s)) : this.inverted && o.visible && (o.erasable && o.eraser ? (o.eraser.inverted = !0, o.dirty = !0, s.dirty = !0, f.eraser.push(o), f.collection.push(s)) : (o.visible = !1, s.dirty = !0, f.visibility.push(o), f.collection.push(s)));
        }, this);
      },
      /**
       * Prepare the pattern for the erasing brush
       * This pattern will be drawn on the top context, achieving a visual effect of erasing only erasable objects
       * @todo decide how overlay color should behave when `inverted === true`, currently draws over it which is undesirable
       * @private
       */
      preparePattern: function() {
        this._patternCanvas || (this._patternCanvas = fabric.util.createCanvasElement());
        var s = this._patternCanvas;
        s.width = this.canvas.width, s.height = this.canvas.height;
        var c = s.getContext("2d");
        if (this.canvas._isRetinaScaling()) {
          var f = this.canvas.getRetinaScaling();
          this.canvas.__initRetinaScaling(f, s, c);
        }
        var o = this.canvas.backgroundImage, h = o && this._isErasable(o), u = this.canvas.overlayImage, d = u && this._isErasable(u);
        if (!this.inverted && (o && !h || this.canvas.backgroundColor))
          h && (this.canvas.backgroundImage = void 0), this.canvas._renderBackground(c), h && (this.canvas.backgroundImage = o);
        else if (this.inverted && o && h) {
          var m = this.canvas.backgroundColor;
          this.canvas.backgroundColor = void 0, this.canvas._renderBackground(c), this.canvas.backgroundColor = m;
        }
        c.save(), c.transform.apply(c, this.canvas.viewportTransform);
        var p = { visibility: [], eraser: [], collection: [] };
        if (this._prepareCollectionTraversal(this.canvas, c, p), this.canvas._renderObjects(c, this.canvas._objects), p.visibility.forEach(function(v) {
          v.visible = !0;
        }), p.eraser.forEach(function(v) {
          v.eraser.inverted = !1, v.dirty = !0;
        }), p.collection.forEach(function(v) {
          v.dirty = !0;
        }), c.restore(), !this.inverted && (u && !d || this.canvas.overlayColor))
          d && (this.canvas.overlayImage = void 0), a.call(this.canvas, c), d && (this.canvas.overlayImage = u);
        else if (this.inverted && u && d) {
          var m = this.canvas.overlayColor;
          this.canvas.overlayColor = void 0, a.call(this.canvas, c), this.canvas.overlayColor = m;
        }
      },
      /**
       * Sets brush styles
       * @private
       * @param {CanvasRenderingContext2D} ctx
       */
      _setBrushStyles: function(s) {
        this.callSuper("_setBrushStyles", s), s.strokeStyle = "black";
      },
      /**
       * **Customiztion**
       *
       * if you need the eraser to update on each render (i.e animating during erasing) override this method by **adding** the following (performance may suffer):
       * @example
       * ```
       * if(ctx === this.canvas.contextTop) {
       *  this.preparePattern();
       * }
       * ```
       *
       * @override fabric.BaseBrush#_saveAndTransform
       * @param {CanvasRenderingContext2D} ctx
       */
      _saveAndTransform: function(s) {
        this.callSuper("_saveAndTransform", s), this._setBrushStyles(s), s.globalCompositeOperation = s === this.canvas.getContext() ? "destination-out" : "source-over";
      },
      /**
       * We indicate {@link fabric.PencilBrush} to repaint itself if necessary
       * @returns
       */
      needsFullRender: function() {
        return !0;
      },
      /**
       *
       * @param {fabric.Point} pointer
       * @param {fabric.IEvent} options
       * @returns
       */
      onMouseDown: function(s, c) {
        this.canvas._isMainEvent(c.e) && (this._prepareForDrawing(s), this._captureDrawingPath(s), this.preparePattern(), this._isErasing = !0, this.canvas.fire("erasing:start"), this._render());
      },
      /**
       * Rendering Logic:
       * 1. Use brush to clip canvas by rendering it on top of canvas (unnecessary if `inverted === true`)
       * 2. Render brush with canvas pattern on top context
       *
       */
      _render: function() {
        var s;
        this.inverted || (s = this.canvas.getContext(), this.callSuper("_render", s)), s = this.canvas.contextTop, this.canvas.clearContext(s), this.callSuper("_render", s), s.save();
        var c = this.canvas.getRetinaScaling(), f = 1 / c;
        s.scale(f, f), s.globalCompositeOperation = "source-in", s.drawImage(this._patternCanvas, 0, 0), s.restore();
      },
      /**
       * Creates fabric.Path object
       * @override
       * @private
       * @param {(string|number)[][]} pathData Path data
       * @return {fabric.Path} Path to add on canvas
       * @returns
       */
      createPath: function(s) {
        var c = this.callSuper("createPath", s);
        return c.globalCompositeOperation = this.inverted ? "source-over" : "destination-out", c.stroke = this.inverted ? "white" : "black", c;
      },
      /**
       * Utility to apply a clip path to a path.
       * Used to preserve clipping on eraser paths in nested objects.
       * Called when a group has a clip path that should be applied to the path before applying erasing on the group's objects.
       * @param {fabric.Path} path The eraser path in canvas coordinate plane
       * @param {fabric.Object} clipPath The clipPath to apply to the path
       * @param {number[]} clipPathContainerTransformMatrix The transform matrix of the object that the clip path belongs to
       * @returns {fabric.Path} path with clip path
       */
      applyClipPathToPath: function(s, c, f) {
        var o = fabric.util.invertTransform(s.calcTransformMatrix()), h = c.calcTransformMatrix(), u = c.absolutePositioned ? o : fabric.util.multiplyTransformMatrices(
          o,
          f
        );
        return c.absolutePositioned = !1, fabric.util.applyTransformToObject(
          c,
          fabric.util.multiplyTransformMatrices(
            u,
            h
          )
        ), s.clipPath = s.clipPath ? fabric.util.mergeClipPaths(c, s.clipPath) : c, s;
      },
      /**
       * Utility to apply a clip path to a path.
       * Used to preserve clipping on eraser paths in nested objects.
       * Called when a group has a clip path that should be applied to the path before applying erasing on the group's objects.
       * @param {fabric.Path} path The eraser path
       * @param {fabric.Object} object The clipPath to apply to path belongs to object
       * @param {Function} callback Callback to be invoked with the cloned path after applying the clip path
       */
      clonePathWithClipPath: function(s, c, f) {
        var o = c.calcTransformMatrix(), h = c.clipPath, u = this;
        s.clone(function(d) {
          h.clone(function(m) {
            f(u.applyClipPathToPath(d, m, o));
          }, ["absolutePositioned", "inverted"]);
        });
      },
      /**
       * Adds path to object's eraser, walks down object's descendants if necessary
       *
       * @fires erasing:end on object
       * @param {fabric.Object} obj
       * @param {fabric.Path} path
       */
      _addPathToObjectEraser: function(s, c) {
        var f = this;
        if (s.forEachObject && s.erasable === "deep") {
          var o = s._objects.filter(function(u) {
            return u.erasable;
          });
          o.length > 0 && s.clipPath ? this.clonePathWithClipPath(c, s, function(u) {
            o.forEach(function(d) {
              f._addPathToObjectEraser(d, u);
            });
          }) : o.length > 0 && o.forEach(function(u) {
            f._addPathToObjectEraser(u, c);
          });
          return;
        }
        var h = s.eraser;
        h || (h = new fabric.Eraser(), s.eraser = h), c.clone(function(u) {
          var d = fabric.util.multiplyTransformMatrices(
            fabric.util.invertTransform(
              s.calcTransformMatrix()
            ),
            u.calcTransformMatrix()
          );
          fabric.util.applyTransformToObject(u, d), h.addWithUpdate(u), s.set("dirty", !0), s.fire("erasing:end", {
            path: u
          }), s.group && Array.isArray(f.__subTargets) && f.__subTargets.push(s);
        });
      },
      /**
       * Add the eraser path to canvas drawables' clip paths
       *
       * @param {fabric.Canvas} source
       * @param {fabric.Canvas} path
       * @returns {Object} canvas drawables that were erased by the path
       */
      applyEraserToCanvas: function(s) {
        var c = this.canvas, f = {};
        return [
          "backgroundImage",
          "overlayImage"
        ].forEach(function(o) {
          var h = c[o];
          h && h.erasable && (this._addPathToObjectEraser(h, s), f[o] = h);
        }, this), f;
      },
      /**
       * On mouseup after drawing the path on contextTop canvas
       * we use the points captured to create an new fabric path object
       * and add it to every intersected erasable object.
       */
      _finalizeAndAddPath: function() {
        var s = this.canvas.contextTop, c = this.canvas;
        s.closePath(), this.decimate && (this._points = this.decimatePoints(this._points, this.decimate)), c.clearContext(c.contextTop), this._isErasing = !1;
        var f = this._points && this._points.length > 1 ? this.convertPointsToSVGPath(this._points) : null;
        if (!f || this._isEmptySVGPath(f)) {
          c.fire("erasing:end"), c.requestRenderAll();
          return;
        }
        var o = this.createPath(f);
        o.setCoords(), c.fire("before:path:created", { path: o });
        var h = this.applyEraserToCanvas(o), u = this;
        this.__subTargets = [];
        var d = [];
        c.forEachObject(function(m) {
          m.erasable && m.intersectsWithObject(o, !0, !0) && (u._addPathToObjectEraser(m, o), d.push(m));
        }), c.fire("erasing:end", {
          path: o,
          targets: d,
          subTargets: this.__subTargets,
          drawables: h
        }), delete this.__subTargets, c.requestRenderAll(), this._resetShadow(), c.fire("path:created", { path: o });
      }
    }
  );
})();
Ml.enableBoundaryChecking(!1);
const Qi = class Qi {
  constructor(e) {
    Oe(this, "tools", {});
    Oe(this, "fabric", null);
    if (e.sentryDsn && x2({
      dsn: e.sentryDsn
    }), Ry(U_), !e.selector)
      throw new Error('Pixie required "selector" option.');
    const r = document.querySelector(e.selector);
    if (!r)
      return;
    r.classList.add("pi"), $_(r), this.setConfig(e), fe.setState({ editor: this }), Py(r).render(
      /* @__PURE__ */ C(he.StrictMode, { children: /* @__PURE__ */ C(L8, {}) })
    );
  }
  get state() {
    return O();
  }
  get defaultConfig() {
    return Qi.defaultConfig;
  }
  /**
   * Open editor.
   */
  open(e = {}) {
    return new Promise(async (r) => {
      var n;
      Object.keys(e).length ? await this.resetEditor({
        ...hm(e, {
          ui: { visible: !0 },
          image: e.image || O().config.image,
          state: e.state || O().config.state,
          blankCanvasSize: e.blankCanvasSize || O().config.blankCanvasSize
        })
      }) : (n = O().config.ui) != null && n.visible || await O().setConfig({ ui: { visible: !0 } }), r();
    });
  }
  /**
   * Close editor.
   */
  close() {
    var e, r, n;
    (e = O().config.ui) != null && e.visible && (this.setConfig({ ui: { visible: !1 } }), (n = (r = O().config).onClose) == null || n.call(r));
  }
  /**
   * Override editor configuration.
   */
  setConfig(e) {
    O().setConfig(e);
  }
  /**
   * Open file upload window and add selected image to canvas.
   */
  uploadAndAddImage() {
    return I().import.uploadAndAddImage();
  }
  /**
   * Open file upload window and replace canvas contents with selected image.
   */
  uploadAndReplaceMainImage() {
    return I().import.uploadAndReplaceMainImage();
  }
  /**
   * Open file upload window and replace canvas contents with selected state file.
   */
  uploadAndOpenStateFile() {
    return I().import.uploadAndOpenStateFile();
  }
  /**
   * Clear current canvas and open a new one at specified size.
   */
  newCanvas(e, r, n) {
    return I().canvas.openNew(e, r, n);
  }
  /**
   * Get current canvas state as json string.
   */
  getState(e) {
    return JSON.stringify(Eo(e));
  }
  /**
   * Replace current canvas contents with specified pixie state.
   */
  setState(e) {
    return I().import.loadState(e);
  }
  /**
   * Replace current canvas contents with pixie state file loaded from specified url.
   */
  async setStateFromUrl(e) {
    const r = await ua(e);
    return I().import.loadState(r);
  }
  /**
   * Open specified tool (crop, draw, text etc.)
   */
  openTool(e) {
    fu(e);
  }
  /**
   * Apply any pending changes from currently open tool.
   * This is identical to clicking "apply" button in the editor.
   */
  applyChanges() {
    O().applyChanges();
  }
  /**
   * Cancel any pending changes from currently open tool.
   * This is identical to clicking "cancel" button in the editor.
   */
  cancelChanges() {
    O().cancelChanges();
  }
  /**
   * Fully reset editor state and optionally
   * override specified configuration.
   */
  async resetEditor(e) {
    await ic(e), await I().canvas.loadInitialContent();
  }
  /**
   * Toggle specified floating panel.
   */
  togglePanel(e, r) {
    e === "objects" && O().togglePanel("history", !1), e === "history" && O().togglePanel("objects", !1), O().togglePanel(e, r);
  }
  on(e, r) {
    var n;
    (n = this.fabric) == null || n.on(e, r);
  }
  /**
   * Check if any modifications made to canvas have not been applied yet.
   */
  isDirty() {
    return O().dirty;
  }
  /**
   * @hidden
   */
  get(e) {
    return this.tools[e];
  }
  /**
   * Display specified notification message in the editor.
   */
  notify(e) {
    return Si(e);
  }
  /**
   * Create a new editor instance.
   */
  static init(e) {
    return new Promise((r) => {
      const n = e.onLoad;
      e.onLoad = (i) => {
        n == null || n(i), r(i);
      }, new this(e);
    });
  }
};
Oe(Qi, "defaultConfig", Zg), Oe(Qi, "version", nC);
let Op = Qi;
export {
  Op as Pixie
};
//# sourceMappingURL=pixie.es.js.map
